#----------------------------------------------------------------------------#
#                                                                            #
#    ejecute el comando make help para ver los objetivos disponibles         #
#                                                                            #
#----------------------------------------------------------------------------#

PROGRAMA = BOOT
  
CC       = smlrcc 

CFLAGS   = -S -flat16 
 
AS       = nasm 

CFLAGSAS = -l $(PROGRAMA).lst 

all: $(PROGRAMA).bs

$(PROGRAMA).asm: $(PROGRAMA).c
  $(CC) $(CFLAGS) $(PROGRAMA).c
  
$(PROGRAMA).bin: $(PROGRAMA).asm
  $(AS) $(CFLAGSAS) $(PROGRAMA).asm -o $(PROGRAMA).BIN
  
$(PROGRAMA).bs: $(PROGRAMA).bin
  copy $(PROGRAMA).bin $(PROGRAMA).bs
  EXTENDER $(PROGRAMA).bs 512 
  EXTRAER  $(PROGRAMA).bs 0 512 $(PROGRAMA).bs
  PARCHEAR $(PROGRAMA).bs 510 55 AA   
  
hexdump: $(PROGRAMA).bs  
  echo. 
  Y:\prgtools\bin\XXD\xxd -c 16 -g 1 -u $(PROGRAMA).bs
 
include: $(PROGRAMA).bs  
  Y:\prgtools\bin\XXD\xxd -c 16 -g 1 -i $(PROGRAMA).bs $(PROGRAMA).inc
 
clean: pule
  @if exist *.bs erase *.bs 
  
pule:    
  @if exist *.bin erase *.bin 
  @if exist *.asm erase *.asm 
  @if exist *.obj erase *.obj 
  @if exist *.lst erase *.lst 
  @if exist *.inc erase *.inc 
  
build: clean all  

help: 
# echo off & color 07 & title help & msg * "Hola"
  @"echo." 
  @"echo    relacion de objetivos disponibles:" 
  @"echo."
  @"echo    make          genera el fichero $(PROGRAMA).bs"
  @"echo    make pule     borra todo salvo $(PROGRAMA).C, MAKEFILE y $(PROGRAMA).bs"
  @"echo    make clean    borra todo salvo $(PROGRAMA).C y MAKEFILE"
  @"echo    make build    borra todo y genera un nuevo fichero $(PROGRAMA).bs"
  @"echo    make hexdump  muestra el volcado hexadecimal de $(PROGRAMA).bs"
  @"echo    make include  genera un fichero para incluir a partir de $(PROGRAMA).bs"
  @"echo    make imagen   genera una imagen de disquete fd$(PROGRAMA).img"
  @"echo    make start    arranca la imagen de disquete fd$(PROGRAMA).img con qemu"   
  @"echo    make startdbx arranca la imagen de disquete fd$(PROGRAMA).img con dosbox"   
  @"echo    make floppy   copia fd$(PROGRAMA).img a FLOPPY (emu8086)"
  @"echo    make help     muestra esta ayuda sobre los objetivos disponibles"
  
imagen $(UTMP):\fd$(PROGRAMA).img: $(PROGRAMA).bs
  @echo.
  EXTENDER $(PROGRAMA).bs 1474560 $(UTMP):\fd$(PROGRAMA).img 
  @echo.
  PARCHEAR $(UTMP):\fd$(PROGRAMA).img 16896 -f ..\PROG\PROG.BIN
  
floppy: $(UTMP):\fd$(PROGRAMA).img
  @echo. 
  copy $(UTMP):\fd$(PROGRAMA).img $(UTMP):\FLOPPY_0

start: $(PROGRAMA).bs $(UTMP):\fd$(PROGRAMA).img 
# @start $(UUSB):\Interno\qemu-2.7.0\qemu-system-i386w.exe \
#   -L $(UUSB):\Interno\qemu-2.7.0\Bios \
  @start $(UUSB):\Interno\qemu-2.8.0\qemu-system-i386w.exe \
    -L $(UUSB):\Interno\qemu-2.8.0\Bios \
	-vga std \
    -soundhw es1370,sb16,adlib,pcspk \
    -rtc base=localtime,clock=host \
    -name "qemu" \
    -fda $(UTMP):\fd$(PROGRAMA).img \
    -net nic,model=ne2k_pci -net user \
    -no-acpi -no-hpet -no-reboot \
    -m 128 -boot a 
	
startdbx: $(PROGRAMA).bs $(UTMP):\fd$(PROGRAMA).img 
  @start $(UUSB):\Interno\dosbox-0.74\dosbox.exe \
    -noconsole \
	-c "@echo off"\
	-c "@cls" \
	-c "@echo. " \
	-c "@echo DOXBOX 0.74"\
	-c "@echo." \
	-c "@echo Booting from floppy ($(UTMP):\fd$(PROGRAMA).img)" \
	-c "@echo." \
	-c "@boot $(UTMP):\fd$(PROGRAMA).img -l a > nul" 
 	
	