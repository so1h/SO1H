     1                                  bits 16
     2                                  
     3                                  ; glb intptr_t : int
     4                                  ; glb uintptr_t : unsigned
     5                                  ; glb intmax_t : int
     6                                  ; glb uintmax_t : unsigned
     7                                  ; glb int8_t : signed char
     8                                  ; glb int_least8_t : signed char
     9                                  ; glb int_fast8_t : signed char
    10                                  ; glb uint8_t : unsigned char
    11                                  ; glb uint_least8_t : unsigned char
    12                                  ; glb uint_fast8_t : unsigned char
    13                                  ; glb int16_t : short
    14                                  ; glb int_least16_t : short
    15                                  ; glb int_fast16_t : short
    16                                  ; glb uint16_t : unsigned short
    17                                  ; glb uint_least16_t : unsigned short
    18                                  ; glb uint_fast16_t : unsigned short
    19                                  ; glb int32_t : int
    20                                  ; glb int_least32_t : int
    21                                  ; glb int_fast32_t : int
    22                                  ; glb uint32_t : unsigned
    23                                  ; glb uint_least32_t : unsigned
    24                                  ; glb uint_fast32_t : unsigned
    25                                  ; glb imaxdiv_t : struct <something>
    26                                  ; glb bool_t : int
    27                                  ; glb pointer_t : * unsigned char
    28                                  ; glb funcion_t : * (
    29                                  ; prm     <something> : * void
    30                                  ;     ) * void
    31                                  ; glb manejador_t : * (void) void
    32                                  ; glb rti_t : * (void) void
    33                                  ; glb isr_t : * (void) void
    34                                  ; glb handler_t : * (void) void
    35                                  ; glb retardarThread_t : * (void) int
    36                                  ; glb ptrTVI_t : * * (void) void
    37                                  ; glb modoSO1_t : int
    38                                  ; glb lh_t : struct <something>
    39                                  ; glb address_t : struct <something>
    40                                  ; glb uPtrAdr_t : union <something>
    41                                  ; glb pid_t : int
    42                                  ; glb tid_t : int
    43                                  ; glb uid_t : int
    44                                  ; glb gid_t : int
    45                                  ; glb pindx_t : int
    46                                  ; glb tindx_t : int
    47                                  ; glb df_t : int
    48                                  ; glb dfs_t : int
    49                                  ; glb rindx_t : int
    50                                  ; glb modoAp_t : unsigned short
    51                                  ; glb tramaDWords_t : struct <something>
    52                                  ; glb tramaWords_t : struct <something>
    53                                  ; RPN'ized expression: "2 "
    54                                  ; Expanded expression: "2 "
    55                                  ; Expression value: 2
    56                                  ; RPN'ized expression: "2 "
    57                                  ; Expanded expression: "2 "
    58                                  ; Expression value: 2
    59                                  ; RPN'ized expression: "2 "
    60                                  ; Expanded expression: "2 "
    61                                  ; Expression value: 2
    62                                  ; RPN'ized expression: "2 "
    63                                  ; Expanded expression: "2 "
    64                                  ; Expression value: 2
    65                                  ; glb tramaBytes_t : struct <something>
    66                                  ; glb trama_t : union <something>
    67                                  ; RPN'ized expression: "8 "
    68                                  ; Expanded expression: "8 "
    69                                  ; Expression value: 8
    70                                  ; glb bloque_t : struct <something>
    71                                  ; glb ptrBloque_t : * struct <something>
    72                                  ; glb dobleEnlace_t : struct <something>
    73                                  ; glb c2c_t : struct <something>
    74                                  ; glb posicionC2c : (
    75                                  ; prm     i : int
    76                                  ; prm     c2c : struct <something>
    77                                  ;     ) int
    78                                  ; glb eliminarC2c : (
    79                                  ; prm     i : int
    80                                  ; prm     c2c : struct <something>
    81                                  ;     ) void
    82                                  ; glb apilarC2c : (
    83                                  ; prm     i : int
    84                                  ; prm     c2c : struct <something>
    85                                  ;     ) void
    86                                  ; glb encolarC2c : (
    87                                  ; prm     i : int
    88                                  ; prm     c2c : struct <something>
    89                                  ;     ) void
    90                                  ; glb desencolarC2c : (
    91                                  ; prm     c2c : struct <something>
    92                                  ;     ) int
    93                                  ; glb inicializarC2c : (
    94                                  ; prm     c2c : * struct <something>
    95                                  ; prm     e : * struct <something>
    96                                  ; prm     cabecera : int
    97                                  ; prm     compartida : int
    98                                  ;     ) void
    99                                  ; glb ptrC2c_t : * struct <something>
   100                                  ; glb posicionPC2c : (
   101                                  ; prm     i : int
   102                                  ; prm     c2c : * struct <something>
   103                                  ;     ) int
   104                                  ; glb eliminarPC2c : (
   105                                  ; prm     i : int
   106                                  ; prm     ptrC2c : * struct <something>
   107                                  ;     ) void
   108                                  ; glb apilarPC2c : (
   109                                  ; prm     i : int
   110                                  ; prm     ptrC2c : * struct <something>
   111                                  ;     ) void
   112                                  ; glb encolarPC2c : (
   113                                  ; prm     i : int
   114                                  ; prm     ptrC2c : * struct <something>
   115                                  ;     ) void
   116                                  ; glb desencolarPC2c : (
   117                                  ; prm     ptrC2c : * struct <something>
   118                                  ;     ) int
   119                                  ; glb inicializarPC2c : (
   120                                  ; prm     ptrC2c : * struct <something>
   121                                  ; prm     e : * struct <something>
   122                                  ; prm     cabecera : int
   123                                  ; prm     compartida : int
   124                                  ;     ) void
   125                                  ; glb callBack_t : * (
   126                                  ; prm     arg : * void
   127                                  ;     ) int
   128                                  ; RPN'ized expression: "10 "
   129                                  ; Expanded expression: "10 "
   130                                  ; Expression value: 10
   131                                  ; glb descCcb_t : struct <something>
   132                                  ; glb ccb_t : * struct <something>
   133                                  ; glb inicCcb : (
   134                                  ; prm     ccb : * struct <something>
   135                                  ; prm     max : unsigned short
   136                                  ;     ) int
   137                                  ; glb encolarCcb : (
   138                                  ; prm     cb : * (
   139                                  ; prm         arg : * void
   140                                  ;         ) int
   141                                  ; prm     ccb : * struct <something>
   142                                  ;     ) int
   143                                  ; glb desencolarCcb : (
   144                                  ; prm     ccb : * struct <something>
   145                                  ;     ) * (
   146                                  ; prm     arg : * void
   147                                  ;     ) int
   148                                  ; glb eliminarCcb : (
   149                                  ; prm     cb : * (
   150                                  ; prm         arg : * void
   151                                  ;         ) int
   152                                  ; prm     ccb : * struct <something>
   153                                  ;     ) int
   154                                  ; glb eliminarSegCcb : (
   155                                  ; prm     segmento : unsigned short
   156                                  ; prm     ccb : * struct <something>
   157                                  ;     ) int
   158                                  ; glb vaciarCcb : (
   159                                  ; prm     ccb : * struct <something>
   160                                  ;     ) int
   161                                  ; glb atenderCcb : (
   162                                  ; prm     ccb : * struct <something>
   163                                  ;     ) int
   164                                  ; glb estado_t : int
   165                                  ; glb dfa_t : struct <something>
   166                                  ; RPN'ized expression: "12 "
   167                                  ; Expanded expression: "12 "
   168                                  ; Expression value: 12
   169                                  ; RPN'ized expression: "80 "
   170                                  ; Expanded expression: "80 "
   171                                  ; Expression value: 80
   172                                  ; RPN'ized expression: "10 "
   173                                  ; Expanded expression: "10 "
   174                                  ; Expression value: 10
   175                                  ; glb descProceso_t : struct <something>
   176                                  ; glb descThread_t : struct <something>
   177                                  ; glb tipoFichero_t : int
   178                                  ; RPN'ized expression: "9 "
   179                                  ; Expanded expression: "9 "
   180                                  ; Expression value: 9
   181                                  ; glb descFichero_t : struct <something>
   182                                  ; glb tipoRecurso_t : int
   183                                  ; glb open_t : * (
   184                                  ; prm     dfs : int
   185                                  ; prm     modo : unsigned short
   186                                  ;     ) int
   187                                  ; glb release_t : * (
   188                                  ; prm     dfs : int
   189                                  ;     ) int
   190                                  ; glb read_t : * (
   191                                  ; prm     dfs : int
   192                                  ; prm     dir : * unsigned char
   193                                  ; prm     nbytes : unsigned short
   194                                  ;     ) int
   195                                  ; glb aio_read_t : * (
   196                                  ; prm     dfs : int
   197                                  ; prm     dir : * unsigned char
   198                                  ; prm     nbytes : unsigned short
   199                                  ;     ) int
   200                                  ; glb write_t : * (
   201                                  ; prm     dfs : int
   202                                  ; prm     dir : * unsigned char
   203                                  ; prm     nbytes : unsigned short
   204                                  ;     ) int
   205                                  ; glb aio_write_t : * (
   206                                  ; prm     dfs : int
   207                                  ; prm     dir : * unsigned char
   208                                  ; prm     nbytes : unsigned short
   209                                  ;     ) int
   210                                  ; glb lseek_t : * (
   211                                  ; prm     dfs : int
   212                                  ; prm     pos : int
   213                                  ; prm     whence : unsigned short
   214                                  ;     ) int
   215                                  ; glb fcntl_t : * (
   216                                  ; prm     dfs : int
   217                                  ; prm     cmd : unsigned short
   218                                  ; prm     arg : unsigned short
   219                                  ;     ) int
   220                                  ; glb ioctl_t : * (
   221                                  ; prm     dfs : int
   222                                  ; prm     request : unsigned short
   223                                  ; prm     arg : unsigned short
   224                                  ;     ) int
   225                                  ; glb eliminar_t : * (
   226                                  ; prm     pindx : int
   227                                  ;     ) int
   228                                  ; RPN'ized expression: "12 "
   229                                  ; Expanded expression: "12 "
   230                                  ; Expression value: 12
   231                                  ; RPN'ized expression: "2 "
   232                                  ; Expanded expression: "2 "
   233                                  ; Expression value: 2
   234                                  ; RPN'ized expression: "2 "
   235                                  ; Expanded expression: "2 "
   236                                  ; Expression value: 2
   237                                  ; RPN'ized expression: "2 "
   238                                  ; Expanded expression: "2 "
   239                                  ; Expression value: 2
   240                                  ; glb descRecurso_t : struct <something>
   241                                  ; glb info_t : struct <something>
   242                                  ; glb cabecera_t : struct <something>
   243                                  ; RPN'ized expression: "16 1 + "
   244                                  ; Expanded expression: "17 "
   245                                  ; Expression value: 17
   246                                  ; RPN'ized expression: "16 2 + "
   247                                  ; Expanded expression: "18 "
   248                                  ; Expression value: 18
   249                                  ; RPN'ized expression: "2010 1 + "
   250                                  ; Expanded expression: "2011 "
   251                                  ; Expression value: 2011
   252                                  ; RPN'ized expression: "2010 2 + "
   253                                  ; Expanded expression: "2012 "
   254                                  ; Expression value: 2012
   255                                  ; RPN'ized expression: "20 1 + "
   256                                  ; Expanded expression: "21 "
   257                                  ; Expression value: 21
   258                                  ; RPN'ized expression: "20 2 + "
   259                                  ; Expanded expression: "22 "
   260                                  ; Expression value: 22
   261                                  ; RPN'ized expression: "14 1 + "
   262                                  ; Expanded expression: "15 "
   263                                  ; Expression value: 15
   264                                  ; RPN'ized expression: "14 2 + "
   265                                  ; Expanded expression: "16 "
   266                                  ; Expression value: 16
   267                                  ; RPN'ized expression: "16 16 + "
   268                                  ; Expanded expression: "32 "
   269                                  ; Expression value: 32
   270                                  ; RPN'ized expression: "2010 16 + "
   271                                  ; Expanded expression: "2026 "
   272                                  ; Expression value: 2026
   273                                  ; RPN'ized expression: "2010 1 + "
   274                                  ; Expanded expression: "2011 "
   275                                  ; Expression value: 2011
   276                                  ; RPN'ized expression: "2010 1 + "
   277                                  ; Expanded expression: "2011 "
   278                                  ; Expression value: 2011
   279                                  ; RPN'ized expression: "16 1 + "
   280                                  ; Expanded expression: "17 "
   281                                  ; Expression value: 17
   282                                  ; RPN'ized expression: "2010 1 + "
   283                                  ; Expanded expression: "2011 "
   284                                  ; Expression value: 2011
   285                                  ; RPN'ized expression: "20 14 + "
   286                                  ; Expanded expression: "34 "
   287                                  ; Expression value: 34
   288                                  ; glb e2PFR_t : struct <something>
   289                                  ; glb cPFR_t : int
   290                                  ; glb sigThread_t : * () int
   291                                  ; glb activarThread_t : * (
   292                                  ; prm     tindx : int
   293                                  ;     ) void
   294                                  ; glb buscarNuevoThreadActual_t : * (void) void
   295                                  ; glb bloquearThreadActual_t : * (
   296                                  ; prm     rindx : int
   297                                  ;     ) void
   298                                  ; glb descSO1H_t : struct <something>
   299                                  ; glb thread_attribs_t : struct <something>
   300                                  ; glb thread_create : (
   301                                  ; prm     tid : * int
   302                                  ; prm     attribs : * struct <something>
   303                                  ; prm     funcionInicial : * * void
   304                                  ; prm     arg : * void
   305                                  ;     ) int
   306                                  ; glb thread_join : (
   307                                  ; prm     tid : int
   308                                  ; prm     res : * * void
   309                                  ;     ) int
   310                                  ; glb thread_exit : (
   311                                  ; prm     res : * void
   312                                  ;     ) void
   313                                  ; glb thread_yield : (void) int
   314                                  ; glb thread_self : (void) int
   315                                  ; glb pos_t : struct <something>
   316                                  ; RPN'ized expression: "50 "
   317                                  ; Expanded expression: "50 "
   318                                  ; Expression value: 50
   319                                  ; RPN'ized expression: "80 "
   320                                  ; Expanded expression: "80 "
   321                                  ; Expression value: 80
   322                                  ; glb pantalla_t : union <something>
   323                                  ; glb tamPantalla : (
   324                                  ; prm     numFilas : unsigned char
   325                                  ;     ) unsigned short
   326                                  ; glb pantallazo : (
   327                                  ; prm     pantalla : * union <something>
   328                                  ; prm     numFilas : unsigned short
   329                                  ; prm     car : char
   330                                  ; prm     atr : char
   331                                  ; prm     esqSupDeF : unsigned char
   332                                  ; prm     esqSupDeC : unsigned char
   333                                  ; prm     esqInfIzF : unsigned char
   334                                  ; prm     esqInfIzC : unsigned char
   335                                  ;     ) void
   336                                  ; glb borrarPantalla : (
   337                                  ; prm     pantalla : * union <something>
   338                                  ; prm     numFilas : unsigned short
   339                                  ;     ) void
   340                                  ; glb borrarCPantalla : (
   341                                  ; prm     pantalla : * union <something>
   342                                  ; prm     numFilas : unsigned short
   343                                  ;     ) void
   344                                  ; glb copiarPantalla : (
   345                                  ; prm     p1 : * union <something>
   346                                  ; prm     p2 : * union <something>
   347                                  ; prm     numFilas : unsigned short
   348                                  ;     ) void
   349                                  ; glb copiarCPantalla : (
   350                                  ; prm     p1 : * union <something>
   351                                  ; prm     p2 : * union <something>
   352                                  ; prm     numFilas : unsigned short
   353                                  ;     ) void
   354                                  ; glb scrollPantalla : (
   355                                  ; prm     pantalla : * union <something>
   356                                  ; prm     numFilas : unsigned short
   357                                  ;     ) void
   358                                  ; glb scrollCPantalla : (
   359                                  ; prm     pantalla : * union <something>
   360                                  ; prm     numFilas : unsigned short
   361                                  ;     ) void
   362                                  ; glb cursorF : unsigned char
   363                                  ; glb cursorC : unsigned char
   364                                  ; glb lineaOriginal1 : unsigned char
   365                                  ; glb lineaOriginal2 : unsigned char
   366                                  ; glb inicMemVideo : (void) void
   367                                  ; glb finMemVideo : (void) int
   368                                  ; glb goToXYVideo : (
   369                                  ; prm     F : unsigned char
   370                                  ; prm     C : unsigned char
   371                                  ;     ) void
   372                                  ; glb printCarVideo : (
   373                                  ; prm     car : char
   374                                  ;     ) int
   375                                  ; glb printCarVideo : (
   376                                  ; prm     car : char
   377                                  ;     ) int
   378                                  ; glb printLnVideo : (void) int
   379                                  ; glb printStrVideo : (
   380                                  ; prm     str : * char
   381                                  ;     ) int
   382                                  ; glb printStrHastaVideo : (
   383                                  ; prm     str : * char
   384                                  ; prm     n : unsigned short
   385                                  ; prm     lleno : int
   386                                  ;     ) int
   387                                  ; glb printDecVideo : (
   388                                  ; prm     num : unsigned short
   389                                  ; prm     l : unsigned short
   390                                  ;     ) int
   391                                  ; glb printLDecVideo : (
   392                                  ; prm     num : unsigned
   393                                  ; prm     l : unsigned short
   394                                  ;     ) int
   395                                  ; glb printIntVideo : (
   396                                  ; prm     num : int
   397                                  ; prm     l : unsigned short
   398                                  ;     ) int
   399                                  ; glb printLIntVideo : (
   400                                  ; prm     num : int
   401                                  ; prm     l : unsigned short
   402                                  ;     ) int
   403                                  ; glb printHexVideo : (
   404                                  ; prm     num : unsigned short
   405                                  ; prm     l : unsigned short
   406                                  ;     ) int
   407                                  ; glb printLHexVideo : (
   408                                  ; prm     num : unsigned
   409                                  ; prm     l : unsigned short
   410                                  ;     ) int
   411                                  ; glb printBinVideo : (
   412                                  ; prm     num : unsigned short
   413                                  ; prm     l : unsigned short
   414                                  ;     ) int
   415                                  ; glb printLBinVideo : (
   416                                  ; prm     num : unsigned
   417                                  ; prm     l : unsigned short
   418                                  ;     ) int
   419                                  ; glb printPtrVideo : (
   420                                  ; prm     ptr : * unsigned char
   421                                  ;     ) int
   422                                  ; glb printByteVideo : (
   423                                  ; prm     b : unsigned char
   424                                  ;     ) int
   425                                  ; glb printWordVideo : (
   426                                  ; prm     w : unsigned short
   427                                  ;     ) int
   428                                  ; glb printCadVideo : (
   429                                  ; prm     cad : * char
   430                                  ;     ) int
   431                                  ; glb HWLIST_t : unsigned short
   432                                  ; glb KBDFLAGS_t : unsigned short
   433                                  ; glb KBDSTATUS_t : unsigned short
   434                                  ; glb VIDEOCONTROL_t : unsigned char
   435                                  ; glb DRECSTATUS_t : unsigned char
   436                                  ; glb DMOTORSTATUS_t : unsigned char
   437                                  ; glb FDOPSTATUS_t : unsigned char
   438                                  ; glb VIDEOSWITCHES_t : unsigned char
   439                                  ; glb VGAOPTIONS_t : unsigned char
   440                                  ; glb VIDEOSAVETBL_t : struct <something>
   441                                  ; RPN'ized expression: "4 "
   442                                  ; Expanded expression: "4 "
   443                                  ; Expression value: 4
   444                                  ; RPN'ized expression: "25 "
   445                                  ; Expanded expression: "25 "
   446                                  ; Expression value: 25
   447                                  ; RPN'ized expression: "20 "
   448                                  ; Expanded expression: "20 "
   449                                  ; Expression value: 20
   450                                  ; RPN'ized expression: "9 "
   451                                  ; Expanded expression: "9 "
   452                                  ; Expression value: 9
   453                                  ; glb VIDEOPARAM_t : struct <something>
   454                                  ; RPN'ized expression: "256 "
   455                                  ; Expanded expression: "256 "
   456                                  ; Expression value: 256
   457                                  ; RPN'ized expression: "4 "
   458                                  ; Expanded expression: "4 "
   459                                  ; Expression value: 4
   460                                  ; RPN'ized expression: "3 "
   461                                  ; Expanded expression: "3 "
   462                                  ; Expression value: 3
   463                                  ; RPN'ized expression: "16 "
   464                                  ; Expanded expression: "16 "
   465                                  ; Expression value: 16
   466                                  ; RPN'ized expression: "7 "
   467                                  ; Expanded expression: "7 "
   468                                  ; Expression value: 7
   469                                  ; RPN'ized expression: "8 "
   470                                  ; Expanded expression: "8 "
   471                                  ; Expression value: 8
   472                                  ; RPN'ized expression: "2 "
   473                                  ; Expanded expression: "2 "
   474                                  ; Expression value: 2
   475                                  ; RPN'ized expression: "2 "
   476                                  ; Expanded expression: "2 "
   477                                  ; Expression value: 2
   478                                  ; RPN'ized expression: "5 "
   479                                  ; Expanded expression: "5 "
   480                                  ; Expression value: 5
   481                                  ; RPN'ized expression: "2 "
   482                                  ; Expanded expression: "2 "
   483                                  ; Expression value: 2
   484                                  ; RPN'ized expression: "3 "
   485                                  ; Expanded expression: "3 "
   486                                  ; Expression value: 3
   487                                  ; RPN'ized expression: "4 "
   488                                  ; Expanded expression: "4 "
   489                                  ; Expression value: 4
   490                                  ; RPN'ized expression: "11 "
   491                                  ; Expanded expression: "11 "
   492                                  ; Expression value: 11
   493                                  ; RPN'ized expression: "7 "
   494                                  ; Expanded expression: "7 "
   495                                  ; Expression value: 7
   496                                  ; RPN'ized expression: "68 "
   497                                  ; Expanded expression: "68 "
   498                                  ; Expression value: 68
   499                                  ; RPN'ized expression: "16 "
   500                                  ; Expanded expression: "16 "
   501                                  ; Expression value: 16
   502                                  ; glb BIOSAREA_t : struct <something>
   503                                  ; glb ptrBiosArea : * struct <something>
   504                                  ; glb ptrFechaBios : * unsigned char
   505                                  ; glb tipoOrdenador : (void) unsigned char
   506                                  ; glb rebootLegacy : (void) void
   507                                  ; glb tipoTeclado : (void) unsigned char
   508                                  ; glb leerTeclaBIOS : (void) unsigned short
   509                                  ; glb leerTeclaExtBIOS : (void) unsigned short
   510                                  ; glb teclaListaBIOS : (void) unsigned short
   511                                  ; glb leerTeclaListaBDA : (void) unsigned short
   512                                  ; glb teclaListaBDA : (void) unsigned short
   513                                  ; glb printCarBIOS : (
   514                                  ; prm     car : char
   515                                  ;     ) int
   516                                  ; glb printCarPagBIOS : (
   517                                  ; prm     car : char
   518                                  ; prm     pag : unsigned char
   519                                  ;     ) int
   520                                  ; glb printCarAtrPagBIOS : (
   521                                  ; prm     car : char
   522                                  ; prm     atr : unsigned char
   523                                  ; prm     pag : unsigned char
   524                                  ;     ) int
   525                                  ; glb printLnBIOS : (void) int
   526                                  ; glb printStrBIOS : (
   527                                  ; prm     str : * char
   528                                  ;     ) int
   529                                  ; glb printStrHastaBIOS : (
   530                                  ; prm     str : * char
   531                                  ; prm     n : unsigned short
   532                                  ; prm     lleno : int
   533                                  ;     ) int
   534                                  ; glb printDecBIOS : (
   535                                  ; prm     num : unsigned short
   536                                  ; prm     l : unsigned short
   537                                  ;     ) int
   538                                  ; glb printLDecBIOS : (
   539                                  ; prm     num : unsigned
   540                                  ; prm     l : unsigned short
   541                                  ;     ) int
   542                                  ; glb printIntBIOS : (
   543                                  ; prm     num : short
   544                                  ; prm     l : unsigned short
   545                                  ;     ) int
   546                                  ; glb printLIntBIOS : (
   547                                  ; prm     num : int
   548                                  ; prm     l : unsigned short
   549                                  ;     ) int
   550                                  ; glb printHexBIOS : (
   551                                  ; prm     num : unsigned short
   552                                  ; prm     l : unsigned short
   553                                  ;     ) int
   554                                  ; glb printLHexBIOS : (
   555                                  ; prm     num : unsigned
   556                                  ; prm     l : unsigned short
   557                                  ;     ) int
   558                                  ; glb printBinBIOS : (
   559                                  ; prm     num : unsigned short
   560                                  ; prm     l : unsigned short
   561                                  ;     ) int
   562                                  ; glb printLBinBIOS : (
   563                                  ; prm     num : unsigned
   564                                  ; prm     l : unsigned short
   565                                  ;     ) int
   566                                  ; glb printPtrBIOS : (
   567                                  ; prm     ptr : * unsigned char
   568                                  ;     ) int
   569                                  ; glb printByteBIOS : (
   570                                  ; prm     b : unsigned char
   571                                  ;     ) int
   572                                  ; glb printWordBIOS : (
   573                                  ; prm     w : unsigned short
   574                                  ;     ) int
   575                                  ; glb printCadBIOS : (
   576                                  ; prm     cad : * char
   577                                  ;     ) int
   578                                  ; glb esperarTicsBIOS : (
   579                                  ; prm     tics : unsigned short
   580                                  ;     ) void
   581                                  ; glb modoDeVideo : (void) unsigned char
   582                                  ; glb establecerModoDeVideo : (
   583                                  ; prm     modo : unsigned char
   584                                  ;     ) void
   585                                  ; glb paginaActiva : (void) unsigned char
   586                                  ; glb establecerPaginaActiva : (
   587                                  ; prm     num : unsigned char
   588                                  ;     ) void
   589                                  ; glb numPagsVideo : (void) unsigned char
   590                                  ; glb scrollPagBDA : (
   591                                  ; prm     numLineas : unsigned char
   592                                  ; prm     pag : unsigned char
   593                                  ;     ) void
   594                                  ; glb scrollPagBIOS : (
   595                                  ; prm     numLineas : unsigned char
   596                                  ; prm     pag : unsigned char
   597                                  ;     ) void
   598                                  ; glb scrollBIOS : (
   599                                  ; prm     numLineas : unsigned char
   600                                  ;     ) void
   601                                  ; glb goToXYPag : (
   602                                  ; prm     fila : unsigned char
   603                                  ; prm     columna : unsigned char
   604                                  ; prm     pag : unsigned char
   605                                  ;     ) void
   606                                  ; glb goToXYBIOS : (
   607                                  ; prm     fila : unsigned char
   608                                  ; prm     columna : unsigned char
   609                                  ;     ) void
   610                                  ; glb setCursorBIOS : (
   611                                  ; prm     linea1 : unsigned char
   612                                  ; prm     linea2 : unsigned char
   613                                  ;     ) void
   614                                  ; glb ocultaCursorBIOS : (void) void
   615                                  ; glb readXYPagBIOS : (
   616                                  ; prm     fila : * unsigned char
   617                                  ; prm     columna : * unsigned char
   618                                  ; prm     linea1 : * unsigned char
   619                                  ; prm     linea2 : * unsigned char
   620                                  ; prm     pag : unsigned char
   621                                  ;     ) void
   622                                  ; glb readXYBIOS : (
   623                                  ; prm     fila : * unsigned char
   624                                  ; prm     columna : * unsigned char
   625                                  ; prm     linea1 : * unsigned char
   626                                  ; prm     linea2 : * unsigned char
   627                                  ;     ) void
   628                                  ; glb memBIOS : (void) unsigned short
   629                                  ; glb enviarBIOS : (
   630                                  ; prm     car : char
   631                                  ;     ) void
   632                                  ; glb recibirBIOS : (void) char
   633                                  ; glb hayApmBIOS : (
   634                                  ; prm     version : * unsigned short
   635                                  ;     ) int
   636                                  ; glb connectApmBIOS : (void) int
   637                                  ; glb disconnectApmBIOS : (void) int
   638                                  ; glb cpuIdleBIOS : (void) void
   639                                  ; glb cpuBusyBIOS : (void) void
   640                                  ; glb tamBloqueMax : unsigned short
   641                                  ; glb listaLibres : * struct <something>
   642                                  ; glb k_buscarBloque : (
   643                                  ; prm     tam : unsigned short
   644                                  ;     ) unsigned short
   645                                  ; glb k_devolverBloque : (
   646                                  ; prm     segmento : unsigned short
   647                                  ; prm     tam : unsigned short
   648                                  ;     ) int
   649                                  ; glb rec_gm : int
   650                                  ; glb inicGM : (void) void
   651                                  ; glb mostrarListaLibres : (void) void
   652                                  ; glb link_gm_k : (void) void
   653                                  ; glb size_t : unsigned
   654                                  ; glb memset : (
   655                                  ; prm     <something> : * void
   656                                  ; prm     <something> : int
   657                                  ; prm     <something> : unsigned
   658                                  ;     ) * void
   659                                  ; glb memcpy : (
   660                                  ; prm     <something> : * void
   661                                  ; prm     <something> : * void
   662                                  ; prm     <something> : unsigned
   663                                  ;     ) * void
   664                                  ; glb memmove : (
   665                                  ; prm     <something> : * void
   666                                  ; prm     <something> : * void
   667                                  ; prm     <something> : unsigned
   668                                  ;     ) * void
   669                                  ; glb memchr : (
   670                                  ; prm     <something> : * char
   671                                  ; prm     <something> : int
   672                                  ; prm     <something> : unsigned
   673                                  ;     ) * char
   674                                  ; glb memcmp : (
   675                                  ; prm     <something> : * void
   676                                  ; prm     <something> : * void
   677                                  ; prm     <something> : unsigned
   678                                  ;     ) int
   679                                  ; glb strcpy : (
   680                                  ; prm     <something> : * char
   681                                  ; prm     <something> : * char
   682                                  ;     ) * char
   683                                  ; glb strncpy : (
   684                                  ; prm     <something> : * char
   685                                  ; prm     <something> : * char
   686                                  ; prm     <something> : unsigned
   687                                  ;     ) * char
   688                                  ; glb strxfrm : (
   689                                  ; prm     <something> : * char
   690                                  ; prm     <something> : * char
   691                                  ; prm     <something> : unsigned
   692                                  ;     ) unsigned
   693                                  ; glb strcat : (
   694                                  ; prm     <something> : * char
   695                                  ; prm     <something> : * char
   696                                  ;     ) * char
   697                                  ; glb strncat : (
   698                                  ; prm     <something> : * char
   699                                  ; prm     <something> : * char
   700                                  ; prm     <something> : unsigned
   701                                  ;     ) * char
   702                                  ; glb strlen : (
   703                                  ; prm     <something> : * char
   704                                  ;     ) unsigned
   705                                  ; glb strchr : (
   706                                  ; prm     <something> : * char
   707                                  ; prm     <something> : int
   708                                  ;     ) * char
   709                                  ; glb strrchr : (
   710                                  ; prm     <something> : * char
   711                                  ; prm     <something> : int
   712                                  ;     ) * char
   713                                  ; glb strstr : (
   714                                  ; prm     <something> : * char
   715                                  ; prm     <something> : * char
   716                                  ;     ) * char
   717                                  ; glb strspn : (
   718                                  ; prm     <something> : * char
   719                                  ; prm     <something> : * char
   720                                  ;     ) unsigned
   721                                  ; glb strcspn : (
   722                                  ; prm     <something> : * char
   723                                  ; prm     <something> : * char
   724                                  ;     ) unsigned
   725                                  ; glb strpbrk : (
   726                                  ; prm     <something> : * char
   727                                  ; prm     <something> : * char
   728                                  ;     ) * char
   729                                  ; glb strtok : (
   730                                  ; prm     <something> : * char
   731                                  ; prm     <something> : * char
   732                                  ;     ) * char
   733                                  ; glb strcmp : (
   734                                  ; prm     <something> : * char
   735                                  ; prm     <something> : * char
   736                                  ;     ) int
   737                                  ; glb strncmp : (
   738                                  ; prm     <something> : * char
   739                                  ; prm     <something> : * char
   740                                  ; prm     <something> : unsigned
   741                                  ;     ) int
   742                                  ; glb strcoll : (
   743                                  ; prm     <something> : * char
   744                                  ; prm     <something> : * char
   745                                  ;     ) int
   746                                  ; glb strerror : (
   747                                  ; prm     <something> : int
   748                                  ;     ) * char
   749                                  ; glb numThreads : int
   750                                  section .bss
   751                                  	alignb 4
   752                                  _numThreads:
   753 00000000 <res 00000004>          	resb	4
   754                                  
   755                                  ; glb f_1 : int
   756                                  section .bss
   757                                  	alignb 4
   758                                  _f_1:
   759 00000004 <res 00000004>          	resb	4
   760                                  
   761                                  ; glb c_1 : int
   762                                  section .bss
   763                                  	alignb 4
   764                                  _c_1:
   765 00000008 <res 00000004>          	resb	4
   766                                  
   767                                  ; glb f_2 : int
   768                                  section .bss
   769                                  	alignb 4
   770                                  _f_2:
   771 0000000C <res 00000004>          	resb	4
   772                                  
   773                                  ; glb c_2 : int
   774                                  section .bss
   775                                  	alignb 4
   776                                  _c_2:
   777 00000010 <res 00000004>          	resb	4
   778                                  
   779                                  ; glb alto : int
   780                                  section .bss
   781                                  	alignb 4
   782                                  _alto:
   783 00000014 <res 00000004>          	resb	4
   784                                  
   785                                  ; glb ancho : int
   786                                  section .bss
   787                                  	alignb 4
   788                                  _ancho:
   789 00000018 <res 00000004>          	resb	4
   790                                  
   791                                  ; glb fin : int
   792                                  section .data
   793                                  	align 4
   794                                  _fin:
   795                                  ; =
   796                                  ; RPN'ized expression: "FALSE "
   797                                  ; Expanded expression: "0 "
   798                                  ; Expression value: 0
   799 00000000 00000000                	dd	0
   800                                  
   801                                  ; RPN'ized expression: "80 "
   802                                  ; Expanded expression: "80 "
   803                                  ; Expression value: 80
   804                                  ; glb renglon : [80u] char
   805                                  section .bss
   806                                  _renglon:
   807 0000001C <res 00000050>          	resb	80
   808                                  
   809                                  ; RPN'ized expression: "80 "
   810                                  ; Expanded expression: "80 "
   811                                  ; Expression value: 80
   812                                  ; glb numOrden : [80u] char
   813                                  section .bss
   814                                  _numOrden:
   815 0000006C <res 00000050>          	resb	80
   816                                  
   817                                  ; glb funcion : (
   818                                  ; prm     arg : * void
   819                                  ;     ) * void
   820                                  section .text
   821                                  _funcion:
   822 00000000 6655                    	push	ebp
   823 00000002 660FB7EC                	movzx	ebp, sp
   824 00000006 83EC30                  	 sub	sp,         48
   825                                  ; loc     arg : (@8): * void
   826                                  ; loc     i : (@-4): int
   827                                  ; loc     k : (@-8): int
   828                                  ; loc     kant : (@-12): int
   829                                  ; loc     incremento : (@-16): int
   830                                  ; loc     lentitud : (@-20): int
   831                                  ; loc     pasos : (@-24): int
   832                                  ; loc     f : (@-28): int
   833                                  ; loc     c : (@-32): int
   834                                  ; loc     fant : (@-36): int
   835                                  ; loc     letra : (@-40): char
   836                                  ; loc     atributo : (@-44): unsigned char
   837                                  ; loc     ptrPant : (@-48): * union <something>
   838                                  ; loc     <something> : * union <something>
   839                                  ; RPN'ized expression: "ptrPant 753664 (something3) = "
   840                                  ; Expanded expression: "(@-48) 753664 =(4) "
   841                                  ; Fused expression:    "=(204) *(@-48) 753664 "
   842 00000009 66B800800B00            	mov	eax, 753664
   843 0000000F 668946D0                	mov	[bp-48], eax
   844                                  ; loc     <something> : int
   845                                  ; RPN'ized expression: "c arg (something4) = "
   846                                  ; Expanded expression: "(@-32) (@8) *(4) =(4) "
   847                                  ; Fused expression:    "=(204) *(@-32) *(@8) "
   848 00000013 668B4608                	mov	eax, [bp+8]
   849 00000017 668946E0                	mov	[bp-32], eax
   850                                  ; RPN'ized expression: "pasos 0 = "
   851                                  ; Expanded expression: "(@-24) 0 =(4) "
   852                                  ; Fused expression:    "=(204) *(@-24) 0 "
   853 0000001B 66B800000000            	mov	eax, 0
   854 00000021 668946E8                	mov	[bp-24], eax
   855                                  ; RPN'ized expression: "k alto 2 / = "
   856                                  ; Expanded expression: "(@-8) alto *(4) 2 / =(4) "
   857                                  ; Fused expression:    "alto / *ax 2 =(204) *(@-8) ax "
   858                                  section .relod
   859 00000000 [27000000]              	dd	L5
   860                                  section .text
   861 00000025 66B8                    	db	0x66, 0xB8
   862                                  L5:
   863 00000027 [14000000]              	dd	_alto
   864 0000002B 6689C3                  	mov	ebx, eax
   865 0000002E 6689DE                  	mov	esi, ebx
   866 00000031 66C1CE04                	ror	esi, 4
   867 00000035 8EDE                    	mov	ds, si
   868 00000037 66C1EE1C                	shr	esi, 28
   869 0000003B 668B04                  	mov	eax, [si]
   870 0000003E 6699                    	cdq
   871 00000040 66B902000000            	mov	ecx, 2
   872 00000046 66F7F9                  	idiv	ecx
   873 00000049 668946F8                	mov	[bp-8], eax
   874                                  ; RPN'ized expression: "kant k = "
   875                                  ; Expanded expression: "(@-12) (@-8) *(4) =(4) "
   876                                  ; Fused expression:    "=(204) *(@-12) *(@-8) "
   877 0000004D 668B46F8                	mov	eax, [bp-8]
   878 00000051 668946F4                	mov	[bp-12], eax
   879                                  ; RPN'ized expression: "incremento 1 = "
   880                                  ; Expanded expression: "(@-16) 1 =(4) "
   881                                  ; Fused expression:    "=(204) *(@-16) 1 "
   882 00000055 66B801000000            	mov	eax, 1
   883 0000005B 668946F0                	mov	[bp-16], eax
   884                                  ; RPN'ized expression: "lentitud numThreads 1 - = "
   885                                  ; Expanded expression: "(@-20) numThreads *(4) 1 - =(4) "
   886                                  ; Fused expression:    "numThreads - *ax 1 =(204) *(@-20) ax "
   887                                  section .relod
   888 00000004 [61000000]              	dd	L6
   889                                  section .text
   890 0000005F 66B8                    	db	0x66, 0xB8
   891                                  L6:
   892 00000061 [00000000]              	dd	_numThreads
   893 00000065 6689C3                  	mov	ebx, eax
   894 00000068 6689DE                  	mov	esi, ebx
   895 0000006B 66C1CE04                	ror	esi, 4
   896 0000006F 8EDE                    	mov	ds, si
   897 00000071 66C1EE1C                	shr	esi, 28
   898 00000075 668B04                  	mov	eax, [si]
   899 00000078 6648                    	dec	eax
   900 0000007A 668946EC                	mov	[bp-20], eax
   901                                  ; RPN'ized expression: "letra renglon c + *u = "
   902                                  ; Expanded expression: "(@-40) renglon (@-32) *(4) + *(-1) =(-1) "
   903                                  ; Fused expression:    "renglon + ax *(@-32) =(119) *(@-40) *ax "
   904                                  section .relod
   905 00000008 [80000000]              	dd	L7
   906                                  section .text
   907 0000007E 66B8                    	db	0x66, 0xB8
   908                                  L7:
   909 00000080 [1C000000]              	dd	_renglon
   910 00000084 660346E0                	add	eax, [bp-32]
   911 00000088 6689C3                  	mov	ebx, eax
   912 0000008B 6689DE                  	mov	esi, ebx
   913 0000008E 66C1CE04                	ror	esi, 4
   914 00000092 8EDE                    	mov	ds, si
   915 00000094 66C1EE1C                	shr	esi, 28
   916 00000098 8A04                    	mov	al, [si]
   917 0000009A 660FBEC0                	movsx	eax, al
   918 0000009E 8846D8                  	mov	[bp-40], al
   919 000000A1 660FBEC0                	movsx	eax, al
   920                                  ; RPN'ized expression: "atributo 2 c 5 % + = "
   921                                  ; Expanded expression: "(@-44) 2 (@-32) *(4) 5 % + =(1) "
   922                                  ; Fused expression:    "% *(@-32) 5 + 2 ax =(156) *(@-44) ax "
   923 000000A5 668B46E0                	mov	eax, [bp-32]
   924 000000A9 6699                    	cdq
   925 000000AB 66B905000000            	mov	ecx, 5
   926 000000B1 66F7F9                  	idiv	ecx
   927 000000B4 6689D0                  	mov	eax, edx
   928 000000B7 6689C1                  	mov	ecx, eax
   929 000000BA 66B802000000            	mov	eax, 2
   930 000000C0 6601C8                  	add	eax, ecx
   931 000000C3 8846D4                  	mov	[bp-44], al
   932 000000C6 660FB6C0                	movzx	eax, al
   933                                  ; while
   934                                  ; RPN'ized expression: "fin 0 == "
   935                                  ; Expanded expression: "fin *(4) 0 == "
   936                                  L8:
   937                                  ; Fused expression:    "fin == *ax 0 IF! "
   938                                  section .relod
   939 0000000C [CC000000]              	dd	L10
   940                                  section .text
   941 000000CA 66B8                    	db	0x66, 0xB8
   942                                  L10:
   943 000000CC [00000000]              	dd	_fin
   944 000000D0 6689C3                  	mov	ebx, eax
   945 000000D3 6689DE                  	mov	esi, ebx
   946 000000D6 66C1CE04                	ror	esi, 4
   947 000000DA 8EDE                    	mov	ds, si
   948 000000DC 66C1EE1C                	shr	esi, 28
   949 000000E0 668B04                  	mov	eax, [si]
   950 000000E3 6683F800                	cmp	eax, 0
   951 000000E7 0F852C02                	jne	L9
   952                                  ; {
   953                                  ; if
   954                                  ; RPN'ized expression: "pasos numOrden c + *u lentitud + % 0 == "
   955                                  ; Expanded expression: "(@-24) *(4) numOrden (@-32) *(4) + *(-1) (@-20) *(4) + % 0 == "
   956                                  ; Fused expression:    "numOrden + ax *(@-32) + *ax *(@-20) % *(@-24) ax == ax 0 IF! "
   957                                  section .relod
   958 00000010 [ED000000]              	dd	L13
   959                                  section .text
   960 000000EB 66B8                    	db	0x66, 0xB8
   961                                  L13:
   962 000000ED [6C000000]              	dd	_numOrden
   963 000000F1 660346E0                	add	eax, [bp-32]
   964 000000F5 6689C3                  	mov	ebx, eax
   965 000000F8 6689DE                  	mov	esi, ebx
   966 000000FB 66C1CE04                	ror	esi, 4
   967 000000FF 8EDE                    	mov	ds, si
   968 00000101 66C1EE1C                	shr	esi, 28
   969 00000105 8A04                    	mov	al, [si]
   970 00000107 660FBEC0                	movsx	eax, al
   971 0000010B 660346EC                	add	eax, [bp-20]
   972 0000010F 6689C1                  	mov	ecx, eax
   973 00000112 668B46E8                	mov	eax, [bp-24]
   974 00000116 6699                    	cdq
   975 00000118 66F7F9                  	idiv	ecx
   976 0000011B 6689D0                  	mov	eax, edx
   977 0000011E 6683F800                	cmp	eax, 0
   978 00000122 0F85E101                	jne	L11
   979                                  ; {
   980                                  ; RPN'ized expression: "f f_1 k + = "
   981                                  ; Expanded expression: "(@-28) f_1 *(4) (@-8) *(4) + =(4) "
   982                                  ; Fused expression:    "f_1 + *ax *(@-8) =(204) *(@-28) ax "
   983                                  section .relod
   984 00000014 [28010000]              	dd	L14
   985                                  section .text
   986 00000126 66B8                    	db	0x66, 0xB8
   987                                  L14:
   988 00000128 [04000000]              	dd	_f_1
   989 0000012C 6689C3                  	mov	ebx, eax
   990 0000012F 6689DE                  	mov	esi, ebx
   991 00000132 66C1CE04                	ror	esi, 4
   992 00000136 8EDE                    	mov	ds, si
   993 00000138 66C1EE1C                	shr	esi, 28
   994 0000013C 668B04                  	mov	eax, [si]
   995 0000013F 660346F8                	add	eax, [bp-8]
   996 00000143 668946E4                	mov	[bp-28], eax
   997                                  ; RPN'ized expression: "fant f_1 kant + = "
   998                                  ; Expanded expression: "(@-36) f_1 *(4) (@-12) *(4) + =(4) "
   999                                  ; Fused expression:    "f_1 + *ax *(@-12) =(204) *(@-36) ax "
  1000                                  section .relod
  1001 00000018 [49010000]              	dd	L15
  1002                                  section .text
  1003 00000147 66B8                    	db	0x66, 0xB8
  1004                                  L15:
  1005 00000149 [04000000]              	dd	_f_1
  1006 0000014D 6689C3                  	mov	ebx, eax
  1007 00000150 6689DE                  	mov	esi, ebx
  1008 00000153 66C1CE04                	ror	esi, 4
  1009 00000157 8EDE                    	mov	ds, si
  1010 00000159 66C1EE1C                	shr	esi, 28
  1011 0000015D 668B04                  	mov	eax, [si]
  1012 00000160 660346F4                	add	eax, [bp-12]
  1013 00000164 668946DC                	mov	[bp-36], eax
  1014                                  ; RPN'ized expression: "ptrPant t -> *u fant + *u c + *u &u car -> *u 32 = "
  1015                                  ; Expanded expression: "(@-48) *(4) 0 + (@-36) *(4) 160 * + (@-32) *(4) 2 * + 0 + 32 =(1) "
  1016                                  ; Fused expression:    "+ *(@-48) 0 push-ax * *(@-36) 160 + *sp ax push-ax * *(@-32) 2 + *sp ax + ax 0 =(156) *ax 32 "
  1017 00000168 668B46D0                	mov	eax, [bp-48]
  1018 0000016C 6650                    	push	eax
  1019 0000016E 668B46DC                	mov	eax, [bp-36]
  1020 00000172 6669C0A0000000          	imul	eax, eax, 160
  1021 00000179 6689C1                  	mov	ecx, eax
  1022 0000017C 6658                    	pop	eax
  1023 0000017E 6601C8                  	add	eax, ecx
  1024 00000181 6650                    	push	eax
  1025 00000183 668B46E0                	mov	eax, [bp-32]
  1026 00000187 666BC002                	imul	eax, eax, 2
  1027 0000018B 6689C1                  	mov	ecx, eax
  1028 0000018E 6658                    	pop	eax
  1029 00000190 6601C8                  	add	eax, ecx
  1030 00000193 6689C3                  	mov	ebx, eax
  1031 00000196 66B820000000            	mov	eax, 32
  1032 0000019C 6689DE                  	mov	esi, ebx
  1033 0000019F 66C1CE04                	ror	esi, 4
  1034 000001A3 8EDE                    	mov	ds, si
  1035 000001A5 66C1EE1C                	shr	esi, 28
  1036 000001A9 8804                    	mov	[si], al
  1037 000001AB 660FB6C0                	movzx	eax, al
  1038                                  ; RPN'ized expression: "ptrPant t -> *u fant + *u c + *u &u atr -> *u 7 = "
  1039                                  ; Expanded expression: "(@-48) *(4) 0 + (@-36) *(4) 160 * + (@-32) *(4) 2 * + 1 + 7 =(1) "
  1040                                  ; Fused expression:    "+ *(@-48) 0 push-ax * *(@-36) 160 + *sp ax push-ax * *(@-32) 2 + *sp ax + ax 1 =(156) *ax 7 "
  1041 000001AF 668B46D0                	mov	eax, [bp-48]
  1042 000001B3 6650                    	push	eax
  1043 000001B5 668B46DC                	mov	eax, [bp-36]
  1044 000001B9 6669C0A0000000          	imul	eax, eax, 160
  1045 000001C0 6689C1                  	mov	ecx, eax
  1046 000001C3 6658                    	pop	eax
  1047 000001C5 6601C8                  	add	eax, ecx
  1048 000001C8 6650                    	push	eax
  1049 000001CA 668B46E0                	mov	eax, [bp-32]
  1050 000001CE 666BC002                	imul	eax, eax, 2
  1051 000001D2 6689C1                  	mov	ecx, eax
  1052 000001D5 6658                    	pop	eax
  1053 000001D7 6601C8                  	add	eax, ecx
  1054 000001DA 6640                    	inc	eax
  1055 000001DC 6689C3                  	mov	ebx, eax
  1056 000001DF 66B807000000            	mov	eax, 7
  1057 000001E5 6689DE                  	mov	esi, ebx
  1058 000001E8 66C1CE04                	ror	esi, 4
  1059 000001EC 8EDE                    	mov	ds, si
  1060 000001EE 66C1EE1C                	shr	esi, 28
  1061 000001F2 8804                    	mov	[si], al
  1062 000001F4 660FB6C0                	movzx	eax, al
  1063                                  ; RPN'ized expression: "ptrPant t -> *u f + *u c + *u &u car -> *u letra = "
  1064                                  ; Expanded expression: "(@-48) *(4) 0 + (@-28) *(4) 160 * + (@-32) *(4) 2 * + 0 + (@-40) *(-1) =(1) "
  1065                                  ; Fused expression:    "+ *(@-48) 0 push-ax * *(@-28) 160 + *sp ax push-ax * *(@-32) 2 + *sp ax + ax 0 =(151) *ax *(@-40) "
  1066 000001F8 668B46D0                	mov	eax, [bp-48]
  1067 000001FC 6650                    	push	eax
  1068 000001FE 668B46E4                	mov	eax, [bp-28]
  1069 00000202 6669C0A0000000          	imul	eax, eax, 160
  1070 00000209 6689C1                  	mov	ecx, eax
  1071 0000020C 6658                    	pop	eax
  1072 0000020E 6601C8                  	add	eax, ecx
  1073 00000211 6650                    	push	eax
  1074 00000213 668B46E0                	mov	eax, [bp-32]
  1075 00000217 666BC002                	imul	eax, eax, 2
  1076 0000021B 6689C1                  	mov	ecx, eax
  1077 0000021E 6658                    	pop	eax
  1078 00000220 6601C8                  	add	eax, ecx
  1079 00000223 6689C3                  	mov	ebx, eax
  1080 00000226 8A46D8                  	mov	al, [bp-40]
  1081 00000229 660FBEC0                	movsx	eax, al
  1082 0000022D 6689DE                  	mov	esi, ebx
  1083 00000230 66C1CE04                	ror	esi, 4
  1084 00000234 8EDE                    	mov	ds, si
  1085 00000236 66C1EE1C                	shr	esi, 28
  1086 0000023A 8804                    	mov	[si], al
  1087 0000023C 660FB6C0                	movzx	eax, al
  1088                                  ; RPN'ized expression: "ptrPant t -> *u f + *u c + *u &u atr -> *u atributo = "
  1089                                  ; Expanded expression: "(@-48) *(4) 0 + (@-28) *(4) 160 * + (@-32) *(4) 2 * + 1 + (@-44) *(1) =(1) "
  1090                                  ; Fused expression:    "+ *(@-48) 0 push-ax * *(@-28) 160 + *sp ax push-ax * *(@-32) 2 + *sp ax + ax 1 =(153) *ax *(@-44) "
  1091 00000240 668B46D0                	mov	eax, [bp-48]
  1092 00000244 6650                    	push	eax
  1093 00000246 668B46E4                	mov	eax, [bp-28]
  1094 0000024A 6669C0A0000000          	imul	eax, eax, 160
  1095 00000251 6689C1                  	mov	ecx, eax
  1096 00000254 6658                    	pop	eax
  1097 00000256 6601C8                  	add	eax, ecx
  1098 00000259 6650                    	push	eax
  1099 0000025B 668B46E0                	mov	eax, [bp-32]
  1100 0000025F 666BC002                	imul	eax, eax, 2
  1101 00000263 6689C1                  	mov	ecx, eax
  1102 00000266 6658                    	pop	eax
  1103 00000268 6601C8                  	add	eax, ecx
  1104 0000026B 6640                    	inc	eax
  1105 0000026D 6689C3                  	mov	ebx, eax
  1106 00000270 8A46D4                  	mov	al, [bp-44]
  1107 00000273 660FB6C0                	movzx	eax, al
  1108 00000277 6689DE                  	mov	esi, ebx
  1109 0000027A 66C1CE04                	ror	esi, 4
  1110 0000027E 8EDE                    	mov	ds, si
  1111 00000280 66C1EE1C                	shr	esi, 28
  1112 00000284 8804                    	mov	[si], al
  1113 00000286 660FB6C0                	movzx	eax, al
  1114                                  ; RPN'ized expression: "kant k = "
  1115                                  ; Expanded expression: "(@-12) (@-8) *(4) =(4) "
  1116                                  ; Fused expression:    "=(204) *(@-12) *(@-8) "
  1117 0000028A 668B46F8                	mov	eax, [bp-8]
  1118 0000028E 668946F4                	mov	[bp-12], eax
  1119                                  ; RPN'ized expression: "k k incremento + = "
  1120                                  ; Expanded expression: "(@-8) (@-8) *(4) (@-16) *(4) + =(4) "
  1121                                  ; Fused expression:    "+ *(@-8) *(@-16) =(204) *(@-8) ax "
  1122 00000292 668B46F8                	mov	eax, [bp-8]
  1123 00000296 660346F0                	add	eax, [bp-16]
  1124 0000029A 668946F8                	mov	[bp-8], eax
  1125                                  ; if
  1126                                  ; RPN'ized expression: "k alto >= "
  1127                                  ; Expanded expression: "(@-8) *(4) alto *(4) >= "
  1128                                  ; Fused expression:    "alto >= *(@-8) *ax IF! "
  1129                                  section .relod
  1130 0000001C [A0020000]              	dd	L18
  1131                                  section .text
  1132 0000029E 66B8                    	db	0x66, 0xB8
  1133                                  L18:
  1134 000002A0 [14000000]              	dd	_alto
  1135 000002A4 6689C3                  	mov	ebx, eax
  1136 000002A7 6689DE                  	mov	esi, ebx
  1137 000002AA 66C1CE04                	ror	esi, 4
  1138 000002AE 8EDE                    	mov	ds, si
  1139 000002B0 66C1EE1C                	shr	esi, 28
  1140 000002B4 668B0C                  	mov	ecx, [si]
  1141 000002B7 668B46F8                	mov	eax, [bp-8]
  1142 000002BB 6639C8                  	cmp	eax, ecx
  1143 000002BE 7C29                    	jl	L16
  1144                                  ; {
  1145                                  ; RPN'ized expression: "incremento 1 -u = "
  1146                                  ; Expanded expression: "(@-16) -1 =(4) "
  1147                                  ; Fused expression:    "=(204) *(@-16) -1 "
  1148 000002C0 66B8FFFFFFFF            	mov	eax, -1
  1149 000002C6 668946F0                	mov	[bp-16], eax
  1150                                  ; RPN'ized expression: "k alto 1 - = "
  1151                                  ; Expanded expression: "(@-8) alto *(4) 1 - =(4) "
  1152                                  ; Fused expression:    "alto - *ax 1 =(204) *(@-8) ax "
  1153                                  section .relod
  1154 00000020 [CC020000]              	dd	L19
  1155                                  section .text
  1156 000002CA 66B8                    	db	0x66, 0xB8
  1157                                  L19:
  1158 000002CC [14000000]              	dd	_alto
  1159 000002D0 6689C3                  	mov	ebx, eax
  1160 000002D3 6689DE                  	mov	esi, ebx
  1161 000002D6 66C1CE04                	ror	esi, 4
  1162 000002DA 8EDE                    	mov	ds, si
  1163 000002DC 66C1EE1C                	shr	esi, 28
  1164 000002E0 668B04                  	mov	eax, [si]
  1165 000002E3 6648                    	dec	eax
  1166 000002E5 668946F8                	mov	[bp-8], eax
  1167                                  ; }
  1168                                  L16:
  1169                                  ; if
  1170                                  ; RPN'ized expression: "k 1 -u <= "
  1171                                  ; Expanded expression: "(@-8) *(4) -1 <= "
  1172                                  ; Fused expression:    "<= *(@-8) -1 IF! "
  1173 000002E9 668B46F8                	mov	eax, [bp-8]
  1174 000002ED 6683F8FF                	cmp	eax, -1
  1175 000002F1 7F14                    	jg	L20
  1176                                  ; {
  1177                                  ; RPN'ized expression: "incremento 1 = "
  1178                                  ; Expanded expression: "(@-16) 1 =(4) "
  1179                                  ; Fused expression:    "=(204) *(@-16) 1 "
  1180 000002F3 66B801000000            	mov	eax, 1
  1181 000002F9 668946F0                	mov	[bp-16], eax
  1182                                  ; RPN'ized expression: "k 0 = "
  1183                                  ; Expanded expression: "(@-8) 0 =(4) "
  1184                                  ; Fused expression:    "=(204) *(@-8) 0 "
  1185 000002FD 66B800000000            	mov	eax, 0
  1186 00000303 668946F8                	mov	[bp-8], eax
  1187                                  ; }
  1188                                  L20:
  1189                                  ; }
  1190                                  L11:
  1191                                  ; RPN'ized expression: "pasos ++p "
  1192                                  ; Expanded expression: "(@-24) ++p(4) "
  1193                                  ; Fused expression:    "++p(4) *(@-24) "
  1194 00000307 668B46E8                	mov	eax, [bp-24]
  1195 0000030B 66FF46E8                	inc	dword [bp-24]
  1196                                  ; RPN'ized expression: "( thread_yield ) "
  1197                                  ; Expanded expression: " thread_yield ()0 "
  1198                                  ; Fused expression:    "( thread_yield )0 "
  1199 0000030F 9A                      	db	0x9A
  1200                                  section .relot
  1201 00000000 [10030000]              	dd	L22
  1202                                  section .text
  1203                                  L22:
  1204 00000310 [00000000]              	dd	_thread_yield
  1205                                  ; }
  1206 00000314 E9B3FD                  	jmp	L8
  1207                                  L9:
  1208                                  ; loc     <something> : * void
  1209                                  ; RPN'ized expression: "( c (something23) thread_exit ) "
  1210                                  ; Expanded expression: " (@-32) *(4)  thread_exit ()4 "
  1211                                  ; Fused expression:    "( *(4) (@-32) , thread_exit )4 "
  1212 00000317 66FF76E0                	push	dword [bp-32]
  1213 0000031B 9A                      	db	0x9A
  1214                                  section .relot
  1215 00000004 [1C030000]              	dd	L24
  1216                                  section .text
  1217                                  L24:
  1218 0000031C [00000000]              	dd	_thread_exit
  1219 00000320 83ECFC                  	sub	sp, -4
  1220                                  L1:
  1221 00000323 66                      	db	0x66
  1222 00000324 C9                      	leave
  1223 00000325 CB                      	retf
  1224                                  L25:
  1225                                  
  1226                                  section .fxnsz noalloc
  1227 00000000 26030000                	dd	L25 - _funcion
  1228                                  
  1229                                  ; glb funcioncilla : (
  1230                                  ; prm     arg : * void
  1231                                  ;     ) void
  1232                                  section .text
  1233                                  _funcioncilla:
  1234 00000326 6655                    	push	ebp
  1235 00000328 660FB7EC                	movzx	ebp, sp
  1236 0000032C 83EC04                  	 sub	sp,          4
  1237                                  ; loc     arg : (@8): * void
  1238                                  ; loc     i : (@-4): int
  1239                                  ; loc     <something> : int
  1240                                  ; RPN'ized expression: "i arg (something28) = "
  1241                                  ; Expanded expression: "(@-4) (@8) *(4) =(4) "
  1242                                  ; Fused expression:    "=(204) *(@-4) *(@8) "
  1243 0000032F 668B4608                	mov	eax, [bp+8]
  1244 00000333 668946FC                	mov	[bp-4], eax
  1245                                  ; while
  1246                                  ; RPN'ized expression: "fin 0 == "
  1247                                  ; Expanded expression: "fin *(4) 0 == "
  1248                                  L29:
  1249                                  ; Fused expression:    "fin == *ax 0 IF! "
  1250                                  section .relod
  1251 00000024 [39030000]              	dd	L31
  1252                                  section .text
  1253 00000337 66B8                    	db	0x66, 0xB8
  1254                                  L31:
  1255 00000339 [00000000]              	dd	_fin
  1256 0000033D 6689C3                  	mov	ebx, eax
  1257 00000340 6689DE                  	mov	esi, ebx
  1258 00000343 66C1CE04                	ror	esi, 4
  1259 00000347 8EDE                    	mov	ds, si
  1260 00000349 66C1EE1C                	shr	esi, 28
  1261 0000034D 668B04                  	mov	eax, [si]
  1262 00000350 6683F800                	cmp	eax, 0
  1263 00000354 7531                    	jne	L30
  1264                                  ; {
  1265                                  ; loc         <something> : * unsigned
  1266                                  ; RPN'ized expression: "753664 (something32) i + *u ++p "
  1267                                  ; Expanded expression: "753664 (@-4) *(4) 4 * + ++p(4) "
  1268                                  ; Fused expression:    "* *(@-4) 4 + 753664 ax ++p(4) *ax "
  1269 00000356 668B46FC                	mov	eax, [bp-4]
  1270 0000035A 666BC004                	imul	eax, eax, 4
  1271 0000035E 6689C1                  	mov	ecx, eax
  1272 00000361 66B800800B00            	mov	eax, 753664
  1273 00000367 6601C8                  	add	eax, ecx
  1274 0000036A 6689C3                  	mov	ebx, eax
  1275 0000036D 6689DE                  	mov	esi, ebx
  1276 00000370 66C1CE04                	ror	esi, 4
  1277 00000374 8EDE                    	mov	ds, si
  1278 00000376 66C1EE1C                	shr	esi, 28
  1279 0000037A 668B04                  	mov	eax, [si]
  1280 0000037D 66FF04                  	inc	dword [si]
  1281                                  ; RPN'ized expression: "( thread_yield ) "
  1282                                  ; Expanded expression: " thread_yield ()0 "
  1283                                  ; Fused expression:    "( thread_yield )0 "
  1284 00000380 9A                      	db	0x9A
  1285                                  section .relot
  1286 00000008 [81030000]              	dd	L33
  1287                                  section .text
  1288                                  L33:
  1289 00000381 [00000000]              	dd	_thread_yield
  1290                                  ; }
  1291 00000385 EBB0                    	jmp	L29
  1292                                  L30:
  1293                                  L26:
  1294 00000387 66                      	db	0x66
  1295 00000388 C9                      	leave
  1296 00000389 CB                      	retf
  1297                                  L34:
  1298                                  
  1299                                  section .fxnsz
  1300 00000004 64000000                	dd	L34 - _funcioncilla
  1301                                  
  1302                                  ; glb retardarTics : (
  1303                                  ; prm     tics : unsigned
  1304                                  ;     ) void
  1305                                  section .text
  1306                                  _retardarTics:
  1307 0000038A 6655                    	push	ebp
  1308 0000038C 660FB7EC                	movzx	ebp, sp
  1309 00000390 83EC04                  	 sub	sp,          4
  1310                                  ; loc     tics : (@8): unsigned
  1311                                  ; loc     tics_0 : (@-4): unsigned
  1312                                  ; RPN'ized expression: "tics_0 ptrBiosArea BIOS_timer -> *u = "
  1313                                  ; Expanded expression: "(@-4) ptrBiosArea *(4) 1132 + *(4) =(4) "
  1314                                  ; Fused expression:    "ptrBiosArea + *ax 1132 =(204) *(@-4) *ax "
  1315                                  section .relod
  1316 00000028 [95030000]              	dd	L37
  1317                                  section .text
  1318 00000393 66B8                    	db	0x66, 0xB8
  1319                                  L37:
  1320 00000395 [00000000]              	dd	_ptrBiosArea
  1321 00000399 6689C3                  	mov	ebx, eax
  1322 0000039C 6689DE                  	mov	esi, ebx
  1323 0000039F 66C1CE04                	ror	esi, 4
  1324 000003A3 8EDE                    	mov	ds, si
  1325 000003A5 66C1EE1C                	shr	esi, 28
  1326 000003A9 668B04                  	mov	eax, [si]
  1327 000003AC 66056C040000            	add	eax, 1132
  1328 000003B2 6689C3                  	mov	ebx, eax
  1329 000003B5 6689DE                  	mov	esi, ebx
  1330 000003B8 66C1CE04                	ror	esi, 4
  1331 000003BC 8EDE                    	mov	ds, si
  1332 000003BE 66C1EE1C                	shr	esi, 28
  1333 000003C2 668B04                  	mov	eax, [si]
  1334 000003C5 668946FC                	mov	[bp-4], eax
  1335                                  ; while
  1336                                  ; RPN'ized expression: "ptrBiosArea BIOS_timer -> *u tics_0 tics + <= "
  1337                                  ; Expanded expression: "ptrBiosArea *(4) 1132 + *(4) (@-4) *(4) (@8) *(4) + <=u "
  1338                                  L38:
  1339                                  ; Fused expression:    "ptrBiosArea + *ax 1132 push-ax + *(@-4) *(@8) <=u **sp ax IF! "
  1340                                  section .relod
  1341 0000002C [CB030000]              	dd	L40
  1342                                  section .text
  1343 000003C9 66B8                    	db	0x66, 0xB8
  1344                                  L40:
  1345 000003CB [00000000]              	dd	_ptrBiosArea
  1346 000003CF 6689C3                  	mov	ebx, eax
  1347 000003D2 6689DE                  	mov	esi, ebx
  1348 000003D5 66C1CE04                	ror	esi, 4
  1349 000003D9 8EDE                    	mov	ds, si
  1350 000003DB 66C1EE1C                	shr	esi, 28
  1351 000003DF 668B04                  	mov	eax, [si]
  1352 000003E2 66056C040000            	add	eax, 1132
  1353 000003E8 6650                    	push	eax
  1354 000003EA 668B46FC                	mov	eax, [bp-4]
  1355 000003EE 66034608                	add	eax, [bp+8]
  1356 000003F2 6689C1                  	mov	ecx, eax
  1357 000003F5 665B                    	pop	ebx
  1358 000003F7 6689DE                  	mov	esi, ebx
  1359 000003FA 66C1CE04                	ror	esi, 4
  1360 000003FE 8EDE                    	mov	ds, si
  1361 00000400 66C1EE1C                	shr	esi, 28
  1362 00000404 668B04                  	mov	eax, [si]
  1363 00000407 6639C8                  	cmp	eax, ecx
  1364 0000040A 7702                    	ja	L39
  1365 0000040C EBBB                    	jmp	L38
  1366                                  L39:
  1367                                  L35:
  1368 0000040E 66                      	db	0x66
  1369 0000040F C9                      	leave
  1370 00000410 CB                      	retf
  1371                                  L41:
  1372                                  
  1373                                  section .fxnsz
  1374 00000008 87000000                	dd	L41 - _retardarTics
  1375                                  
  1376                                  ; glb demo_5 : (
  1377                                  ; prm     frase : * char
  1378                                  ; prm     f1 : int
  1379                                  ; prm     c1 : int
  1380                                  ; prm     f2 : int
  1381                                  ; prm     c2 : int
  1382                                  ;     ) void
  1383                                  section .text
  1384                                  	global	_demo_5
  1385                                  _demo_5:
  1386 00000411 6655                    	push	ebp
  1387 00000413 660FB7EC                	movzx	ebp, sp
  1388 00000417 83EC1C                  	 sub	sp,         28
  1389                                  ; loc     frase : (@8): * char
  1390                                  ; loc     f1 : (@12): int
  1391                                  ; loc     c1 : (@16): int
  1392                                  ; loc     f2 : (@20): int
  1393                                  ; loc     c2 : (@24): int
  1394                                  
  1395                                  section .data
  1396                                  	align 4
  1397                                  L44:
  1398                                  ; RPN'ized expression: "512 "
  1399                                  ; Expanded expression: "512 "
  1400                                  ; Expression value: 512
  1401 00000004 0002                    	dw	512
  1402                                  ; RPN'ized expression: "0 "
  1403                                  ; Expanded expression: "0 "
  1404                                  ; Expression value: 0
  1405 00000006 0000                    	dw	0
  1406                                  
  1407                                  section .text
  1408                                  ; loc     attribs : (@-4): struct <something>
  1409                                  ; =
  1410                                  ; Fused expression:    "( (@-4) , L44 , 4u , L45 )12 "
  1411 0000041A 6631C0                  	xor	eax, eax
  1412 0000041D 8CD0                    	mov	ax, ss
  1413 0000041F 66C1E004                	shl	eax, 4
  1414 00000423 66678D4405FC            	lea	eax, [ebp+eax-4]
  1415 00000429 6650                    	push	eax
  1416                                  section .relod
  1417 00000030 [2D040000]              	dd	L46
  1418                                  section .text
  1419 0000042B 6668                    	db	0x66, 0x68
  1420                                  L46:
  1421 0000042D [04000000]              	dd	L44
  1422 00000431 666A04                  	push	dword 4
  1423 00000434 9A                      	db	0x9A
  1424                                  section .relot
  1425 0000000C [35040000]              	dd	L47
  1426                                  section .text
  1427                                  L47:
  1428 00000435 [6F0B0000]              	dd	L45
  1429 00000439 83ECF4                  	sub	sp, -12
  1430                                  ; loc     tid : (@-8): int
  1431                                  ; loc     i : (@-12): int
  1432                                  ; loc     j : (@-16): int
  1433                                  ; loc     cont : (@-20): int
  1434                                  ; RPN'ized expression: "f_1 f1 = "
  1435                                  ; Expanded expression: "f_1 (@12) *(4) =(4) "
  1436                                  ; Fused expression:    "f_1 =(204) *ax *(@12) "
  1437                                  section .relod
  1438 00000034 [3E040000]              	dd	L48
  1439                                  section .text
  1440 0000043C 66B8                    	db	0x66, 0xB8
  1441                                  L48:
  1442 0000043E [04000000]              	dd	_f_1
  1443 00000442 6689C3                  	mov	ebx, eax
  1444 00000445 668B460C                	mov	eax, [bp+12]
  1445 00000449 6689DE                  	mov	esi, ebx
  1446 0000044C 66C1CE04                	ror	esi, 4
  1447 00000450 8EDE                    	mov	ds, si
  1448 00000452 66C1EE1C                	shr	esi, 28
  1449 00000456 668904                  	mov	[si], eax
  1450                                  ; RPN'ized expression: "c_1 c1 = "
  1451                                  ; Expanded expression: "c_1 (@16) *(4) =(4) "
  1452                                  ; Fused expression:    "c_1 =(204) *ax *(@16) "
  1453                                  section .relod
  1454 00000038 [5B040000]              	dd	L49
  1455                                  section .text
  1456 00000459 66B8                    	db	0x66, 0xB8
  1457                                  L49:
  1458 0000045B [08000000]              	dd	_c_1
  1459 0000045F 6689C3                  	mov	ebx, eax
  1460 00000462 668B4610                	mov	eax, [bp+16]
  1461 00000466 6689DE                  	mov	esi, ebx
  1462 00000469 66C1CE04                	ror	esi, 4
  1463 0000046D 8EDE                    	mov	ds, si
  1464 0000046F 66C1EE1C                	shr	esi, 28
  1465 00000473 668904                  	mov	[si], eax
  1466                                  ; RPN'ized expression: "f_2 f2 = "
  1467                                  ; Expanded expression: "f_2 (@20) *(4) =(4) "
  1468                                  ; Fused expression:    "f_2 =(204) *ax *(@20) "
  1469                                  section .relod
  1470 0000003C [78040000]              	dd	L50
  1471                                  section .text
  1472 00000476 66B8                    	db	0x66, 0xB8
  1473                                  L50:
  1474 00000478 [0C000000]              	dd	_f_2
  1475 0000047C 6689C3                  	mov	ebx, eax
  1476 0000047F 668B4614                	mov	eax, [bp+20]
  1477 00000483 6689DE                  	mov	esi, ebx
  1478 00000486 66C1CE04                	ror	esi, 4
  1479 0000048A 8EDE                    	mov	ds, si
  1480 0000048C 66C1EE1C                	shr	esi, 28
  1481 00000490 668904                  	mov	[si], eax
  1482                                  ; RPN'ized expression: "c_2 c2 = "
  1483                                  ; Expanded expression: "c_2 (@24) *(4) =(4) "
  1484                                  ; Fused expression:    "c_2 =(204) *ax *(@24) "
  1485                                  section .relod
  1486 00000040 [95040000]              	dd	L51
  1487                                  section .text
  1488 00000493 66B8                    	db	0x66, 0xB8
  1489                                  L51:
  1490 00000495 [10000000]              	dd	_c_2
  1491 00000499 6689C3                  	mov	ebx, eax
  1492 0000049C 668B4618                	mov	eax, [bp+24]
  1493 000004A0 6689DE                  	mov	esi, ebx
  1494 000004A3 66C1CE04                	ror	esi, 4
  1495 000004A7 8EDE                    	mov	ds, si
  1496 000004A9 66C1EE1C                	shr	esi, 28
  1497 000004AD 668904                  	mov	[si], eax
  1498                                  ; RPN'ized expression: "alto f2 f1 - 1 + = "
  1499                                  ; Expanded expression: "alto (@20) *(4) (@12) *(4) - 1 + =(4) "
  1500                                  ; Fused expression:    "alto push-ax - *(@20) *(@12) + ax 1 =(204) **sp ax "
  1501                                  section .relod
  1502 00000044 [B2040000]              	dd	L52
  1503                                  section .text
  1504 000004B0 66B8                    	db	0x66, 0xB8
  1505                                  L52:
  1506 000004B2 [14000000]              	dd	_alto
  1507 000004B6 6650                    	push	eax
  1508 000004B8 668B4614                	mov	eax, [bp+20]
  1509 000004BC 662B460C                	sub	eax, [bp+12]
  1510 000004C0 6640                    	inc	eax
  1511 000004C2 665B                    	pop	ebx
  1512 000004C4 6689DE                  	mov	esi, ebx
  1513 000004C7 66C1CE04                	ror	esi, 4
  1514 000004CB 8EDE                    	mov	ds, si
  1515 000004CD 66C1EE1C                	shr	esi, 28
  1516 000004D1 668904                  	mov	[si], eax
  1517                                  ; RPN'ized expression: "ancho c2 c1 - 1 + = "
  1518                                  ; Expanded expression: "ancho (@24) *(4) (@16) *(4) - 1 + =(4) "
  1519                                  ; Fused expression:    "ancho push-ax - *(@24) *(@16) + ax 1 =(204) **sp ax "
  1520                                  section .relod
  1521 00000048 [D6040000]              	dd	L53
  1522                                  section .text
  1523 000004D4 66B8                    	db	0x66, 0xB8
  1524                                  L53:
  1525 000004D6 [18000000]              	dd	_ancho
  1526 000004DA 6650                    	push	eax
  1527 000004DC 668B4618                	mov	eax, [bp+24]
  1528 000004E0 662B4610                	sub	eax, [bp+16]
  1529 000004E4 6640                    	inc	eax
  1530 000004E6 665B                    	pop	ebx
  1531 000004E8 6689DE                  	mov	esi, ebx
  1532 000004EB 66C1CE04                	ror	esi, 4
  1533 000004EF 8EDE                    	mov	ds, si
  1534 000004F1 66C1EE1C                	shr	esi, 28
  1535 000004F5 668904                  	mov	[si], eax
  1536                                  ; loc     ptrPant : (@-24): * union <something>
  1537                                  ; loc     <something> : * union <something>
  1538                                  ; RPN'ized expression: "ptrPant 753664 (something54) = "
  1539                                  ; Expanded expression: "(@-24) 753664 =(4) "
  1540                                  ; Fused expression:    "=(204) *(@-24) 753664 "
  1541 000004F8 66B800800B00            	mov	eax, 753664
  1542 000004FE 668946E8                	mov	[bp-24], eax
  1543 00000502 FB                      sti
  1544                                  ; RPN'ized expression: "( 12 printCarVideo ) "
  1545                                  ; Expanded expression: " 12  printCarVideo ()4 "
  1546                                  ; Fused expression:    "( 12 , printCarVideo )4 "
  1547 00000503 666A0C                  	push	dword 12
  1548 00000506 9A                      	db	0x9A
  1549                                  section .relot
  1550 00000010 [07050000]              	dd	L55
  1551                                  section .text
  1552                                  L55:
  1553 00000507 [00000000]              	dd	_printCarVideo
  1554 0000050B 83ECFC                  	sub	sp, -4
  1555                                  ; if
  1556                                  ; RPN'ized expression: "( frase strlen ) 0 > "
  1557                                  ; Expanded expression: " (@8) *(4)  strlen ()4 0 >u "
  1558                                  ; Fused expression:    "( *(4) (@8) , strlen )4 >u ax 0 IF! "
  1559 0000050E 66FF7608                	push	dword [bp+8]
  1560 00000512 9A                      	db	0x9A
  1561                                  section .relot
  1562 00000014 [13050000]              	dd	L58
  1563                                  section .text
  1564                                  L58:
  1565 00000513 [00000000]              	dd	_strlen
  1566 00000517 83ECFC                  	sub	sp, -4
  1567 0000051A 6683F800                	cmp	eax, 0
  1568 0000051E 0F868000                	jbe	L56
  1569                                  ; for
  1570                                  ; RPN'ized expression: "i 0 = "
  1571                                  ; Expanded expression: "(@-12) 0 =(4) "
  1572                                  ; Fused expression:    "=(204) *(@-12) 0 "
  1573 00000522 66B800000000            	mov	eax, 0
  1574 00000528 668946F4                	mov	[bp-12], eax
  1575                                  L59:
  1576                                  ; RPN'ized expression: "i 80 < "
  1577                                  ; Expanded expression: "(@-12) *(4) 80 < "
  1578                                  ; Fused expression:    "< *(@-12) 80 IF! "
  1579 0000052C 668B46F4                	mov	eax, [bp-12]
  1580 00000530 6683F850                	cmp	eax, 80
  1581 00000534 7D6A                    	jge	L62
  1582                                  ; RPN'ized expression: "i ++p "
  1583                                  ; Expanded expression: "(@-12) ++p(4) "
  1584                                  ; RPN'ized expression: "renglon i + *u frase i ( frase strlen ) % + *u = "
  1585                                  ; Expanded expression: "renglon (@-12) *(4) + (@8) *(4) (@-12) *(4)  (@8) *(4)  strlen ()4 %u + *(-1) =(-1) "
  1586                                  ; Fused expression:    "renglon + ax *(@-12) push-ax ( *(4) (@8) , strlen )4 %u *(@-12) ax + *(@8) ax =(119) **sp *ax "
  1587                                  section .relod
  1588 0000004C [38050000]              	dd	L63
  1589                                  section .text
  1590 00000536 66B8                    	db	0x66, 0xB8
  1591                                  L63:
  1592 00000538 [1C000000]              	dd	_renglon
  1593 0000053C 660346F4                	add	eax, [bp-12]
  1594 00000540 6650                    	push	eax
  1595 00000542 66FF7608                	push	dword [bp+8]
  1596 00000546 9A                      	db	0x9A
  1597                                  section .relot
  1598 00000018 [47050000]              	dd	L64
  1599                                  section .text
  1600                                  L64:
  1601 00000547 [00000000]              	dd	_strlen
  1602 0000054B 83ECFC                  	sub	sp, -4
  1603 0000054E 6689C1                  	mov	ecx, eax
  1604 00000551 668B46F4                	mov	eax, [bp-12]
  1605 00000555 66BA00000000            	mov	edx, 0
  1606 0000055B 66F7F1                  	div	ecx
  1607 0000055E 6689D0                  	mov	eax, edx
  1608 00000561 6689C1                  	mov	ecx, eax
  1609 00000564 668B4608                	mov	eax, [bp+8]
  1610 00000568 6601C8                  	add	eax, ecx
  1611 0000056B 6689C3                  	mov	ebx, eax
  1612 0000056E 6689DE                  	mov	esi, ebx
  1613 00000571 66C1CE04                	ror	esi, 4
  1614 00000575 8EDE                    	mov	ds, si
  1615 00000577 66C1EE1C                	shr	esi, 28
  1616 0000057B 8A04                    	mov	al, [si]
  1617 0000057D 660FBEC0                	movsx	eax, al
  1618 00000581 665B                    	pop	ebx
  1619 00000583 6689DE                  	mov	esi, ebx
  1620 00000586 66C1CE04                	ror	esi, 4
  1621 0000058A 8EDE                    	mov	ds, si
  1622 0000058C 66C1EE1C                	shr	esi, 28
  1623 00000590 8804                    	mov	[si], al
  1624 00000592 660FBEC0                	movsx	eax, al
  1625                                  L60:
  1626                                  ; Fused expression:    "++p(4) *(@-12) "
  1627 00000596 668B46F4                	mov	eax, [bp-12]
  1628 0000059A 66FF46F4                	inc	dword [bp-12]
  1629 0000059E EB8C                    	jmp	L59
  1630                                  L62:
  1631 000005A0 EB44                    	jmp	L57
  1632                                  L56:
  1633                                  ; else
  1634                                  ; for
  1635                                  ; RPN'ized expression: "i 0 = "
  1636                                  ; Expanded expression: "(@-12) 0 =(4) "
  1637                                  ; Fused expression:    "=(204) *(@-12) 0 "
  1638 000005A2 66B800000000            	mov	eax, 0
  1639 000005A8 668946F4                	mov	[bp-12], eax
  1640                                  L65:
  1641                                  ; RPN'ized expression: "i 80 < "
  1642                                  ; Expanded expression: "(@-12) *(4) 80 < "
  1643                                  ; Fused expression:    "< *(@-12) 80 IF! "
  1644 000005AC 668B46F4                	mov	eax, [bp-12]
  1645 000005B0 6683F850                	cmp	eax, 80
  1646 000005B4 7D30                    	jge	L68
  1647                                  ; RPN'ized expression: "i ++p "
  1648                                  ; Expanded expression: "(@-12) ++p(4) "
  1649                                  ; RPN'ized expression: "renglon i + *u 111 = "
  1650                                  ; Expanded expression: "renglon (@-12) *(4) + 111 =(-1) "
  1651                                  ; Fused expression:    "renglon + ax *(@-12) =(124) *ax 111 "
  1652                                  section .relod
  1653 00000050 [B8050000]              	dd	L69
  1654                                  section .text
  1655 000005B6 66B8                    	db	0x66, 0xB8
  1656                                  L69:
  1657 000005B8 [1C000000]              	dd	_renglon
  1658 000005BC 660346F4                	add	eax, [bp-12]
  1659 000005C0 6689C3                  	mov	ebx, eax
  1660 000005C3 66B86F000000            	mov	eax, 111
  1661 000005C9 6689DE                  	mov	esi, ebx
  1662 000005CC 66C1CE04                	ror	esi, 4
  1663 000005D0 8EDE                    	mov	ds, si
  1664 000005D2 66C1EE1C                	shr	esi, 28
  1665 000005D6 8804                    	mov	[si], al
  1666 000005D8 660FBEC0                	movsx	eax, al
  1667                                  L66:
  1668                                  ; Fused expression:    "++p(4) *(@-12) "
  1669 000005DC 668B46F4                	mov	eax, [bp-12]
  1670 000005E0 66FF46F4                	inc	dword [bp-12]
  1671 000005E4 EBC6                    	jmp	L65
  1672                                  L68:
  1673                                  L57:
  1674                                  ; for
  1675                                  ; RPN'ized expression: "i 20 = "
  1676                                  ; Expanded expression: "(@-12) 20 =(4) "
  1677                                  ; Fused expression:    "=(204) *(@-12) 20 "
  1678 000005E6 66B814000000            	mov	eax, 20
  1679 000005EC 668946F4                	mov	[bp-12], eax
  1680                                  L70:
  1681                                  ; RPN'ized expression: "i 60 < "
  1682                                  ; Expanded expression: "(@-12) *(4) 60 < "
  1683                                  ; Fused expression:    "< *(@-12) 60 IF! "
  1684 000005F0 668B46F4                	mov	eax, [bp-12]
  1685 000005F4 6683F83C                	cmp	eax, 60
  1686 000005F8 7D48                    	jge	L73
  1687                                  ; RPN'ized expression: "i ++p "
  1688                                  ; Expanded expression: "(@-12) ++p(4) "
  1689                                  ; {
  1690                                  ; loc         <something> : char
  1691                                  ; RPN'ized expression: "( i , 21 , 20 , 21 , 7 , 254 (something74) , 50 , ptrPant pantallazo ) "
  1692                                  ; Expanded expression: " (@-12) *(4)  21  20  21  7  -2  50  (@-24) *(4)  pantallazo ()32 "
  1693                                  ; Fused expression:    "( *(4) (@-12) , 21 , 20 , 21 , 7 , -2 , 50 , *(4) (@-24) , pantallazo )32 "
  1694 000005FA 66FF76F4                	push	dword [bp-12]
  1695 000005FE 666A15                  	push	dword 21
  1696 00000601 666A14                  	push	dword 20
  1697 00000604 666A15                  	push	dword 21
  1698 00000607 666A07                  	push	dword 7
  1699 0000060A 666AFE                  	push	dword -2
  1700 0000060D 666A32                  	push	dword 50
  1701 00000610 66FF76E8                	push	dword [bp-24]
  1702 00000614 9A                      	db	0x9A
  1703                                  section .relot
  1704 0000001C [15060000]              	dd	L75
  1705                                  section .text
  1706                                  L75:
  1707 00000615 [00000000]              	dd	_pantallazo
  1708 00000619 83ECE0                  	sub	sp, -32
  1709                                  ; RPN'ized expression: "( 0 retardarTics ) "
  1710                                  ; Expanded expression: " 0  retardarTics ()4 "
  1711                                  ; Fused expression:    "( 0 , retardarTics )4 "
  1712 0000061C 666A00                  	push	dword 0
  1713 0000061F 9A                      	db	0x9A
  1714                                  section .relot
  1715 00000020 [20060000]              	dd	L76
  1716                                  section .text
  1717                                  L76:
  1718 00000620 [8A030000]              	dd	_retardarTics
  1719 00000624 83ECFC                  	sub	sp, -4
  1720                                  ; if
  1721                                  ; loc         <something> : char
  1722                                  ; loc         <something> : char
  1723                                  ; RPN'ized expression: "( leerTeclaListaBDA ) (something79) 27 (something80) == "
  1724                                  ; Expanded expression: " leerTeclaListaBDA ()0 signed char 27 == "
  1725                                  ; Fused expression:    "( leerTeclaListaBDA )0 signed char == ax 27 IF! "
  1726 00000627 9A                      	db	0x9A
  1727                                  section .relot
  1728 00000024 [28060000]              	dd	L81
  1729                                  section .text
  1730                                  L81:
  1731 00000628 [00000000]              	dd	_leerTeclaListaBDA
  1732 0000062C 660FBEC0                	movsx	eax, al
  1733 00000630 6683F81B                	cmp	eax, 27
  1734 00000634 7502                    	jne	L77
  1735                                  ; break
  1736 00000636 EB0A                    	jmp	L73
  1737                                  L77:
  1738                                  ; }
  1739                                  L71:
  1740                                  ; Fused expression:    "++p(4) *(@-12) "
  1741 00000638 668B46F4                	mov	eax, [bp-12]
  1742 0000063C 66FF46F4                	inc	dword [bp-12]
  1743 00000640 EBAE                    	jmp	L70
  1744                                  L73:
  1745                                  ; RPN'ized expression: "( 12 printCarVideo ) "
  1746                                  ; Expanded expression: " 12  printCarVideo ()4 "
  1747                                  ; Fused expression:    "( 12 , printCarVideo )4 "
  1748 00000642 666A0C                  	push	dword 12
  1749 00000645 9A                      	db	0x9A
  1750                                  section .relot
  1751 00000028 [46060000]              	dd	L82
  1752                                  section .text
  1753                                  L82:
  1754 00000646 [00000000]              	dd	_printCarVideo
  1755 0000064A 83ECFC                  	sub	sp, -4
  1756                                  ; RPN'ized expression: "numThreads 0 = "
  1757                                  ; Expanded expression: "numThreads 0 =(4) "
  1758                                  ; Fused expression:    "numThreads =(204) *ax 0 "
  1759                                  section .relod
  1760 00000054 [4F060000]              	dd	L83
  1761                                  section .text
  1762 0000064D 66B8                    	db	0x66, 0xB8
  1763                                  L83:
  1764 0000064F [00000000]              	dd	_numThreads
  1765 00000653 6689C3                  	mov	ebx, eax
  1766 00000656 66B800000000            	mov	eax, 0
  1767 0000065C 6689DE                  	mov	esi, ebx
  1768 0000065F 66C1CE04                	ror	esi, 4
  1769 00000663 8EDE                    	mov	ds, si
  1770 00000665 66C1EE1C                	shr	esi, 28
  1771 00000669 668904                  	mov	[si], eax
  1772                                  ; for
  1773                                  ; loc     i : (@-28): int
  1774                                  ; RPN'ized expression: "i 0 = "
  1775                                  ; Expanded expression: "(@-28) 0 =(4) "
  1776                                  ; Fused expression:    "=(204) *(@-28) 0 "
  1777 0000066C 66B800000000            	mov	eax, 0
  1778 00000672 668946E4                	mov	[bp-28], eax
  1779                                  L84:
  1780                                  ; RPN'ized expression: "i 80 < "
  1781                                  ; Expanded expression: "(@-28) *(4) 80 < "
  1782                                  ; Fused expression:    "< *(@-28) 80 IF! "
  1783 00000676 668B46E4                	mov	eax, [bp-28]
  1784 0000067A 6683F850                	cmp	eax, 80
  1785 0000067E 0F8D0901                	jge	L87
  1786                                  ; RPN'ized expression: "i ++p "
  1787                                  ; Expanded expression: "(@-28) ++p(4) "
  1788                                  ; {
  1789                                  ; if
  1790                                  ; RPN'ized expression: "renglon i + *u 32 != "
  1791                                  ; Expanded expression: "renglon (@-28) *(4) + *(-1) 32 != "
  1792                                  ; Fused expression:    "renglon + ax *(@-28) != *ax 32 IF! "
  1793                                  section .relod
  1794 00000058 [84060000]              	dd	L90
  1795                                  section .text
  1796 00000682 66B8                    	db	0x66, 0xB8
  1797                                  L90:
  1798 00000684 [1C000000]              	dd	_renglon
  1799 00000688 660346E4                	add	eax, [bp-28]
  1800 0000068C 6689C3                  	mov	ebx, eax
  1801 0000068F 6689DE                  	mov	esi, ebx
  1802 00000692 66C1CE04                	ror	esi, 4
  1803 00000696 8EDE                    	mov	ds, si
  1804 00000698 66C1EE1C                	shr	esi, 28
  1805 0000069C 8A04                    	mov	al, [si]
  1806 0000069E 660FBEC0                	movsx	eax, al
  1807 000006A2 6683F820                	cmp	eax, 32
  1808 000006A6 0F84D600                	je	L88
  1809                                  ; {
  1810                                  ; if
  1811                                  ; RPN'ized expression: "renglon i + *u 95 == "
  1812                                  ; Expanded expression: "renglon (@-28) *(4) + *(-1) 95 == "
  1813                                  ; Fused expression:    "renglon + ax *(@-28) == *ax 95 IF! "
  1814                                  section .relod
  1815 0000005C [AC060000]              	dd	L93
  1816                                  section .text
  1817 000006AA 66B8                    	db	0x66, 0xB8
  1818                                  L93:
  1819 000006AC [1C000000]              	dd	_renglon
  1820 000006B0 660346E4                	add	eax, [bp-28]
  1821 000006B4 6689C3                  	mov	ebx, eax
  1822 000006B7 6689DE                  	mov	esi, ebx
  1823 000006BA 66C1CE04                	ror	esi, 4
  1824 000006BE 8EDE                    	mov	ds, si
  1825 000006C0 66C1EE1C                	shr	esi, 28
  1826 000006C4 8A04                    	mov	al, [si]
  1827 000006C6 660FBEC0                	movsx	eax, al
  1828 000006CA 6683F85F                	cmp	eax, 95
  1829 000006CE 7526                    	jne	L91
  1830                                  ; RPN'ized expression: "renglon i + *u 32 = "
  1831                                  ; Expanded expression: "renglon (@-28) *(4) + 32 =(-1) "
  1832                                  ; Fused expression:    "renglon + ax *(@-28) =(124) *ax 32 "
  1833                                  section .relod
  1834 00000060 [D2060000]              	dd	L94
  1835                                  section .text
  1836 000006D0 66B8                    	db	0x66, 0xB8
  1837                                  L94:
  1838 000006D2 [1C000000]              	dd	_renglon
  1839 000006D6 660346E4                	add	eax, [bp-28]
  1840 000006DA 6689C3                  	mov	ebx, eax
  1841 000006DD 66B820000000            	mov	eax, 32
  1842 000006E3 6689DE                  	mov	esi, ebx
  1843 000006E6 66C1CE04                	ror	esi, 4
  1844 000006EA 8EDE                    	mov	ds, si
  1845 000006EC 66C1EE1C                	shr	esi, 28
  1846 000006F0 8804                    	mov	[si], al
  1847 000006F2 660FBEC0                	movsx	eax, al
  1848                                  L91:
  1849                                  ; RPN'ized expression: "( i , funcion , attribs &u , tid &u thread_create ) "
  1850                                  ; Expanded expression: " (@-28) *(4)  funcion  (@-4)  (@-8)  thread_create ()16 "
  1851                                  ; Fused expression:    "( *(4) (@-28) , funcion , (@-4) , (@-8) , thread_create )16 "
  1852 000006F6 66FF76E4                	push	dword [bp-28]
  1853                                  section .relod
  1854 00000064 [FC060000]              	dd	L95
  1855                                  section .text
  1856 000006FA 6668                    	db	0x66, 0x68
  1857                                  L95:
  1858 000006FC [00000000]              	dd	_funcion
  1859 00000700 6631C0                  	xor	eax, eax
  1860 00000703 8CD0                    	mov	ax, ss
  1861 00000705 66C1E004                	shl	eax, 4
  1862 00000709 66678D4405FC            	lea	eax, [ebp+eax-4]
  1863 0000070F 6650                    	push	eax
  1864 00000711 6631C0                  	xor	eax, eax
  1865 00000714 8CD0                    	mov	ax, ss
  1866 00000716 66C1E004                	shl	eax, 4
  1867 0000071A 66678D4405F8            	lea	eax, [ebp+eax-8]
  1868 00000720 6650                    	push	eax
  1869 00000722 9A                      	db	0x9A
  1870                                  section .relot
  1871 0000002C [23070000]              	dd	L96
  1872                                  section .text
  1873                                  L96:
  1874 00000723 [00000000]              	dd	_thread_create
  1875 00000727 83ECF0                  	sub	sp, -16
  1876                                  ; RPN'ized expression: "numOrden i + *u numThreads = "
  1877                                  ; Expanded expression: "numOrden (@-28) *(4) + numThreads *(4) =(-1) "
  1878                                  ; Fused expression:    "numOrden + ax *(@-28) push-ax numThreads =(124) **sp *ax "
  1879                                  section .relod
  1880 00000068 [2C070000]              	dd	L97
  1881                                  section .text
  1882 0000072A 66B8                    	db	0x66, 0xB8
  1883                                  L97:
  1884 0000072C [6C000000]              	dd	_numOrden
  1885 00000730 660346E4                	add	eax, [bp-28]
  1886 00000734 6650                    	push	eax
  1887                                  section .relod
  1888 0000006C [38070000]              	dd	L98
  1889                                  section .text
  1890 00000736 66B8                    	db	0x66, 0xB8
  1891                                  L98:
  1892 00000738 [00000000]              	dd	_numThreads
  1893 0000073C 6689C3                  	mov	ebx, eax
  1894 0000073F 6689DE                  	mov	esi, ebx
  1895 00000742 66C1CE04                	ror	esi, 4
  1896 00000746 8EDE                    	mov	ds, si
  1897 00000748 66C1EE1C                	shr	esi, 28
  1898 0000074C 668B04                  	mov	eax, [si]
  1899 0000074F 665B                    	pop	ebx
  1900 00000751 6689DE                  	mov	esi, ebx
  1901 00000754 66C1CE04                	ror	esi, 4
  1902 00000758 8EDE                    	mov	ds, si
  1903 0000075A 66C1EE1C                	shr	esi, 28
  1904 0000075E 8804                    	mov	[si], al
  1905 00000760 660FBEC0                	movsx	eax, al
  1906                                  ; RPN'ized expression: "numThreads ++p "
  1907                                  ; Expanded expression: "numThreads ++p(4) "
  1908                                  ; Fused expression:    "numThreads ++p(4) *ax "
  1909                                  section .relod
  1910 00000070 [66070000]              	dd	L99
  1911                                  section .text
  1912 00000764 66B8                    	db	0x66, 0xB8
  1913                                  L99:
  1914 00000766 [00000000]              	dd	_numThreads
  1915 0000076A 6689C3                  	mov	ebx, eax
  1916 0000076D 6689DE                  	mov	esi, ebx
  1917 00000770 66C1CE04                	ror	esi, 4
  1918 00000774 8EDE                    	mov	ds, si
  1919 00000776 66C1EE1C                	shr	esi, 28
  1920 0000077A 668B04                  	mov	eax, [si]
  1921 0000077D 66FF04                  	inc	dword [si]
  1922                                  ; }
  1923                                  L88:
  1924                                  ; }
  1925                                  L85:
  1926                                  ; Fused expression:    "++p(4) *(@-28) "
  1927 00000780 668B46E4                	mov	eax, [bp-28]
  1928 00000784 66FF46E4                	inc	dword [bp-28]
  1929 00000788 E9EBFE                  	jmp	L84
  1930                                  L87:
  1931                                  ; RPN'ized expression: "fin FALSE = "
  1932                                  ; Expanded expression: "fin 0 =(4) "
  1933                                  ; Fused expression:    "fin =(204) *ax 0 "
  1934                                  section .relod
  1935 00000074 [8D070000]              	dd	L100
  1936                                  section .text
  1937 0000078B 66B8                    	db	0x66, 0xB8
  1938                                  L100:
  1939 0000078D [00000000]              	dd	_fin
  1940 00000791 6689C3                  	mov	ebx, eax
  1941 00000794 66B800000000            	mov	eax, 0
  1942 0000079A 6689DE                  	mov	esi, ebx
  1943 0000079D 66C1CE04                	ror	esi, 4
  1944 000007A1 8EDE                    	mov	ds, si
  1945 000007A3 66C1EE1C                	shr	esi, 28
  1946 000007A7 668904                  	mov	[si], eax
  1947                                  ; while
  1948                                  ; loc     <something> : char
  1949                                  ; loc     <something> : char
  1950                                  ; RPN'ized expression: "( leerTeclaListaBDA ) (something103) 27 (something104) != "
  1951                                  ; Expanded expression: " leerTeclaListaBDA ()0 signed char 27 != "
  1952                                  L101:
  1953                                  ; Fused expression:    "( leerTeclaListaBDA )0 signed char != ax 27 IF! "
  1954 000007AA 9A                      	db	0x9A
  1955                                  section .relot
  1956 00000030 [AB070000]              	dd	L105
  1957                                  section .text
  1958                                  L105:
  1959 000007AB [00000000]              	dd	_leerTeclaListaBDA
  1960 000007AF 660FBEC0                	movsx	eax, al
  1961 000007B3 6683F81B                	cmp	eax, 27
  1962 000007B7 7407                    	je	L102
  1963                                  ; RPN'ized expression: "( thread_yield ) "
  1964                                  ; Expanded expression: " thread_yield ()0 "
  1965                                  ; Fused expression:    "( thread_yield )0 "
  1966 000007B9 9A                      	db	0x9A
  1967                                  section .relot
  1968 00000034 [BA070000]              	dd	L106
  1969                                  section .text
  1970                                  L106:
  1971 000007BA [00000000]              	dd	_thread_yield
  1972 000007BE EBEA                    	jmp	L101
  1973                                  L102:
  1974                                  ; RPN'ized expression: "fin TRUE = "
  1975                                  ; Expanded expression: "fin 1 =(4) "
  1976                                  ; Fused expression:    "fin =(204) *ax 1 "
  1977                                  section .relod
  1978 00000078 [C2070000]              	dd	L107
  1979                                  section .text
  1980 000007C0 66B8                    	db	0x66, 0xB8
  1981                                  L107:
  1982 000007C2 [00000000]              	dd	_fin
  1983 000007C6 6689C3                  	mov	ebx, eax
  1984 000007C9 66B801000000            	mov	eax, 1
  1985 000007CF 6689DE                  	mov	esi, ebx
  1986 000007D2 66C1CE04                	ror	esi, 4
  1987 000007D6 8EDE                    	mov	ds, si
  1988 000007D8 66C1EE1C                	shr	esi, 28
  1989 000007DC 668904                  	mov	[si], eax
  1990                                  ; for
  1991                                  ; RPN'ized expression: "i 0 = "
  1992                                  ; Expanded expression: "(@-12) 0 =(4) "
  1993                                  ; Fused expression:    "=(204) *(@-12) 0 "
  1994 000007DF 66B800000000            	mov	eax, 0
  1995 000007E5 668946F4                	mov	[bp-12], eax
  1996                                  L108:
  1997                                  ; RPN'ized expression: "i numThreads < "
  1998                                  ; Expanded expression: "(@-12) *(4) numThreads *(4) < "
  1999                                  ; Fused expression:    "numThreads < *(@-12) *ax IF! "
  2000                                  section .relod
  2001 0000007C [EB070000]              	dd	L112
  2002                                  section .text
  2003 000007E9 66B8                    	db	0x66, 0xB8
  2004                                  L112:
  2005 000007EB [00000000]              	dd	_numThreads
  2006 000007EF 6689C3                  	mov	ebx, eax
  2007 000007F2 6689DE                  	mov	esi, ebx
  2008 000007F5 66C1CE04                	ror	esi, 4
  2009 000007F9 8EDE                    	mov	ds, si
  2010 000007FB 66C1EE1C                	shr	esi, 28
  2011 000007FF 668B0C                  	mov	ecx, [si]
  2012 00000802 668B46F4                	mov	eax, [bp-12]
  2013 00000806 6639C8                  	cmp	eax, ecx
  2014 00000809 7D1C                    	jge	L111
  2015                                  ; RPN'ized expression: "i ++p "
  2016                                  ; Expanded expression: "(@-12) ++p(4) "
  2017                                  ; loc     <something> : * unsigned char
  2018                                  ; RPN'ized expression: "tid ( 0 (something113) , 1 -u thread_join ) = "
  2019                                  ; Expanded expression: "(@-8)  0  -1  thread_join ()8 =(4) "
  2020                                  ; Fused expression:    "( 0 , -1 , thread_join )8 =(204) *(@-8) ax "
  2021 0000080B 666A00                  	push	dword 0
  2022 0000080E 666AFF                  	push	dword -1
  2023 00000811 9A                      	db	0x9A
  2024                                  section .relot
  2025 00000038 [12080000]              	dd	L114
  2026                                  section .text
  2027                                  L114:
  2028 00000812 [00000000]              	dd	_thread_join
  2029 00000816 83ECF8                  	sub	sp, -8
  2030 00000819 668946F8                	mov	[bp-8], eax
  2031                                  L109:
  2032                                  ; Fused expression:    "++p(4) *(@-12) "
  2033 0000081D 668B46F4                	mov	eax, [bp-12]
  2034 00000821 66FF46F4                	inc	dword [bp-12]
  2035 00000825 EBC2                    	jmp	L108
  2036                                  L111:
  2037                                  ; RPN'ized expression: "( 80 1 - , 25 1 - , 0 , 0 , 7 , 32 , 25 , ptrPant pantallazo ) "
  2038                                  ; Expanded expression: " 79  24  0  0  7  32  25  (@-24) *(4)  pantallazo ()32 "
  2039                                  ; Fused expression:    "( 79 , 24 , 0 , 0 , 7 , 32 , 25 , *(4) (@-24) , pantallazo )32 "
  2040 00000827 666A4F                  	push	dword 79
  2041 0000082A 666A18                  	push	dword 24
  2042 0000082D 666A00                  	push	dword 0
  2043 00000830 666A00                  	push	dword 0
  2044 00000833 666A07                  	push	dword 7
  2045 00000836 666A20                  	push	dword 32
  2046 00000839 666A19                  	push	dword 25
  2047 0000083C 66FF76E8                	push	dword [bp-24]
  2048 00000840 9A                      	db	0x9A
  2049                                  section .relot
  2050 0000003C [41080000]              	dd	L115
  2051                                  section .text
  2052                                  L115:
  2053 00000841 [00000000]              	dd	_pantallazo
  2054 00000845 83ECE0                  	sub	sp, -32
  2055                                  ; RPN'ized expression: "( 12 printCarVideo ) "
  2056                                  ; Expanded expression: " 12  printCarVideo ()4 "
  2057                                  ; Fused expression:    "( 12 , printCarVideo )4 "
  2058 00000848 666A0C                  	push	dword 12
  2059 0000084B 9A                      	db	0x9A
  2060                                  section .relot
  2061 00000040 [4C080000]              	dd	L116
  2062                                  section .text
  2063                                  L116:
  2064 0000084C [00000000]              	dd	_printCarVideo
  2065 00000850 83ECFC                  	sub	sp, -4
  2066                                  
  2067                                  section .rodata
  2068                                  L117:
  2069 00000000 0A2050756C73652075-     	db	10," Pulse una tecla para crear el numero maximo de threads ... "
  2069 00000009 6E61207465636C6120-
  2069 00000012 706172612063726561-
  2069 0000001B 7220656C206E756D65-
  2069 00000024 726F206D6178696D6F-
  2069 0000002D 206465207468726561-
  2069 00000036 6473202E2E2E20     
  2070 0000003D 00                      	times	1 db 0
  2071                                  
  2072                                  section .text
  2073                                  ; RPN'ized expression: "( L117 printStrVideo ) "
  2074                                  ; Expanded expression: " L117  printStrVideo ()4 "
  2075                                  ; Fused expression:    "( L117 , printStrVideo )4 "
  2076                                  section .relod
  2077 00000080 [55080000]              	dd	L118
  2078                                  section .text
  2079 00000853 6668                    	db	0x66, 0x68
  2080                                  L118:
  2081 00000855 [00000000]              	dd	L117
  2082 00000859 9A                      	db	0x9A
  2083                                  section .relot
  2084 00000044 [5A080000]              	dd	L119
  2085                                  section .text
  2086                                  L119:
  2087 0000085A [00000000]              	dd	_printStrVideo
  2088 0000085E 83ECFC                  	sub	sp, -4
  2089                                  ; while
  2090                                  ; loc     <something> : char
  2091                                  ; loc     <something> : char
  2092                                  ; RPN'ized expression: "( leerTeclaListaBDA ) (something122) 0 (something123) == "
  2093                                  ; Expanded expression: " leerTeclaListaBDA ()0 signed char 0 == "
  2094                                  L120:
  2095                                  ; Fused expression:    "( leerTeclaListaBDA )0 signed char == ax 0 IF! "
  2096 00000861 9A                      	db	0x9A
  2097                                  section .relot
  2098 00000048 [62080000]              	dd	L124
  2099                                  section .text
  2100                                  L124:
  2101 00000862 [00000000]              	dd	_leerTeclaListaBDA
  2102 00000866 660FBEC0                	movsx	eax, al
  2103 0000086A 6683F800                	cmp	eax, 0
  2104 0000086E 7502                    	jne	L121
  2105 00000870 EBEF                    	jmp	L120
  2106                                  L121:
  2107                                  
  2108                                  section .rodata
  2109                                  L125:
  2110 0000003E 0A0A20746872656164-     	db	10,10," thread_create(&tid, { 0x200, 0x0000 }, funcioncilla,     ) Ok "
  2110 00000047 5F6372656174652826-
  2110 00000050 7469642C207B203078-
  2110 00000059 3230302C2030783030-
  2110 00000062 3030207D2C2066756E-
  2110 0000006B 63696F6E63696C6C61-
  2110 00000074 2C202020202029204F-
  2110 0000007D 6B20               
  2111 0000007F 00                      	times	1 db 0
  2112                                  
  2113                                  section .text
  2114                                  ; RPN'ized expression: "( L125 printStrVideo ) "
  2115                                  ; Expanded expression: " L125  printStrVideo ()4 "
  2116                                  ; Fused expression:    "( L125 , printStrVideo )4 "
  2117                                  section .relod
  2118 00000084 [74080000]              	dd	L126
  2119                                  section .text
  2120 00000872 6668                    	db	0x66, 0x68
  2121                                  L126:
  2122 00000874 [3E000000]              	dd	L125
  2123 00000878 9A                      	db	0x9A
  2124                                  section .relot
  2125 0000004C [79080000]              	dd	L127
  2126                                  section .text
  2127                                  L127:
  2128 00000879 [00000000]              	dd	_printStrVideo
  2129 0000087D 83ECFC                  	sub	sp, -4
  2130                                  ; RPN'ized expression: "cont 0 = "
  2131                                  ; Expanded expression: "(@-20) 0 =(4) "
  2132                                  ; Fused expression:    "=(204) *(@-20) 0 "
  2133 00000880 66B800000000            	mov	eax, 0
  2134 00000886 668946EC                	mov	[bp-20], eax
  2135                                  ; while
  2136                                  ; RPN'ized expression: "( cont , funcioncilla , attribs &u , tid &u thread_create ) 0 >= "
  2137                                  ; Expanded expression: " (@-20) *(4)  funcioncilla  (@-4)  (@-8)  thread_create ()16 0 >= "
  2138                                  L128:
  2139                                  ; Fused expression:    "( *(4) (@-20) , funcioncilla , (@-4) , (@-8) , thread_create )16 >= ax 0 IF! "
  2140 0000088A 66FF76EC                	push	dword [bp-20]
  2141                                  section .relod
  2142 00000088 [90080000]              	dd	L130
  2143                                  section .text
  2144 0000088E 6668                    	db	0x66, 0x68
  2145                                  L130:
  2146 00000890 [26030000]              	dd	_funcioncilla
  2147 00000894 6631C0                  	xor	eax, eax
  2148 00000897 8CD0                    	mov	ax, ss
  2149 00000899 66C1E004                	shl	eax, 4
  2150 0000089D 66678D4405FC            	lea	eax, [ebp+eax-4]
  2151 000008A3 6650                    	push	eax
  2152 000008A5 6631C0                  	xor	eax, eax
  2153 000008A8 8CD0                    	mov	ax, ss
  2154 000008AA 66C1E004                	shl	eax, 4
  2155 000008AE 66678D4405F8            	lea	eax, [ebp+eax-8]
  2156 000008B4 6650                    	push	eax
  2157 000008B6 9A                      	db	0x9A
  2158                                  section .relot
  2159 00000050 [B7080000]              	dd	L131
  2160                                  section .text
  2161                                  L131:
  2162 000008B7 [00000000]              	dd	_thread_create
  2163 000008BB 83ECF0                  	sub	sp, -16
  2164 000008BE 6683F800                	cmp	eax, 0
  2165 000008C2 7C51                    	jl	L129
  2166                                  ; {
  2167                                  ; for
  2168                                  ; RPN'ized expression: "j 0 = "
  2169                                  ; Expanded expression: "(@-16) 0 =(4) "
  2170                                  ; Fused expression:    "=(204) *(@-16) 0 "
  2171 000008C4 66B800000000            	mov	eax, 0
  2172 000008CA 668946F0                	mov	[bp-16], eax
  2173                                  L132:
  2174                                  ; RPN'ized expression: "j 9 < "
  2175                                  ; Expanded expression: "(@-16) *(4) 9 < "
  2176                                  ; Fused expression:    "< *(@-16) 9 IF! "
  2177 000008CE 668B46F0                	mov	eax, [bp-16]
  2178 000008D2 6683F809                	cmp	eax, 9
  2179 000008D6 7D15                    	jge	L135
  2180                                  ; RPN'ized expression: "j ++p "
  2181                                  ; Expanded expression: "(@-16) ++p(4) "
  2182                                  ; RPN'ized expression: "( 8 printCarVideo ) "
  2183                                  ; Expanded expression: " 8  printCarVideo ()4 "
  2184                                  ; Fused expression:    "( 8 , printCarVideo )4 "
  2185 000008D8 666A08                  	push	dword 8
  2186 000008DB 9A                      	db	0x9A
  2187                                  section .relot
  2188 00000054 [DC080000]              	dd	L136
  2189                                  section .text
  2190                                  L136:
  2191 000008DC [00000000]              	dd	_printCarVideo
  2192 000008E0 83ECFC                  	sub	sp, -4
  2193                                  L133:
  2194                                  ; Fused expression:    "++p(4) *(@-16) "
  2195 000008E3 668B46F0                	mov	eax, [bp-16]
  2196 000008E7 66FF46F0                	inc	dword [bp-16]
  2197 000008EB EBE1                    	jmp	L132
  2198                                  L135:
  2199                                  ; RPN'ized expression: "cont ++p "
  2200                                  ; Expanded expression: "(@-20) ++p(4) "
  2201                                  ; Fused expression:    "++p(4) *(@-20) "
  2202 000008ED 668B46EC                	mov	eax, [bp-20]
  2203 000008F1 66FF46EC                	inc	dword [bp-20]
  2204                                  ; RPN'ized expression: "( 4 , cont printDecVideo ) "
  2205                                  ; Expanded expression: " 4  (@-20) *(4)  printDecVideo ()8 "
  2206                                  ; Fused expression:    "( 4 , *(4) (@-20) , printDecVideo )8 "
  2207 000008F5 666A04                  	push	dword 4
  2208 000008F8 66FF76EC                	push	dword [bp-20]
  2209 000008FC 9A                      	db	0x9A
  2210                                  section .relot
  2211 00000058 [FD080000]              	dd	L137
  2212                                  section .text
  2213                                  L137:
  2214 000008FD [00000000]              	dd	_printDecVideo
  2215 00000901 83ECF8                  	sub	sp, -8
  2216                                  
  2217                                  section .rodata
  2218                                  L138:
  2219 00000080 29204F6B20              	db	") Ok "
  2220 00000085 00                      	times	1 db 0
  2221                                  
  2222                                  section .text
  2223                                  ; RPN'ized expression: "( L138 printStrVideo ) "
  2224                                  ; Expanded expression: " L138  printStrVideo ()4 "
  2225                                  ; Fused expression:    "( L138 , printStrVideo )4 "
  2226                                  section .relod
  2227 0000008C [06090000]              	dd	L139
  2228                                  section .text
  2229 00000904 6668                    	db	0x66, 0x68
  2230                                  L139:
  2231 00000906 [80000000]              	dd	L138
  2232 0000090A 9A                      	db	0x9A
  2233                                  section .relot
  2234 0000005C [0B090000]              	dd	L140
  2235                                  section .text
  2236                                  L140:
  2237 0000090B [00000000]              	dd	_printStrVideo
  2238 0000090F 83ECFC                  	sub	sp, -4
  2239                                  ; }
  2240 00000912 E975FF                  	jmp	L128
  2241                                  L129:
  2242                                  
  2243                                  section .rodata
  2244                                  L141:
  2245 00000086 0A0A20486520706F64-     	db	10,10," He podido crear "
  2245 0000008F 69646F206372656172-
  2245 00000098 20                 
  2246 00000099 00                      	times	1 db 0
  2247                                  
  2248                                  section .text
  2249                                  ; RPN'ized expression: "( L141 printStrVideo ) "
  2250                                  ; Expanded expression: " L141  printStrVideo ()4 "
  2251                                  ; Fused expression:    "( L141 , printStrVideo )4 "
  2252                                  section .relod
  2253 00000090 [17090000]              	dd	L142
  2254                                  section .text
  2255 00000915 6668                    	db	0x66, 0x68
  2256                                  L142:
  2257 00000917 [86000000]              	dd	L141
  2258 0000091B 9A                      	db	0x9A
  2259                                  section .relot
  2260 00000060 [1C090000]              	dd	L143
  2261                                  section .text
  2262                                  L143:
  2263 0000091C [00000000]              	dd	_printStrVideo
  2264 00000920 83ECFC                  	sub	sp, -4
  2265                                  ; RPN'ized expression: "( 1 , cont printDecVideo ) "
  2266                                  ; Expanded expression: " 1  (@-20) *(4)  printDecVideo ()8 "
  2267                                  ; Fused expression:    "( 1 , *(4) (@-20) , printDecVideo )8 "
  2268 00000923 666A01                  	push	dword 1
  2269 00000926 66FF76EC                	push	dword [bp-20]
  2270 0000092A 9A                      	db	0x9A
  2271                                  section .relot
  2272 00000064 [2B090000]              	dd	L144
  2273                                  section .text
  2274                                  L144:
  2275 0000092B [00000000]              	dd	_printDecVideo
  2276 0000092F 83ECF8                  	sub	sp, -8
  2277                                  
  2278                                  section .rodata
  2279                                  L145:
  2280 0000009A 207468726561647320      	db	" threads "
  2281 000000A3 00                      	times	1 db 0
  2282                                  
  2283                                  section .text
  2284                                  ; RPN'ized expression: "( L145 printStrVideo ) "
  2285                                  ; Expanded expression: " L145  printStrVideo ()4 "
  2286                                  ; Fused expression:    "( L145 , printStrVideo )4 "
  2287                                  section .relod
  2288 00000094 [34090000]              	dd	L146
  2289                                  section .text
  2290 00000932 6668                    	db	0x66, 0x68
  2291                                  L146:
  2292 00000934 [9A000000]              	dd	L145
  2293 00000938 9A                      	db	0x9A
  2294                                  section .relot
  2295 00000068 [39090000]              	dd	L147
  2296                                  section .text
  2297                                  L147:
  2298 00000939 [00000000]              	dd	_printStrVideo
  2299 0000093D 83ECFC                  	sub	sp, -4
  2300                                  
  2301                                  section .rodata
  2302                                  L148:
  2303 000000A4 0A                      	db	10
  2304 000000A5 00                      	times	1 db 0
  2305                                  
  2306                                  section .text
  2307                                  ; RPN'ized expression: "( L148 printStrVideo ) "
  2308                                  ; Expanded expression: " L148  printStrVideo ()4 "
  2309                                  ; Fused expression:    "( L148 , printStrVideo )4 "
  2310                                  section .relod
  2311 00000098 [42090000]              	dd	L149
  2312                                  section .text
  2313 00000940 6668                    	db	0x66, 0x68
  2314                                  L149:
  2315 00000942 [A4000000]              	dd	L148
  2316 00000946 9A                      	db	0x9A
  2317                                  section .relot
  2318 0000006C [47090000]              	dd	L150
  2319                                  section .text
  2320                                  L150:
  2321 00000947 [00000000]              	dd	_printStrVideo
  2322 0000094B 83ECFC                  	sub	sp, -4
  2323                                  
  2324                                  section .rodata
  2325                                  L151:
  2326 000000A6 0A                      	db	10
  2327 000000A7 00                      	times	1 db 0
  2328                                  
  2329                                  section .text
  2330                                  ; RPN'ized expression: "( L151 printStrVideo ) "
  2331                                  ; Expanded expression: " L151  printStrVideo ()4 "
  2332                                  ; Fused expression:    "( L151 , printStrVideo )4 "
  2333                                  section .relod
  2334 0000009C [50090000]              	dd	L152
  2335                                  section .text
  2336 0000094E 6668                    	db	0x66, 0x68
  2337                                  L152:
  2338 00000950 [A6000000]              	dd	L151
  2339 00000954 9A                      	db	0x9A
  2340                                  section .relot
  2341 00000070 [55090000]              	dd	L153
  2342                                  section .text
  2343                                  L153:
  2344 00000955 [00000000]              	dd	_printStrVideo
  2345 00000959 83ECFC                  	sub	sp, -4
  2346                                  ; RPN'ized expression: "( mostrarListaLibres ) "
  2347                                  ; Expanded expression: " mostrarListaLibres ()0 "
  2348                                  ; Fused expression:    "( mostrarListaLibres )0 "
  2349 0000095C 9A                      	db	0x9A
  2350                                  section .relot
  2351 00000074 [5D090000]              	dd	L154
  2352                                  section .text
  2353                                  L154:
  2354 0000095D [00000000]              	dd	_mostrarListaLibres
  2355                                  
  2356                                  section .rodata
  2357                                  L155:
  2358 000000A8 0A                      	db	10
  2359 000000A9 0A                      	db	10
  2360 000000AA 2074616D426C6F7175-     	db	" tamBloqueMax = "
  2360 000000B3 654D6178203D20     
  2361 000000BA 00                      	times	1 db 0
  2362                                  
  2363                                  section .text
  2364                                  ; RPN'ized expression: "( L155 printStrVideo ) "
  2365                                  ; Expanded expression: " L155  printStrVideo ()4 "
  2366                                  ; Fused expression:    "( L155 , printStrVideo )4 "
  2367                                  section .relod
  2368 000000A0 [63090000]              	dd	L156
  2369                                  section .text
  2370 00000961 6668                    	db	0x66, 0x68
  2371                                  L156:
  2372 00000963 [A8000000]              	dd	L155
  2373 00000967 9A                      	db	0x9A
  2374                                  section .relot
  2375 00000078 [68090000]              	dd	L157
  2376                                  section .text
  2377                                  L157:
  2378 00000968 [00000000]              	dd	_printStrVideo
  2379 0000096C 83ECFC                  	sub	sp, -4
  2380                                  ; RPN'ized expression: "( 1 , tamBloqueMax printDecVideo ) "
  2381                                  ; Expanded expression: " 1  tamBloqueMax *(2)  printDecVideo ()8 "
  2382                                  ; Fused expression:    "( 1 , tamBloqueMax *(2) ax , printDecVideo )8 "
  2383 0000096F 666A01                  	push	dword 1
  2384                                  section .relod
  2385 000000A4 [74090000]              	dd	L158
  2386                                  section .text
  2387 00000972 66B8                    	db	0x66, 0xB8
  2388                                  L158:
  2389 00000974 [00000000]              	dd	_tamBloqueMax
  2390 00000978 6689C3                  	mov	ebx, eax
  2391 0000097B 6689DE                  	mov	esi, ebx
  2392 0000097E 66C1CE04                	ror	esi, 4
  2393 00000982 8EDE                    	mov	ds, si
  2394 00000984 66C1EE1C                	shr	esi, 28
  2395 00000988 8B04                    	mov	ax, [si]
  2396 0000098A 660FB7C0                	movzx	eax, ax
  2397 0000098E 6650                    	push	eax
  2398 00000990 9A                      	db	0x9A
  2399                                  section .relot
  2400 0000007C [91090000]              	dd	L159
  2401                                  section .text
  2402                                  L159:
  2403 00000991 [00000000]              	dd	_printDecVideo
  2404 00000995 83ECF8                  	sub	sp, -8
  2405                                  
  2406                                  section .rodata
  2407                                  L160:
  2408 000000BB 207061726167726166-     	db	" paragrafos ("
  2408 000000C4 6F732028           
  2409 000000C8 00                      	times	1 db 0
  2410                                  
  2411                                  section .text
  2412                                  ; RPN'ized expression: "( L160 printStrVideo ) "
  2413                                  ; Expanded expression: " L160  printStrVideo ()4 "
  2414                                  ; Fused expression:    "( L160 , printStrVideo )4 "
  2415                                  section .relod
  2416 000000A8 [9A090000]              	dd	L161
  2417                                  section .text
  2418 00000998 6668                    	db	0x66, 0x68
  2419                                  L161:
  2420 0000099A [BB000000]              	dd	L160
  2421 0000099E 9A                      	db	0x9A
  2422                                  section .relot
  2423 00000080 [9F090000]              	dd	L162
  2424                                  section .text
  2425                                  L162:
  2426 0000099F [00000000]              	dd	_printStrVideo
  2427 000009A3 83ECFC                  	sub	sp, -4
  2428                                  ; RPN'ized expression: "( 4 , tamBloqueMax printHexVideo ) "
  2429                                  ; Expanded expression: " 4  tamBloqueMax *(2)  printHexVideo ()8 "
  2430                                  ; Fused expression:    "( 4 , tamBloqueMax *(2) ax , printHexVideo )8 "
  2431 000009A6 666A04                  	push	dword 4
  2432                                  section .relod
  2433 000000AC [AB090000]              	dd	L163
  2434                                  section .text
  2435 000009A9 66B8                    	db	0x66, 0xB8
  2436                                  L163:
  2437 000009AB [00000000]              	dd	_tamBloqueMax
  2438 000009AF 6689C3                  	mov	ebx, eax
  2439 000009B2 6689DE                  	mov	esi, ebx
  2440 000009B5 66C1CE04                	ror	esi, 4
  2441 000009B9 8EDE                    	mov	ds, si
  2442 000009BB 66C1EE1C                	shr	esi, 28
  2443 000009BF 8B04                    	mov	ax, [si]
  2444 000009C1 660FB7C0                	movzx	eax, ax
  2445 000009C5 6650                    	push	eax
  2446 000009C7 9A                      	db	0x9A
  2447                                  section .relot
  2448 00000084 [C8090000]              	dd	L164
  2449                                  section .text
  2450                                  L164:
  2451 000009C8 [00000000]              	dd	_printHexVideo
  2452 000009CC 83ECF8                  	sub	sp, -8
  2453                                  
  2454                                  section .rodata
  2455                                  L165:
  2456 000000C9 29203D20                	db	") = "
  2457 000000CD 00                      	times	1 db 0
  2458                                  
  2459                                  section .text
  2460                                  ; RPN'ized expression: "( L165 printStrVideo ) "
  2461                                  ; Expanded expression: " L165  printStrVideo ()4 "
  2462                                  ; Fused expression:    "( L165 , printStrVideo )4 "
  2463                                  section .relod
  2464 000000B0 [D1090000]              	dd	L166
  2465                                  section .text
  2466 000009CF 6668                    	db	0x66, 0x68
  2467                                  L166:
  2468 000009D1 [C9000000]              	dd	L165
  2469 000009D5 9A                      	db	0x9A
  2470                                  section .relot
  2471 00000088 [D6090000]              	dd	L167
  2472                                  section .text
  2473                                  L167:
  2474 000009D6 [00000000]              	dd	_printStrVideo
  2475 000009DA 83ECFC                  	sub	sp, -4
  2476                                  ; RPN'ized expression: "( 1 , tamBloqueMax 1024 16 / / printDecVideo ) "
  2477                                  ; Expanded expression: " 1  tamBloqueMax *(2) 64 /  printDecVideo ()8 "
  2478                                  ; Fused expression:    "( 1 , tamBloqueMax / *ax 64 , printDecVideo )8 "
  2479 000009DD 666A01                  	push	dword 1
  2480                                  section .relod
  2481 000000B4 [E2090000]              	dd	L168
  2482                                  section .text
  2483 000009E0 66B8                    	db	0x66, 0xB8
  2484                                  L168:
  2485 000009E2 [00000000]              	dd	_tamBloqueMax
  2486 000009E6 6689C3                  	mov	ebx, eax
  2487 000009E9 6689DE                  	mov	esi, ebx
  2488 000009EC 66C1CE04                	ror	esi, 4
  2489 000009F0 8EDE                    	mov	ds, si
  2490 000009F2 66C1EE1C                	shr	esi, 28
  2491 000009F6 8B04                    	mov	ax, [si]
  2492 000009F8 660FB7C0                	movzx	eax, ax
  2493 000009FC 6699                    	cdq
  2494 000009FE 66B940000000            	mov	ecx, 64
  2495 00000A04 66F7F9                  	idiv	ecx
  2496 00000A07 6650                    	push	eax
  2497 00000A09 9A                      	db	0x9A
  2498                                  section .relot
  2499 0000008C [0A0A0000]              	dd	L169
  2500                                  section .text
  2501                                  L169:
  2502 00000A0A [00000000]              	dd	_printDecVideo
  2503 00000A0E 83ECF8                  	sub	sp, -8
  2504                                  
  2505                                  section .rodata
  2506                                  L170:
  2507 000000CE 204B4279746573          	db	" KBytes"
  2508 000000D5 00                      	times	1 db 0
  2509                                  
  2510                                  section .text
  2511                                  ; RPN'ized expression: "( L170 printStrVideo ) "
  2512                                  ; Expanded expression: " L170  printStrVideo ()4 "
  2513                                  ; Fused expression:    "( L170 , printStrVideo )4 "
  2514                                  section .relod
  2515 000000B8 [130A0000]              	dd	L171
  2516                                  section .text
  2517 00000A11 6668                    	db	0x66, 0x68
  2518                                  L171:
  2519 00000A13 [CE000000]              	dd	L170
  2520 00000A17 9A                      	db	0x9A
  2521                                  section .relot
  2522 00000090 [180A0000]              	dd	L172
  2523                                  section .text
  2524                                  L172:
  2525 00000A18 [00000000]              	dd	_printStrVideo
  2526 00000A1C 83ECFC                  	sub	sp, -4
  2527                                  
  2528                                  section .rodata
  2529                                  L173:
  2530 000000D6 0A0A2050756C736520-     	db	10,10," Pulse una tecla para permitir su ejecucion "
  2530 000000DF 756E61207465636C61-
  2530 000000E8 207061726120706572-
  2530 000000F1 6D6974697220737520-
  2530 000000FA 656A65637563696F6E-
  2530 00000103 20                 
  2531 00000104 00                      	times	1 db 0
  2532                                  
  2533                                  section .text
  2534                                  ; RPN'ized expression: "( L173 printStrVideo ) "
  2535                                  ; Expanded expression: " L173  printStrVideo ()4 "
  2536                                  ; Fused expression:    "( L173 , printStrVideo )4 "
  2537                                  section .relod
  2538 000000BC [210A0000]              	dd	L174
  2539                                  section .text
  2540 00000A1F 6668                    	db	0x66, 0x68
  2541                                  L174:
  2542 00000A21 [D6000000]              	dd	L173
  2543 00000A25 9A                      	db	0x9A
  2544                                  section .relot
  2545 00000094 [260A0000]              	dd	L175
  2546                                  section .text
  2547                                  L175:
  2548 00000A26 [00000000]              	dd	_printStrVideo
  2549 00000A2A 83ECFC                  	sub	sp, -4
  2550                                  ; RPN'ized expression: "fin FALSE = "
  2551                                  ; Expanded expression: "fin 0 =(4) "
  2552                                  ; Fused expression:    "fin =(204) *ax 0 "
  2553                                  section .relod
  2554 000000C0 [2F0A0000]              	dd	L176
  2555                                  section .text
  2556 00000A2D 66B8                    	db	0x66, 0xB8
  2557                                  L176:
  2558 00000A2F [00000000]              	dd	_fin
  2559 00000A33 6689C3                  	mov	ebx, eax
  2560 00000A36 66B800000000            	mov	eax, 0
  2561 00000A3C 6689DE                  	mov	esi, ebx
  2562 00000A3F 66C1CE04                	ror	esi, 4
  2563 00000A43 8EDE                    	mov	ds, si
  2564 00000A45 66C1EE1C                	shr	esi, 28
  2565 00000A49 668904                  	mov	[si], eax
  2566                                  ; while
  2567                                  ; loc     <something> : char
  2568                                  ; loc     <something> : char
  2569                                  ; RPN'ized expression: "( leerTeclaListaBDA ) (something179) 0 (something180) == "
  2570                                  ; Expanded expression: " leerTeclaListaBDA ()0 signed char 0 == "
  2571                                  L177:
  2572                                  ; Fused expression:    "( leerTeclaListaBDA )0 signed char == ax 0 IF! "
  2573 00000A4C 9A                      	db	0x9A
  2574                                  section .relot
  2575 00000098 [4D0A0000]              	dd	L181
  2576                                  section .text
  2577                                  L181:
  2578 00000A4D [00000000]              	dd	_leerTeclaListaBDA
  2579 00000A51 660FBEC0                	movsx	eax, al
  2580 00000A55 6683F800                	cmp	eax, 0
  2581 00000A59 7502                    	jne	L178
  2582 00000A5B EBEF                    	jmp	L177
  2583                                  L178:
  2584                                  ; RPN'ized expression: "( 80 1 - , 25 1 - , 0 , 0 , 7 , 32 , 25 , ptrPant pantallazo ) "
  2585                                  ; Expanded expression: " 79  24  0  0  7  32  25  (@-24) *(4)  pantallazo ()32 "
  2586                                  ; Fused expression:    "( 79 , 24 , 0 , 0 , 7 , 32 , 25 , *(4) (@-24) , pantallazo )32 "
  2587 00000A5D 666A4F                  	push	dword 79
  2588 00000A60 666A18                  	push	dword 24
  2589 00000A63 666A00                  	push	dword 0
  2590 00000A66 666A00                  	push	dword 0
  2591 00000A69 666A07                  	push	dword 7
  2592 00000A6C 666A20                  	push	dword 32
  2593 00000A6F 666A19                  	push	dword 25
  2594 00000A72 66FF76E8                	push	dword [bp-24]
  2595 00000A76 9A                      	db	0x9A
  2596                                  section .relot
  2597 0000009C [770A0000]              	dd	L182
  2598                                  section .text
  2599                                  L182:
  2600 00000A77 [00000000]              	dd	_pantallazo
  2601 00000A7B 83ECE0                  	sub	sp, -32
  2602                                  ; while
  2603                                  ; loc     <something> : char
  2604                                  ; loc     <something> : char
  2605                                  ; RPN'ized expression: "( leerTeclaListaBDA ) (something185) 27 (something186) != "
  2606                                  ; Expanded expression: " leerTeclaListaBDA ()0 signed char 27 != "
  2607                                  L183:
  2608                                  ; Fused expression:    "( leerTeclaListaBDA )0 signed char != ax 27 IF! "
  2609 00000A7E 9A                      	db	0x9A
  2610                                  section .relot
  2611 000000A0 [7F0A0000]              	dd	L187
  2612                                  section .text
  2613                                  L187:
  2614 00000A7F [00000000]              	dd	_leerTeclaListaBDA
  2615 00000A83 660FBEC0                	movsx	eax, al
  2616 00000A87 6683F81B                	cmp	eax, 27
  2617 00000A8B 7407                    	je	L184
  2618                                  ; RPN'ized expression: "( thread_yield ) "
  2619                                  ; Expanded expression: " thread_yield ()0 "
  2620                                  ; Fused expression:    "( thread_yield )0 "
  2621 00000A8D 9A                      	db	0x9A
  2622                                  section .relot
  2623 000000A4 [8E0A0000]              	dd	L188
  2624                                  section .text
  2625                                  L188:
  2626 00000A8E [00000000]              	dd	_thread_yield
  2627 00000A92 EBEA                    	jmp	L183
  2628                                  L184:
  2629                                  ; RPN'ized expression: "( 80 1 - , 25 1 - , 0 , 0 , 7 , 32 , 25 , ptrPant pantallazo ) "
  2630                                  ; Expanded expression: " 79  24  0  0  7  32  25  (@-24) *(4)  pantallazo ()32 "
  2631                                  ; Fused expression:    "( 79 , 24 , 0 , 0 , 7 , 32 , 25 , *(4) (@-24) , pantallazo )32 "
  2632 00000A94 666A4F                  	push	dword 79
  2633 00000A97 666A18                  	push	dword 24
  2634 00000A9A 666A00                  	push	dword 0
  2635 00000A9D 666A00                  	push	dword 0
  2636 00000AA0 666A07                  	push	dword 7
  2637 00000AA3 666A20                  	push	dword 32
  2638 00000AA6 666A19                  	push	dword 25
  2639 00000AA9 66FF76E8                	push	dword [bp-24]
  2640 00000AAD 9A                      	db	0x9A
  2641                                  section .relot
  2642 000000A8 [AE0A0000]              	dd	L189
  2643                                  section .text
  2644                                  L189:
  2645 00000AAE [00000000]              	dd	_pantallazo
  2646 00000AB2 83ECE0                  	sub	sp, -32
  2647                                  ; RPN'ized expression: "( 12 printCarVideo ) "
  2648                                  ; Expanded expression: " 12  printCarVideo ()4 "
  2649                                  ; Fused expression:    "( 12 , printCarVideo )4 "
  2650 00000AB5 666A0C                  	push	dword 12
  2651 00000AB8 9A                      	db	0x9A
  2652                                  section .relot
  2653 000000AC [B90A0000]              	dd	L190
  2654                                  section .text
  2655                                  L190:
  2656 00000AB9 [00000000]              	dd	_printCarVideo
  2657 00000ABD 83ECFC                  	sub	sp, -4
  2658                                  
  2659                                  section .rodata
  2660                                  L191:
  2661 00000105 0A2050756C73652075-     	db	10," Pulse una tecla para destruirlos "
  2661 0000010E 6E61207465636C6120-
  2661 00000117 706172612064657374-
  2661 00000120 727569726C6F7320   
  2662 00000128 00                      	times	1 db 0
  2663                                  
  2664                                  section .text
  2665                                  ; RPN'ized expression: "( L191 printStrVideo ) "
  2666                                  ; Expanded expression: " L191  printStrVideo ()4 "
  2667                                  ; Fused expression:    "( L191 , printStrVideo )4 "
  2668                                  section .relod
  2669 000000C4 [C20A0000]              	dd	L192
  2670                                  section .text
  2671 00000AC0 6668                    	db	0x66, 0x68
  2672                                  L192:
  2673 00000AC2 [05010000]              	dd	L191
  2674 00000AC6 9A                      	db	0x9A
  2675                                  section .relot
  2676 000000B0 [C70A0000]              	dd	L193
  2677                                  section .text
  2678                                  L193:
  2679 00000AC7 [00000000]              	dd	_printStrVideo
  2680 00000ACB 83ECFC                  	sub	sp, -4
  2681                                  ; while
  2682                                  ; loc     <something> : char
  2683                                  ; loc     <something> : char
  2684                                  ; RPN'ized expression: "( leerTeclaListaBDA ) (something196) 0 (something197) == "
  2685                                  ; Expanded expression: " leerTeclaListaBDA ()0 signed char 0 == "
  2686                                  L194:
  2687                                  ; Fused expression:    "( leerTeclaListaBDA )0 signed char == ax 0 IF! "
  2688 00000ACE 9A                      	db	0x9A
  2689                                  section .relot
  2690 000000B4 [CF0A0000]              	dd	L198
  2691                                  section .text
  2692                                  L198:
  2693 00000ACF [00000000]              	dd	_leerTeclaListaBDA
  2694 00000AD3 660FBEC0                	movsx	eax, al
  2695 00000AD7 6683F800                	cmp	eax, 0
  2696 00000ADB 7502                    	jne	L195
  2697 00000ADD EBEF                    	jmp	L194
  2698                                  L195:
  2699                                  
  2700                                  section .rodata
  2701                                  L199:
  2702 00000129 0A0A20446573747275-     	db	10,10," Destruyendo tid = thread_join(-1, NULL)     "
  2702 00000132 79656E646F20746964-
  2702 0000013B 203D20746872656164-
  2702 00000144 5F6A6F696E282D312C-
  2702 0000014D 204E554C4C29202020-
  2702 00000156 2020               
  2703 00000158 00                      	times	1 db 0
  2704                                  
  2705                                  section .text
  2706                                  ; RPN'ized expression: "( L199 printStrVideo ) "
  2707                                  ; Expanded expression: " L199  printStrVideo ()4 "
  2708                                  ; Fused expression:    "( L199 , printStrVideo )4 "
  2709                                  section .relod
  2710 000000C8 [E10A0000]              	dd	L200
  2711                                  section .text
  2712 00000ADF 6668                    	db	0x66, 0x68
  2713                                  L200:
  2714 00000AE1 [29010000]              	dd	L199
  2715 00000AE5 9A                      	db	0x9A
  2716                                  section .relot
  2717 000000B8 [E60A0000]              	dd	L201
  2718                                  section .text
  2719                                  L201:
  2720 00000AE6 [00000000]              	dd	_printStrVideo
  2721 00000AEA 83ECFC                  	sub	sp, -4
  2722                                  ; RPN'ized expression: "fin TRUE = "
  2723                                  ; Expanded expression: "fin 1 =(4) "
  2724                                  ; Fused expression:    "fin =(204) *ax 1 "
  2725                                  section .relod
  2726 000000CC [EF0A0000]              	dd	L202
  2727                                  section .text
  2728 00000AED 66B8                    	db	0x66, 0xB8
  2729                                  L202:
  2730 00000AEF [00000000]              	dd	_fin
  2731 00000AF3 6689C3                  	mov	ebx, eax
  2732 00000AF6 66B801000000            	mov	eax, 1
  2733 00000AFC 6689DE                  	mov	esi, ebx
  2734 00000AFF 66C1CE04                	ror	esi, 4
  2735 00000B03 8EDE                    	mov	ds, si
  2736 00000B05 66C1EE1C                	shr	esi, 28
  2737 00000B09 668904                  	mov	[si], eax
  2738                                  ; while
  2739                                  ; RPN'ized expression: "cont 0 > "
  2740                                  ; Expanded expression: "(@-20) *(4) 0 > "
  2741                                  L203:
  2742                                  ; Fused expression:    "> *(@-20) 0 IF! "
  2743 00000B0C 668B46EC                	mov	eax, [bp-20]
  2744 00000B10 6683F800                	cmp	eax, 0
  2745 00000B14 7E39                    	jle	L204
  2746                                  ; {
  2747                                  ; loc         <something> : * unsigned char
  2748                                  ; RPN'ized expression: "tid ( 0 (something205) , 1 -u thread_join ) = "
  2749                                  ; Expanded expression: "(@-8)  0  -1  thread_join ()8 =(4) "
  2750                                  ; Fused expression:    "( 0 , -1 , thread_join )8 =(204) *(@-8) ax "
  2751 00000B16 666A00                  	push	dword 0
  2752 00000B19 666AFF                  	push	dword -1
  2753 00000B1C 9A                      	db	0x9A
  2754                                  section .relot
  2755 000000BC [1D0B0000]              	dd	L206
  2756                                  section .text
  2757                                  L206:
  2758 00000B1D [00000000]              	dd	_thread_join
  2759 00000B21 83ECF8                  	sub	sp, -8
  2760 00000B24 668946F8                	mov	[bp-8], eax
  2761                                  
  2762                                  section .rodata
  2763                                  L207:
  2764 00000159 08080808                	db	8,8,8,8
  2765 0000015D 00                      	times	1 db 0
  2766                                  
  2767                                  section .text
  2768                                  ; RPN'ized expression: "( L207 printStrVideo ) "
  2769                                  ; Expanded expression: " L207  printStrVideo ()4 "
  2770                                  ; Fused expression:    "( L207 , printStrVideo )4 "
  2771                                  section .relod
  2772 000000D0 [2A0B0000]              	dd	L208
  2773                                  section .text
  2774 00000B28 6668                    	db	0x66, 0x68
  2775                                  L208:
  2776 00000B2A [59010000]              	dd	L207
  2777 00000B2E 9A                      	db	0x9A
  2778                                  section .relot
  2779 000000C0 [2F0B0000]              	dd	L209
  2780                                  section .text
  2781                                  L209:
  2782 00000B2F [00000000]              	dd	_printStrVideo
  2783 00000B33 83ECFC                  	sub	sp, -4
  2784                                  ; RPN'ized expression: "( 4 , tid printDecVideo ) "
  2785                                  ; Expanded expression: " 4  (@-8) *(4)  printDecVideo ()8 "
  2786                                  ; Fused expression:    "( 4 , *(4) (@-8) , printDecVideo )8 "
  2787 00000B36 666A04                  	push	dword 4
  2788 00000B39 66FF76F8                	push	dword [bp-8]
  2789 00000B3D 9A                      	db	0x9A
  2790                                  section .relot
  2791 000000C4 [3E0B0000]              	dd	L210
  2792                                  section .text
  2793                                  L210:
  2794 00000B3E [00000000]              	dd	_printDecVideo
  2795 00000B42 83ECF8                  	sub	sp, -8
  2796                                  ; RPN'ized expression: "cont --p "
  2797                                  ; Expanded expression: "(@-20) --p(4) "
  2798                                  ; Fused expression:    "--p(4) *(@-20) "
  2799 00000B45 668B46EC                	mov	eax, [bp-20]
  2800 00000B49 66FF4EEC                	dec	dword [bp-20]
  2801                                  ; }
  2802 00000B4D EBBD                    	jmp	L203
  2803                                  L204:
  2804                                  
  2805                                  section .rodata
  2806                                  L211:
  2807 0000015E 0A0A20546F646F7320-     	db	10,10," Todos los threads han sido destruidos "
  2807 00000167 6C6F73207468726561-
  2807 00000170 64732068616E207369-
  2807 00000179 646F20646573747275-
  2807 00000182 69646F7320         
  2808 00000187 00                      	times	1 db 0
  2809                                  
  2810                                  section .text
  2811                                  ; RPN'ized expression: "( L211 printStrVideo ) "
  2812                                  ; Expanded expression: " L211  printStrVideo ()4 "
  2813                                  ; Fused expression:    "( L211 , printStrVideo )4 "
  2814                                  section .relod
  2815 000000D4 [510B0000]              	dd	L212
  2816                                  section .text
  2817 00000B4F 6668                    	db	0x66, 0x68
  2818                                  L212:
  2819 00000B51 [5E010000]              	dd	L211
  2820 00000B55 9A                      	db	0x9A
  2821                                  section .relot
  2822 000000C8 [560B0000]              	dd	L213
  2823                                  section .text
  2824                                  L213:
  2825 00000B56 [00000000]              	dd	_printStrVideo
  2826 00000B5A 83ECFC                  	sub	sp, -4
  2827                                  
  2828                                  section .rodata
  2829                                  L214:
  2830 00000188 0A0A2050756C736520-     	db	10,10," Pulse una tecla para continuar ",10
  2830 00000191 756E61207465636C61-
  2830 0000019A 207061726120636F6E-
  2830 000001A3 74696E756172200A   
  2831 000001AB 00                      	times	1 db 0
  2832                                  
  2833                                  section .text
  2834                                  ; RPN'ized expression: "( L214 printStrVideo ) "
  2835                                  ; Expanded expression: " L214  printStrVideo ()4 "
  2836                                  ; Fused expression:    "( L214 , printStrVideo )4 "
  2837                                  section .relod
  2838 000000D8 [5F0B0000]              	dd	L215
  2839                                  section .text
  2840 00000B5D 6668                    	db	0x66, 0x68
  2841                                  L215:
  2842 00000B5F [88010000]              	dd	L214
  2843 00000B63 9A                      	db	0x9A
  2844                                  section .relot
  2845 000000CC [640B0000]              	dd	L216
  2846                                  section .text
  2847                                  L216:
  2848 00000B64 [00000000]              	dd	_printStrVideo
  2849 00000B68 83ECFC                  	sub	sp, -4
  2850 00000B6B FA                      cli
  2851                                  L42:
  2852 00000B6C 66                      	db	0x66
  2853 00000B6D C9                      	leave
  2854 00000B6E CB                      	retf
  2855                                  L217:
  2856                                  
  2857                                  section .fxnsz
  2858 0000000C 5E070000                	dd	L217 - _demo_5
  2859                                  
  2860                                  section .text
  2861                                  L45:
  2862 00000B6F 6655                    	push	ebp
  2863 00000B71 660FB7EC                	movzx	ebp, sp
  2864                                  	;sub	sp,          0
  2865 00000B75 668B7E10                	mov	edi, [bp+16]
  2866 00000B79 66C1CF04                	ror	edi, 4
  2867 00000B7D 8EC7                    	mov	es, di
  2868 00000B7F 66C1EF1C                	shr	edi, 28
  2869 00000B83 668B760C                	mov	esi, [bp+12]
  2870 00000B87 66C1CE04                	ror	esi, 4
  2871 00000B8B 8EDE                    	mov	ds, si
  2872 00000B8D 66C1EE1C                	shr	esi, 28
  2873 00000B91 668B5E08                	mov	ebx, [bp+8]
  2874 00000B95 FC                      	cld
  2875                                  L218:
  2876 00000B96 66B900800000            	mov	ecx, 32768
  2877 00000B9C 6639CB                  	cmp	ebx, ecx
  2878 00000B9F 721B                    	jc	L219
  2879 00000BA1 6629CB                  	sub	ebx, ecx
  2880 00000BA4 F3A4                    	rep	movsb
  2881 00000BA6 83E70F                  	and	di, 15
  2882 00000BA9 8CC0                    	mov	ax, es
  2883 00000BAB 050008                  	add	ax, 2048
  2884 00000BAE 8EC0                    	mov	es, ax
  2885 00000BB0 83E60F                  	and	si, 15
  2886 00000BB3 8CD8                    	mov	ax, ds
  2887 00000BB5 050008                  	add	ax, 2048
  2888 00000BB8 8ED8                    	mov	ds, ax
  2889 00000BBA EBDA                    	jmp	L218
  2890                                  L219:
  2891 00000BBC 89D9                    	mov	cx, bx
  2892 00000BBE F3A4                    	rep	movsb
  2893 00000BC0 668B4610                	mov	eax, [bp+16]
  2894 00000BC4 66                      	db	0x66
  2895 00000BC5 C9                      	leave
  2896 00000BC6 CB                      	retf
  2897                                  
  2898                                  
  2899                                  	extern	_thread_yield
  2900                                  	extern	_thread_exit
  2901                                  	extern	_ptrBiosArea
  2902                                  	extern	_printCarVideo
  2903                                  	extern	_strlen
  2904                                  	extern	_pantallazo
  2905                                  	extern	_leerTeclaListaBDA
  2906                                  	extern	_thread_create
  2907                                  	extern	_thread_join
  2908                                  	extern	_printStrVideo
  2909                                  	extern	_printDecVideo
  2910                                  	extern	_mostrarListaLibres
  2911                                  	extern	_tamBloqueMax
  2912                                  	extern	_printHexVideo
  2913                                  
  2914                                  ; Syntax/declaration table/stack:
  2915                                  ; Bytes used: 14945/40960
  2916                                  
  2917                                  
  2918                                  ; Macro table:
  2919                                  ; Macro __SMALLER_C__ = `0x0100`
  2920                                  ; Macro __SMALLER_C_32__ = ``
  2921                                  ; Macro __HUGE__ = ``
  2922                                  ; Macro __SMALLER_C_SCHAR__ = ``
  2923                                  ; Bytes used: 74/5120
  2924                                  
  2925                                  
  2926                                  ; Identifier table:
  2927                                  ; Ident __floatsisf
  2928                                  ; Ident __floatunsisf
  2929                                  ; Ident __fixsfsi
  2930                                  ; Ident __fixunssfsi
  2931                                  ; Ident __addsf3
  2932                                  ; Ident __subsf3
  2933                                  ; Ident __negsf2
  2934                                  ; Ident __mulsf3
  2935                                  ; Ident __divsf3
  2936                                  ; Ident __lesf2
  2937                                  ; Ident __gesf2
  2938                                  ; Ident intptr_t
  2939                                  ; Ident uintptr_t
  2940                                  ; Ident intmax_t
  2941                                  ; Ident uintmax_t
  2942                                  ; Ident int8_t
  2943                                  ; Ident int_least8_t
  2944                                  ; Ident int_fast8_t
  2945                                  ; Ident uint8_t
  2946                                  ; Ident uint_least8_t
  2947                                  ; Ident uint_fast8_t
  2948                                  ; Ident int16_t
  2949                                  ; Ident int_least16_t
  2950                                  ; Ident int_fast16_t
  2951                                  ; Ident uint16_t
  2952                                  ; Ident uint_least16_t
  2953                                  ; Ident uint_fast16_t
  2954                                  ; Ident int32_t
  2955                                  ; Ident int_least32_t
  2956                                  ; Ident int_fast32_t
  2957                                  ; Ident uint32_t
  2958                                  ; Ident uint_least32_t
  2959                                  ; Ident uint_fast32_t
  2960                                  ; Ident <something>
  2961                                  ; Ident quot
  2962                                  ; Ident rem
  2963                                  ; Ident imaxdiv_t
  2964                                  ; Ident FALSE
  2965                                  ; Ident TRUE
  2966                                  ; Ident bool_t
  2967                                  ; Ident pointer_t
  2968                                  ; Ident funcion_t
  2969                                  ; Ident manejador_t
  2970                                  ; Ident rti_t
  2971                                  ; Ident isr_t
  2972                                  ; Ident handler_t
  2973                                  ; Ident retardarThread_t
  2974                                  ; Ident ptrTVI_t
  2975                                  ; Ident modoSO1_Bin
  2976                                  ; Ident modoSO1_Exe
  2977                                  ; Ident modoSO1_Bs
  2978                                  ; Ident modoSO1_t
  2979                                  ; Ident lo
  2980                                  ; Ident hi
  2981                                  ; Ident lh_t
  2982                                  ; Ident offset
  2983                                  ; Ident segment
  2984                                  ; Ident address_t
  2985                                  ; Ident ptr
  2986                                  ; Ident adr
  2987                                  ; Ident uPtrAdr_t
  2988                                  ; Ident pid_t
  2989                                  ; Ident tid_t
  2990                                  ; Ident uid_t
  2991                                  ; Ident gid_t
  2992                                  ; Ident pindx_t
  2993                                  ; Ident tindx_t
  2994                                  ; Ident df_t
  2995                                  ; Ident dfs_t
  2996                                  ; Ident rindx_t
  2997                                  ; Ident modoAp_t
  2998                                  ; Ident DS
  2999                                  ; Ident ES
  3000                                  ; Ident EDI
  3001                                  ; Ident ESI
  3002                                  ; Ident EBP
  3003                                  ; Ident ESP
  3004                                  ; Ident EBX
  3005                                  ; Ident EDX
  3006                                  ; Ident ECX
  3007                                  ; Ident EAX
  3008                                  ; Ident IP
  3009                                  ; Ident CS
  3010                                  ; Ident Flags
  3011                                  ; Ident tramaDWords_t
  3012                                  ; Ident DI
  3013                                  ; Ident rDI
  3014                                  ; Ident SI
  3015                                  ; Ident rSI
  3016                                  ; Ident BP
  3017                                  ; Ident rBP
  3018                                  ; Ident SP
  3019                                  ; Ident rSP
  3020                                  ; Ident BX
  3021                                  ; Ident rBX
  3022                                  ; Ident DX
  3023                                  ; Ident rDX
  3024                                  ; Ident CX
  3025                                  ; Ident rCX
  3026                                  ; Ident AX
  3027                                  ; Ident rAX
  3028                                  ; Ident tramaWords_t
  3029                                  ; Ident BL
  3030                                  ; Ident BH
  3031                                  ; Ident rB
  3032                                  ; Ident DL
  3033                                  ; Ident DH
  3034                                  ; Ident rD
  3035                                  ; Ident CL
  3036                                  ; Ident CH
  3037                                  ; Ident rC
  3038                                  ; Ident AL
  3039                                  ; Ident AH
  3040                                  ; Ident rA
  3041                                  ; Ident tramaBytes_t
  3042                                  ; Ident td
  3043                                  ; Ident tw
  3044                                  ; Ident tb
  3045                                  ; Ident trama_t
  3046                                  ; Ident tam
  3047                                  ; Ident sig
  3048                                  ; Ident ant
  3049                                  ; Ident aux
  3050                                  ; Ident relleno
  3051                                  ; Ident bloque_t
  3052                                  ; Ident ptrBloque_t
  3053                                  ; Ident cab
  3054                                  ; Ident dobleEnlace_t
  3055                                  ; Ident numElem
  3056                                  ; Ident primero
  3057                                  ; Ident cabecera
  3058                                  ; Ident e
  3059                                  ; Ident c2c_t
  3060                                  ; Ident posicionC2c
  3061                                  ; Ident i
  3062                                  ; Ident c2c
  3063                                  ; Ident eliminarC2c
  3064                                  ; Ident apilarC2c
  3065                                  ; Ident encolarC2c
  3066                                  ; Ident desencolarC2c
  3067                                  ; Ident inicializarC2c
  3068                                  ; Ident compartida
  3069                                  ; Ident ptrC2c_t
  3070                                  ; Ident posicionPC2c
  3071                                  ; Ident eliminarPC2c
  3072                                  ; Ident ptrC2c
  3073                                  ; Ident apilarPC2c
  3074                                  ; Ident encolarPC2c
  3075                                  ; Ident desencolarPC2c
  3076                                  ; Ident inicializarPC2c
  3077                                  ; Ident callBack_t
  3078                                  ; Ident arg
  3079                                  ; Ident num
  3080                                  ; Ident in
  3081                                  ; Ident out
  3082                                  ; Ident max
  3083                                  ; Ident callBack
  3084                                  ; Ident descCcb_t
  3085                                  ; Ident ccb_t
  3086                                  ; Ident inicCcb
  3087                                  ; Ident ccb
  3088                                  ; Ident encolarCcb
  3089                                  ; Ident cb
  3090                                  ; Ident desencolarCcb
  3091                                  ; Ident eliminarCcb
  3092                                  ; Ident eliminarSegCcb
  3093                                  ; Ident segmento
  3094                                  ; Ident vaciarCcb
  3095                                  ; Ident atenderCcb
  3096                                  ; Ident libre
  3097                                  ; Ident preparado
  3098                                  ; Ident ejecutandose
  3099                                  ; Ident bloqueado
  3100                                  ; Ident estado_t
  3101                                  ; Ident modoAp
  3102                                  ; Ident dfs
  3103                                  ; Ident pos
  3104                                  ; Ident dfa_t
  3105                                  ; Ident pid
  3106                                  ; Ident noStatus
  3107                                  ; Ident status
  3108                                  ; Ident ppindx
  3109                                  ; Ident hpindx
  3110                                  ; Ident c2cHijos
  3111                                  ; Ident c2cThreads
  3112                                  ; Ident CSProc
  3113                                  ; Ident tamCodigo
  3114                                  ; Ident desplBSS
  3115                                  ; Ident desplPila
  3116                                  ; Ident tamFichero
  3117                                  ; Ident programa
  3118                                  ; Ident comando
  3119                                  ; Ident nfa
  3120                                  ; Ident tfa
  3121                                  ; Ident uid
  3122                                  ; Ident gid
  3123                                  ; Ident descProceso_t
  3124                                  ; Ident tid
  3125                                  ; Ident estado
  3126                                  ; Ident esperandoPor
  3127                                  ; Ident trama
  3128                                  ; Ident ptindx
  3129                                  ; Ident htindx
  3130                                  ; Ident pindx
  3131                                  ; Ident SSThread
  3132                                  ; Ident SP0
  3133                                  ; Ident descThread_t
  3134                                  ; Ident flibre
  3135                                  ; Ident fRegular
  3136                                  ; Ident fedBloques
  3137                                  ; Ident fedCaracteres
  3138                                  ; Ident tuberia
  3139                                  ; Ident tipoFichero_t
  3140                                  ; Ident tipo
  3141                                  ; Ident nombre
  3142                                  ; Ident rindx
  3143                                  ; Ident menor
  3144                                  ; Ident shareMode
  3145                                  ; Ident contAp_L
  3146                                  ; Ident contAp_E
  3147                                  ; Ident descFichero_t
  3148                                  ; Ident rLibre
  3149                                  ; Ident rDCaracteres
  3150                                  ; Ident rDBloques
  3151                                  ; Ident rTuberia
  3152                                  ; Ident rGP
  3153                                  ; Ident rGM
  3154                                  ; Ident rSF
  3155                                  ; Ident rOtro
  3156                                  ; Ident tipoRecurso_t
  3157                                  ; Ident open_t
  3158                                  ; Ident modo
  3159                                  ; Ident release_t
  3160                                  ; Ident read_t
  3161                                  ; Ident dir
  3162                                  ; Ident nbytes
  3163                                  ; Ident aio_read_t
  3164                                  ; Ident write_t
  3165                                  ; Ident aio_write_t
  3166                                  ; Ident lseek_t
  3167                                  ; Ident whence
  3168                                  ; Ident fcntl_t
  3169                                  ; Ident cmd
  3170                                  ; Ident ioctl_t
  3171                                  ; Ident request
  3172                                  ; Ident eliminar_t
  3173                                  ; Ident tindx
  3174                                  ; Ident c2cFichRec
  3175                                  ; Ident numVI
  3176                                  ; Ident nVInt
  3177                                  ; Ident irq
  3178                                  ; Ident isr
  3179                                  ; Ident open
  3180                                  ; Ident release
  3181                                  ; Ident read
  3182                                  ; Ident aio_read
  3183                                  ; Ident write
  3184                                  ; Ident aio_write
  3185                                  ; Ident lseek
  3186                                  ; Ident fcntl
  3187                                  ; Ident ioctl
  3188                                  ; Ident eliminar
  3189                                  ; Ident descRecurso_t
  3190                                  ; Ident SP0_So1
  3191                                  ; Ident IMR
  3192                                  ; Ident modoSO1
  3193                                  ; Ident ptrDebugWord
  3194                                  ; Ident info_t
  3195                                  ; Ident signatura
  3196                                  ; Ident bytesUltSector
  3197                                  ; Ident sectores
  3198                                  ; Ident numDirReub
  3199                                  ; Ident numParCabecera
  3200                                  ; Ident minAlloc
  3201                                  ; Ident maxAlloc
  3202                                  ; Ident SS0
  3203                                  ; Ident checkSum
  3204                                  ; Ident IP0
  3205                                  ; Ident CS0
  3206                                  ; Ident offTablaReub
  3207                                  ; Ident numOverlay
  3208                                  ; Ident cabecera_t
  3209                                  ; Ident Libres
  3210                                  ; Ident Ocupados
  3211                                  ; Ident e2DescProceso
  3212                                  ; Ident e2DescThread
  3213                                  ; Ident e2DescFichero
  3214                                  ; Ident e2DescRecurso
  3215                                  ; Ident e2Hijos
  3216                                  ; Ident e2Threads
  3217                                  ; Ident e2Preparados
  3218                                  ; Ident e2Urgentes
  3219                                  ; Ident e2POrdenados
  3220                                  ; Ident e2TDormidos
  3221                                  ; Ident e2FichRec
  3222                                  ; Ident e2PFR_t
  3223                                  ; Ident DPLibres
  3224                                  ; Ident DPOcupados
  3225                                  ; Ident DTLibres
  3226                                  ; Ident DTOcupados
  3227                                  ; Ident TPreparados
  3228                                  ; Ident TUrgentes
  3229                                  ; Ident POrdenados
  3230                                  ; Ident TDormidos
  3231                                  ; Ident DFLibres
  3232                                  ; Ident DFOcupados
  3233                                  ; Ident DRLibres
  3234                                  ; Ident DROcupados
  3235                                  ; Ident numColasPFR
  3236                                  ; Ident cPFR_t
  3237                                  ; Ident sigThread_t
  3238                                  ; Ident activarThread_t
  3239                                  ; Ident buscarNuevoThreadActual_t
  3240                                  ; Ident bloquearThreadActual_t
  3241                                  ; Ident ptrIndProcesoActual
  3242                                  ; Ident ptrIndThreadActual
  3243                                  ; Ident ptrTramaThread
  3244                                  ; Ident ptrActivarAlEpilogo
  3245                                  ; Ident ptrDescProceso
  3246                                  ; Ident tamDescProceso
  3247                                  ; Ident ptrDescThread
  3248                                  ; Ident tamDescThread
  3249                                  ; Ident ptrDescFichero
  3250                                  ; Ident ptrDescRecurso
  3251                                  ; Ident ptrC2cPFR
  3252                                  ; Ident ptrE2PFR
  3253                                  ; Ident ptrNivelActivacionSO1H
  3254                                  ; Ident ptrEnHalt
  3255                                  ; Ident ptrHayTic
  3256                                  ; Ident ptrCcbAlEpilogo
  3257                                  ; Ident ptrSS_Thread
  3258                                  ; Ident ptrSP_Thread
  3259                                  ; Ident ptrSS_Kernel
  3260                                  ; Ident ptrSP0_Kernel
  3261                                  ; Ident SP0_SO1H
  3262                                  ; Ident ptrContRodajas
  3263                                  ; Ident ptrContTicsRodaja
  3264                                  ; Ident ptrVIOrg
  3265                                  ; Ident sigThread
  3266                                  ; Ident activarThread
  3267                                  ; Ident buscarNuevoThreadActual
  3268                                  ; Ident bloquearThreadActual
  3269                                  ; Ident ptrListaLibres
  3270                                  ; Ident ptrTamBloqueMax
  3271                                  ; Ident descSO1H_t
  3272                                  ; Ident opciones
  3273                                  ; Ident thread_attribs_t
  3274                                  ; Ident thread_create
  3275                                  ; Ident attribs
  3276                                  ; Ident funcionInicial
  3277                                  ; Ident thread_join
  3278                                  ; Ident res
  3279                                  ; Ident thread_exit
  3280                                  ; Ident thread_yield
  3281                                  ; Ident thread_self
  3282                                  ; Ident car
  3283                                  ; Ident atr
  3284                                  ; Ident pos_t
  3285                                  ; Ident t
  3286                                  ; Ident pantalla_t
  3287                                  ; Ident tamPantalla
  3288                                  ; Ident numFilas
  3289                                  ; Ident pantallazo
  3290                                  ; Ident pantalla
  3291                                  ; Ident esqSupDeF
  3292                                  ; Ident esqSupDeC
  3293                                  ; Ident esqInfIzF
  3294                                  ; Ident esqInfIzC
  3295                                  ; Ident borrarPantalla
  3296                                  ; Ident borrarCPantalla
  3297                                  ; Ident copiarPantalla
  3298                                  ; Ident p1
  3299                                  ; Ident p2
  3300                                  ; Ident copiarCPantalla
  3301                                  ; Ident scrollPantalla
  3302                                  ; Ident scrollCPantalla
  3303                                  ; Ident cursorF
  3304                                  ; Ident cursorC
  3305                                  ; Ident lineaOriginal1
  3306                                  ; Ident lineaOriginal2
  3307                                  ; Ident inicMemVideo
  3308                                  ; Ident finMemVideo
  3309                                  ; Ident goToXYVideo
  3310                                  ; Ident F
  3311                                  ; Ident C
  3312                                  ; Ident printCarVideo
  3313                                  ; Ident printLnVideo
  3314                                  ; Ident printStrVideo
  3315                                  ; Ident str
  3316                                  ; Ident printStrHastaVideo
  3317                                  ; Ident n
  3318                                  ; Ident lleno
  3319                                  ; Ident printDecVideo
  3320                                  ; Ident l
  3321                                  ; Ident printLDecVideo
  3322                                  ; Ident printIntVideo
  3323                                  ; Ident printLIntVideo
  3324                                  ; Ident printHexVideo
  3325                                  ; Ident printLHexVideo
  3326                                  ; Ident printBinVideo
  3327                                  ; Ident printLBinVideo
  3328                                  ; Ident printPtrVideo
  3329                                  ; Ident printByteVideo
  3330                                  ; Ident b
  3331                                  ; Ident printWordVideo
  3332                                  ; Ident w
  3333                                  ; Ident printCadVideo
  3334                                  ; Ident cad
  3335                                  ; Ident HWLIST_t
  3336                                  ; Ident KBDFLAGS_t
  3337                                  ; Ident KBDSTATUS_t
  3338                                  ; Ident VIDEOCONTROL_t
  3339                                  ; Ident DRECSTATUS_t
  3340                                  ; Ident DMOTORSTATUS_t
  3341                                  ; Ident FDOPSTATUS_t
  3342                                  ; Ident VIDEOSWITCHES_t
  3343                                  ; Ident VGAOPTIONS_t
  3344                                  ; Ident VIDEO_paramtbl
  3345                                  ; Ident VIDEO_dynsavearea
  3346                                  ; Ident VIDEO_text_charset
  3347                                  ; Ident VIDEO_graph_charset
  3348                                  ; Ident VIDEO_savetbl2
  3349                                  ; Ident VIDEOSAVETBL_t
  3350                                  ; Ident VPARAM_width
  3351                                  ; Ident VPARAM_height
  3352                                  ; Ident VPARAM_hchar
  3353                                  ; Ident VPARAM_pagesize
  3354                                  ; Ident VPARAM_SEQC
  3355                                  ; Ident VPARAM_MISC
  3356                                  ; Ident VPARAM_CRTC
  3357                                  ; Ident VPARAM_ATC
  3358                                  ; Ident VPARAM_GRC
  3359                                  ; Ident VIDEOPARAM_t
  3360                                  ; Ident IVT
  3361                                  ; Ident COM_base
  3362                                  ; Ident LPT_base
  3363                                  ; Ident XBDA_seg
  3364                                  ; Ident HW_list
  3365                                  ; Ident relleno1
  3366                                  ; Ident basemem_K
  3367                                  ; Ident relleno2
  3368                                  ; Ident KBD_flags
  3369                                  ; Ident relleno3
  3370                                  ; Ident KBD_bufhead
  3371                                  ; Ident KBD_buftail
  3372                                  ; Ident KBD_buffer
  3373                                  ; Ident dRecStatus
  3374                                  ; Ident dMotorStatus
  3375                                  ; Ident motorShutoffCounter
  3376                                  ; Ident fdOpStatus
  3377                                  ; Ident relleno4
  3378                                  ; Ident VIDEO_mode
  3379                                  ; Ident VIDEO_width
  3380                                  ; Ident VIDEO_pagesize
  3381                                  ; Ident VIDEO_pageoff
  3382                                  ; Ident CURSOR_pos
  3383                                  ; Ident CURSOR_shape
  3384                                  ; Ident VIDEO_pagActiva
  3385                                  ; Ident CRTC_base
  3386                                  ; Ident CRT_MODE
  3387                                  ; Ident CRT_PALETTE
  3388                                  ; Ident relleno5
  3389                                  ; Ident BIOS_timer
  3390                                  ; Ident BIOS_overflow
  3391                                  ; Ident BIOS_ctrlbreak
  3392                                  ; Ident BIOS_POSTreset
  3393                                  ; Ident relleno6
  3394                                  ; Ident BIOS_HD_cnt
  3395                                  ; Ident relleno7
  3396                                  ; Ident LPT_timeout
  3397                                  ; Ident BIOS_4B_flags
  3398                                  ; Ident COM_timeout
  3399                                  ; Ident KBD_start
  3400                                  ; Ident KBD_end1
  3401                                  ; Ident VIDEO_lastrow
  3402                                  ; Ident VIDEO_hchar
  3403                                  ; Ident VIDEO_control
  3404                                  ; Ident VIDEO_switches
  3405                                  ; Ident VGA_options
  3406                                  ; Ident VGA_DCC_index
  3407                                  ; Ident relleno8
  3408                                  ; Ident KBD_status
  3409                                  ; Ident TIMER_waitflag
  3410                                  ; Ident TIMER_waitmks
  3411                                  ; Ident TIMER_active
  3412                                  ; Ident relleno9
  3413                                  ; Ident VIDEO_ptrtable
  3414                                  ; Ident relleno10
  3415                                  ; Ident IAC
  3416                                  ; Ident BIOSAREA_t
  3417                                  ; Ident ptrBiosArea
  3418                                  ; Ident ptrFechaBios
  3419                                  ; Ident tipoOrdenador
  3420                                  ; Ident rebootLegacy
  3421                                  ; Ident tipoTeclado
  3422                                  ; Ident leerTeclaBIOS
  3423                                  ; Ident leerTeclaExtBIOS
  3424                                  ; Ident teclaListaBIOS
  3425                                  ; Ident leerTeclaListaBDA
  3426                                  ; Ident teclaListaBDA
  3427                                  ; Ident printCarBIOS
  3428                                  ; Ident printCarPagBIOS
  3429                                  ; Ident pag
  3430                                  ; Ident printCarAtrPagBIOS
  3431                                  ; Ident printLnBIOS
  3432                                  ; Ident printStrBIOS
  3433                                  ; Ident printStrHastaBIOS
  3434                                  ; Ident printDecBIOS
  3435                                  ; Ident printLDecBIOS
  3436                                  ; Ident printIntBIOS
  3437                                  ; Ident printLIntBIOS
  3438                                  ; Ident printHexBIOS
  3439                                  ; Ident printLHexBIOS
  3440                                  ; Ident printBinBIOS
  3441                                  ; Ident printLBinBIOS
  3442                                  ; Ident printPtrBIOS
  3443                                  ; Ident printByteBIOS
  3444                                  ; Ident printWordBIOS
  3445                                  ; Ident printCadBIOS
  3446                                  ; Ident esperarTicsBIOS
  3447                                  ; Ident tics
  3448                                  ; Ident modoDeVideo
  3449                                  ; Ident establecerModoDeVideo
  3450                                  ; Ident paginaActiva
  3451                                  ; Ident establecerPaginaActiva
  3452                                  ; Ident numPagsVideo
  3453                                  ; Ident scrollPagBDA
  3454                                  ; Ident numLineas
  3455                                  ; Ident scrollPagBIOS
  3456                                  ; Ident scrollBIOS
  3457                                  ; Ident goToXYPag
  3458                                  ; Ident fila
  3459                                  ; Ident columna
  3460                                  ; Ident goToXYBIOS
  3461                                  ; Ident setCursorBIOS
  3462                                  ; Ident linea1
  3463                                  ; Ident linea2
  3464                                  ; Ident ocultaCursorBIOS
  3465                                  ; Ident readXYPagBIOS
  3466                                  ; Ident readXYBIOS
  3467                                  ; Ident memBIOS
  3468                                  ; Ident enviarBIOS
  3469                                  ; Ident recibirBIOS
  3470                                  ; Ident hayApmBIOS
  3471                                  ; Ident version
  3472                                  ; Ident connectApmBIOS
  3473                                  ; Ident disconnectApmBIOS
  3474                                  ; Ident cpuIdleBIOS
  3475                                  ; Ident cpuBusyBIOS
  3476                                  ; Ident tamBloqueMax
  3477                                  ; Ident listaLibres
  3478                                  ; Ident k_buscarBloque
  3479                                  ; Ident k_devolverBloque
  3480                                  ; Ident rec_gm
  3481                                  ; Ident inicGM
  3482                                  ; Ident mostrarListaLibres
  3483                                  ; Ident link_gm_k
  3484                                  ; Ident size_t
  3485                                  ; Ident memset
  3486                                  ; Ident memcpy
  3487                                  ; Ident memmove
  3488                                  ; Ident memchr
  3489                                  ; Ident memcmp
  3490                                  ; Ident strcpy
  3491                                  ; Ident strncpy
  3492                                  ; Ident strxfrm
  3493                                  ; Ident strcat
  3494                                  ; Ident strncat
  3495                                  ; Ident strlen
  3496                                  ; Ident strchr
  3497                                  ; Ident strrchr
  3498                                  ; Ident strstr
  3499                                  ; Ident strspn
  3500                                  ; Ident strcspn
  3501                                  ; Ident strpbrk
  3502                                  ; Ident strtok
  3503                                  ; Ident strcmp
  3504                                  ; Ident strncmp
  3505                                  ; Ident strcoll
  3506                                  ; Ident strerror
  3507                                  ; Ident numThreads
  3508                                  ; Ident f_1
  3509                                  ; Ident c_1
  3510                                  ; Ident f_2
  3511                                  ; Ident c_2
  3512                                  ; Ident alto
  3513                                  ; Ident ancho
  3514                                  ; Ident fin
  3515                                  ; Ident renglon
  3516                                  ; Ident numOrden
  3517                                  ; Ident funcion
  3518                                  ; Ident funcioncilla
  3519                                  ; Ident retardarTics
  3520                                  ; Ident demo_5
  3521                                  ; Ident frase
  3522                                  ; Ident f1
  3523                                  ; Ident c1
  3524                                  ; Ident f2
  3525                                  ; Ident c2
  3526                                  ; Bytes used: 6448/16384
  3527                                  
  3528                                  ; Next label number: 220
  3529                                  ; Compilation succeeded.
