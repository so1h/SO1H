     1                                  bits 16
     2                                  
     3                                  ; glb intptr_t : int
     4                                  ; glb uintptr_t : unsigned
     5                                  ; glb intmax_t : int
     6                                  ; glb uintmax_t : unsigned
     7                                  ; glb int8_t : signed char
     8                                  ; glb int_least8_t : signed char
     9                                  ; glb int_fast8_t : signed char
    10                                  ; glb uint8_t : unsigned char
    11                                  ; glb uint_least8_t : unsigned char
    12                                  ; glb uint_fast8_t : unsigned char
    13                                  ; glb int16_t : short
    14                                  ; glb int_least16_t : short
    15                                  ; glb int_fast16_t : short
    16                                  ; glb uint16_t : unsigned short
    17                                  ; glb uint_least16_t : unsigned short
    18                                  ; glb uint_fast16_t : unsigned short
    19                                  ; glb int32_t : int
    20                                  ; glb int_least32_t : int
    21                                  ; glb int_fast32_t : int
    22                                  ; glb uint32_t : unsigned
    23                                  ; glb uint_least32_t : unsigned
    24                                  ; glb uint_fast32_t : unsigned
    25                                  ; glb imaxdiv_t : struct <something>
    26                                  ; glb bool_t : int
    27                                  ; glb pointer_t : * unsigned char
    28                                  ; glb funcion_t : * (
    29                                  ; prm     <something> : * void
    30                                  ;     ) * void
    31                                  ; glb manejador_t : * (void) void
    32                                  ; glb rti_t : * (void) void
    33                                  ; glb isr_t : * (void) void
    34                                  ; glb handler_t : * (void) void
    35                                  ; glb retardarThread_t : * (void) int
    36                                  ; glb ptrTVI_t : * * (void) void
    37                                  ; glb modoSO1_t : int
    38                                  ; glb lh_t : struct <something>
    39                                  ; glb address_t : struct <something>
    40                                  ; glb uPtrAdr_t : union <something>
    41                                  ; glb pid_t : int
    42                                  ; glb tid_t : int
    43                                  ; glb uid_t : int
    44                                  ; glb gid_t : int
    45                                  ; glb pindx_t : int
    46                                  ; glb tindx_t : int
    47                                  ; glb df_t : int
    48                                  ; glb dfs_t : int
    49                                  ; glb rindx_t : int
    50                                  ; RPN'ized expression: "256 "
    51                                  ; Expanded expression: "256 "
    52                                  ; Expression value: 256
    53                                  ; glb VIOrg : [256u] * (void) void
    54                                  ; RPN'ized expression: "256 "
    55                                  ; Expanded expression: "256 "
    56                                  ; Expression value: 256
    57                                  ; glb recVInt : [256u] int
    58                                  ; glb redirigirInt : (
    59                                  ; prm     nVInt : unsigned char
    60                                  ; prm     isr : * (void) void
    61                                  ;     ) void
    62                                  ; glb redirigirIntHardware : (
    63                                  ; prm     irq : unsigned char
    64                                  ; prm     isr : * (void) void
    65                                  ;     ) void
    66                                  ; glb restablecerInt : (
    67                                  ; prm     nVInt : int
    68                                  ;     ) void
    69                                  ; glb inicTVI : (void) void
    70                                  ; glb link_ints : (void) void
    71                                  ; glb modoAp_t : unsigned short
    72                                  ; glb tramaDWords_t : struct <something>
    73                                  ; glb tramaWords_t : struct <something>
    74                                  ; RPN'ized expression: "2 "
    75                                  ; Expanded expression: "2 "
    76                                  ; Expression value: 2
    77                                  ; RPN'ized expression: "2 "
    78                                  ; Expanded expression: "2 "
    79                                  ; Expression value: 2
    80                                  ; RPN'ized expression: "2 "
    81                                  ; Expanded expression: "2 "
    82                                  ; Expression value: 2
    83                                  ; RPN'ized expression: "2 "
    84                                  ; Expanded expression: "2 "
    85                                  ; Expression value: 2
    86                                  ; glb tramaBytes_t : struct <something>
    87                                  ; glb trama_t : union <something>
    88                                  ; RPN'ized expression: "8 "
    89                                  ; Expanded expression: "8 "
    90                                  ; Expression value: 8
    91                                  ; glb bloque_t : struct <something>
    92                                  ; glb ptrBloque_t : * struct <something>
    93                                  ; glb dobleEnlace_t : struct <something>
    94                                  ; glb c2c_t : struct <something>
    95                                  ; glb posicionC2c : (
    96                                  ; prm     i : int
    97                                  ; prm     c2c : struct <something>
    98                                  ;     ) int
    99                                  ; glb eliminarC2c : (
   100                                  ; prm     i : int
   101                                  ; prm     c2c : struct <something>
   102                                  ;     ) void
   103                                  ; glb apilarC2c : (
   104                                  ; prm     i : int
   105                                  ; prm     c2c : struct <something>
   106                                  ;     ) void
   107                                  ; glb encolarC2c : (
   108                                  ; prm     i : int
   109                                  ; prm     c2c : struct <something>
   110                                  ;     ) void
   111                                  ; glb desencolarC2c : (
   112                                  ; prm     c2c : struct <something>
   113                                  ;     ) int
   114                                  ; glb inicializarC2c : (
   115                                  ; prm     c2c : * struct <something>
   116                                  ; prm     e : * struct <something>
   117                                  ; prm     cabecera : int
   118                                  ; prm     compartida : int
   119                                  ;     ) void
   120                                  ; glb ptrC2c_t : * struct <something>
   121                                  ; glb posicionPC2c : (
   122                                  ; prm     i : int
   123                                  ; prm     c2c : * struct <something>
   124                                  ;     ) int
   125                                  ; glb eliminarPC2c : (
   126                                  ; prm     i : int
   127                                  ; prm     ptrC2c : * struct <something>
   128                                  ;     ) void
   129                                  ; glb apilarPC2c : (
   130                                  ; prm     i : int
   131                                  ; prm     ptrC2c : * struct <something>
   132                                  ;     ) void
   133                                  ; glb encolarPC2c : (
   134                                  ; prm     i : int
   135                                  ; prm     ptrC2c : * struct <something>
   136                                  ;     ) void
   137                                  ; glb desencolarPC2c : (
   138                                  ; prm     ptrC2c : * struct <something>
   139                                  ;     ) int
   140                                  ; glb inicializarPC2c : (
   141                                  ; prm     ptrC2c : * struct <something>
   142                                  ; prm     e : * struct <something>
   143                                  ; prm     cabecera : int
   144                                  ; prm     compartida : int
   145                                  ;     ) void
   146                                  ; glb callBack_t : * (
   147                                  ; prm     arg : * void
   148                                  ;     ) int
   149                                  ; RPN'ized expression: "10 "
   150                                  ; Expanded expression: "10 "
   151                                  ; Expression value: 10
   152                                  ; glb descCcb_t : struct <something>
   153                                  ; glb ccb_t : * struct <something>
   154                                  ; glb inicCcb : (
   155                                  ; prm     ccb : * struct <something>
   156                                  ; prm     max : unsigned short
   157                                  ;     ) int
   158                                  ; glb encolarCcb : (
   159                                  ; prm     cb : * (
   160                                  ; prm         arg : * void
   161                                  ;         ) int
   162                                  ; prm     ccb : * struct <something>
   163                                  ;     ) int
   164                                  ; glb desencolarCcb : (
   165                                  ; prm     ccb : * struct <something>
   166                                  ;     ) * (
   167                                  ; prm     arg : * void
   168                                  ;     ) int
   169                                  ; glb eliminarCcb : (
   170                                  ; prm     cb : * (
   171                                  ; prm         arg : * void
   172                                  ;         ) int
   173                                  ; prm     ccb : * struct <something>
   174                                  ;     ) int
   175                                  ; glb eliminarSegCcb : (
   176                                  ; prm     segmento : unsigned short
   177                                  ; prm     ccb : * struct <something>
   178                                  ;     ) int
   179                                  ; glb vaciarCcb : (
   180                                  ; prm     ccb : * struct <something>
   181                                  ;     ) int
   182                                  ; glb atenderCcb : (
   183                                  ; prm     ccb : * struct <something>
   184                                  ;     ) int
   185                                  ; glb estado_t : int
   186                                  ; glb dfa_t : struct <something>
   187                                  ; RPN'ized expression: "12 "
   188                                  ; Expanded expression: "12 "
   189                                  ; Expression value: 12
   190                                  ; RPN'ized expression: "80 "
   191                                  ; Expanded expression: "80 "
   192                                  ; Expression value: 80
   193                                  ; RPN'ized expression: "10 "
   194                                  ; Expanded expression: "10 "
   195                                  ; Expression value: 10
   196                                  ; glb descProceso_t : struct <something>
   197                                  ; glb descThread_t : struct <something>
   198                                  ; glb tipoFichero_t : int
   199                                  ; RPN'ized expression: "9 "
   200                                  ; Expanded expression: "9 "
   201                                  ; Expression value: 9
   202                                  ; glb descFichero_t : struct <something>
   203                                  ; glb tipoRecurso_t : int
   204                                  ; glb open_t : * (
   205                                  ; prm     dfs : int
   206                                  ; prm     modo : unsigned short
   207                                  ;     ) int
   208                                  ; glb release_t : * (
   209                                  ; prm     dfs : int
   210                                  ;     ) int
   211                                  ; glb read_t : * (
   212                                  ; prm     dfs : int
   213                                  ; prm     dir : * unsigned char
   214                                  ; prm     nbytes : unsigned short
   215                                  ;     ) int
   216                                  ; glb aio_read_t : * (
   217                                  ; prm     dfs : int
   218                                  ; prm     dir : * unsigned char
   219                                  ; prm     nbytes : unsigned short
   220                                  ;     ) int
   221                                  ; glb write_t : * (
   222                                  ; prm     dfs : int
   223                                  ; prm     dir : * unsigned char
   224                                  ; prm     nbytes : unsigned short
   225                                  ;     ) int
   226                                  ; glb aio_write_t : * (
   227                                  ; prm     dfs : int
   228                                  ; prm     dir : * unsigned char
   229                                  ; prm     nbytes : unsigned short
   230                                  ;     ) int
   231                                  ; glb lseek_t : * (
   232                                  ; prm     dfs : int
   233                                  ; prm     pos : int
   234                                  ; prm     whence : unsigned short
   235                                  ;     ) int
   236                                  ; glb fcntl_t : * (
   237                                  ; prm     dfs : int
   238                                  ; prm     cmd : unsigned short
   239                                  ; prm     arg : unsigned short
   240                                  ;     ) int
   241                                  ; glb ioctl_t : * (
   242                                  ; prm     dfs : int
   243                                  ; prm     request : unsigned short
   244                                  ; prm     arg : unsigned short
   245                                  ;     ) int
   246                                  ; glb eliminar_t : * (
   247                                  ; prm     pindx : int
   248                                  ;     ) int
   249                                  ; RPN'ized expression: "12 "
   250                                  ; Expanded expression: "12 "
   251                                  ; Expression value: 12
   252                                  ; RPN'ized expression: "2 "
   253                                  ; Expanded expression: "2 "
   254                                  ; Expression value: 2
   255                                  ; RPN'ized expression: "2 "
   256                                  ; Expanded expression: "2 "
   257                                  ; Expression value: 2
   258                                  ; RPN'ized expression: "2 "
   259                                  ; Expanded expression: "2 "
   260                                  ; Expression value: 2
   261                                  ; glb descRecurso_t : struct <something>
   262                                  ; glb info_t : struct <something>
   263                                  ; glb cabecera_t : struct <something>
   264                                  ; RPN'ized expression: "16 1 + "
   265                                  ; Expanded expression: "17 "
   266                                  ; Expression value: 17
   267                                  ; RPN'ized expression: "16 2 + "
   268                                  ; Expanded expression: "18 "
   269                                  ; Expression value: 18
   270                                  ; RPN'ized expression: "2010 1 + "
   271                                  ; Expanded expression: "2011 "
   272                                  ; Expression value: 2011
   273                                  ; RPN'ized expression: "2010 2 + "
   274                                  ; Expanded expression: "2012 "
   275                                  ; Expression value: 2012
   276                                  ; RPN'ized expression: "20 1 + "
   277                                  ; Expanded expression: "21 "
   278                                  ; Expression value: 21
   279                                  ; RPN'ized expression: "20 2 + "
   280                                  ; Expanded expression: "22 "
   281                                  ; Expression value: 22
   282                                  ; RPN'ized expression: "14 1 + "
   283                                  ; Expanded expression: "15 "
   284                                  ; Expression value: 15
   285                                  ; RPN'ized expression: "14 2 + "
   286                                  ; Expanded expression: "16 "
   287                                  ; Expression value: 16
   288                                  ; RPN'ized expression: "16 16 + "
   289                                  ; Expanded expression: "32 "
   290                                  ; Expression value: 32
   291                                  ; RPN'ized expression: "2010 16 + "
   292                                  ; Expanded expression: "2026 "
   293                                  ; Expression value: 2026
   294                                  ; RPN'ized expression: "2010 1 + "
   295                                  ; Expanded expression: "2011 "
   296                                  ; Expression value: 2011
   297                                  ; RPN'ized expression: "2010 1 + "
   298                                  ; Expanded expression: "2011 "
   299                                  ; Expression value: 2011
   300                                  ; RPN'ized expression: "16 1 + "
   301                                  ; Expanded expression: "17 "
   302                                  ; Expression value: 17
   303                                  ; RPN'ized expression: "2010 1 + "
   304                                  ; Expanded expression: "2011 "
   305                                  ; Expression value: 2011
   306                                  ; RPN'ized expression: "20 14 + "
   307                                  ; Expanded expression: "34 "
   308                                  ; Expression value: 34
   309                                  ; glb e2PFR_t : struct <something>
   310                                  ; glb cPFR_t : int
   311                                  ; glb sigThread_t : * () int
   312                                  ; glb activarThread_t : * (
   313                                  ; prm     tindx : int
   314                                  ;     ) void
   315                                  ; glb buscarNuevoThreadActual_t : * (void) void
   316                                  ; glb bloquearThreadActual_t : * (
   317                                  ; prm     rindx : int
   318                                  ;     ) void
   319                                  ; glb descSO1H_t : struct <something>
   320                                  ; RPN'ized expression: "12 "
   321                                  ; Expanded expression: "12 "
   322                                  ; Expression value: 12
   323                                  ; RPN'ized expression: "80 "
   324                                  ; Expanded expression: "80 "
   325                                  ; Expression value: 80
   326                                  ; RPN'ized expression: "10 "
   327                                  ; Expanded expression: "10 "
   328                                  ; Expression value: 10
   329                                  ; glb descProcesoExt_t : struct <something>
   330                                  ; glb descThreadExt_t : struct <something>
   331                                  ; RPN'ized expression: "16 "
   332                                  ; Expanded expression: "16 "
   333                                  ; Expression value: 16
   334                                  ; glb descProceso : [16u] struct <something>
   335                                  ; RPN'ized expression: "2010 "
   336                                  ; Expanded expression: "2010 "
   337                                  ; Expression value: 2010
   338                                  ; glb descThread : [2010u] struct <something>
   339                                  ; RPN'ized expression: "20 "
   340                                  ; Expanded expression: "20 "
   341                                  ; Expression value: 20
   342                                  ; glb descFichero : [20u] struct <something>
   343                                  ; RPN'ized expression: "14 "
   344                                  ; Expanded expression: "14 "
   345                                  ; Expression value: 14
   346                                  ; glb descRecurso : [14u] struct <something>
   347                                  ; RPN'ized expression: "numColasPFR "
   348                                  ; Expanded expression: "12 "
   349                                  ; Expression value: 12
   350                                  ; glb c2cPFR : [12u] struct <something>
   351                                  ; glb e2PFR : struct <something>
   352                                  ; glb descCcbAlEpilogo : struct <something>
   353                                  ; glb ccbAlEpilogo : * struct <something>
   354                                  ; glb tramaThread : * union <something>
   355                                  ; glb tramaTarea : * union <something>
   356                                  ; glb indThreadActual : int
   357                                  ; glb indProcesoActual : int
   358                                  ; glb indThreadDeSuperficie : int
   359                                  ; glb contRodajas : unsigned
   360                                  ; glb contTicsRodaja : int
   361                                  ; glb contadorTimer00 : unsigned short
   362                                  ; glb contOcioso : int
   363                                  ; glb nuevoPid : (void) int
   364                                  ; glb nuevoTid : (void) int
   365                                  ; glb indice : (
   366                                  ; prm     tid : int
   367                                  ;     ) int
   368                                  ; glb sigThread : (void) int
   369                                  ; glb activarThread : (
   370                                  ; prm     tindx : int
   371                                  ;     ) int
   372                                  ; glb registrarEnPOrdenados : (
   373                                  ; prm     pindx : int
   374                                  ;     ) void
   375                                  ; glb crearThread : (
   376                                  ; prm     funcion : * (
   377                                  ; prm         <something> : * void
   378                                  ;         ) * void
   379                                  ; prm     SP0 : unsigned short
   380                                  ; prm     arg : * void
   381                                  ; prm     pindx : int
   382                                  ;     ) int
   383                                  ; glb crearProceso : (
   384                                  ; prm     segmento : unsigned short
   385                                  ; prm     tam : unsigned short
   386                                  ; prm     tamFich : unsigned
   387                                  ; prm     programa : * char
   388                                  ; prm     comando : * char
   389                                  ; prm     pindx : int
   390                                  ;     ) int
   391                                  ; glb inicProcesos : (void) void
   392                                  ; glb resetPids : (void) void
   393                                  ; glb resetTids : (void) void
   394                                  ; glb terminarThreadIndx : (
   395                                  ; prm     tindx : int
   396                                  ;     ) int
   397                                  ; glb eliminarThreadIndx : (
   398                                  ; prm     tindx : int
   399                                  ;     ) int
   400                                  ; glb terminarProcIndx : (
   401                                  ; prm     pindx : int
   402                                  ;     ) int
   403                                  ; glb eliminarProcIndx : (
   404                                  ; prm     pindx : int
   405                                  ;     ) int
   406                                  ; glb matarThreadIndx : (
   407                                  ; prm     tindx : int
   408                                  ;     ) int
   409                                  ; glb matarProcIndx : (
   410                                  ; prm     pindx : int
   411                                  ;     ) int
   412                                  ; glb link_procs : (void) void
   413                                  ; glb inicRecursos : (void) void
   414                                  ; glb crearRec : (
   415                                  ; prm     dR : * struct <something>
   416                                  ;     ) int
   417                                  ; glb crearFich : (
   418                                  ; prm     nombre : * char
   419                                  ; prm     rindx : int
   420                                  ; prm     menor : unsigned short
   421                                  ; prm     tipo : int
   422                                  ;     ) int
   423                                  ; glb destruirFich : (
   424                                  ; prm     dfs : int
   425                                  ;     ) int
   426                                  ; glb destruirRec : (
   427                                  ; prm     nombre : * char
   428                                  ;     ) int
   429                                  ; glb link_recurs : (void) void
   430                                   section .text           
   431                                     global _link_recurs_k 
   432                                   _link_recurs_k:         
   433                                  
   434                                  ; glb crearRec : (
   435                                  ; prm     dR : * struct <something>
   436                                  ;     ) int
   437                                  section .text
   438                                  	global	_crearRec
   439                                  _crearRec:
   440 00000000 6655                    	push	ebp
   441 00000002 660FB7EC                	movzx	ebp, sp
   442 00000006 83EC14                  	 sub	sp,         20
   443                                  ; loc     dR : (@8): * struct <something>
   444                                  ; loc     rindx : (@-4): int
   445                                  ; loc     nVInt : (@-8): unsigned char
   446                                  ; loc     irq : (@-12): unsigned char
   447                                  ; loc     isr : (@-16): * (void) void
   448                                  ; loc     i : (@-20): int
   449                                  ; if
   450                                  ; RPN'ized expression: "dR tipo -> *u rLibre <= dR tipo -> *u rOtro > || "
   451                                  ; Expanded expression: "(@8) *(4) 12 + *(4) 0 <= [sh||->5] (@8) *(4) 12 + *(4) 7 > ||[5] "
   452                                  ; Fused expression:    "+ *(@8) 12 <= *ax 0 [sh||->5] + *(@8) 12 > *ax 7 ||[5]  "
   453 00000009 668B4608                	mov	eax, [bp+8]
   454 0000000D 6683C00C                	add	eax, 12
   455 00000011 6689C3                  	mov	ebx, eax
   456 00000014 6689DE                  	mov	esi, ebx
   457 00000017 66C1CE04                	ror	esi, 4
   458 0000001B 8EDE                    	mov	ds, si
   459 0000001D 66C1EE1C                	shr	esi, 28
   460 00000021 668B04                  	mov	eax, [si]
   461 00000024 6683F800                	cmp	eax, 0
   462 00000028 0F9EC0                  	setle	al
   463 0000002B 660FB6C0                	movzx	eax, al
   464                                  ; JumpIfNotZero
   465 0000002F 6685C0                  	test	eax, eax
   466 00000032 7526                    	jne	L5
   467 00000034 668B4608                	mov	eax, [bp+8]
   468 00000038 6683C00C                	add	eax, 12
   469 0000003C 6689C3                  	mov	ebx, eax
   470 0000003F 6689DE                  	mov	esi, ebx
   471 00000042 66C1CE04                	ror	esi, 4
   472 00000046 8EDE                    	mov	ds, si
   473 00000048 66C1EE1C                	shr	esi, 28
   474 0000004C 668B04                  	mov	eax, [si]
   475 0000004F 6683F807                	cmp	eax, 7
   476 00000053 0F9FC0                  	setg	al
   477 00000056 660FB6C0                	movzx	eax, al
   478                                  L5:
   479                                  ; JumpIfZero
   480 0000005A 6685C0                  	test	eax, eax
   481 0000005D 7409                    	je	L3
   482                                  ; return
   483                                  ; RPN'ized expression: "1 -u "
   484                                  ; Expanded expression: "-1 "
   485                                  ; Expression value: -1
   486                                  ; Fused expression:    "-1  "
   487 0000005F 66B8FFFFFFFF            	mov	eax, -1
   488 00000065 E97108                  	jmp	L1
   489                                  L3:
   490                                  ; if
   491                                  ; RPN'ized expression: "dR numVI -> *u 2 > "
   492                                  ; Expanded expression: "(@8) *(4) 40 + *(1) 2 > "
   493                                  ; Fused expression:    "+ *(@8) 40 > *ax 2 IF! "
   494 00000068 668B4608                	mov	eax, [bp+8]
   495 0000006C 6683C028                	add	eax, 40
   496 00000070 6689C3                  	mov	ebx, eax
   497 00000073 6689DE                  	mov	esi, ebx
   498 00000076 66C1CE04                	ror	esi, 4
   499 0000007A 8EDE                    	mov	ds, si
   500 0000007C 66C1EE1C                	shr	esi, 28
   501 00000080 8A04                    	mov	al, [si]
   502 00000082 660FB6C0                	movzx	eax, al
   503 00000086 6683F802                	cmp	eax, 2
   504 0000008A 7E09                    	jle	L6
   505                                  ; return
   506                                  ; RPN'ized expression: "2 -u "
   507                                  ; Expanded expression: "-2 "
   508                                  ; Expression value: -2
   509                                  ; Fused expression:    "-2  "
   510 0000008C 66B8FEFFFFFF            	mov	eax, -2
   511 00000092 E94408                  	jmp	L1
   512                                  L6:
   513                                  ; RPN'ized expression: "rindx c2cPFR DROcupados + *u &u primero -> *u = "
   514                                  ; Expanded expression: "(@-4) c2cPFR 176 + 4 + *(4) =(4) "
   515                                  ; Fused expression:    "c2cPFR + ax 176 + ax 4 =(204) *(@-4) *ax "
   516                                  section .relod
   517 00000000 [97000000]              	dd	L8
   518                                  section .text
   519 00000095 66B8                    	db	0x66, 0xB8
   520                                  L8:
   521 00000097 [00000000]              	dd	_c2cPFR
   522 0000009B 6605B0000000            	add	eax, 176
   523 000000A1 6683C004                	add	eax, 4
   524 000000A5 6689C3                  	mov	ebx, eax
   525 000000A8 6689DE                  	mov	esi, ebx
   526 000000AB 66C1CE04                	ror	esi, 4
   527 000000AF 8EDE                    	mov	ds, si
   528 000000B1 66C1EE1C                	shr	esi, 28
   529 000000B5 668B04                  	mov	eax, [si]
   530 000000B8 668946FC                	mov	[bp-4], eax
   531                                  ; while
   532                                  ; RPN'ized expression: "rindx c2cPFR DROcupados + *u &u cabecera -> *u != "
   533                                  ; Expanded expression: "(@-4) *(4) c2cPFR 176 + 8 + *(4) != "
   534                                  L9:
   535                                  ; Fused expression:    "c2cPFR + ax 176 + ax 8 != *(@-4) *ax IF! "
   536                                  section .relod
   537 00000004 [BE000000]              	dd	L11
   538                                  section .text
   539 000000BC 66B8                    	db	0x66, 0xB8
   540                                  L11:
   541 000000BE [00000000]              	dd	_c2cPFR
   542 000000C2 6605B0000000            	add	eax, 176
   543 000000C8 6683C008                	add	eax, 8
   544 000000CC 6689C3                  	mov	ebx, eax
   545 000000CF 6689DE                  	mov	esi, ebx
   546 000000D2 66C1CE04                	ror	esi, 4
   547 000000D6 8EDE                    	mov	ds, si
   548 000000D8 66C1EE1C                	shr	esi, 28
   549 000000DC 668B0C                  	mov	ecx, [si]
   550 000000DF 668B46FC                	mov	eax, [bp-4]
   551 000000E3 6639C8                  	cmp	eax, ecx
   552 000000E6 0F848300                	je	L10
   553                                  ; {
   554                                  ; if
   555                                  ; RPN'ized expression: "( dR nombre -> *u , descRecurso rindx + *u &u nombre -> *u strcmp ) 0 == "
   556                                  ; Expanded expression: " (@8) *(4) 0 +  descRecurso (@-4) *(4) 96 * + 0 +  strcmp ()8 0 == "
   557                                  ; Fused expression:    "( + *(@8) 0 , descRecurso push-ax * *(@-4) 96 + *sp ax + ax 0 , strcmp )8 == ax 0 IF! "
   558 000000EA 668B4608                	mov	eax, [bp+8]
   559 000000EE 6650                    	push	eax
   560                                  section .relod
   561 00000008 [F2000000]              	dd	L14
   562                                  section .text
   563 000000F0 66B8                    	db	0x66, 0xB8
   564                                  L14:
   565 000000F2 [00000000]              	dd	_descRecurso
   566 000000F6 6650                    	push	eax
   567 000000F8 668B46FC                	mov	eax, [bp-4]
   568 000000FC 666BC060                	imul	eax, eax, 96
   569 00000100 6689C1                  	mov	ecx, eax
   570 00000103 6658                    	pop	eax
   571 00000105 6601C8                  	add	eax, ecx
   572 00000108 6650                    	push	eax
   573 0000010A 9A                      	db	0x9A
   574                                  section .relot
   575 00000000 [0B010000]              	dd	L15
   576                                  section .text
   577                                  L15:
   578 0000010B [00000000]              	dd	_strcmp
   579 0000010F 83ECF8                  	sub	sp, -8
   580 00000112 6683F800                	cmp	eax, 0
   581 00000116 7509                    	jne	L12
   582                                  ; return
   583                                  ; RPN'ized expression: "3 -u "
   584                                  ; Expanded expression: "-3 "
   585                                  ; Expression value: -3
   586                                  ; Fused expression:    "-3  "
   587 00000118 66B8FDFFFFFF            	mov	eax, -3
   588 0000011E E9B807                  	jmp	L1
   589                                  L12:
   590                                  ; RPN'ized expression: "rindx c2cPFR DROcupados + *u &u e -> *u rindx + *u &u sig -> *u = "
   591                                  ; Expanded expression: "(@-4) c2cPFR 176 + 12 + *(4) (@-4) *(4) 12 * + 0 + *(4) =(4) "
   592                                  ; Fused expression:    "c2cPFR + ax 176 + ax 12 push-ax * *(@-4) 12 + **sp ax + ax 0 =(204) *(@-4) *ax "
   593                                  section .relod
   594 0000000C [23010000]              	dd	L16
   595                                  section .text
   596 00000121 66B8                    	db	0x66, 0xB8
   597                                  L16:
   598 00000123 [00000000]              	dd	_c2cPFR
   599 00000127 6605B0000000            	add	eax, 176
   600 0000012D 6683C00C                	add	eax, 12
   601 00000131 6650                    	push	eax
   602 00000133 668B46FC                	mov	eax, [bp-4]
   603 00000137 666BC00C                	imul	eax, eax, 12
   604 0000013B 6689C1                  	mov	ecx, eax
   605 0000013E 665B                    	pop	ebx
   606 00000140 6689DE                  	mov	esi, ebx
   607 00000143 66C1CE04                	ror	esi, 4
   608 00000147 8EDE                    	mov	ds, si
   609 00000149 66C1EE1C                	shr	esi, 28
   610 0000014D 668B04                  	mov	eax, [si]
   611 00000150 6601C8                  	add	eax, ecx
   612 00000153 6689C3                  	mov	ebx, eax
   613 00000156 6689DE                  	mov	esi, ebx
   614 00000159 66C1CE04                	ror	esi, 4
   615 0000015D 8EDE                    	mov	ds, si
   616 0000015F 66C1EE1C                	shr	esi, 28
   617 00000163 668B04                  	mov	eax, [si]
   618 00000166 668946FC                	mov	[bp-4], eax
   619                                  ; }
   620 0000016A E94FFF                  	jmp	L9
   621                                  L10:
   622                                  ; if
   623                                  ; RPN'ized expression: "c2cPFR DRLibres + *u &u numElem -> *u 0 == "
   624                                  ; Expanded expression: "c2cPFR 160 + 0 + *(4) 0 == "
   625                                  ; Fused expression:    "c2cPFR + ax 160 + ax 0 == *ax 0 IF! "
   626                                  section .relod
   627 00000010 [6F010000]              	dd	L19
   628                                  section .text
   629 0000016D 66B8                    	db	0x66, 0xB8
   630                                  L19:
   631 0000016F [00000000]              	dd	_c2cPFR
   632 00000173 6605A0000000            	add	eax, 160
   633 00000179 6689C3                  	mov	ebx, eax
   634 0000017C 6689DE                  	mov	esi, ebx
   635 0000017F 66C1CE04                	ror	esi, 4
   636 00000183 8EDE                    	mov	ds, si
   637 00000185 66C1EE1C                	shr	esi, 28
   638 00000189 668B04                  	mov	eax, [si]
   639 0000018C 6683F800                	cmp	eax, 0
   640 00000190 7509                    	jne	L17
   641                                  ; return
   642                                  ; RPN'ized expression: "4 -u "
   643                                  ; Expanded expression: "-4 "
   644                                  ; Expression value: -4
   645                                  ; Fused expression:    "-4  "
   646 00000192 66B8FCFFFFFF            	mov	eax, -4
   647 00000198 E93E07                  	jmp	L1
   648                                  L17:
   649                                  ; for
   650                                  ; RPN'ized expression: "i 0 = "
   651                                  ; Expanded expression: "(@-20) 0 =(4) "
   652                                  ; Fused expression:    "=(204) *(@-20) 0 "
   653 0000019B 66B800000000            	mov	eax, 0
   654 000001A1 668946EC                	mov	[bp-20], eax
   655                                  L20:
   656                                  ; RPN'ized expression: "i dR numVI -> *u < "
   657                                  ; Expanded expression: "(@-20) *(4) (@8) *(4) 40 + *(1) < "
   658                                  ; Fused expression:    "+ *(@8) 40 < *(@-20) *ax IF! "
   659 000001A5 668B4608                	mov	eax, [bp+8]
   660 000001A9 6683C028                	add	eax, 40
   661 000001AD 6689C3                  	mov	ebx, eax
   662 000001B0 6689DE                  	mov	esi, ebx
   663 000001B3 66C1CE04                	ror	esi, 4
   664 000001B7 8EDE                    	mov	ds, si
   665 000001B9 66C1EE1C                	shr	esi, 28
   666 000001BD 660FB60C                	movzx	ecx, byte [si]
   667 000001C1 668B46EC                	mov	eax, [bp-20]
   668 000001C5 6639C8                  	cmp	eax, ecx
   669 000001C8 7D63                    	jge	L23
   670                                  ; RPN'ized expression: "i ++p "
   671                                  ; Expanded expression: "(@-20) ++p(4) "
   672                                  ; if
   673                                  ; RPN'ized expression: "recVInt dR nVInt -> *u i + *u + *u 0 >= "
   674                                  ; Expanded expression: "recVInt (@8) *(4) 41 + (@-20) *(4) + *(1) 4 * + *(4) 0 >= "
   675                                  ; Fused expression:    "recVInt push-ax + *(@8) 41 + ax *(@-20) * *ax 4 + *sp ax >= *ax 0 IF! "
   676                                  section .relod
   677 00000014 [CC010000]              	dd	L26
   678                                  section .text
   679 000001CA 66B8                    	db	0x66, 0xB8
   680                                  L26:
   681 000001CC [00000000]              	dd	_recVInt
   682 000001D0 6650                    	push	eax
   683 000001D2 668B4608                	mov	eax, [bp+8]
   684 000001D6 6683C029                	add	eax, 41
   685 000001DA 660346EC                	add	eax, [bp-20]
   686 000001DE 6689C3                  	mov	ebx, eax
   687 000001E1 6689DE                  	mov	esi, ebx
   688 000001E4 66C1CE04                	ror	esi, 4
   689 000001E8 8EDE                    	mov	ds, si
   690 000001EA 66C1EE1C                	shr	esi, 28
   691 000001EE 8A04                    	mov	al, [si]
   692 000001F0 660FB6C0                	movzx	eax, al
   693 000001F4 666BC004                	imul	eax, eax, 4
   694 000001F8 6689C1                  	mov	ecx, eax
   695 000001FB 6658                    	pop	eax
   696 000001FD 6601C8                  	add	eax, ecx
   697 00000200 6689C3                  	mov	ebx, eax
   698 00000203 6689DE                  	mov	esi, ebx
   699 00000206 66C1CE04                	ror	esi, 4
   700 0000020A 8EDE                    	mov	ds, si
   701 0000020C 66C1EE1C                	shr	esi, 28
   702 00000210 668B04                  	mov	eax, [si]
   703 00000213 6683F800                	cmp	eax, 0
   704 00000217 7C09                    	jl	L24
   705                                  ; return
   706                                  ; RPN'ized expression: "5 -u "
   707                                  ; Expanded expression: "-5 "
   708                                  ; Expression value: -5
   709                                  ; Fused expression:    "-5  "
   710 00000219 66B8FBFFFFFF            	mov	eax, -5
   711 0000021F E9B706                  	jmp	L1
   712                                  L24:
   713                                  L21:
   714                                  ; Fused expression:    "++p(4) *(@-20) "
   715 00000222 668B46EC                	mov	eax, [bp-20]
   716 00000226 66FF46EC                	inc	dword [bp-20]
   717 0000022A E978FF                  	jmp	L20
   718                                  L23:
   719                                  ; loc     <something> : * struct <something>
   720                                  ; RPN'ized expression: "rindx ( c2cPFR DRLibres + *u &u (something27) desencolarPC2c ) = "
   721                                  ; Expanded expression: "(@-4)  c2cPFR 160 +  desencolarPC2c ()4 =(4) "
   722                                  ; Fused expression:    "( c2cPFR + ax 160 , desencolarPC2c )4 =(204) *(@-4) ax "
   723                                  section .relod
   724 00000018 [2F020000]              	dd	L28
   725                                  section .text
   726 0000022D 66B8                    	db	0x66, 0xB8
   727                                  L28:
   728 0000022F [00000000]              	dd	_c2cPFR
   729 00000233 6605A0000000            	add	eax, 160
   730 00000239 6650                    	push	eax
   731 0000023B 9A                      	db	0x9A
   732                                  section .relot
   733 00000004 [3C020000]              	dd	L29
   734                                  section .text
   735                                  L29:
   736 0000023C [00000000]              	dd	_desencolarPC2c
   737 00000240 83ECFC                  	sub	sp, -4
   738 00000243 668946FC                	mov	[bp-4], eax
   739                                  ; loc     <something> : * struct <something>
   740                                  ; RPN'ized expression: "( c2cPFR DROcupados + *u &u (something30) , rindx apilarPC2c ) "
   741                                  ; Expanded expression: " c2cPFR 176 +  (@-4) *(4)  apilarPC2c ()8 "
   742                                  ; Fused expression:    "( c2cPFR + ax 176 , *(4) (@-4) , apilarPC2c )8 "
   743                                  section .relod
   744 0000001C [49020000]              	dd	L31
   745                                  section .text
   746 00000247 66B8                    	db	0x66, 0xB8
   747                                  L31:
   748 00000249 [00000000]              	dd	_c2cPFR
   749 0000024D 6605B0000000            	add	eax, 176
   750 00000253 6650                    	push	eax
   751 00000255 66FF76FC                	push	dword [bp-4]
   752 00000259 9A                      	db	0x9A
   753                                  section .relot
   754 00000008 [5A020000]              	dd	L32
   755                                  section .text
   756                                  L32:
   757 0000025A [00000000]              	dd	_apilarPC2c
   758 0000025E 83ECF8                  	sub	sp, -8
   759                                  ; RPN'ized expression: "descRecurso rindx + *u &u tipo -> *u dR tipo -> *u = "
   760                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 12 + (@8) *(4) 12 + *(4) =(4) "
   761                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 12 push-ax + *(@8) 12 =(204) **sp *ax "
   762                                  section .relod
   763 00000020 [63020000]              	dd	L33
   764                                  section .text
   765 00000261 66B8                    	db	0x66, 0xB8
   766                                  L33:
   767 00000263 [00000000]              	dd	_descRecurso
   768 00000267 6650                    	push	eax
   769 00000269 668B46FC                	mov	eax, [bp-4]
   770 0000026D 666BC060                	imul	eax, eax, 96
   771 00000271 6689C1                  	mov	ecx, eax
   772 00000274 6658                    	pop	eax
   773 00000276 6601C8                  	add	eax, ecx
   774 00000279 6683C00C                	add	eax, 12
   775 0000027D 6650                    	push	eax
   776 0000027F 668B4608                	mov	eax, [bp+8]
   777 00000283 6683C00C                	add	eax, 12
   778 00000287 6689C3                  	mov	ebx, eax
   779 0000028A 6689DE                  	mov	esi, ebx
   780 0000028D 66C1CE04                	ror	esi, 4
   781 00000291 8EDE                    	mov	ds, si
   782 00000293 66C1EE1C                	shr	esi, 28
   783 00000297 668B04                  	mov	eax, [si]
   784 0000029A 665B                    	pop	ebx
   785 0000029C 6689DE                  	mov	esi, ebx
   786 0000029F 66C1CE04                	ror	esi, 4
   787 000002A3 8EDE                    	mov	ds, si
   788 000002A5 66C1EE1C                	shr	esi, 28
   789 000002A9 668904                  	mov	[si], eax
   790                                  ; RPN'ized expression: "( dR nombre -> *u , descRecurso rindx + *u &u nombre -> *u strcpy ) "
   791                                  ; Expanded expression: " (@8) *(4) 0 +  descRecurso (@-4) *(4) 96 * + 0 +  strcpy ()8 "
   792                                  ; Fused expression:    "( + *(@8) 0 , descRecurso push-ax * *(@-4) 96 + *sp ax + ax 0 , strcpy )8 "
   793 000002AC 668B4608                	mov	eax, [bp+8]
   794 000002B0 6650                    	push	eax
   795                                  section .relod
   796 00000024 [B4020000]              	dd	L34
   797                                  section .text
   798 000002B2 66B8                    	db	0x66, 0xB8
   799                                  L34:
   800 000002B4 [00000000]              	dd	_descRecurso
   801 000002B8 6650                    	push	eax
   802 000002BA 668B46FC                	mov	eax, [bp-4]
   803 000002BE 666BC060                	imul	eax, eax, 96
   804 000002C2 6689C1                  	mov	ecx, eax
   805 000002C5 6658                    	pop	eax
   806 000002C7 6601C8                  	add	eax, ecx
   807 000002CA 6650                    	push	eax
   808 000002CC 9A                      	db	0x9A
   809                                  section .relot
   810 0000000C [CD020000]              	dd	L35
   811                                  section .text
   812                                  L35:
   813 000002CD [00000000]              	dd	_strcpy
   814 000002D1 83ECF8                  	sub	sp, -8
   815                                  ; RPN'ized expression: "descRecurso rindx + *u &u ccb -> *u dR ccb -> *u = "
   816                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 16 + (@8) *(4) 16 + *(4) =(4) "
   817                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 16 push-ax + *(@8) 16 =(204) **sp *ax "
   818                                  section .relod
   819 00000028 [D6020000]              	dd	L36
   820                                  section .text
   821 000002D4 66B8                    	db	0x66, 0xB8
   822                                  L36:
   823 000002D6 [00000000]              	dd	_descRecurso
   824 000002DA 6650                    	push	eax
   825 000002DC 668B46FC                	mov	eax, [bp-4]
   826 000002E0 666BC060                	imul	eax, eax, 96
   827 000002E4 6689C1                  	mov	ecx, eax
   828 000002E7 6658                    	pop	eax
   829 000002E9 6601C8                  	add	eax, ecx
   830 000002EC 6683C010                	add	eax, 16
   831 000002F0 6650                    	push	eax
   832 000002F2 668B4608                	mov	eax, [bp+8]
   833 000002F6 6683C010                	add	eax, 16
   834 000002FA 6689C3                  	mov	ebx, eax
   835 000002FD 6689DE                  	mov	esi, ebx
   836 00000300 66C1CE04                	ror	esi, 4
   837 00000304 8EDE                    	mov	ds, si
   838 00000306 66C1EE1C                	shr	esi, 28
   839 0000030A 668B04                  	mov	eax, [si]
   840 0000030D 665B                    	pop	ebx
   841 0000030F 6689DE                  	mov	esi, ebx
   842 00000312 66C1CE04                	ror	esi, 4
   843 00000316 8EDE                    	mov	ds, si
   844 00000318 66C1EE1C                	shr	esi, 28
   845 0000031C 668904                  	mov	[si], eax
   846                                  ; RPN'ized expression: "descRecurso rindx + *u &u tindx -> *u dR tindx -> *u = "
   847                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 20 + (@8) *(4) 20 + *(4) =(4) "
   848                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 20 push-ax + *(@8) 20 =(204) **sp *ax "
   849                                  section .relod
   850 0000002C [21030000]              	dd	L37
   851                                  section .text
   852 0000031F 66B8                    	db	0x66, 0xB8
   853                                  L37:
   854 00000321 [00000000]              	dd	_descRecurso
   855 00000325 6650                    	push	eax
   856 00000327 668B46FC                	mov	eax, [bp-4]
   857 0000032B 666BC060                	imul	eax, eax, 96
   858 0000032F 6689C1                  	mov	ecx, eax
   859 00000332 6658                    	pop	eax
   860 00000334 6601C8                  	add	eax, ecx
   861 00000337 6683C014                	add	eax, 20
   862 0000033B 6650                    	push	eax
   863 0000033D 668B4608                	mov	eax, [bp+8]
   864 00000341 6683C014                	add	eax, 20
   865 00000345 6689C3                  	mov	ebx, eax
   866 00000348 6689DE                  	mov	esi, ebx
   867 0000034B 66C1CE04                	ror	esi, 4
   868 0000034F 8EDE                    	mov	ds, si
   869 00000351 66C1EE1C                	shr	esi, 28
   870 00000355 668B04                  	mov	eax, [si]
   871 00000358 665B                    	pop	ebx
   872 0000035A 6689DE                  	mov	esi, ebx
   873 0000035D 66C1CE04                	ror	esi, 4
   874 00000361 8EDE                    	mov	ds, si
   875 00000363 66C1EE1C                	shr	esi, 28
   876 00000367 668904                  	mov	[si], eax
   877                                  ; loc     <something> : * struct <something>
   878                                  ; loc     <something> : * struct <something>
   879                                  ; RPN'ized expression: "( TRUE , 20 rindx + , e2PFR &u e2FichRec -> *u &u (something39) , descRecurso rindx + *u &u c2cFichRec -> *u &u (something38) inicializarPC2c ) "
   880                                  ; Expanded expression: " 1  20 (@-4) *(4) +  e2PFR 122112 +  descRecurso (@-4) *(4) 96 * + 24 +  inicializarPC2c ()16 "
   881                                  ; Fused expression:    "( 1 , + 20 *(@-4) , e2PFR + ax 122112 , descRecurso push-ax * *(@-4) 96 + *sp ax + ax 24 , inicializarPC2c )16 "
   882 0000036A 666A01                  	push	dword 1
   883 0000036D 66B814000000            	mov	eax, 20
   884 00000373 660346FC                	add	eax, [bp-4]
   885 00000377 6650                    	push	eax
   886                                  section .relod
   887 00000030 [7B030000]              	dd	L40
   888                                  section .text
   889 00000379 66B8                    	db	0x66, 0xB8
   890                                  L40:
   891 0000037B [00000000]              	dd	_e2PFR
   892 0000037F 660500DD0100            	add	eax, 122112
   893 00000385 6650                    	push	eax
   894                                  section .relod
   895 00000034 [89030000]              	dd	L41
   896                                  section .text
   897 00000387 66B8                    	db	0x66, 0xB8
   898                                  L41:
   899 00000389 [00000000]              	dd	_descRecurso
   900 0000038D 6650                    	push	eax
   901 0000038F 668B46FC                	mov	eax, [bp-4]
   902 00000393 666BC060                	imul	eax, eax, 96
   903 00000397 6689C1                  	mov	ecx, eax
   904 0000039A 6658                    	pop	eax
   905 0000039C 6601C8                  	add	eax, ecx
   906 0000039F 6683C018                	add	eax, 24
   907 000003A3 6650                    	push	eax
   908 000003A5 9A                      	db	0x9A
   909                                  section .relot
   910 00000010 [A6030000]              	dd	L42
   911                                  section .text
   912                                  L42:
   913 000003A6 [00000000]              	dd	_inicializarPC2c
   914 000003AA 83ECF0                  	sub	sp, -16
   915                                  ; RPN'ized expression: "descRecurso rindx + *u &u numVI -> *u dR numVI -> *u = "
   916                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 40 + (@8) *(4) 40 + *(1) =(1) "
   917                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 40 push-ax + *(@8) 40 =(153) **sp *ax "
   918                                  section .relod
   919 00000038 [AF030000]              	dd	L43
   920                                  section .text
   921 000003AD 66B8                    	db	0x66, 0xB8
   922                                  L43:
   923 000003AF [00000000]              	dd	_descRecurso
   924 000003B3 6650                    	push	eax
   925 000003B5 668B46FC                	mov	eax, [bp-4]
   926 000003B9 666BC060                	imul	eax, eax, 96
   927 000003BD 6689C1                  	mov	ecx, eax
   928 000003C0 6658                    	pop	eax
   929 000003C2 6601C8                  	add	eax, ecx
   930 000003C5 6683C028                	add	eax, 40
   931 000003C9 6650                    	push	eax
   932 000003CB 668B4608                	mov	eax, [bp+8]
   933 000003CF 6683C028                	add	eax, 40
   934 000003D3 6689C3                  	mov	ebx, eax
   935 000003D6 6689DE                  	mov	esi, ebx
   936 000003D9 66C1CE04                	ror	esi, 4
   937 000003DD 8EDE                    	mov	ds, si
   938 000003DF 66C1EE1C                	shr	esi, 28
   939 000003E3 8A04                    	mov	al, [si]
   940 000003E5 660FB6C0                	movzx	eax, al
   941 000003E9 665B                    	pop	ebx
   942 000003EB 6689DE                  	mov	esi, ebx
   943 000003EE 66C1CE04                	ror	esi, 4
   944 000003F2 8EDE                    	mov	ds, si
   945 000003F4 66C1EE1C                	shr	esi, 28
   946 000003F8 8804                    	mov	[si], al
   947 000003FA 660FB6C0                	movzx	eax, al
   948                                  ; for
   949                                  ; RPN'ized expression: "i 0 = "
   950                                  ; Expanded expression: "(@-20) 0 =(4) "
   951                                  ; Fused expression:    "=(204) *(@-20) 0 "
   952 000003FE 66B800000000            	mov	eax, 0
   953 00000404 668946EC                	mov	[bp-20], eax
   954                                  L44:
   955                                  ; RPN'ized expression: "i dR numVI -> *u < "
   956                                  ; Expanded expression: "(@-20) *(4) (@8) *(4) 40 + *(1) < "
   957                                  ; Fused expression:    "+ *(@8) 40 < *(@-20) *ax IF! "
   958 00000408 668B4608                	mov	eax, [bp+8]
   959 0000040C 6683C028                	add	eax, 40
   960 00000410 6689C3                  	mov	ebx, eax
   961 00000413 6689DE                  	mov	esi, ebx
   962 00000416 66C1CE04                	ror	esi, 4
   963 0000041A 8EDE                    	mov	ds, si
   964 0000041C 66C1EE1C                	shr	esi, 28
   965 00000420 660FB60C                	movzx	ecx, byte [si]
   966 00000424 668B46EC                	mov	eax, [bp-20]
   967 00000428 6639C8                  	cmp	eax, ecx
   968 0000042B 0F8DB801                	jge	L47
   969                                  ; RPN'ized expression: "i ++p "
   970                                  ; Expanded expression: "(@-20) ++p(4) "
   971                                  ; {
   972                                  ; RPN'ized expression: "nVInt dR nVInt -> *u i + *u = "
   973                                  ; Expanded expression: "(@-8) (@8) *(4) 41 + (@-20) *(4) + *(1) =(1) "
   974                                  ; Fused expression:    "+ *(@8) 41 + ax *(@-20) =(153) *(@-8) *ax "
   975 0000042F 668B4608                	mov	eax, [bp+8]
   976 00000433 6683C029                	add	eax, 41
   977 00000437 660346EC                	add	eax, [bp-20]
   978 0000043B 6689C3                  	mov	ebx, eax
   979 0000043E 6689DE                  	mov	esi, ebx
   980 00000441 66C1CE04                	ror	esi, 4
   981 00000445 8EDE                    	mov	ds, si
   982 00000447 66C1EE1C                	shr	esi, 28
   983 0000044B 8A04                    	mov	al, [si]
   984 0000044D 660FB6C0                	movzx	eax, al
   985 00000451 8846F8                  	mov	[bp-8], al
   986 00000454 660FB6C0                	movzx	eax, al
   987                                  ; RPN'ized expression: "irq dR irq -> *u i + *u = "
   988                                  ; Expanded expression: "(@-12) (@8) *(4) 43 + (@-20) *(4) + *(1) =(1) "
   989                                  ; Fused expression:    "+ *(@8) 43 + ax *(@-20) =(153) *(@-12) *ax "
   990 00000458 668B4608                	mov	eax, [bp+8]
   991 0000045C 6683C02B                	add	eax, 43
   992 00000460 660346EC                	add	eax, [bp-20]
   993 00000464 6689C3                  	mov	ebx, eax
   994 00000467 6689DE                  	mov	esi, ebx
   995 0000046A 66C1CE04                	ror	esi, 4
   996 0000046E 8EDE                    	mov	ds, si
   997 00000470 66C1EE1C                	shr	esi, 28
   998 00000474 8A04                    	mov	al, [si]
   999 00000476 660FB6C0                	movzx	eax, al
  1000 0000047A 8846F4                  	mov	[bp-12], al
  1001 0000047D 660FB6C0                	movzx	eax, al
  1002                                  ; RPN'ized expression: "isr dR isr -> *u i + *u = "
  1003                                  ; Expanded expression: "(@-16) (@8) *(4) 48 + (@-20) *(4) 4 * + *(4) =(4) "
  1004                                  ; Fused expression:    "+ *(@8) 48 push-ax * *(@-20) 4 + *sp ax =(204) *(@-16) *ax "
  1005 00000481 668B4608                	mov	eax, [bp+8]
  1006 00000485 6683C030                	add	eax, 48
  1007 00000489 6650                    	push	eax
  1008 0000048B 668B46EC                	mov	eax, [bp-20]
  1009 0000048F 666BC004                	imul	eax, eax, 4
  1010 00000493 6689C1                  	mov	ecx, eax
  1011 00000496 6658                    	pop	eax
  1012 00000498 6601C8                  	add	eax, ecx
  1013 0000049B 6689C3                  	mov	ebx, eax
  1014 0000049E 6689DE                  	mov	esi, ebx
  1015 000004A1 66C1CE04                	ror	esi, 4
  1016 000004A5 8EDE                    	mov	ds, si
  1017 000004A7 66C1EE1C                	shr	esi, 28
  1018 000004AB 668B04                  	mov	eax, [si]
  1019 000004AE 668946F0                	mov	[bp-16], eax
  1020                                  ; RPN'ized expression: "descRecurso rindx + *u &u nVInt -> *u i + *u nVInt = "
  1021                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 41 + (@-20) *(4) + (@-8) *(1) =(1) "
  1022                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 41 + ax *(@-20) =(153) *ax *(@-8) "
  1023                                  section .relod
  1024 0000003C [B4040000]              	dd	L48
  1025                                  section .text
  1026 000004B2 66B8                    	db	0x66, 0xB8
  1027                                  L48:
  1028 000004B4 [00000000]              	dd	_descRecurso
  1029 000004B8 6650                    	push	eax
  1030 000004BA 668B46FC                	mov	eax, [bp-4]
  1031 000004BE 666BC060                	imul	eax, eax, 96
  1032 000004C2 6689C1                  	mov	ecx, eax
  1033 000004C5 6658                    	pop	eax
  1034 000004C7 6601C8                  	add	eax, ecx
  1035 000004CA 6683C029                	add	eax, 41
  1036 000004CE 660346EC                	add	eax, [bp-20]
  1037 000004D2 6689C3                  	mov	ebx, eax
  1038 000004D5 8A46F8                  	mov	al, [bp-8]
  1039 000004D8 660FB6C0                	movzx	eax, al
  1040 000004DC 6689DE                  	mov	esi, ebx
  1041 000004DF 66C1CE04                	ror	esi, 4
  1042 000004E3 8EDE                    	mov	ds, si
  1043 000004E5 66C1EE1C                	shr	esi, 28
  1044 000004E9 8804                    	mov	[si], al
  1045 000004EB 660FB6C0                	movzx	eax, al
  1046                                  ; RPN'ized expression: "descRecurso rindx + *u &u irq -> *u i + *u irq = "
  1047                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 43 + (@-20) *(4) + (@-12) *(1) =(1) "
  1048                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 43 + ax *(@-20) =(153) *ax *(@-12) "
  1049                                  section .relod
  1050 00000040 [F1040000]              	dd	L49
  1051                                  section .text
  1052 000004EF 66B8                    	db	0x66, 0xB8
  1053                                  L49:
  1054 000004F1 [00000000]              	dd	_descRecurso
  1055 000004F5 6650                    	push	eax
  1056 000004F7 668B46FC                	mov	eax, [bp-4]
  1057 000004FB 666BC060                	imul	eax, eax, 96
  1058 000004FF 6689C1                  	mov	ecx, eax
  1059 00000502 6658                    	pop	eax
  1060 00000504 6601C8                  	add	eax, ecx
  1061 00000507 6683C02B                	add	eax, 43
  1062 0000050B 660346EC                	add	eax, [bp-20]
  1063 0000050F 6689C3                  	mov	ebx, eax
  1064 00000512 8A46F4                  	mov	al, [bp-12]
  1065 00000515 660FB6C0                	movzx	eax, al
  1066 00000519 6689DE                  	mov	esi, ebx
  1067 0000051C 66C1CE04                	ror	esi, 4
  1068 00000520 8EDE                    	mov	ds, si
  1069 00000522 66C1EE1C                	shr	esi, 28
  1070 00000526 8804                    	mov	[si], al
  1071 00000528 660FB6C0                	movzx	eax, al
  1072                                  ; RPN'ized expression: "descRecurso rindx + *u &u isr -> *u i + *u isr = "
  1073                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 48 + (@-20) *(4) 4 * + (@-16) *(4) =(4) "
  1074                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 48 push-ax * *(@-20) 4 + *sp ax =(204) *ax *(@-16) "
  1075                                  section .relod
  1076 00000044 [2E050000]              	dd	L50
  1077                                  section .text
  1078 0000052C 66B8                    	db	0x66, 0xB8
  1079                                  L50:
  1080 0000052E [00000000]              	dd	_descRecurso
  1081 00000532 6650                    	push	eax
  1082 00000534 668B46FC                	mov	eax, [bp-4]
  1083 00000538 666BC060                	imul	eax, eax, 96
  1084 0000053C 6689C1                  	mov	ecx, eax
  1085 0000053F 6658                    	pop	eax
  1086 00000541 6601C8                  	add	eax, ecx
  1087 00000544 6683C030                	add	eax, 48
  1088 00000548 6650                    	push	eax
  1089 0000054A 668B46EC                	mov	eax, [bp-20]
  1090 0000054E 666BC004                	imul	eax, eax, 4
  1091 00000552 6689C1                  	mov	ecx, eax
  1092 00000555 6658                    	pop	eax
  1093 00000557 6601C8                  	add	eax, ecx
  1094 0000055A 6689C3                  	mov	ebx, eax
  1095 0000055D 668B46F0                	mov	eax, [bp-16]
  1096 00000561 6689DE                  	mov	esi, ebx
  1097 00000564 66C1CE04                	ror	esi, 4
  1098 00000568 8EDE                    	mov	ds, si
  1099 0000056A 66C1EE1C                	shr	esi, 28
  1100 0000056E 668904                  	mov	[si], eax
  1101                                  ; if
  1102                                  ; RPN'ized expression: "irq 16 < "
  1103                                  ; Expanded expression: "(@-12) *(1) 16 < "
  1104                                  ; Fused expression:    "< *(@-12) 16 IF! "
  1105 00000571 8A46F4                  	mov	al, [bp-12]
  1106 00000574 660FB6C0                	movzx	eax, al
  1107 00000578 6683F810                	cmp	eax, 16
  1108 0000057C 7D17                    	jge	L51
  1109                                  ; RPN'ized expression: "( isr , irq redirigirIntHardware ) "
  1110                                  ; Expanded expression: " (@-16) *(4)  (@-12) *(1)  redirigirIntHardware ()8 "
  1111                                  ; Fused expression:    "( *(4) (@-16) , *(1) (@-12) , redirigirIntHardware )8 "
  1112 0000057E 66FF76F0                	push	dword [bp-16]
  1113 00000582 8A46F4                  	mov	al, [bp-12]
  1114 00000585 660FB6C0                	movzx	eax, al
  1115 00000589 6650                    	push	eax
  1116 0000058B 9A                      	db	0x9A
  1117                                  section .relot
  1118 00000014 [8C050000]              	dd	L53
  1119                                  section .text
  1120                                  L53:
  1121 0000058C [00000000]              	dd	_redirigirIntHardware
  1122 00000590 83ECF8                  	sub	sp, -8
  1123 00000593 EB15                    	jmp	L52
  1124                                  L51:
  1125                                  ; else
  1126                                  ; RPN'ized expression: "( isr , nVInt redirigirInt ) "
  1127                                  ; Expanded expression: " (@-16) *(4)  (@-8) *(1)  redirigirInt ()8 "
  1128                                  ; Fused expression:    "( *(4) (@-16) , *(1) (@-8) , redirigirInt )8 "
  1129 00000595 66FF76F0                	push	dword [bp-16]
  1130 00000599 8A46F8                  	mov	al, [bp-8]
  1131 0000059C 660FB6C0                	movzx	eax, al
  1132 000005A0 6650                    	push	eax
  1133 000005A2 9A                      	db	0x9A
  1134                                  section .relot
  1135 00000018 [A3050000]              	dd	L54
  1136                                  section .text
  1137                                  L54:
  1138 000005A3 [00000000]              	dd	_redirigirInt
  1139 000005A7 83ECF8                  	sub	sp, -8
  1140                                  L52:
  1141                                  ; RPN'ized expression: "recVInt nVInt + *u rindx = "
  1142                                  ; Expanded expression: "recVInt (@-8) *(1) 4 * + (@-4) *(4) =(4) "
  1143                                  ; Fused expression:    "recVInt push-ax * *(@-8) 4 + *sp ax =(204) *ax *(@-4) "
  1144                                  section .relod
  1145 00000048 [AC050000]              	dd	L55
  1146                                  section .text
  1147 000005AA 66B8                    	db	0x66, 0xB8
  1148                                  L55:
  1149 000005AC [00000000]              	dd	_recVInt
  1150 000005B0 6650                    	push	eax
  1151 000005B2 8A46F8                  	mov	al, [bp-8]
  1152 000005B5 660FB6C0                	movzx	eax, al
  1153 000005B9 666BC004                	imul	eax, eax, 4
  1154 000005BD 6689C1                  	mov	ecx, eax
  1155 000005C0 6658                    	pop	eax
  1156 000005C2 6601C8                  	add	eax, ecx
  1157 000005C5 6689C3                  	mov	ebx, eax
  1158 000005C8 668B46FC                	mov	eax, [bp-4]
  1159 000005CC 6689DE                  	mov	esi, ebx
  1160 000005CF 66C1CE04                	ror	esi, 4
  1161 000005D3 8EDE                    	mov	ds, si
  1162 000005D5 66C1EE1C                	shr	esi, 28
  1163 000005D9 668904                  	mov	[si], eax
  1164                                  ; }
  1165                                  L45:
  1166                                  ; Fused expression:    "++p(4) *(@-20) "
  1167 000005DC 668B46EC                	mov	eax, [bp-20]
  1168 000005E0 66FF46EC                	inc	dword [bp-20]
  1169 000005E4 E921FE                  	jmp	L44
  1170                                  L47:
  1171                                  ; RPN'ized expression: "descRecurso rindx + *u &u open -> *u dR open -> *u = "
  1172                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 56 + (@8) *(4) 56 + *(4) =(4) "
  1173                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 56 push-ax + *(@8) 56 =(204) **sp *ax "
  1174                                  section .relod
  1175 0000004C [E9050000]              	dd	L56
  1176                                  section .text
  1177 000005E7 66B8                    	db	0x66, 0xB8
  1178                                  L56:
  1179 000005E9 [00000000]              	dd	_descRecurso
  1180 000005ED 6650                    	push	eax
  1181 000005EF 668B46FC                	mov	eax, [bp-4]
  1182 000005F3 666BC060                	imul	eax, eax, 96
  1183 000005F7 6689C1                  	mov	ecx, eax
  1184 000005FA 6658                    	pop	eax
  1185 000005FC 6601C8                  	add	eax, ecx
  1186 000005FF 6683C038                	add	eax, 56
  1187 00000603 6650                    	push	eax
  1188 00000605 668B4608                	mov	eax, [bp+8]
  1189 00000609 6683C038                	add	eax, 56
  1190 0000060D 6689C3                  	mov	ebx, eax
  1191 00000610 6689DE                  	mov	esi, ebx
  1192 00000613 66C1CE04                	ror	esi, 4
  1193 00000617 8EDE                    	mov	ds, si
  1194 00000619 66C1EE1C                	shr	esi, 28
  1195 0000061D 668B04                  	mov	eax, [si]
  1196 00000620 665B                    	pop	ebx
  1197 00000622 6689DE                  	mov	esi, ebx
  1198 00000625 66C1CE04                	ror	esi, 4
  1199 00000629 8EDE                    	mov	ds, si
  1200 0000062B 66C1EE1C                	shr	esi, 28
  1201 0000062F 668904                  	mov	[si], eax
  1202                                  ; RPN'ized expression: "descRecurso rindx + *u &u release -> *u dR release -> *u = "
  1203                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 60 + (@8) *(4) 60 + *(4) =(4) "
  1204                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 60 push-ax + *(@8) 60 =(204) **sp *ax "
  1205                                  section .relod
  1206 00000050 [34060000]              	dd	L57
  1207                                  section .text
  1208 00000632 66B8                    	db	0x66, 0xB8
  1209                                  L57:
  1210 00000634 [00000000]              	dd	_descRecurso
  1211 00000638 6650                    	push	eax
  1212 0000063A 668B46FC                	mov	eax, [bp-4]
  1213 0000063E 666BC060                	imul	eax, eax, 96
  1214 00000642 6689C1                  	mov	ecx, eax
  1215 00000645 6658                    	pop	eax
  1216 00000647 6601C8                  	add	eax, ecx
  1217 0000064A 6683C03C                	add	eax, 60
  1218 0000064E 6650                    	push	eax
  1219 00000650 668B4608                	mov	eax, [bp+8]
  1220 00000654 6683C03C                	add	eax, 60
  1221 00000658 6689C3                  	mov	ebx, eax
  1222 0000065B 6689DE                  	mov	esi, ebx
  1223 0000065E 66C1CE04                	ror	esi, 4
  1224 00000662 8EDE                    	mov	ds, si
  1225 00000664 66C1EE1C                	shr	esi, 28
  1226 00000668 668B04                  	mov	eax, [si]
  1227 0000066B 665B                    	pop	ebx
  1228 0000066D 6689DE                  	mov	esi, ebx
  1229 00000670 66C1CE04                	ror	esi, 4
  1230 00000674 8EDE                    	mov	ds, si
  1231 00000676 66C1EE1C                	shr	esi, 28
  1232 0000067A 668904                  	mov	[si], eax
  1233                                  ; RPN'ized expression: "descRecurso rindx + *u &u read -> *u dR read -> *u = "
  1234                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 64 + (@8) *(4) 64 + *(4) =(4) "
  1235                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 64 push-ax + *(@8) 64 =(204) **sp *ax "
  1236                                  section .relod
  1237 00000054 [7F060000]              	dd	L58
  1238                                  section .text
  1239 0000067D 66B8                    	db	0x66, 0xB8
  1240                                  L58:
  1241 0000067F [00000000]              	dd	_descRecurso
  1242 00000683 6650                    	push	eax
  1243 00000685 668B46FC                	mov	eax, [bp-4]
  1244 00000689 666BC060                	imul	eax, eax, 96
  1245 0000068D 6689C1                  	mov	ecx, eax
  1246 00000690 6658                    	pop	eax
  1247 00000692 6601C8                  	add	eax, ecx
  1248 00000695 6683C040                	add	eax, 64
  1249 00000699 6650                    	push	eax
  1250 0000069B 668B4608                	mov	eax, [bp+8]
  1251 0000069F 6683C040                	add	eax, 64
  1252 000006A3 6689C3                  	mov	ebx, eax
  1253 000006A6 6689DE                  	mov	esi, ebx
  1254 000006A9 66C1CE04                	ror	esi, 4
  1255 000006AD 8EDE                    	mov	ds, si
  1256 000006AF 66C1EE1C                	shr	esi, 28
  1257 000006B3 668B04                  	mov	eax, [si]
  1258 000006B6 665B                    	pop	ebx
  1259 000006B8 6689DE                  	mov	esi, ebx
  1260 000006BB 66C1CE04                	ror	esi, 4
  1261 000006BF 8EDE                    	mov	ds, si
  1262 000006C1 66C1EE1C                	shr	esi, 28
  1263 000006C5 668904                  	mov	[si], eax
  1264                                  ; RPN'ized expression: "descRecurso rindx + *u &u aio_read -> *u dR aio_read -> *u = "
  1265                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 68 + (@8) *(4) 68 + *(4) =(4) "
  1266                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 68 push-ax + *(@8) 68 =(204) **sp *ax "
  1267                                  section .relod
  1268 00000058 [CA060000]              	dd	L59
  1269                                  section .text
  1270 000006C8 66B8                    	db	0x66, 0xB8
  1271                                  L59:
  1272 000006CA [00000000]              	dd	_descRecurso
  1273 000006CE 6650                    	push	eax
  1274 000006D0 668B46FC                	mov	eax, [bp-4]
  1275 000006D4 666BC060                	imul	eax, eax, 96
  1276 000006D8 6689C1                  	mov	ecx, eax
  1277 000006DB 6658                    	pop	eax
  1278 000006DD 6601C8                  	add	eax, ecx
  1279 000006E0 6683C044                	add	eax, 68
  1280 000006E4 6650                    	push	eax
  1281 000006E6 668B4608                	mov	eax, [bp+8]
  1282 000006EA 6683C044                	add	eax, 68
  1283 000006EE 6689C3                  	mov	ebx, eax
  1284 000006F1 6689DE                  	mov	esi, ebx
  1285 000006F4 66C1CE04                	ror	esi, 4
  1286 000006F8 8EDE                    	mov	ds, si
  1287 000006FA 66C1EE1C                	shr	esi, 28
  1288 000006FE 668B04                  	mov	eax, [si]
  1289 00000701 665B                    	pop	ebx
  1290 00000703 6689DE                  	mov	esi, ebx
  1291 00000706 66C1CE04                	ror	esi, 4
  1292 0000070A 8EDE                    	mov	ds, si
  1293 0000070C 66C1EE1C                	shr	esi, 28
  1294 00000710 668904                  	mov	[si], eax
  1295                                  ; RPN'ized expression: "descRecurso rindx + *u &u write -> *u dR write -> *u = "
  1296                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 72 + (@8) *(4) 72 + *(4) =(4) "
  1297                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 72 push-ax + *(@8) 72 =(204) **sp *ax "
  1298                                  section .relod
  1299 0000005C [15070000]              	dd	L60
  1300                                  section .text
  1301 00000713 66B8                    	db	0x66, 0xB8
  1302                                  L60:
  1303 00000715 [00000000]              	dd	_descRecurso
  1304 00000719 6650                    	push	eax
  1305 0000071B 668B46FC                	mov	eax, [bp-4]
  1306 0000071F 666BC060                	imul	eax, eax, 96
  1307 00000723 6689C1                  	mov	ecx, eax
  1308 00000726 6658                    	pop	eax
  1309 00000728 6601C8                  	add	eax, ecx
  1310 0000072B 6683C048                	add	eax, 72
  1311 0000072F 6650                    	push	eax
  1312 00000731 668B4608                	mov	eax, [bp+8]
  1313 00000735 6683C048                	add	eax, 72
  1314 00000739 6689C3                  	mov	ebx, eax
  1315 0000073C 6689DE                  	mov	esi, ebx
  1316 0000073F 66C1CE04                	ror	esi, 4
  1317 00000743 8EDE                    	mov	ds, si
  1318 00000745 66C1EE1C                	shr	esi, 28
  1319 00000749 668B04                  	mov	eax, [si]
  1320 0000074C 665B                    	pop	ebx
  1321 0000074E 6689DE                  	mov	esi, ebx
  1322 00000751 66C1CE04                	ror	esi, 4
  1323 00000755 8EDE                    	mov	ds, si
  1324 00000757 66C1EE1C                	shr	esi, 28
  1325 0000075B 668904                  	mov	[si], eax
  1326                                  ; RPN'ized expression: "descRecurso rindx + *u &u aio_write -> *u dR aio_write -> *u = "
  1327                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 76 + (@8) *(4) 76 + *(4) =(4) "
  1328                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 76 push-ax + *(@8) 76 =(204) **sp *ax "
  1329                                  section .relod
  1330 00000060 [60070000]              	dd	L61
  1331                                  section .text
  1332 0000075E 66B8                    	db	0x66, 0xB8
  1333                                  L61:
  1334 00000760 [00000000]              	dd	_descRecurso
  1335 00000764 6650                    	push	eax
  1336 00000766 668B46FC                	mov	eax, [bp-4]
  1337 0000076A 666BC060                	imul	eax, eax, 96
  1338 0000076E 6689C1                  	mov	ecx, eax
  1339 00000771 6658                    	pop	eax
  1340 00000773 6601C8                  	add	eax, ecx
  1341 00000776 6683C04C                	add	eax, 76
  1342 0000077A 6650                    	push	eax
  1343 0000077C 668B4608                	mov	eax, [bp+8]
  1344 00000780 6683C04C                	add	eax, 76
  1345 00000784 6689C3                  	mov	ebx, eax
  1346 00000787 6689DE                  	mov	esi, ebx
  1347 0000078A 66C1CE04                	ror	esi, 4
  1348 0000078E 8EDE                    	mov	ds, si
  1349 00000790 66C1EE1C                	shr	esi, 28
  1350 00000794 668B04                  	mov	eax, [si]
  1351 00000797 665B                    	pop	ebx
  1352 00000799 6689DE                  	mov	esi, ebx
  1353 0000079C 66C1CE04                	ror	esi, 4
  1354 000007A0 8EDE                    	mov	ds, si
  1355 000007A2 66C1EE1C                	shr	esi, 28
  1356 000007A6 668904                  	mov	[si], eax
  1357                                  ; RPN'ized expression: "descRecurso rindx + *u &u lseek -> *u dR lseek -> *u = "
  1358                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 80 + (@8) *(4) 80 + *(4) =(4) "
  1359                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 80 push-ax + *(@8) 80 =(204) **sp *ax "
  1360                                  section .relod
  1361 00000064 [AB070000]              	dd	L62
  1362                                  section .text
  1363 000007A9 66B8                    	db	0x66, 0xB8
  1364                                  L62:
  1365 000007AB [00000000]              	dd	_descRecurso
  1366 000007AF 6650                    	push	eax
  1367 000007B1 668B46FC                	mov	eax, [bp-4]
  1368 000007B5 666BC060                	imul	eax, eax, 96
  1369 000007B9 6689C1                  	mov	ecx, eax
  1370 000007BC 6658                    	pop	eax
  1371 000007BE 6601C8                  	add	eax, ecx
  1372 000007C1 6683C050                	add	eax, 80
  1373 000007C5 6650                    	push	eax
  1374 000007C7 668B4608                	mov	eax, [bp+8]
  1375 000007CB 6683C050                	add	eax, 80
  1376 000007CF 6689C3                  	mov	ebx, eax
  1377 000007D2 6689DE                  	mov	esi, ebx
  1378 000007D5 66C1CE04                	ror	esi, 4
  1379 000007D9 8EDE                    	mov	ds, si
  1380 000007DB 66C1EE1C                	shr	esi, 28
  1381 000007DF 668B04                  	mov	eax, [si]
  1382 000007E2 665B                    	pop	ebx
  1383 000007E4 6689DE                  	mov	esi, ebx
  1384 000007E7 66C1CE04                	ror	esi, 4
  1385 000007EB 8EDE                    	mov	ds, si
  1386 000007ED 66C1EE1C                	shr	esi, 28
  1387 000007F1 668904                  	mov	[si], eax
  1388                                  ; RPN'ized expression: "descRecurso rindx + *u &u fcntl -> *u dR fcntl -> *u = "
  1389                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 84 + (@8) *(4) 84 + *(4) =(4) "
  1390                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 84 push-ax + *(@8) 84 =(204) **sp *ax "
  1391                                  section .relod
  1392 00000068 [F6070000]              	dd	L63
  1393                                  section .text
  1394 000007F4 66B8                    	db	0x66, 0xB8
  1395                                  L63:
  1396 000007F6 [00000000]              	dd	_descRecurso
  1397 000007FA 6650                    	push	eax
  1398 000007FC 668B46FC                	mov	eax, [bp-4]
  1399 00000800 666BC060                	imul	eax, eax, 96
  1400 00000804 6689C1                  	mov	ecx, eax
  1401 00000807 6658                    	pop	eax
  1402 00000809 6601C8                  	add	eax, ecx
  1403 0000080C 6683C054                	add	eax, 84
  1404 00000810 6650                    	push	eax
  1405 00000812 668B4608                	mov	eax, [bp+8]
  1406 00000816 6683C054                	add	eax, 84
  1407 0000081A 6689C3                  	mov	ebx, eax
  1408 0000081D 6689DE                  	mov	esi, ebx
  1409 00000820 66C1CE04                	ror	esi, 4
  1410 00000824 8EDE                    	mov	ds, si
  1411 00000826 66C1EE1C                	shr	esi, 28
  1412 0000082A 668B04                  	mov	eax, [si]
  1413 0000082D 665B                    	pop	ebx
  1414 0000082F 6689DE                  	mov	esi, ebx
  1415 00000832 66C1CE04                	ror	esi, 4
  1416 00000836 8EDE                    	mov	ds, si
  1417 00000838 66C1EE1C                	shr	esi, 28
  1418 0000083C 668904                  	mov	[si], eax
  1419                                  ; RPN'ized expression: "descRecurso rindx + *u &u ioctl -> *u dR ioctl -> *u = "
  1420                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 88 + (@8) *(4) 88 + *(4) =(4) "
  1421                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 88 push-ax + *(@8) 88 =(204) **sp *ax "
  1422                                  section .relod
  1423 0000006C [41080000]              	dd	L64
  1424                                  section .text
  1425 0000083F 66B8                    	db	0x66, 0xB8
  1426                                  L64:
  1427 00000841 [00000000]              	dd	_descRecurso
  1428 00000845 6650                    	push	eax
  1429 00000847 668B46FC                	mov	eax, [bp-4]
  1430 0000084B 666BC060                	imul	eax, eax, 96
  1431 0000084F 6689C1                  	mov	ecx, eax
  1432 00000852 6658                    	pop	eax
  1433 00000854 6601C8                  	add	eax, ecx
  1434 00000857 6683C058                	add	eax, 88
  1435 0000085B 6650                    	push	eax
  1436 0000085D 668B4608                	mov	eax, [bp+8]
  1437 00000861 6683C058                	add	eax, 88
  1438 00000865 6689C3                  	mov	ebx, eax
  1439 00000868 6689DE                  	mov	esi, ebx
  1440 0000086B 66C1CE04                	ror	esi, 4
  1441 0000086F 8EDE                    	mov	ds, si
  1442 00000871 66C1EE1C                	shr	esi, 28
  1443 00000875 668B04                  	mov	eax, [si]
  1444 00000878 665B                    	pop	ebx
  1445 0000087A 6689DE                  	mov	esi, ebx
  1446 0000087D 66C1CE04                	ror	esi, 4
  1447 00000881 8EDE                    	mov	ds, si
  1448 00000883 66C1EE1C                	shr	esi, 28
  1449 00000887 668904                  	mov	[si], eax
  1450                                  ; RPN'ized expression: "descRecurso rindx + *u &u eliminar -> *u dR eliminar -> *u = "
  1451                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 92 + (@8) *(4) 92 + *(4) =(4) "
  1452                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 92 push-ax + *(@8) 92 =(204) **sp *ax "
  1453                                  section .relod
  1454 00000070 [8C080000]              	dd	L65
  1455                                  section .text
  1456 0000088A 66B8                    	db	0x66, 0xB8
  1457                                  L65:
  1458 0000088C [00000000]              	dd	_descRecurso
  1459 00000890 6650                    	push	eax
  1460 00000892 668B46FC                	mov	eax, [bp-4]
  1461 00000896 666BC060                	imul	eax, eax, 96
  1462 0000089A 6689C1                  	mov	ecx, eax
  1463 0000089D 6658                    	pop	eax
  1464 0000089F 6601C8                  	add	eax, ecx
  1465 000008A2 6683C05C                	add	eax, 92
  1466 000008A6 6650                    	push	eax
  1467 000008A8 668B4608                	mov	eax, [bp+8]
  1468 000008AC 6683C05C                	add	eax, 92
  1469 000008B0 6689C3                  	mov	ebx, eax
  1470 000008B3 6689DE                  	mov	esi, ebx
  1471 000008B6 66C1CE04                	ror	esi, 4
  1472 000008BA 8EDE                    	mov	ds, si
  1473 000008BC 66C1EE1C                	shr	esi, 28
  1474 000008C0 668B04                  	mov	eax, [si]
  1475 000008C3 665B                    	pop	ebx
  1476 000008C5 6689DE                  	mov	esi, ebx
  1477 000008C8 66C1CE04                	ror	esi, 4
  1478 000008CC 8EDE                    	mov	ds, si
  1479 000008CE 66C1EE1C                	shr	esi, 28
  1480 000008D2 668904                  	mov	[si], eax
  1481                                  ; return
  1482                                  ; RPN'ized expression: "rindx "
  1483                                  ; Expanded expression: "(@-4) *(4) "
  1484                                  ; Fused expression:    "*(4) (@-4)  "
  1485 000008D5 668B46FC                	mov	eax, [bp-4]
  1486                                  L1:
  1487 000008D9 66                      	db	0x66
  1488 000008DA C9                      	leave
  1489 000008DB CB                      	retf
  1490                                  L66:
  1491                                  
  1492                                  section .fxnsz noalloc
  1493 00000000 DC080000                	dd	L66 - _crearRec
  1494                                  
  1495                                  ; glb crearFich : (
  1496                                  ; prm     nombre : * char
  1497                                  ; prm     rindx : int
  1498                                  ; prm     menor : unsigned short
  1499                                  ; prm     tipo : int
  1500                                  ;     ) int
  1501                                  section .text
  1502                                  	global	_crearFich
  1503                                  _crearFich:
  1504 000008DC 6655                    	push	ebp
  1505 000008DE 660FB7EC                	movzx	ebp, sp
  1506 000008E2 83EC04                  	 sub	sp,          4
  1507                                  ; loc     nombre : (@8): * char
  1508                                  ; loc     rindx : (@12): int
  1509                                  ; loc     menor : (@16): unsigned short
  1510                                  ; loc     tipo : (@20): int
  1511                                  ; loc     dfs : (@-4): int
  1512                                  ; if
  1513                                  ; RPN'ized expression: "tipo flibre == "
  1514                                  ; Expanded expression: "(@20) *(4) 0 == "
  1515                                  ; Fused expression:    "== *(@20) 0 IF! "
  1516 000008E5 668B4614                	mov	eax, [bp+20]
  1517 000008E9 6683F800                	cmp	eax, 0
  1518 000008ED 7509                    	jne	L69
  1519                                  ; return
  1520                                  ; RPN'ized expression: "1 -u "
  1521                                  ; Expanded expression: "-1 "
  1522                                  ; Expression value: -1
  1523                                  ; Fused expression:    "-1  "
  1524 000008EF 66B8FFFFFFFF            	mov	eax, -1
  1525 000008F5 E95D02                  	jmp	L67
  1526                                  L69:
  1527                                  ; if
  1528                                  ; RPN'ized expression: "rindx 0 < rindx 14 < && "
  1529                                  ; Expanded expression: "(@12) *(4) 0 < [sh&&->73] (@12) *(4) 14 < &&[73] "
  1530                                  ; Fused expression:    "< *(@12) 0 [sh&&->73] < *(@12) 14 &&[73]  "
  1531 000008F8 668B460C                	mov	eax, [bp+12]
  1532 000008FC 6683F800                	cmp	eax, 0
  1533 00000900 0F9CC0                  	setl	al
  1534 00000903 660FB6C0                	movzx	eax, al
  1535                                  ; JumpIfZero
  1536 00000907 6685C0                  	test	eax, eax
  1537 0000090A 740F                    	je	L73
  1538 0000090C 668B460C                	mov	eax, [bp+12]
  1539 00000910 6683F80E                	cmp	eax, 14
  1540 00000914 0F9CC0                  	setl	al
  1541 00000917 660FB6C0                	movzx	eax, al
  1542                                  L73:
  1543                                  ; JumpIfZero
  1544 0000091B 6685C0                  	test	eax, eax
  1545 0000091E 7409                    	je	L71
  1546                                  ; return
  1547                                  ; RPN'ized expression: "2 -u "
  1548                                  ; Expanded expression: "-2 "
  1549                                  ; Expression value: -2
  1550                                  ; Fused expression:    "-2  "
  1551 00000920 66B8FEFFFFFF            	mov	eax, -2
  1552 00000926 E92C02                  	jmp	L67
  1553                                  L71:
  1554                                  ; RPN'ized expression: "dfs c2cPFR DFOcupados + *u &u primero -> *u = "
  1555                                  ; Expanded expression: "(@-4) c2cPFR 144 + 4 + *(4) =(4) "
  1556                                  ; Fused expression:    "c2cPFR + ax 144 + ax 4 =(204) *(@-4) *ax "
  1557                                  section .relod
  1558 00000074 [2B090000]              	dd	L74
  1559                                  section .text
  1560 00000929 66B8                    	db	0x66, 0xB8
  1561                                  L74:
  1562 0000092B [00000000]              	dd	_c2cPFR
  1563 0000092F 660590000000            	add	eax, 144
  1564 00000935 6683C004                	add	eax, 4
  1565 00000939 6689C3                  	mov	ebx, eax
  1566 0000093C 6689DE                  	mov	esi, ebx
  1567 0000093F 66C1CE04                	ror	esi, 4
  1568 00000943 8EDE                    	mov	ds, si
  1569 00000945 66C1EE1C                	shr	esi, 28
  1570 00000949 668B04                  	mov	eax, [si]
  1571 0000094C 668946FC                	mov	[bp-4], eax
  1572                                  ; while
  1573                                  ; RPN'ized expression: "dfs c2cPFR DFOcupados + *u &u cabecera -> *u != "
  1574                                  ; Expanded expression: "(@-4) *(4) c2cPFR 144 + 8 + *(4) != "
  1575                                  L75:
  1576                                  ; Fused expression:    "c2cPFR + ax 144 + ax 8 != *(@-4) *ax IF! "
  1577                                  section .relod
  1578 00000078 [52090000]              	dd	L77
  1579                                  section .text
  1580 00000950 66B8                    	db	0x66, 0xB8
  1581                                  L77:
  1582 00000952 [00000000]              	dd	_c2cPFR
  1583 00000956 660590000000            	add	eax, 144
  1584 0000095C 6683C008                	add	eax, 8
  1585 00000960 6689C3                  	mov	ebx, eax
  1586 00000963 6689DE                  	mov	esi, ebx
  1587 00000966 66C1CE04                	ror	esi, 4
  1588 0000096A 8EDE                    	mov	ds, si
  1589 0000096C 66C1EE1C                	shr	esi, 28
  1590 00000970 668B0C                  	mov	ecx, [si]
  1591 00000973 668B46FC                	mov	eax, [bp-4]
  1592 00000977 6639C8                  	cmp	eax, ecx
  1593 0000097A 0F848500                	je	L76
  1594                                  ; {
  1595                                  ; if
  1596                                  ; RPN'ized expression: "( nombre , descFichero dfs + *u &u nombre -> *u strcmp ) 0 == "
  1597                                  ; Expanded expression: " (@8) *(4)  descFichero (@-4) *(4) 36 * + 4 +  strcmp ()8 0 == "
  1598                                  ; Fused expression:    "( *(4) (@8) , descFichero push-ax * *(@-4) 36 + *sp ax + ax 4 , strcmp )8 == ax 0 IF! "
  1599 0000097E 66FF7608                	push	dword [bp+8]
  1600                                  section .relod
  1601 0000007C [84090000]              	dd	L80
  1602                                  section .text
  1603 00000982 66B8                    	db	0x66, 0xB8
  1604                                  L80:
  1605 00000984 [00000000]              	dd	_descFichero
  1606 00000988 6650                    	push	eax
  1607 0000098A 668B46FC                	mov	eax, [bp-4]
  1608 0000098E 666BC024                	imul	eax, eax, 36
  1609 00000992 6689C1                  	mov	ecx, eax
  1610 00000995 6658                    	pop	eax
  1611 00000997 6601C8                  	add	eax, ecx
  1612 0000099A 6683C004                	add	eax, 4
  1613 0000099E 6650                    	push	eax
  1614 000009A0 9A                      	db	0x9A
  1615                                  section .relot
  1616 0000001C [A1090000]              	dd	L81
  1617                                  section .text
  1618                                  L81:
  1619 000009A1 [00000000]              	dd	_strcmp
  1620 000009A5 83ECF8                  	sub	sp, -8
  1621 000009A8 6683F800                	cmp	eax, 0
  1622 000009AC 7509                    	jne	L78
  1623                                  ; return
  1624                                  ; RPN'ized expression: "3 -u "
  1625                                  ; Expanded expression: "-3 "
  1626                                  ; Expression value: -3
  1627                                  ; Fused expression:    "-3  "
  1628 000009AE 66B8FDFFFFFF            	mov	eax, -3
  1629 000009B4 E99E01                  	jmp	L67
  1630                                  L78:
  1631                                  ; RPN'ized expression: "dfs c2cPFR DFOcupados + *u &u e -> *u dfs + *u &u sig -> *u = "
  1632                                  ; Expanded expression: "(@-4) c2cPFR 144 + 12 + *(4) (@-4) *(4) 12 * + 0 + *(4) =(4) "
  1633                                  ; Fused expression:    "c2cPFR + ax 144 + ax 12 push-ax * *(@-4) 12 + **sp ax + ax 0 =(204) *(@-4) *ax "
  1634                                  section .relod
  1635 00000080 [B9090000]              	dd	L82
  1636                                  section .text
  1637 000009B7 66B8                    	db	0x66, 0xB8
  1638                                  L82:
  1639 000009B9 [00000000]              	dd	_c2cPFR
  1640 000009BD 660590000000            	add	eax, 144
  1641 000009C3 6683C00C                	add	eax, 12
  1642 000009C7 6650                    	push	eax
  1643 000009C9 668B46FC                	mov	eax, [bp-4]
  1644 000009CD 666BC00C                	imul	eax, eax, 12
  1645 000009D1 6689C1                  	mov	ecx, eax
  1646 000009D4 665B                    	pop	ebx
  1647 000009D6 6689DE                  	mov	esi, ebx
  1648 000009D9 66C1CE04                	ror	esi, 4
  1649 000009DD 8EDE                    	mov	ds, si
  1650 000009DF 66C1EE1C                	shr	esi, 28
  1651 000009E3 668B04                  	mov	eax, [si]
  1652 000009E6 6601C8                  	add	eax, ecx
  1653 000009E9 6689C3                  	mov	ebx, eax
  1654 000009EC 6689DE                  	mov	esi, ebx
  1655 000009EF 66C1CE04                	ror	esi, 4
  1656 000009F3 8EDE                    	mov	ds, si
  1657 000009F5 66C1EE1C                	shr	esi, 28
  1658 000009F9 668B04                  	mov	eax, [si]
  1659 000009FC 668946FC                	mov	[bp-4], eax
  1660                                  ; }
  1661 00000A00 E94DFF                  	jmp	L75
  1662                                  L76:
  1663                                  ; if
  1664                                  ; RPN'ized expression: "c2cPFR DFLibres + *u &u numElem -> *u 0 == "
  1665                                  ; Expanded expression: "c2cPFR 128 + 0 + *(4) 0 == "
  1666                                  ; Fused expression:    "c2cPFR + ax 128 + ax 0 == *ax 0 IF! "
  1667                                  section .relod
  1668 00000084 [050A0000]              	dd	L85
  1669                                  section .text
  1670 00000A03 66B8                    	db	0x66, 0xB8
  1671                                  L85:
  1672 00000A05 [00000000]              	dd	_c2cPFR
  1673 00000A09 660580000000            	add	eax, 128
  1674 00000A0F 6689C3                  	mov	ebx, eax
  1675 00000A12 6689DE                  	mov	esi, ebx
  1676 00000A15 66C1CE04                	ror	esi, 4
  1677 00000A19 8EDE                    	mov	ds, si
  1678 00000A1B 66C1EE1C                	shr	esi, 28
  1679 00000A1F 668B04                  	mov	eax, [si]
  1680 00000A22 6683F800                	cmp	eax, 0
  1681 00000A26 7509                    	jne	L83
  1682                                  ; return
  1683                                  ; RPN'ized expression: "4 -u "
  1684                                  ; Expanded expression: "-4 "
  1685                                  ; Expression value: -4
  1686                                  ; Fused expression:    "-4  "
  1687 00000A28 66B8FCFFFFFF            	mov	eax, -4
  1688 00000A2E E92401                  	jmp	L67
  1689                                  L83:
  1690                                  ; loc     <something> : * struct <something>
  1691                                  ; RPN'ized expression: "dfs ( c2cPFR DFLibres + *u &u (something86) desencolarPC2c ) = "
  1692                                  ; Expanded expression: "(@-4)  c2cPFR 128 +  desencolarPC2c ()4 =(4) "
  1693                                  ; Fused expression:    "( c2cPFR + ax 128 , desencolarPC2c )4 =(204) *(@-4) ax "
  1694                                  section .relod
  1695 00000088 [330A0000]              	dd	L87
  1696                                  section .text
  1697 00000A31 66B8                    	db	0x66, 0xB8
  1698                                  L87:
  1699 00000A33 [00000000]              	dd	_c2cPFR
  1700 00000A37 660580000000            	add	eax, 128
  1701 00000A3D 6650                    	push	eax
  1702 00000A3F 9A                      	db	0x9A
  1703                                  section .relot
  1704 00000020 [400A0000]              	dd	L88
  1705                                  section .text
  1706                                  L88:
  1707 00000A40 [00000000]              	dd	_desencolarPC2c
  1708 00000A44 83ECFC                  	sub	sp, -4
  1709 00000A47 668946FC                	mov	[bp-4], eax
  1710                                  ; loc     <something> : * struct <something>
  1711                                  ; RPN'ized expression: "( c2cPFR DFOcupados + *u &u (something89) , dfs apilarPC2c ) "
  1712                                  ; Expanded expression: " c2cPFR 144 +  (@-4) *(4)  apilarPC2c ()8 "
  1713                                  ; Fused expression:    "( c2cPFR + ax 144 , *(4) (@-4) , apilarPC2c )8 "
  1714                                  section .relod
  1715 0000008C [4D0A0000]              	dd	L90
  1716                                  section .text
  1717 00000A4B 66B8                    	db	0x66, 0xB8
  1718                                  L90:
  1719 00000A4D [00000000]              	dd	_c2cPFR
  1720 00000A51 660590000000            	add	eax, 144
  1721 00000A57 6650                    	push	eax
  1722 00000A59 66FF76FC                	push	dword [bp-4]
  1723 00000A5D 9A                      	db	0x9A
  1724                                  section .relot
  1725 00000024 [5E0A0000]              	dd	L91
  1726                                  section .text
  1727                                  L91:
  1728 00000A5E [00000000]              	dd	_apilarPC2c
  1729 00000A62 83ECF8                  	sub	sp, -8
  1730                                  ; loc     <something> : * struct <something>
  1731                                  ; RPN'ized expression: "( descRecurso rindx + *u &u c2cFichRec -> *u &u (something92) , dfs apilarPC2c ) "
  1732                                  ; Expanded expression: " descRecurso (@12) *(4) 96 * + 24 +  (@-4) *(4)  apilarPC2c ()8 "
  1733                                  ; Fused expression:    "( descRecurso push-ax * *(@12) 96 + *sp ax + ax 24 , *(4) (@-4) , apilarPC2c )8 "
  1734                                  section .relod
  1735 00000090 [670A0000]              	dd	L93
  1736                                  section .text
  1737 00000A65 66B8                    	db	0x66, 0xB8
  1738                                  L93:
  1739 00000A67 [00000000]              	dd	_descRecurso
  1740 00000A6B 6650                    	push	eax
  1741 00000A6D 668B460C                	mov	eax, [bp+12]
  1742 00000A71 666BC060                	imul	eax, eax, 96
  1743 00000A75 6689C1                  	mov	ecx, eax
  1744 00000A78 6658                    	pop	eax
  1745 00000A7A 6601C8                  	add	eax, ecx
  1746 00000A7D 6683C018                	add	eax, 24
  1747 00000A81 6650                    	push	eax
  1748 00000A83 66FF76FC                	push	dword [bp-4]
  1749 00000A87 9A                      	db	0x9A
  1750                                  section .relot
  1751 00000028 [880A0000]              	dd	L94
  1752                                  section .text
  1753                                  L94:
  1754 00000A88 [00000000]              	dd	_apilarPC2c
  1755 00000A8C 83ECF8                  	sub	sp, -8
  1756                                  ; RPN'ized expression: "( nombre , descFichero dfs + *u &u nombre -> *u strcpy ) "
  1757                                  ; Expanded expression: " (@8) *(4)  descFichero (@-4) *(4) 36 * + 4 +  strcpy ()8 "
  1758                                  ; Fused expression:    "( *(4) (@8) , descFichero push-ax * *(@-4) 36 + *sp ax + ax 4 , strcpy )8 "
  1759 00000A8F 66FF7608                	push	dword [bp+8]
  1760                                  section .relod
  1761 00000094 [950A0000]              	dd	L95
  1762                                  section .text
  1763 00000A93 66B8                    	db	0x66, 0xB8
  1764                                  L95:
  1765 00000A95 [00000000]              	dd	_descFichero
  1766 00000A99 6650                    	push	eax
  1767 00000A9B 668B46FC                	mov	eax, [bp-4]
  1768 00000A9F 666BC024                	imul	eax, eax, 36
  1769 00000AA3 6689C1                  	mov	ecx, eax
  1770 00000AA6 6658                    	pop	eax
  1771 00000AA8 6601C8                  	add	eax, ecx
  1772 00000AAB 6683C004                	add	eax, 4
  1773 00000AAF 6650                    	push	eax
  1774 00000AB1 9A                      	db	0x9A
  1775                                  section .relot
  1776 0000002C [B20A0000]              	dd	L96
  1777                                  section .text
  1778                                  L96:
  1779 00000AB2 [00000000]              	dd	_strcpy
  1780 00000AB6 83ECF8                  	sub	sp, -8
  1781                                  ; RPN'ized expression: "descFichero dfs + *u &u rindx -> *u rindx = "
  1782                                  ; Expanded expression: "descFichero (@-4) *(4) 36 * + 16 + (@12) *(4) =(4) "
  1783                                  ; Fused expression:    "descFichero push-ax * *(@-4) 36 + *sp ax + ax 16 =(204) *ax *(@12) "
  1784                                  section .relod
  1785 00000098 [BB0A0000]              	dd	L97
  1786                                  section .text
  1787 00000AB9 66B8                    	db	0x66, 0xB8
  1788                                  L97:
  1789 00000ABB [00000000]              	dd	_descFichero
  1790 00000ABF 6650                    	push	eax
  1791 00000AC1 668B46FC                	mov	eax, [bp-4]
  1792 00000AC5 666BC024                	imul	eax, eax, 36
  1793 00000AC9 6689C1                  	mov	ecx, eax
  1794 00000ACC 6658                    	pop	eax
  1795 00000ACE 6601C8                  	add	eax, ecx
  1796 00000AD1 6683C010                	add	eax, 16
  1797 00000AD5 6689C3                  	mov	ebx, eax
  1798 00000AD8 668B460C                	mov	eax, [bp+12]
  1799 00000ADC 6689DE                  	mov	esi, ebx
  1800 00000ADF 66C1CE04                	ror	esi, 4
  1801 00000AE3 8EDE                    	mov	ds, si
  1802 00000AE5 66C1EE1C                	shr	esi, 28
  1803 00000AE9 668904                  	mov	[si], eax
  1804                                  ; RPN'ized expression: "descFichero dfs + *u &u menor -> *u menor = "
  1805                                  ; Expanded expression: "descFichero (@-4) *(4) 36 * + 20 + (@16) *(2) =(4) "
  1806                                  ; Fused expression:    "descFichero push-ax * *(@-4) 36 + *sp ax + ax 20 =(202) *ax *(@16) "
  1807                                  section .relod
  1808 0000009C [EE0A0000]              	dd	L98
  1809                                  section .text
  1810 00000AEC 66B8                    	db	0x66, 0xB8
  1811                                  L98:
  1812 00000AEE [00000000]              	dd	_descFichero
  1813 00000AF2 6650                    	push	eax
  1814 00000AF4 668B46FC                	mov	eax, [bp-4]
  1815 00000AF8 666BC024                	imul	eax, eax, 36
  1816 00000AFC 6689C1                  	mov	ecx, eax
  1817 00000AFF 6658                    	pop	eax
  1818 00000B01 6601C8                  	add	eax, ecx
  1819 00000B04 6683C014                	add	eax, 20
  1820 00000B08 6689C3                  	mov	ebx, eax
  1821 00000B0B 8B4610                  	mov	ax, [bp+16]
  1822 00000B0E 660FB7C0                	movzx	eax, ax
  1823 00000B12 6689DE                  	mov	esi, ebx
  1824 00000B15 66C1CE04                	ror	esi, 4
  1825 00000B19 8EDE                    	mov	ds, si
  1826 00000B1B 66C1EE1C                	shr	esi, 28
  1827 00000B1F 668904                  	mov	[si], eax
  1828                                  ; RPN'ized expression: "descFichero dfs + *u &u tipo -> *u tipo = "
  1829                                  ; Expanded expression: "descFichero (@-4) *(4) 36 * + 0 + (@20) *(4) =(4) "
  1830                                  ; Fused expression:    "descFichero push-ax * *(@-4) 36 + *sp ax + ax 0 =(204) *ax *(@20) "
  1831                                  section .relod
  1832 000000A0 [240B0000]              	dd	L99
  1833                                  section .text
  1834 00000B22 66B8                    	db	0x66, 0xB8
  1835                                  L99:
  1836 00000B24 [00000000]              	dd	_descFichero
  1837 00000B28 6650                    	push	eax
  1838 00000B2A 668B46FC                	mov	eax, [bp-4]
  1839 00000B2E 666BC024                	imul	eax, eax, 36
  1840 00000B32 6689C1                  	mov	ecx, eax
  1841 00000B35 6658                    	pop	eax
  1842 00000B37 6601C8                  	add	eax, ecx
  1843 00000B3A 6689C3                  	mov	ebx, eax
  1844 00000B3D 668B4614                	mov	eax, [bp+20]
  1845 00000B41 6689DE                  	mov	esi, ebx
  1846 00000B44 66C1CE04                	ror	esi, 4
  1847 00000B48 8EDE                    	mov	ds, si
  1848 00000B4A 66C1EE1C                	shr	esi, 28
  1849 00000B4E 668904                  	mov	[si], eax
  1850                                  ; return
  1851                                  ; RPN'ized expression: "dfs "
  1852                                  ; Expanded expression: "(@-4) *(4) "
  1853                                  ; Fused expression:    "*(4) (@-4)  "
  1854 00000B51 668B46FC                	mov	eax, [bp-4]
  1855                                  L67:
  1856 00000B55 66                      	db	0x66
  1857 00000B56 C9                      	leave
  1858 00000B57 CB                      	retf
  1859                                  L100:
  1860                                  
  1861                                  section .fxnsz
  1862 00000004 7C020000                	dd	L100 - _crearFich
  1863                                  
  1864                                  ; glb destruirFich : (
  1865                                  ; prm     dfs : int
  1866                                  ;     ) int
  1867                                  section .text
  1868                                  	global	_destruirFich
  1869                                  _destruirFich:
  1870 00000B58 6655                    	push	ebp
  1871 00000B5A 660FB7EC                	movzx	ebp, sp
  1872 00000B5E 83EC08                  	 sub	sp,          8
  1873                                  ; loc     dfs : (@8): int
  1874                                  ; loc     rindx : (@-4): int
  1875                                  ; loc     i : (@-8): int
  1876                                  ; if
  1877                                  ; RPN'ized expression: "dfs 0 < dfs 20 >= || "
  1878                                  ; Expanded expression: "(@8) *(4) 0 < [sh||->105] (@8) *(4) 20 >= ||[105] "
  1879                                  ; Fused expression:    "< *(@8) 0 [sh||->105] >= *(@8) 20 ||[105]  "
  1880 00000B61 668B4608                	mov	eax, [bp+8]
  1881 00000B65 6683F800                	cmp	eax, 0
  1882 00000B69 0F9CC0                  	setl	al
  1883 00000B6C 660FB6C0                	movzx	eax, al
  1884                                  ; JumpIfNotZero
  1885 00000B70 6685C0                  	test	eax, eax
  1886 00000B73 750F                    	jne	L105
  1887 00000B75 668B4608                	mov	eax, [bp+8]
  1888 00000B79 6683F814                	cmp	eax, 20
  1889 00000B7D 0F9DC0                  	setge	al
  1890 00000B80 660FB6C0                	movzx	eax, al
  1891                                  L105:
  1892                                  ; JumpIfZero
  1893 00000B84 6685C0                  	test	eax, eax
  1894 00000B87 7409                    	je	L103
  1895                                  ; return
  1896                                  ; RPN'ized expression: "1 -u "
  1897                                  ; Expanded expression: "-1 "
  1898                                  ; Expression value: -1
  1899                                  ; Fused expression:    "-1  "
  1900 00000B89 66B8FFFFFFFF            	mov	eax, -1
  1901 00000B8F E94903                  	jmp	L101
  1902                                  L103:
  1903                                  ; RPN'ized expression: "rindx descFichero dfs + *u &u rindx -> *u = "
  1904                                  ; Expanded expression: "(@-4) descFichero (@8) *(4) 36 * + 16 + *(4) =(4) "
  1905                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 16 =(204) *(@-4) *ax "
  1906                                  section .relod
  1907 000000A4 [940B0000]              	dd	L106
  1908                                  section .text
  1909 00000B92 66B8                    	db	0x66, 0xB8
  1910                                  L106:
  1911 00000B94 [00000000]              	dd	_descFichero
  1912 00000B98 6650                    	push	eax
  1913 00000B9A 668B4608                	mov	eax, [bp+8]
  1914 00000B9E 666BC024                	imul	eax, eax, 36
  1915 00000BA2 6689C1                  	mov	ecx, eax
  1916 00000BA5 6658                    	pop	eax
  1917 00000BA7 6601C8                  	add	eax, ecx
  1918 00000BAA 6683C010                	add	eax, 16
  1919 00000BAE 6689C3                  	mov	ebx, eax
  1920 00000BB1 6689DE                  	mov	esi, ebx
  1921 00000BB4 66C1CE04                	ror	esi, 4
  1922 00000BB8 8EDE                    	mov	ds, si
  1923 00000BBA 66C1EE1C                	shr	esi, 28
  1924 00000BBE 668B04                  	mov	eax, [si]
  1925 00000BC1 668946FC                	mov	[bp-4], eax
  1926                                  ; RPN'ized expression: "i descRecurso rindx + *u &u c2cFichRec -> *u &u primero -> *u = "
  1927                                  ; Expanded expression: "(@-8) descRecurso (@-4) *(4) 96 * + 24 + 4 + *(4) =(4) "
  1928                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 24 + ax 4 =(204) *(@-8) *ax "
  1929                                  section .relod
  1930 000000A8 [C70B0000]              	dd	L107
  1931                                  section .text
  1932 00000BC5 66B8                    	db	0x66, 0xB8
  1933                                  L107:
  1934 00000BC7 [00000000]              	dd	_descRecurso
  1935 00000BCB 6650                    	push	eax
  1936 00000BCD 668B46FC                	mov	eax, [bp-4]
  1937 00000BD1 666BC060                	imul	eax, eax, 96
  1938 00000BD5 6689C1                  	mov	ecx, eax
  1939 00000BD8 6658                    	pop	eax
  1940 00000BDA 6601C8                  	add	eax, ecx
  1941 00000BDD 6683C018                	add	eax, 24
  1942 00000BE1 6683C004                	add	eax, 4
  1943 00000BE5 6689C3                  	mov	ebx, eax
  1944 00000BE8 6689DE                  	mov	esi, ebx
  1945 00000BEB 66C1CE04                	ror	esi, 4
  1946 00000BEF 8EDE                    	mov	ds, si
  1947 00000BF1 66C1EE1C                	shr	esi, 28
  1948 00000BF5 668B04                  	mov	eax, [si]
  1949 00000BF8 668946F8                	mov	[bp-8], eax
  1950                                  ; while
  1951                                  ; RPN'ized expression: "i descRecurso rindx + *u &u c2cFichRec -> *u &u cabecera -> *u != "
  1952                                  ; Expanded expression: "(@-8) *(4) descRecurso (@-4) *(4) 96 * + 24 + 8 + *(4) != "
  1953                                  L108:
  1954                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 24 + ax 8 != *(@-8) *ax IF! "
  1955                                  section .relod
  1956 000000AC [FE0B0000]              	dd	L110
  1957                                  section .text
  1958 00000BFC 66B8                    	db	0x66, 0xB8
  1959                                  L110:
  1960 00000BFE [00000000]              	dd	_descRecurso
  1961 00000C02 6650                    	push	eax
  1962 00000C04 668B46FC                	mov	eax, [bp-4]
  1963 00000C08 666BC060                	imul	eax, eax, 96
  1964 00000C0C 6689C1                  	mov	ecx, eax
  1965 00000C0F 6658                    	pop	eax
  1966 00000C11 6601C8                  	add	eax, ecx
  1967 00000C14 6683C018                	add	eax, 24
  1968 00000C18 6683C008                	add	eax, 8
  1969 00000C1C 6689C3                  	mov	ebx, eax
  1970 00000C1F 6689DE                  	mov	esi, ebx
  1971 00000C22 66C1CE04                	ror	esi, 4
  1972 00000C26 8EDE                    	mov	ds, si
  1973 00000C28 66C1EE1C                	shr	esi, 28
  1974 00000C2C 668B0C                  	mov	ecx, [si]
  1975 00000C2F 668B46F8                	mov	eax, [bp-8]
  1976 00000C33 6639C8                  	cmp	eax, ecx
  1977 00000C36 7468                    	je	L109
  1978                                  ; {
  1979                                  ; if
  1980                                  ; RPN'ized expression: "i dfs == "
  1981                                  ; Expanded expression: "(@-8) *(4) (@8) *(4) == "
  1982                                  ; Fused expression:    "== *(@-8) *(@8) IF! "
  1983 00000C38 668B46F8                	mov	eax, [bp-8]
  1984 00000C3C 663B4608                	cmp	eax, [bp+8]
  1985 00000C40 7502                    	jne	L111
  1986                                  ; break
  1987 00000C42 EB5C                    	jmp	L109
  1988                                  L111:
  1989                                  ; RPN'ized expression: "i descRecurso rindx + *u &u c2cFichRec -> *u &u e -> *u i + *u &u sig -> *u = "
  1990                                  ; Expanded expression: "(@-8) descRecurso (@-4) *(4) 96 * + 24 + 12 + *(4) (@-8) *(4) 12 * + 0 + *(4) =(4) "
  1991                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 24 + ax 12 push-ax * *(@-8) 12 + **sp ax + ax 0 =(204) *(@-8) *ax "
  1992                                  section .relod
  1993 000000B0 [460C0000]              	dd	L113
  1994                                  section .text
  1995 00000C44 66B8                    	db	0x66, 0xB8
  1996                                  L113:
  1997 00000C46 [00000000]              	dd	_descRecurso
  1998 00000C4A 6650                    	push	eax
  1999 00000C4C 668B46FC                	mov	eax, [bp-4]
  2000 00000C50 666BC060                	imul	eax, eax, 96
  2001 00000C54 6689C1                  	mov	ecx, eax
  2002 00000C57 6658                    	pop	eax
  2003 00000C59 6601C8                  	add	eax, ecx
  2004 00000C5C 6683C018                	add	eax, 24
  2005 00000C60 6683C00C                	add	eax, 12
  2006 00000C64 6650                    	push	eax
  2007 00000C66 668B46F8                	mov	eax, [bp-8]
  2008 00000C6A 666BC00C                	imul	eax, eax, 12
  2009 00000C6E 6689C1                  	mov	ecx, eax
  2010 00000C71 665B                    	pop	ebx
  2011 00000C73 6689DE                  	mov	esi, ebx
  2012 00000C76 66C1CE04                	ror	esi, 4
  2013 00000C7A 8EDE                    	mov	ds, si
  2014 00000C7C 66C1EE1C                	shr	esi, 28
  2015 00000C80 668B04                  	mov	eax, [si]
  2016 00000C83 6601C8                  	add	eax, ecx
  2017 00000C86 6689C3                  	mov	ebx, eax
  2018 00000C89 6689DE                  	mov	esi, ebx
  2019 00000C8C 66C1CE04                	ror	esi, 4
  2020 00000C90 8EDE                    	mov	ds, si
  2021 00000C92 66C1EE1C                	shr	esi, 28
  2022 00000C96 668B04                  	mov	eax, [si]
  2023 00000C99 668946F8                	mov	[bp-8], eax
  2024                                  ; }
  2025 00000C9D E95CFF                  	jmp	L108
  2026                                  L109:
  2027                                  ; if
  2028                                  ; RPN'ized expression: "i dfs != "
  2029                                  ; Expanded expression: "(@-8) *(4) (@8) *(4) != "
  2030                                  ; Fused expression:    "!= *(@-8) *(@8) IF! "
  2031 00000CA0 668B46F8                	mov	eax, [bp-8]
  2032 00000CA4 663B4608                	cmp	eax, [bp+8]
  2033 00000CA8 7409                    	je	L114
  2034                                  ; return
  2035                                  ; RPN'ized expression: "1 -u "
  2036                                  ; Expanded expression: "-1 "
  2037                                  ; Expression value: -1
  2038                                  ; Fused expression:    "-1  "
  2039 00000CAA 66B8FFFFFFFF            	mov	eax, -1
  2040 00000CB0 E92802                  	jmp	L101
  2041                                  L114:
  2042                                  ; if
  2043                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_L -> *u 0 > descFichero dfs + *u &u contAp_E -> *u 0 > || "
  2044                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 28 + *(4) 0 > [sh||->118] descFichero (@8) *(4) 36 * + 32 + *(4) 0 > ||[118] "
  2045                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 28 > *ax 0 [sh||->118] descFichero push-ax * *(@8) 36 + *sp ax + ax 32 > *ax 0 ||[118]  "
  2046                                  section .relod
  2047 000000B4 [B50C0000]              	dd	L119
  2048                                  section .text
  2049 00000CB3 66B8                    	db	0x66, 0xB8
  2050                                  L119:
  2051 00000CB5 [00000000]              	dd	_descFichero
  2052 00000CB9 6650                    	push	eax
  2053 00000CBB 668B4608                	mov	eax, [bp+8]
  2054 00000CBF 666BC024                	imul	eax, eax, 36
  2055 00000CC3 6689C1                  	mov	ecx, eax
  2056 00000CC6 6658                    	pop	eax
  2057 00000CC8 6601C8                  	add	eax, ecx
  2058 00000CCB 6683C01C                	add	eax, 28
  2059 00000CCF 6689C3                  	mov	ebx, eax
  2060 00000CD2 6689DE                  	mov	esi, ebx
  2061 00000CD5 66C1CE04                	ror	esi, 4
  2062 00000CD9 8EDE                    	mov	ds, si
  2063 00000CDB 66C1EE1C                	shr	esi, 28
  2064 00000CDF 668B04                  	mov	eax, [si]
  2065 00000CE2 6683F800                	cmp	eax, 0
  2066 00000CE6 0F9FC0                  	setg	al
  2067 00000CE9 660FB6C0                	movzx	eax, al
  2068                                  ; JumpIfNotZero
  2069 00000CED 6685C0                  	test	eax, eax
  2070 00000CF0 753A                    	jne	L118
  2071                                  section .relod
  2072 000000B8 [F40C0000]              	dd	L120
  2073                                  section .text
  2074 00000CF2 66B8                    	db	0x66, 0xB8
  2075                                  L120:
  2076 00000CF4 [00000000]              	dd	_descFichero
  2077 00000CF8 6650                    	push	eax
  2078 00000CFA 668B4608                	mov	eax, [bp+8]
  2079 00000CFE 666BC024                	imul	eax, eax, 36
  2080 00000D02 6689C1                  	mov	ecx, eax
  2081 00000D05 6658                    	pop	eax
  2082 00000D07 6601C8                  	add	eax, ecx
  2083 00000D0A 6683C020                	add	eax, 32
  2084 00000D0E 6689C3                  	mov	ebx, eax
  2085 00000D11 6689DE                  	mov	esi, ebx
  2086 00000D14 66C1CE04                	ror	esi, 4
  2087 00000D18 8EDE                    	mov	ds, si
  2088 00000D1A 66C1EE1C                	shr	esi, 28
  2089 00000D1E 668B04                  	mov	eax, [si]
  2090 00000D21 6683F800                	cmp	eax, 0
  2091 00000D25 0F9FC0                  	setg	al
  2092 00000D28 660FB6C0                	movzx	eax, al
  2093                                  L118:
  2094                                  ; JumpIfZero
  2095 00000D2C 6685C0                  	test	eax, eax
  2096 00000D2F 7409                    	je	L116
  2097                                  ; return
  2098                                  ; RPN'ized expression: "2 -u "
  2099                                  ; Expanded expression: "-2 "
  2100                                  ; Expression value: -2
  2101                                  ; Fused expression:    "-2  "
  2102 00000D31 66B8FEFFFFFF            	mov	eax, -2
  2103 00000D37 E9A101                  	jmp	L101
  2104                                  L116:
  2105                                  ; loc     <something> : * struct <something>
  2106                                  ; RPN'ized expression: "( descRecurso rindx + *u &u c2cFichRec -> *u &u (something121) , dfs eliminarPC2c ) "
  2107                                  ; Expanded expression: " descRecurso (@-4) *(4) 96 * + 24 +  (@8) *(4)  eliminarPC2c ()8 "
  2108                                  ; Fused expression:    "( descRecurso push-ax * *(@-4) 96 + *sp ax + ax 24 , *(4) (@8) , eliminarPC2c )8 "
  2109                                  section .relod
  2110 000000BC [3C0D0000]              	dd	L122
  2111                                  section .text
  2112 00000D3A 66B8                    	db	0x66, 0xB8
  2113                                  L122:
  2114 00000D3C [00000000]              	dd	_descRecurso
  2115 00000D40 6650                    	push	eax
  2116 00000D42 668B46FC                	mov	eax, [bp-4]
  2117 00000D46 666BC060                	imul	eax, eax, 96
  2118 00000D4A 6689C1                  	mov	ecx, eax
  2119 00000D4D 6658                    	pop	eax
  2120 00000D4F 6601C8                  	add	eax, ecx
  2121 00000D52 6683C018                	add	eax, 24
  2122 00000D56 6650                    	push	eax
  2123 00000D58 66FF7608                	push	dword [bp+8]
  2124 00000D5C 9A                      	db	0x9A
  2125                                  section .relot
  2126 00000030 [5D0D0000]              	dd	L123
  2127                                  section .text
  2128                                  L123:
  2129 00000D5D [00000000]              	dd	_eliminarPC2c
  2130 00000D61 83ECF8                  	sub	sp, -8
  2131                                  ; loc     <something> : * struct <something>
  2132                                  ; RPN'ized expression: "( c2cPFR DFOcupados + *u &u (something124) , dfs eliminarPC2c ) "
  2133                                  ; Expanded expression: " c2cPFR 144 +  (@8) *(4)  eliminarPC2c ()8 "
  2134                                  ; Fused expression:    "( c2cPFR + ax 144 , *(4) (@8) , eliminarPC2c )8 "
  2135                                  section .relod
  2136 000000C0 [660D0000]              	dd	L125
  2137                                  section .text
  2138 00000D64 66B8                    	db	0x66, 0xB8
  2139                                  L125:
  2140 00000D66 [00000000]              	dd	_c2cPFR
  2141 00000D6A 660590000000            	add	eax, 144
  2142 00000D70 6650                    	push	eax
  2143 00000D72 66FF7608                	push	dword [bp+8]
  2144 00000D76 9A                      	db	0x9A
  2145                                  section .relot
  2146 00000034 [770D0000]              	dd	L126
  2147                                  section .text
  2148                                  L126:
  2149 00000D77 [00000000]              	dd	_eliminarPC2c
  2150 00000D7B 83ECF8                  	sub	sp, -8
  2151                                  ; loc     <something> : * struct <something>
  2152                                  ; RPN'ized expression: "( c2cPFR DFLibres + *u &u (something127) , dfs apilarPC2c ) "
  2153                                  ; Expanded expression: " c2cPFR 128 +  (@8) *(4)  apilarPC2c ()8 "
  2154                                  ; Fused expression:    "( c2cPFR + ax 128 , *(4) (@8) , apilarPC2c )8 "
  2155                                  section .relod
  2156 000000C4 [800D0000]              	dd	L128
  2157                                  section .text
  2158 00000D7E 66B8                    	db	0x66, 0xB8
  2159                                  L128:
  2160 00000D80 [00000000]              	dd	_c2cPFR
  2161 00000D84 660580000000            	add	eax, 128
  2162 00000D8A 6650                    	push	eax
  2163 00000D8C 66FF7608                	push	dword [bp+8]
  2164 00000D90 9A                      	db	0x9A
  2165                                  section .relot
  2166 00000038 [910D0000]              	dd	L129
  2167                                  section .text
  2168                                  L129:
  2169 00000D91 [00000000]              	dd	_apilarPC2c
  2170 00000D95 83ECF8                  	sub	sp, -8
  2171                                  ; loc     <something> : char
  2172                                  ; RPN'ized expression: "descFichero dfs + *u &u nombre -> *u 0 + *u 0 (something130) = "
  2173                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 4 + 0 =(-1) "
  2174                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 4 =(124) *ax 0 "
  2175                                  section .relod
  2176 000000C8 [9A0D0000]              	dd	L131
  2177                                  section .text
  2178 00000D98 66B8                    	db	0x66, 0xB8
  2179                                  L131:
  2180 00000D9A [00000000]              	dd	_descFichero
  2181 00000D9E 6650                    	push	eax
  2182 00000DA0 668B4608                	mov	eax, [bp+8]
  2183 00000DA4 666BC024                	imul	eax, eax, 36
  2184 00000DA8 6689C1                  	mov	ecx, eax
  2185 00000DAB 6658                    	pop	eax
  2186 00000DAD 6601C8                  	add	eax, ecx
  2187 00000DB0 6683C004                	add	eax, 4
  2188 00000DB4 6689C3                  	mov	ebx, eax
  2189 00000DB7 66B800000000            	mov	eax, 0
  2190 00000DBD 6689DE                  	mov	esi, ebx
  2191 00000DC0 66C1CE04                	ror	esi, 4
  2192 00000DC4 8EDE                    	mov	ds, si
  2193 00000DC6 66C1EE1C                	shr	esi, 28
  2194 00000DCA 8804                    	mov	[si], al
  2195 00000DCC 660FBEC0                	movsx	eax, al
  2196                                  ; RPN'ized expression: "descFichero dfs + *u &u tipo -> *u flibre = "
  2197                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 0 + 0 =(4) "
  2198                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 0 =(204) *ax 0 "
  2199                                  section .relod
  2200 000000CC [D20D0000]              	dd	L132
  2201                                  section .text
  2202 00000DD0 66B8                    	db	0x66, 0xB8
  2203                                  L132:
  2204 00000DD2 [00000000]              	dd	_descFichero
  2205 00000DD6 6650                    	push	eax
  2206 00000DD8 668B4608                	mov	eax, [bp+8]
  2207 00000DDC 666BC024                	imul	eax, eax, 36
  2208 00000DE0 6689C1                  	mov	ecx, eax
  2209 00000DE3 6658                    	pop	eax
  2210 00000DE5 6601C8                  	add	eax, ecx
  2211 00000DE8 6689C3                  	mov	ebx, eax
  2212 00000DEB 66B800000000            	mov	eax, 0
  2213 00000DF1 6689DE                  	mov	esi, ebx
  2214 00000DF4 66C1CE04                	ror	esi, 4
  2215 00000DF8 8EDE                    	mov	ds, si
  2216 00000DFA 66C1EE1C                	shr	esi, 28
  2217 00000DFE 668904                  	mov	[si], eax
  2218                                  ; RPN'ized expression: "descFichero dfs + *u &u rindx -> *u 1 -u = "
  2219                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 16 + -1 =(4) "
  2220                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 16 =(204) *ax -1 "
  2221                                  section .relod
  2222 000000D0 [030E0000]              	dd	L133
  2223                                  section .text
  2224 00000E01 66B8                    	db	0x66, 0xB8
  2225                                  L133:
  2226 00000E03 [00000000]              	dd	_descFichero
  2227 00000E07 6650                    	push	eax
  2228 00000E09 668B4608                	mov	eax, [bp+8]
  2229 00000E0D 666BC024                	imul	eax, eax, 36
  2230 00000E11 6689C1                  	mov	ecx, eax
  2231 00000E14 6658                    	pop	eax
  2232 00000E16 6601C8                  	add	eax, ecx
  2233 00000E19 6683C010                	add	eax, 16
  2234 00000E1D 6689C3                  	mov	ebx, eax
  2235 00000E20 66B8FFFFFFFF            	mov	eax, -1
  2236 00000E26 6689DE                  	mov	esi, ebx
  2237 00000E29 66C1CE04                	ror	esi, 4
  2238 00000E2D 8EDE                    	mov	ds, si
  2239 00000E2F 66C1EE1C                	shr	esi, 28
  2240 00000E33 668904                  	mov	[si], eax
  2241                                  ; RPN'ized expression: "descFichero dfs + *u &u menor -> *u 0 = "
  2242                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 20 + 0 =(4) "
  2243                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 20 =(204) *ax 0 "
  2244                                  section .relod
  2245 000000D4 [380E0000]              	dd	L134
  2246                                  section .text
  2247 00000E36 66B8                    	db	0x66, 0xB8
  2248                                  L134:
  2249 00000E38 [00000000]              	dd	_descFichero
  2250 00000E3C 6650                    	push	eax
  2251 00000E3E 668B4608                	mov	eax, [bp+8]
  2252 00000E42 666BC024                	imul	eax, eax, 36
  2253 00000E46 6689C1                  	mov	ecx, eax
  2254 00000E49 6658                    	pop	eax
  2255 00000E4B 6601C8                  	add	eax, ecx
  2256 00000E4E 6683C014                	add	eax, 20
  2257 00000E52 6689C3                  	mov	ebx, eax
  2258 00000E55 66B800000000            	mov	eax, 0
  2259 00000E5B 6689DE                  	mov	esi, ebx
  2260 00000E5E 66C1CE04                	ror	esi, 4
  2261 00000E62 8EDE                    	mov	ds, si
  2262 00000E64 66C1EE1C                	shr	esi, 28
  2263 00000E68 668904                  	mov	[si], eax
  2264                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_L -> *u 0 = "
  2265                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 28 + 0 =(4) "
  2266                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 28 =(204) *ax 0 "
  2267                                  section .relod
  2268 000000D8 [6D0E0000]              	dd	L135
  2269                                  section .text
  2270 00000E6B 66B8                    	db	0x66, 0xB8
  2271                                  L135:
  2272 00000E6D [00000000]              	dd	_descFichero
  2273 00000E71 6650                    	push	eax
  2274 00000E73 668B4608                	mov	eax, [bp+8]
  2275 00000E77 666BC024                	imul	eax, eax, 36
  2276 00000E7B 6689C1                  	mov	ecx, eax
  2277 00000E7E 6658                    	pop	eax
  2278 00000E80 6601C8                  	add	eax, ecx
  2279 00000E83 6683C01C                	add	eax, 28
  2280 00000E87 6689C3                  	mov	ebx, eax
  2281 00000E8A 66B800000000            	mov	eax, 0
  2282 00000E90 6689DE                  	mov	esi, ebx
  2283 00000E93 66C1CE04                	ror	esi, 4
  2284 00000E97 8EDE                    	mov	ds, si
  2285 00000E99 66C1EE1C                	shr	esi, 28
  2286 00000E9D 668904                  	mov	[si], eax
  2287                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_E -> *u 0 = "
  2288                                  ; Expanded expression: "descFichero (@8) *(4) 36 * + 32 + 0 =(4) "
  2289                                  ; Fused expression:    "descFichero push-ax * *(@8) 36 + *sp ax + ax 32 =(204) *ax 0 "
  2290                                  section .relod
  2291 000000DC [A20E0000]              	dd	L136
  2292                                  section .text
  2293 00000EA0 66B8                    	db	0x66, 0xB8
  2294                                  L136:
  2295 00000EA2 [00000000]              	dd	_descFichero
  2296 00000EA6 6650                    	push	eax
  2297 00000EA8 668B4608                	mov	eax, [bp+8]
  2298 00000EAC 666BC024                	imul	eax, eax, 36
  2299 00000EB0 6689C1                  	mov	ecx, eax
  2300 00000EB3 6658                    	pop	eax
  2301 00000EB5 6601C8                  	add	eax, ecx
  2302 00000EB8 6683C020                	add	eax, 32
  2303 00000EBC 6689C3                  	mov	ebx, eax
  2304 00000EBF 66B800000000            	mov	eax, 0
  2305 00000EC5 6689DE                  	mov	esi, ebx
  2306 00000EC8 66C1CE04                	ror	esi, 4
  2307 00000ECC 8EDE                    	mov	ds, si
  2308 00000ECE 66C1EE1C                	shr	esi, 28
  2309 00000ED2 668904                  	mov	[si], eax
  2310                                  ; return
  2311                                  ; RPN'ized expression: "0 "
  2312                                  ; Expanded expression: "0 "
  2313                                  ; Expression value: 0
  2314                                  ; Fused expression:    "0  "
  2315 00000ED5 66B800000000            	mov	eax, 0
  2316                                  L101:
  2317 00000EDB 66                      	db	0x66
  2318 00000EDC C9                      	leave
  2319 00000EDD CB                      	retf
  2320                                  L137:
  2321                                  
  2322                                  section .fxnsz
  2323 00000008 86030000                	dd	L137 - _destruirFich
  2324                                  
  2325                                  ; glb destruirRec : (
  2326                                  ; prm     nombre : * char
  2327                                  ;     ) int
  2328                                  section .text
  2329                                  	global	_destruirRec
  2330                                  _destruirRec:
  2331 00000EDE 6655                    	push	ebp
  2332 00000EE0 660FB7EC                	movzx	ebp, sp
  2333 00000EE4 83EC20                  	 sub	sp,         32
  2334                                  ; loc     nombre : (@8): * char
  2335                                  ; loc     r : (@-4): int
  2336                                  ; loc     rindx : (@-8): int
  2337                                  ; loc     pindx : (@-12): int
  2338                                  ; loc     dfs : (@-16): int
  2339                                  ; loc     dfsSig : (@-20): int
  2340                                  ; loc     nVInt : (@-24): unsigned char
  2341                                  ; loc     j : (@-28): int
  2342                                  ; loc     segmento : (@-32): unsigned short
  2343                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u primero -> *u = "
  2344                                  ; Expanded expression: "(@-4) c2cPFR 176 + 4 + *(4) =(4) "
  2345                                  ; Fused expression:    "c2cPFR + ax 176 + ax 4 =(204) *(@-4) *ax "
  2346                                  section .relod
  2347 000000E0 [E90E0000]              	dd	L140
  2348                                  section .text
  2349 00000EE7 66B8                    	db	0x66, 0xB8
  2350                                  L140:
  2351 00000EE9 [00000000]              	dd	_c2cPFR
  2352 00000EED 6605B0000000            	add	eax, 176
  2353 00000EF3 6683C004                	add	eax, 4
  2354 00000EF7 6689C3                  	mov	ebx, eax
  2355 00000EFA 6689DE                  	mov	esi, ebx
  2356 00000EFD 66C1CE04                	ror	esi, 4
  2357 00000F01 8EDE                    	mov	ds, si
  2358 00000F03 66C1EE1C                	shr	esi, 28
  2359 00000F07 668B04                  	mov	eax, [si]
  2360 00000F0A 668946FC                	mov	[bp-4], eax
  2361                                  ; while
  2362                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u cabecera -> *u != "
  2363                                  ; Expanded expression: "(@-4) *(4) c2cPFR 176 + 8 + *(4) != "
  2364                                  L141:
  2365                                  ; Fused expression:    "c2cPFR + ax 176 + ax 8 != *(@-4) *ax IF! "
  2366                                  section .relod
  2367 000000E4 [100F0000]              	dd	L143
  2368                                  section .text
  2369 00000F0E 66B8                    	db	0x66, 0xB8
  2370                                  L143:
  2371 00000F10 [00000000]              	dd	_c2cPFR
  2372 00000F14 6605B0000000            	add	eax, 176
  2373 00000F1A 6683C008                	add	eax, 8
  2374 00000F1E 6689C3                  	mov	ebx, eax
  2375 00000F21 6689DE                  	mov	esi, ebx
  2376 00000F24 66C1CE04                	ror	esi, 4
  2377 00000F28 8EDE                    	mov	ds, si
  2378 00000F2A 66C1EE1C                	shr	esi, 28
  2379 00000F2E 668B0C                  	mov	ecx, [si]
  2380 00000F31 668B46FC                	mov	eax, [bp-4]
  2381 00000F35 6639C8                  	cmp	eax, ecx
  2382 00000F38 0F848200                	je	L142
  2383                                  ; {
  2384                                  ; if
  2385                                  ; RPN'ized expression: "( nombre , descRecurso r + *u &u nombre -> *u strcmp ) 0 == "
  2386                                  ; Expanded expression: " (@8) *(4)  descRecurso (@-4) *(4) 96 * + 0 +  strcmp ()8 0 == "
  2387                                  ; Fused expression:    "( *(4) (@8) , descRecurso push-ax * *(@-4) 96 + *sp ax + ax 0 , strcmp )8 == ax 0 IF! "
  2388 00000F3C 66FF7608                	push	dword [bp+8]
  2389                                  section .relod
  2390 000000E8 [420F0000]              	dd	L146
  2391                                  section .text
  2392 00000F40 66B8                    	db	0x66, 0xB8
  2393                                  L146:
  2394 00000F42 [00000000]              	dd	_descRecurso
  2395 00000F46 6650                    	push	eax
  2396 00000F48 668B46FC                	mov	eax, [bp-4]
  2397 00000F4C 666BC060                	imul	eax, eax, 96
  2398 00000F50 6689C1                  	mov	ecx, eax
  2399 00000F53 6658                    	pop	eax
  2400 00000F55 6601C8                  	add	eax, ecx
  2401 00000F58 6650                    	push	eax
  2402 00000F5A 9A                      	db	0x9A
  2403                                  section .relot
  2404 0000003C [5B0F0000]              	dd	L147
  2405                                  section .text
  2406                                  L147:
  2407 00000F5B [00000000]              	dd	_strcmp
  2408 00000F5F 83ECF8                  	sub	sp, -8
  2409 00000F62 6683F800                	cmp	eax, 0
  2410 00000F66 750A                    	jne	L144
  2411                                  ; {
  2412                                  ; RPN'ized expression: "rindx r = "
  2413                                  ; Expanded expression: "(@-8) (@-4) *(4) =(4) "
  2414                                  ; Fused expression:    "=(204) *(@-8) *(@-4) "
  2415 00000F68 668B46FC                	mov	eax, [bp-4]
  2416 00000F6C 668946F8                	mov	[bp-8], eax
  2417                                  ; break
  2418 00000F70 EB4C                    	jmp	L142
  2419                                  ; }
  2420                                  L144:
  2421                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u e -> *u r + *u &u sig -> *u = "
  2422                                  ; Expanded expression: "(@-4) c2cPFR 176 + 12 + *(4) (@-4) *(4) 12 * + 0 + *(4) =(4) "
  2423                                  ; Fused expression:    "c2cPFR + ax 176 + ax 12 push-ax * *(@-4) 12 + **sp ax + ax 0 =(204) *(@-4) *ax "
  2424                                  section .relod
  2425 000000EC [740F0000]              	dd	L148
  2426                                  section .text
  2427 00000F72 66B8                    	db	0x66, 0xB8
  2428                                  L148:
  2429 00000F74 [00000000]              	dd	_c2cPFR
  2430 00000F78 6605B0000000            	add	eax, 176
  2431 00000F7E 6683C00C                	add	eax, 12
  2432 00000F82 6650                    	push	eax
  2433 00000F84 668B46FC                	mov	eax, [bp-4]
  2434 00000F88 666BC00C                	imul	eax, eax, 12
  2435 00000F8C 6689C1                  	mov	ecx, eax
  2436 00000F8F 665B                    	pop	ebx
  2437 00000F91 6689DE                  	mov	esi, ebx
  2438 00000F94 66C1CE04                	ror	esi, 4
  2439 00000F98 8EDE                    	mov	ds, si
  2440 00000F9A 66C1EE1C                	shr	esi, 28
  2441 00000F9E 668B04                  	mov	eax, [si]
  2442 00000FA1 6601C8                  	add	eax, ecx
  2443 00000FA4 6689C3                  	mov	ebx, eax
  2444 00000FA7 6689DE                  	mov	esi, ebx
  2445 00000FAA 66C1CE04                	ror	esi, 4
  2446 00000FAE 8EDE                    	mov	ds, si
  2447 00000FB0 66C1EE1C                	shr	esi, 28
  2448 00000FB4 668B04                  	mov	eax, [si]
  2449 00000FB7 668946FC                	mov	[bp-4], eax
  2450                                  ; }
  2451 00000FBB E950FF                  	jmp	L141
  2452                                  L142:
  2453                                  ; if
  2454                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u cabecera -> *u == "
  2455                                  ; Expanded expression: "(@-4) *(4) c2cPFR 176 + 8 + *(4) == "
  2456                                  ; Fused expression:    "c2cPFR + ax 176 + ax 8 == *(@-4) *ax IF! "
  2457                                  section .relod
  2458 000000F0 [C00F0000]              	dd	L151
  2459                                  section .text
  2460 00000FBE 66B8                    	db	0x66, 0xB8
  2461                                  L151:
  2462 00000FC0 [00000000]              	dd	_c2cPFR
  2463 00000FC4 6605B0000000            	add	eax, 176
  2464 00000FCA 6683C008                	add	eax, 8
  2465 00000FCE 6689C3                  	mov	ebx, eax
  2466 00000FD1 6689DE                  	mov	esi, ebx
  2467 00000FD4 66C1CE04                	ror	esi, 4
  2468 00000FD8 8EDE                    	mov	ds, si
  2469 00000FDA 66C1EE1C                	shr	esi, 28
  2470 00000FDE 668B0C                  	mov	ecx, [si]
  2471 00000FE1 668B46FC                	mov	eax, [bp-4]
  2472 00000FE5 6639C8                  	cmp	eax, ecx
  2473 00000FE8 7509                    	jne	L149
  2474                                  ; return
  2475                                  ; RPN'ized expression: "1 -u "
  2476                                  ; Expanded expression: "-1 "
  2477                                  ; Expression value: -1
  2478                                  ; Fused expression:    "-1  "
  2479 00000FEA 66B8FFFFFFFF            	mov	eax, -1
  2480 00000FF0 E96608                  	jmp	L138
  2481                                  L149:
  2482                                  ; RPN'ized expression: "segmento descProceso descRecurso rindx + *u &u tindx -> *u + *u &u CSProc -> *u = "
  2483                                  ; Expanded expression: "(@-32) descProceso descRecurso (@-8) *(4) 96 * + 20 + *(4) 292 * + 52 + *(2) =(2) "
  2484                                  ; Fused expression:    "descProceso push-ax descRecurso push-ax * *(@-8) 96 + *sp ax + ax 20 * *ax 292 + *sp ax + ax 52 =(170) *(@-32) *ax "
  2485                                  section .relod
  2486 000000F4 [F50F0000]              	dd	L152
  2487                                  section .text
  2488 00000FF3 66B8                    	db	0x66, 0xB8
  2489                                  L152:
  2490 00000FF5 [00000000]              	dd	_descProceso
  2491 00000FF9 6650                    	push	eax
  2492                                  section .relod
  2493 000000F8 [FD0F0000]              	dd	L153
  2494                                  section .text
  2495 00000FFB 66B8                    	db	0x66, 0xB8
  2496                                  L153:
  2497 00000FFD [00000000]              	dd	_descRecurso
  2498 00001001 6650                    	push	eax
  2499 00001003 668B46F8                	mov	eax, [bp-8]
  2500 00001007 666BC060                	imul	eax, eax, 96
  2501 0000100B 6689C1                  	mov	ecx, eax
  2502 0000100E 6658                    	pop	eax
  2503 00001010 6601C8                  	add	eax, ecx
  2504 00001013 6683C014                	add	eax, 20
  2505 00001017 6689C3                  	mov	ebx, eax
  2506 0000101A 6689DE                  	mov	esi, ebx
  2507 0000101D 66C1CE04                	ror	esi, 4
  2508 00001021 8EDE                    	mov	ds, si
  2509 00001023 66C1EE1C                	shr	esi, 28
  2510 00001027 668B04                  	mov	eax, [si]
  2511 0000102A 6669C024010000          	imul	eax, eax, 292
  2512 00001031 6689C1                  	mov	ecx, eax
  2513 00001034 6658                    	pop	eax
  2514 00001036 6601C8                  	add	eax, ecx
  2515 00001039 6683C034                	add	eax, 52
  2516 0000103D 6689C3                  	mov	ebx, eax
  2517 00001040 6689DE                  	mov	esi, ebx
  2518 00001043 66C1CE04                	ror	esi, 4
  2519 00001047 8EDE                    	mov	ds, si
  2520 00001049 66C1EE1C                	shr	esi, 28
  2521 0000104D 8B04                    	mov	ax, [si]
  2522 0000104F 660FB7C0                	movzx	eax, ax
  2523 00001053 8946E0                  	mov	[bp-32], ax
  2524 00001056 660FB7C0                	movzx	eax, ax
  2525                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u primero -> *u = "
  2526                                  ; Expanded expression: "(@-4) c2cPFR 176 + 4 + *(4) =(4) "
  2527                                  ; Fused expression:    "c2cPFR + ax 176 + ax 4 =(204) *(@-4) *ax "
  2528                                  section .relod
  2529 000000FC [5C100000]              	dd	L154
  2530                                  section .text
  2531 0000105A 66B8                    	db	0x66, 0xB8
  2532                                  L154:
  2533 0000105C [00000000]              	dd	_c2cPFR
  2534 00001060 6605B0000000            	add	eax, 176
  2535 00001066 6683C004                	add	eax, 4
  2536 0000106A 6689C3                  	mov	ebx, eax
  2537 0000106D 6689DE                  	mov	esi, ebx
  2538 00001070 66C1CE04                	ror	esi, 4
  2539 00001074 8EDE                    	mov	ds, si
  2540 00001076 66C1EE1C                	shr	esi, 28
  2541 0000107A 668B04                  	mov	eax, [si]
  2542 0000107D 668946FC                	mov	[bp-4], eax
  2543                                  ; while
  2544                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u cabecera -> *u != "
  2545                                  ; Expanded expression: "(@-4) *(4) c2cPFR 176 + 8 + *(4) != "
  2546                                  L155:
  2547                                  ; Fused expression:    "c2cPFR + ax 176 + ax 8 != *(@-4) *ax IF! "
  2548                                  section .relod
  2549 00000100 [83100000]              	dd	L157
  2550                                  section .text
  2551 00001081 66B8                    	db	0x66, 0xB8
  2552                                  L157:
  2553 00001083 [00000000]              	dd	_c2cPFR
  2554 00001087 6605B0000000            	add	eax, 176
  2555 0000108D 6683C008                	add	eax, 8
  2556 00001091 6689C3                  	mov	ebx, eax
  2557 00001094 6689DE                  	mov	esi, ebx
  2558 00001097 66C1CE04                	ror	esi, 4
  2559 0000109B 8EDE                    	mov	ds, si
  2560 0000109D 66C1EE1C                	shr	esi, 28
  2561 000010A1 668B0C                  	mov	ecx, [si]
  2562 000010A4 668B46FC                	mov	eax, [bp-4]
  2563 000010A8 6639C8                  	cmp	eax, ecx
  2564 000010AB 0F84C100                	je	L156
  2565                                  ; {
  2566                                  ; if
  2567                                  ; loc         <something> : * struct <something>
  2568                                  ; RPN'ized expression: "descRecurso r + *u &u ccb -> *u 0 (something160) != "
  2569                                  ; Expanded expression: "descRecurso (@-4) *(4) 96 * + 16 + *(4) 0 != "
  2570                                  ; Fused expression:    "descRecurso push-ax * *(@-4) 96 + *sp ax + ax 16 != *ax 0 IF! "
  2571                                  section .relod
  2572 00000104 [B1100000]              	dd	L161
  2573                                  section .text
  2574 000010AF 66B8                    	db	0x66, 0xB8
  2575                                  L161:
  2576 000010B1 [00000000]              	dd	_descRecurso
  2577 000010B5 6650                    	push	eax
  2578 000010B7 668B46FC                	mov	eax, [bp-4]
  2579 000010BB 666BC060                	imul	eax, eax, 96
  2580 000010BF 6689C1                  	mov	ecx, eax
  2581 000010C2 6658                    	pop	eax
  2582 000010C4 6601C8                  	add	eax, ecx
  2583 000010C7 6683C010                	add	eax, 16
  2584 000010CB 6689C3                  	mov	ebx, eax
  2585 000010CE 6689DE                  	mov	esi, ebx
  2586 000010D1 66C1CE04                	ror	esi, 4
  2587 000010D5 8EDE                    	mov	ds, si
  2588 000010D7 66C1EE1C                	shr	esi, 28
  2589 000010DB 668B04                  	mov	eax, [si]
  2590 000010DE 6683F800                	cmp	eax, 0
  2591 000010E2 7440                    	je	L158
  2592                                  ; RPN'ized expression: "( descRecurso r + *u &u ccb -> *u , segmento eliminarSegCcb ) "
  2593                                  ; Expanded expression: " descRecurso (@-4) *(4) 96 * + 16 + *(4)  (@-32) *(2)  eliminarSegCcb ()8 "
  2594                                  ; Fused expression:    "( descRecurso push-ax * *(@-4) 96 + *sp ax + ax 16 *(4) ax , *(2) (@-32) , eliminarSegCcb )8 "
  2595                                  section .relod
  2596 00000108 [E6100000]              	dd	L162
  2597                                  section .text
  2598 000010E4 66B8                    	db	0x66, 0xB8
  2599                                  L162:
  2600 000010E6 [00000000]              	dd	_descRecurso
  2601 000010EA 6650                    	push	eax
  2602 000010EC 668B46FC                	mov	eax, [bp-4]
  2603 000010F0 666BC060                	imul	eax, eax, 96
  2604 000010F4 6689C1                  	mov	ecx, eax
  2605 000010F7 6658                    	pop	eax
  2606 000010F9 6601C8                  	add	eax, ecx
  2607 000010FC 6683C010                	add	eax, 16
  2608 00001100 6689C3                  	mov	ebx, eax
  2609 00001103 6689DE                  	mov	esi, ebx
  2610 00001106 66C1CE04                	ror	esi, 4
  2611 0000110A 8EDE                    	mov	ds, si
  2612 0000110C 66C1EE1C                	shr	esi, 28
  2613 00001110 66FF34                  	push	dword [si]
  2614 00001113 8B46E0                  	mov	ax, [bp-32]
  2615 00001116 660FB7C0                	movzx	eax, ax
  2616 0000111A 6650                    	push	eax
  2617 0000111C 9A                      	db	0x9A
  2618                                  section .relot
  2619 00000040 [1D110000]              	dd	L163
  2620                                  section .text
  2621                                  L163:
  2622 0000111D [00000000]              	dd	_eliminarSegCcb
  2623 00001121 83ECF8                  	sub	sp, -8
  2624                                  L158:
  2625                                  ; RPN'ized expression: "r c2cPFR DROcupados + *u &u e -> *u r + *u &u sig -> *u = "
  2626                                  ; Expanded expression: "(@-4) c2cPFR 176 + 12 + *(4) (@-4) *(4) 12 * + 0 + *(4) =(4) "
  2627                                  ; Fused expression:    "c2cPFR + ax 176 + ax 12 push-ax * *(@-4) 12 + **sp ax + ax 0 =(204) *(@-4) *ax "
  2628                                  section .relod
  2629 0000010C [26110000]              	dd	L164
  2630                                  section .text
  2631 00001124 66B8                    	db	0x66, 0xB8
  2632                                  L164:
  2633 00001126 [00000000]              	dd	_c2cPFR
  2634 0000112A 6605B0000000            	add	eax, 176
  2635 00001130 6683C00C                	add	eax, 12
  2636 00001134 6650                    	push	eax
  2637 00001136 668B46FC                	mov	eax, [bp-4]
  2638 0000113A 666BC00C                	imul	eax, eax, 12
  2639 0000113E 6689C1                  	mov	ecx, eax
  2640 00001141 665B                    	pop	ebx
  2641 00001143 6689DE                  	mov	esi, ebx
  2642 00001146 66C1CE04                	ror	esi, 4
  2643 0000114A 8EDE                    	mov	ds, si
  2644 0000114C 66C1EE1C                	shr	esi, 28
  2645 00001150 668B04                  	mov	eax, [si]
  2646 00001153 6601C8                  	add	eax, ecx
  2647 00001156 6689C3                  	mov	ebx, eax
  2648 00001159 6689DE                  	mov	esi, ebx
  2649 0000115C 66C1CE04                	ror	esi, 4
  2650 00001160 8EDE                    	mov	ds, si
  2651 00001162 66C1EE1C                	shr	esi, 28
  2652 00001166 668B04                  	mov	eax, [si]
  2653 00001169 668946FC                	mov	[bp-4], eax
  2654                                  ; }
  2655 0000116D E911FF                  	jmp	L155
  2656                                  L156:
  2657                                  ; RPN'ized expression: "dfs descRecurso rindx + *u &u c2cFichRec -> *u &u primero -> *u = "
  2658                                  ; Expanded expression: "(@-16) descRecurso (@-8) *(4) 96 * + 24 + 4 + *(4) =(4) "
  2659                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 24 + ax 4 =(204) *(@-16) *ax "
  2660                                  section .relod
  2661 00000110 [72110000]              	dd	L165
  2662                                  section .text
  2663 00001170 66B8                    	db	0x66, 0xB8
  2664                                  L165:
  2665 00001172 [00000000]              	dd	_descRecurso
  2666 00001176 6650                    	push	eax
  2667 00001178 668B46F8                	mov	eax, [bp-8]
  2668 0000117C 666BC060                	imul	eax, eax, 96
  2669 00001180 6689C1                  	mov	ecx, eax
  2670 00001183 6658                    	pop	eax
  2671 00001185 6601C8                  	add	eax, ecx
  2672 00001188 6683C018                	add	eax, 24
  2673 0000118C 6683C004                	add	eax, 4
  2674 00001190 6689C3                  	mov	ebx, eax
  2675 00001193 6689DE                  	mov	esi, ebx
  2676 00001196 66C1CE04                	ror	esi, 4
  2677 0000119A 8EDE                    	mov	ds, si
  2678 0000119C 66C1EE1C                	shr	esi, 28
  2679 000011A0 668B04                  	mov	eax, [si]
  2680 000011A3 668946F0                	mov	[bp-16], eax
  2681                                  ; while
  2682                                  ; RPN'ized expression: "dfs descRecurso rindx + *u &u c2cFichRec -> *u &u cabecera -> *u != "
  2683                                  ; Expanded expression: "(@-16) *(4) descRecurso (@-8) *(4) 96 * + 24 + 8 + *(4) != "
  2684                                  L166:
  2685                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 24 + ax 8 != *(@-16) *ax IF! "
  2686                                  section .relod
  2687 00000114 [A9110000]              	dd	L168
  2688                                  section .text
  2689 000011A7 66B8                    	db	0x66, 0xB8
  2690                                  L168:
  2691 000011A9 [00000000]              	dd	_descRecurso
  2692 000011AD 6650                    	push	eax
  2693 000011AF 668B46F8                	mov	eax, [bp-8]
  2694 000011B3 666BC060                	imul	eax, eax, 96
  2695 000011B7 6689C1                  	mov	ecx, eax
  2696 000011BA 6658                    	pop	eax
  2697 000011BC 6601C8                  	add	eax, ecx
  2698 000011BF 6683C018                	add	eax, 24
  2699 000011C3 6683C008                	add	eax, 8
  2700 000011C7 6689C3                  	mov	ebx, eax
  2701 000011CA 6689DE                  	mov	esi, ebx
  2702 000011CD 66C1CE04                	ror	esi, 4
  2703 000011D1 8EDE                    	mov	ds, si
  2704 000011D3 66C1EE1C                	shr	esi, 28
  2705 000011D7 668B0C                  	mov	ecx, [si]
  2706 000011DA 668B46F0                	mov	eax, [bp-16]
  2707 000011DE 6639C8                  	cmp	eax, ecx
  2708 000011E1 0F840801                	je	L167
  2709                                  ; {
  2710                                  ; RPN'ized expression: "dfsSig descRecurso rindx + *u &u c2cFichRec -> *u &u e -> *u dfs + *u &u sig -> *u = "
  2711                                  ; Expanded expression: "(@-20) descRecurso (@-8) *(4) 96 * + 24 + 12 + *(4) (@-16) *(4) 12 * + 0 + *(4) =(4) "
  2712                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 24 + ax 12 push-ax * *(@-16) 12 + **sp ax + ax 0 =(204) *(@-20) *ax "
  2713                                  section .relod
  2714 00000118 [E7110000]              	dd	L169
  2715                                  section .text
  2716 000011E5 66B8                    	db	0x66, 0xB8
  2717                                  L169:
  2718 000011E7 [00000000]              	dd	_descRecurso
  2719 000011EB 6650                    	push	eax
  2720 000011ED 668B46F8                	mov	eax, [bp-8]
  2721 000011F1 666BC060                	imul	eax, eax, 96
  2722 000011F5 6689C1                  	mov	ecx, eax
  2723 000011F8 6658                    	pop	eax
  2724 000011FA 6601C8                  	add	eax, ecx
  2725 000011FD 6683C018                	add	eax, 24
  2726 00001201 6683C00C                	add	eax, 12
  2727 00001205 6650                    	push	eax
  2728 00001207 668B46F0                	mov	eax, [bp-16]
  2729 0000120B 666BC00C                	imul	eax, eax, 12
  2730 0000120F 6689C1                  	mov	ecx, eax
  2731 00001212 665B                    	pop	ebx
  2732 00001214 6689DE                  	mov	esi, ebx
  2733 00001217 66C1CE04                	ror	esi, 4
  2734 0000121B 8EDE                    	mov	ds, si
  2735 0000121D 66C1EE1C                	shr	esi, 28
  2736 00001221 668B04                  	mov	eax, [si]
  2737 00001224 6601C8                  	add	eax, ecx
  2738 00001227 6689C3                  	mov	ebx, eax
  2739 0000122A 6689DE                  	mov	esi, ebx
  2740 0000122D 66C1CE04                	ror	esi, 4
  2741 00001231 8EDE                    	mov	ds, si
  2742 00001233 66C1EE1C                	shr	esi, 28
  2743 00001237 668B04                  	mov	eax, [si]
  2744 0000123A 668946EC                	mov	[bp-20], eax
  2745                                  ; if
  2746                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_L -> *u 0 > descFichero dfs + *u &u contAp_E -> *u 0 > || "
  2747                                  ; Expanded expression: "descFichero (@-16) *(4) 36 * + 28 + *(4) 0 > [sh||->172] descFichero (@-16) *(4) 36 * + 32 + *(4) 0 > ||[172] "
  2748                                  ; Fused expression:    "descFichero push-ax * *(@-16) 36 + *sp ax + ax 28 > *ax 0 [sh||->172] descFichero push-ax * *(@-16) 36 + *sp ax + ax 32 > *ax 0 ||[172]  "
  2749                                  section .relod
  2750 0000011C [40120000]              	dd	L173
  2751                                  section .text
  2752 0000123E 66B8                    	db	0x66, 0xB8
  2753                                  L173:
  2754 00001240 [00000000]              	dd	_descFichero
  2755 00001244 6650                    	push	eax
  2756 00001246 668B46F0                	mov	eax, [bp-16]
  2757 0000124A 666BC024                	imul	eax, eax, 36
  2758 0000124E 6689C1                  	mov	ecx, eax
  2759 00001251 6658                    	pop	eax
  2760 00001253 6601C8                  	add	eax, ecx
  2761 00001256 6683C01C                	add	eax, 28
  2762 0000125A 6689C3                  	mov	ebx, eax
  2763 0000125D 6689DE                  	mov	esi, ebx
  2764 00001260 66C1CE04                	ror	esi, 4
  2765 00001264 8EDE                    	mov	ds, si
  2766 00001266 66C1EE1C                	shr	esi, 28
  2767 0000126A 668B04                  	mov	eax, [si]
  2768 0000126D 6683F800                	cmp	eax, 0
  2769 00001271 0F9FC0                  	setg	al
  2770 00001274 660FB6C0                	movzx	eax, al
  2771                                  ; JumpIfNotZero
  2772 00001278 6685C0                  	test	eax, eax
  2773 0000127B 753A                    	jne	L172
  2774                                  section .relod
  2775 00000120 [7F120000]              	dd	L174
  2776                                  section .text
  2777 0000127D 66B8                    	db	0x66, 0xB8
  2778                                  L174:
  2779 0000127F [00000000]              	dd	_descFichero
  2780 00001283 6650                    	push	eax
  2781 00001285 668B46F0                	mov	eax, [bp-16]
  2782 00001289 666BC024                	imul	eax, eax, 36
  2783 0000128D 6689C1                  	mov	ecx, eax
  2784 00001290 6658                    	pop	eax
  2785 00001292 6601C8                  	add	eax, ecx
  2786 00001295 6683C020                	add	eax, 32
  2787 00001299 6689C3                  	mov	ebx, eax
  2788 0000129C 6689DE                  	mov	esi, ebx
  2789 0000129F 66C1CE04                	ror	esi, 4
  2790 000012A3 8EDE                    	mov	ds, si
  2791 000012A5 66C1EE1C                	shr	esi, 28
  2792 000012A9 668B04                  	mov	eax, [si]
  2793 000012AC 6683F800                	cmp	eax, 0
  2794 000012B0 0F9FC0                  	setg	al
  2795 000012B3 660FB6C0                	movzx	eax, al
  2796                                  L172:
  2797                                  ; JumpIfZero
  2798 000012B7 6685C0                  	test	eax, eax
  2799 000012BA 740B                    	je	L170
  2800                                  ; return
  2801                                  ; RPN'ized expression: "2 -u "
  2802                                  ; Expanded expression: "-2 "
  2803                                  ; Expression value: -2
  2804                                  ; Fused expression:    "-2  "
  2805 000012BC 66B8FEFFFFFF            	mov	eax, -2
  2806 000012C2 E99405                  	jmp	L138
  2807 000012C5 EB1B                    	jmp	L171
  2808                                  L170:
  2809                                  ; else
  2810                                  ; if
  2811                                  ; RPN'ized expression: "( dfs destruirFich ) 0 < "
  2812                                  ; Expanded expression: " (@-16) *(4)  destruirFich ()4 0 < "
  2813                                  ; Fused expression:    "( *(4) (@-16) , destruirFich )4 < ax 0 IF! "
  2814 000012C7 66FF76F0                	push	dword [bp-16]
  2815 000012CB 9A                      	db	0x9A
  2816                                  section .relot
  2817 00000044 [CC120000]              	dd	L177
  2818                                  section .text
  2819                                  L177:
  2820 000012CC [580B0000]              	dd	_destruirFich
  2821 000012D0 83ECFC                  	sub	sp, -4
  2822 000012D3 6683F800                	cmp	eax, 0
  2823 000012D7 7D09                    	jge	L175
  2824                                  ; return
  2825                                  ; RPN'ized expression: "3 -u "
  2826                                  ; Expanded expression: "-3 "
  2827                                  ; Expression value: -3
  2828                                  ; Fused expression:    "-3  "
  2829 000012D9 66B8FDFFFFFF            	mov	eax, -3
  2830 000012DF E97705                  	jmp	L138
  2831                                  L175:
  2832                                  L171:
  2833                                  ; RPN'ized expression: "dfs dfsSig = "
  2834                                  ; Expanded expression: "(@-16) (@-20) *(4) =(4) "
  2835                                  ; Fused expression:    "=(204) *(@-16) *(@-20) "
  2836 000012E2 668B46EC                	mov	eax, [bp-20]
  2837 000012E6 668946F0                	mov	[bp-16], eax
  2838                                  ; }
  2839 000012EA E9BAFE                  	jmp	L166
  2840                                  L167:
  2841                                  ; if
  2842                                  ; RPN'ized expression: "descRecurso rindx + *u &u c2cFichRec -> *u &u numElem -> *u 0 > "
  2843                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 24 + 0 + *(4) 0 > "
  2844                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 24 + ax 0 > *ax 0 IF! "
  2845                                  section .relod
  2846 00000124 [EF120000]              	dd	L180
  2847                                  section .text
  2848 000012ED 66B8                    	db	0x66, 0xB8
  2849                                  L180:
  2850 000012EF [00000000]              	dd	_descRecurso
  2851 000012F3 6650                    	push	eax
  2852 000012F5 668B46F8                	mov	eax, [bp-8]
  2853 000012F9 666BC060                	imul	eax, eax, 96
  2854 000012FD 6689C1                  	mov	ecx, eax
  2855 00001300 6658                    	pop	eax
  2856 00001302 6601C8                  	add	eax, ecx
  2857 00001305 6683C018                	add	eax, 24
  2858 00001309 6689C3                  	mov	ebx, eax
  2859 0000130C 6689DE                  	mov	esi, ebx
  2860 0000130F 66C1CE04                	ror	esi, 4
  2861 00001313 8EDE                    	mov	ds, si
  2862 00001315 66C1EE1C                	shr	esi, 28
  2863 00001319 668B04                  	mov	eax, [si]
  2864 0000131C 6683F800                	cmp	eax, 0
  2865 00001320 7E09                    	jle	L178
  2866                                  ; return
  2867                                  ; RPN'ized expression: "4 -u "
  2868                                  ; Expanded expression: "-4 "
  2869                                  ; Expression value: -4
  2870                                  ; Fused expression:    "-4  "
  2871 00001322 66B8FCFFFFFF            	mov	eax, -4
  2872 00001328 E92E05                  	jmp	L138
  2873                                  L178:
  2874                                  ; loc     <something> : char
  2875                                  ; RPN'ized expression: "descRecurso rindx + *u &u nombre -> *u 0 + *u 0 (something181) = "
  2876                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 0 + 0 =(-1) "
  2877                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 0 =(124) *ax 0 "
  2878                                  section .relod
  2879 00000128 [2D130000]              	dd	L182
  2880                                  section .text
  2881 0000132B 66B8                    	db	0x66, 0xB8
  2882                                  L182:
  2883 0000132D [00000000]              	dd	_descRecurso
  2884 00001331 6650                    	push	eax
  2885 00001333 668B46F8                	mov	eax, [bp-8]
  2886 00001337 666BC060                	imul	eax, eax, 96
  2887 0000133B 6689C1                  	mov	ecx, eax
  2888 0000133E 6658                    	pop	eax
  2889 00001340 6601C8                  	add	eax, ecx
  2890 00001343 6689C3                  	mov	ebx, eax
  2891 00001346 66B800000000            	mov	eax, 0
  2892 0000134C 6689DE                  	mov	esi, ebx
  2893 0000134F 66C1CE04                	ror	esi, 4
  2894 00001353 8EDE                    	mov	ds, si
  2895 00001355 66C1EE1C                	shr	esi, 28
  2896 00001359 8804                    	mov	[si], al
  2897 0000135B 660FBEC0                	movsx	eax, al
  2898                                  ; RPN'ized expression: "descRecurso rindx + *u &u tipo -> *u rLibre = "
  2899                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 12 + 0 =(4) "
  2900                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 12 =(204) *ax 0 "
  2901                                  section .relod
  2902 0000012C [61130000]              	dd	L183
  2903                                  section .text
  2904 0000135F 66B8                    	db	0x66, 0xB8
  2905                                  L183:
  2906 00001361 [00000000]              	dd	_descRecurso
  2907 00001365 6650                    	push	eax
  2908 00001367 668B46F8                	mov	eax, [bp-8]
  2909 0000136B 666BC060                	imul	eax, eax, 96
  2910 0000136F 6689C1                  	mov	ecx, eax
  2911 00001372 6658                    	pop	eax
  2912 00001374 6601C8                  	add	eax, ecx
  2913 00001377 6683C00C                	add	eax, 12
  2914 0000137B 6689C3                  	mov	ebx, eax
  2915 0000137E 66B800000000            	mov	eax, 0
  2916 00001384 6689DE                  	mov	esi, ebx
  2917 00001387 66C1CE04                	ror	esi, 4
  2918 0000138B 8EDE                    	mov	ds, si
  2919 0000138D 66C1EE1C                	shr	esi, 28
  2920 00001391 668904                  	mov	[si], eax
  2921                                  ; RPN'ized expression: "( descRecurso rindx + *u &u ccb -> *u vaciarCcb ) "
  2922                                  ; Expanded expression: " descRecurso (@-8) *(4) 96 * + 16 + *(4)  vaciarCcb ()4 "
  2923                                  ; Fused expression:    "( descRecurso push-ax * *(@-8) 96 + *sp ax + ax 16 *(4) ax , vaciarCcb )4 "
  2924                                  section .relod
  2925 00000130 [96130000]              	dd	L184
  2926                                  section .text
  2927 00001394 66B8                    	db	0x66, 0xB8
  2928                                  L184:
  2929 00001396 [00000000]              	dd	_descRecurso
  2930 0000139A 6650                    	push	eax
  2931 0000139C 668B46F8                	mov	eax, [bp-8]
  2932 000013A0 666BC060                	imul	eax, eax, 96
  2933 000013A4 6689C1                  	mov	ecx, eax
  2934 000013A7 6658                    	pop	eax
  2935 000013A9 6601C8                  	add	eax, ecx
  2936 000013AC 6683C010                	add	eax, 16
  2937 000013B0 6689C3                  	mov	ebx, eax
  2938 000013B3 6689DE                  	mov	esi, ebx
  2939 000013B6 66C1CE04                	ror	esi, 4
  2940 000013BA 8EDE                    	mov	ds, si
  2941 000013BC 66C1EE1C                	shr	esi, 28
  2942 000013C0 66FF34                  	push	dword [si]
  2943 000013C3 9A                      	db	0x9A
  2944                                  section .relot
  2945 00000048 [C4130000]              	dd	L185
  2946                                  section .text
  2947                                  L185:
  2948 000013C4 [00000000]              	dd	_vaciarCcb
  2949 000013C8 83ECFC                  	sub	sp, -4
  2950                                  ; RPN'ized expression: "pindx descRecurso rindx + *u &u tindx -> *u = "
  2951                                  ; Expanded expression: "(@-12) descRecurso (@-8) *(4) 96 * + 20 + *(4) =(4) "
  2952                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 20 =(204) *(@-12) *ax "
  2953                                  section .relod
  2954 00000134 [CD130000]              	dd	L186
  2955                                  section .text
  2956 000013CB 66B8                    	db	0x66, 0xB8
  2957                                  L186:
  2958 000013CD [00000000]              	dd	_descRecurso
  2959 000013D1 6650                    	push	eax
  2960 000013D3 668B46F8                	mov	eax, [bp-8]
  2961 000013D7 666BC060                	imul	eax, eax, 96
  2962 000013DB 6689C1                  	mov	ecx, eax
  2963 000013DE 6658                    	pop	eax
  2964 000013E0 6601C8                  	add	eax, ecx
  2965 000013E3 6683C014                	add	eax, 20
  2966 000013E7 6689C3                  	mov	ebx, eax
  2967 000013EA 6689DE                  	mov	esi, ebx
  2968 000013ED 66C1CE04                	ror	esi, 4
  2969 000013F1 8EDE                    	mov	ds, si
  2970 000013F3 66C1EE1C                	shr	esi, 28
  2971 000013F7 668B04                  	mov	eax, [si]
  2972 000013FA 668946F4                	mov	[bp-12], eax
  2973                                  ; RPN'ized expression: "descThread pindx + *u &u estado -> *u preparado = "
  2974                                  ; Expanded expression: "descThread (@-12) *(4) 40 * + 4 + 1 =(4) "
  2975                                  ; Fused expression:    "descThread push-ax * *(@-12) 40 + *sp ax + ax 4 =(204) *ax 1 "
  2976                                  section .relod
  2977 00000138 [00140000]              	dd	L187
  2978                                  section .text
  2979 000013FE 66B8                    	db	0x66, 0xB8
  2980                                  L187:
  2981 00001400 [00000000]              	dd	_descThread
  2982 00001404 6650                    	push	eax
  2983 00001406 668B46F4                	mov	eax, [bp-12]
  2984 0000140A 666BC028                	imul	eax, eax, 40
  2985 0000140E 6689C1                  	mov	ecx, eax
  2986 00001411 6658                    	pop	eax
  2987 00001413 6601C8                  	add	eax, ecx
  2988 00001416 6683C004                	add	eax, 4
  2989 0000141A 6689C3                  	mov	ebx, eax
  2990 0000141D 66B801000000            	mov	eax, 1
  2991 00001423 6689DE                  	mov	esi, ebx
  2992 00001426 66C1CE04                	ror	esi, 4
  2993 0000142A 8EDE                    	mov	ds, si
  2994 0000142C 66C1EE1C                	shr	esi, 28
  2995 00001430 668904                  	mov	[si], eax
  2996                                  ; loc     <something> : * struct <something>
  2997                                  ; RPN'ized expression: "( c2cPFR TPreparados + *u &u (something188) , pindx encolarPC2c ) "
  2998                                  ; Expanded expression: " c2cPFR 64 +  (@-12) *(4)  encolarPC2c ()8 "
  2999                                  ; Fused expression:    "( c2cPFR + ax 64 , *(4) (@-12) , encolarPC2c )8 "
  3000                                  section .relod
  3001 0000013C [35140000]              	dd	L189
  3002                                  section .text
  3003 00001433 66B8                    	db	0x66, 0xB8
  3004                                  L189:
  3005 00001435 [00000000]              	dd	_c2cPFR
  3006 00001439 6683C040                	add	eax, 64
  3007 0000143D 6650                    	push	eax
  3008 0000143F 66FF76F4                	push	dword [bp-12]
  3009 00001443 9A                      	db	0x9A
  3010                                  section .relot
  3011 0000004C [44140000]              	dd	L190
  3012                                  section .text
  3013                                  L190:
  3014 00001444 [00000000]              	dd	_encolarPC2c
  3015 00001448 83ECF8                  	sub	sp, -8
  3016                                  ; loc     <something> : int
  3017                                  ; RPN'ized expression: "descRecurso rindx + *u &u tindx -> *u 1 -u (something191) = "
  3018                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 20 + -1 =(4) "
  3019                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 20 =(204) *ax -1 "
  3020                                  section .relod
  3021 00000140 [4D140000]              	dd	L192
  3022                                  section .text
  3023 0000144B 66B8                    	db	0x66, 0xB8
  3024                                  L192:
  3025 0000144D [00000000]              	dd	_descRecurso
  3026 00001451 6650                    	push	eax
  3027 00001453 668B46F8                	mov	eax, [bp-8]
  3028 00001457 666BC060                	imul	eax, eax, 96
  3029 0000145B 6689C1                  	mov	ecx, eax
  3030 0000145E 6658                    	pop	eax
  3031 00001460 6601C8                  	add	eax, ecx
  3032 00001463 6683C014                	add	eax, 20
  3033 00001467 6689C3                  	mov	ebx, eax
  3034 0000146A 66B8FFFFFFFF            	mov	eax, -1
  3035 00001470 6689DE                  	mov	esi, ebx
  3036 00001473 66C1CE04                	ror	esi, 4
  3037 00001477 8EDE                    	mov	ds, si
  3038 00001479 66C1EE1C                	shr	esi, 28
  3039 0000147D 668904                  	mov	[si], eax
  3040                                  ; for
  3041                                  ; RPN'ized expression: "j 0 = "
  3042                                  ; Expanded expression: "(@-28) 0 =(4) "
  3043                                  ; Fused expression:    "=(204) *(@-28) 0 "
  3044 00001480 66B800000000            	mov	eax, 0
  3045 00001486 668946E4                	mov	[bp-28], eax
  3046                                  L193:
  3047                                  ; RPN'ized expression: "j descRecurso rindx + *u &u numVI -> *u < "
  3048                                  ; Expanded expression: "(@-28) *(4) descRecurso (@-8) *(4) 96 * + 40 + *(1) < "
  3049                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 40 < *(@-28) *ax IF! "
  3050                                  section .relod
  3051 00000144 [8C140000]              	dd	L197
  3052                                  section .text
  3053 0000148A 66B8                    	db	0x66, 0xB8
  3054                                  L197:
  3055 0000148C [00000000]              	dd	_descRecurso
  3056 00001490 6650                    	push	eax
  3057 00001492 668B46F8                	mov	eax, [bp-8]
  3058 00001496 666BC060                	imul	eax, eax, 96
  3059 0000149A 6689C1                  	mov	ecx, eax
  3060 0000149D 6658                    	pop	eax
  3061 0000149F 6601C8                  	add	eax, ecx
  3062 000014A2 6683C028                	add	eax, 40
  3063 000014A6 6689C3                  	mov	ebx, eax
  3064 000014A9 6689DE                  	mov	esi, ebx
  3065 000014AC 66C1CE04                	ror	esi, 4
  3066 000014B0 8EDE                    	mov	ds, si
  3067 000014B2 66C1EE1C                	shr	esi, 28
  3068 000014B6 660FB60C                	movzx	ecx, byte [si]
  3069 000014BA 668B46E4                	mov	eax, [bp-28]
  3070 000014BE 6639C8                  	cmp	eax, ecx
  3071 000014C1 0F8D1001                	jge	L196
  3072                                  ; RPN'ized expression: "j ++p "
  3073                                  ; Expanded expression: "(@-28) ++p(4) "
  3074                                  ; {
  3075                                  ; RPN'ized expression: "nVInt descRecurso rindx + *u &u nVInt -> *u j + *u = "
  3076                                  ; Expanded expression: "(@-24) descRecurso (@-8) *(4) 96 * + 41 + (@-28) *(4) + *(1) =(1) "
  3077                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 41 + ax *(@-28) =(153) *(@-24) *ax "
  3078                                  section .relod
  3079 00000148 [C7140000]              	dd	L198
  3080                                  section .text
  3081 000014C5 66B8                    	db	0x66, 0xB8
  3082                                  L198:
  3083 000014C7 [00000000]              	dd	_descRecurso
  3084 000014CB 6650                    	push	eax
  3085 000014CD 668B46F8                	mov	eax, [bp-8]
  3086 000014D1 666BC060                	imul	eax, eax, 96
  3087 000014D5 6689C1                  	mov	ecx, eax
  3088 000014D8 6658                    	pop	eax
  3089 000014DA 6601C8                  	add	eax, ecx
  3090 000014DD 6683C029                	add	eax, 41
  3091 000014E1 660346E4                	add	eax, [bp-28]
  3092 000014E5 6689C3                  	mov	ebx, eax
  3093 000014E8 6689DE                  	mov	esi, ebx
  3094 000014EB 66C1CE04                	ror	esi, 4
  3095 000014EF 8EDE                    	mov	ds, si
  3096 000014F1 66C1EE1C                	shr	esi, 28
  3097 000014F5 8A04                    	mov	al, [si]
  3098 000014F7 660FB6C0                	movzx	eax, al
  3099 000014FB 8846E8                  	mov	[bp-24], al
  3100 000014FE 660FB6C0                	movzx	eax, al
  3101                                  ; RPN'ized expression: "recVInt nVInt + *u 1 -u = "
  3102                                  ; Expanded expression: "recVInt (@-24) *(1) 4 * + -1 =(4) "
  3103                                  ; Fused expression:    "recVInt push-ax * *(@-24) 4 + *sp ax =(204) *ax -1 "
  3104                                  section .relod
  3105 0000014C [04150000]              	dd	L199
  3106                                  section .text
  3107 00001502 66B8                    	db	0x66, 0xB8
  3108                                  L199:
  3109 00001504 [00000000]              	dd	_recVInt
  3110 00001508 6650                    	push	eax
  3111 0000150A 8A46E8                  	mov	al, [bp-24]
  3112 0000150D 660FB6C0                	movzx	eax, al
  3113 00001511 666BC004                	imul	eax, eax, 4
  3114 00001515 6689C1                  	mov	ecx, eax
  3115 00001518 6658                    	pop	eax
  3116 0000151A 6601C8                  	add	eax, ecx
  3117 0000151D 6689C3                  	mov	ebx, eax
  3118 00001520 66B8FFFFFFFF            	mov	eax, -1
  3119 00001526 6689DE                  	mov	esi, ebx
  3120 00001529 66C1CE04                	ror	esi, 4
  3121 0000152D 8EDE                    	mov	ds, si
  3122 0000152F 66C1EE1C                	shr	esi, 28
  3123 00001533 668904                  	mov	[si], eax
  3124                                  ; RPN'ized expression: "( nVInt restablecerInt ) "
  3125                                  ; Expanded expression: " (@-24) *(1)  restablecerInt ()4 "
  3126                                  ; Fused expression:    "( *(1) (@-24) , restablecerInt )4 "
  3127 00001536 8A46E8                  	mov	al, [bp-24]
  3128 00001539 660FB6C0                	movzx	eax, al
  3129 0000153D 6650                    	push	eax
  3130 0000153F 9A                      	db	0x9A
  3131                                  section .relot
  3132 00000050 [40150000]              	dd	L200
  3133                                  section .text
  3134                                  L200:
  3135 00001540 [00000000]              	dd	_restablecerInt
  3136 00001544 83ECFC                  	sub	sp, -4
  3137                                  ; RPN'ized expression: "descRecurso rindx + *u &u nVInt -> *u j + *u 0 = "
  3138                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 41 + (@-28) *(4) + 0 =(1) "
  3139                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 41 + ax *(@-28) =(156) *ax 0 "
  3140                                  section .relod
  3141 00000150 [49150000]              	dd	L201
  3142                                  section .text
  3143 00001547 66B8                    	db	0x66, 0xB8
  3144                                  L201:
  3145 00001549 [00000000]              	dd	_descRecurso
  3146 0000154D 6650                    	push	eax
  3147 0000154F 668B46F8                	mov	eax, [bp-8]
  3148 00001553 666BC060                	imul	eax, eax, 96
  3149 00001557 6689C1                  	mov	ecx, eax
  3150 0000155A 6658                    	pop	eax
  3151 0000155C 6601C8                  	add	eax, ecx
  3152 0000155F 6683C029                	add	eax, 41
  3153 00001563 660346E4                	add	eax, [bp-28]
  3154 00001567 6689C3                  	mov	ebx, eax
  3155 0000156A 66B800000000            	mov	eax, 0
  3156 00001570 6689DE                  	mov	esi, ebx
  3157 00001573 66C1CE04                	ror	esi, 4
  3158 00001577 8EDE                    	mov	ds, si
  3159 00001579 66C1EE1C                	shr	esi, 28
  3160 0000157D 8804                    	mov	[si], al
  3161 0000157F 660FB6C0                	movzx	eax, al
  3162                                  ; loc         <something> : * (void) void
  3163                                  ; RPN'ized expression: "descRecurso rindx + *u &u isr -> *u j + *u 0 (something202) = "
  3164                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 48 + (@-28) *(4) 4 * + 0 =(4) "
  3165                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 48 push-ax * *(@-28) 4 + *sp ax =(204) *ax 0 "
  3166                                  section .relod
  3167 00000154 [85150000]              	dd	L203
  3168                                  section .text
  3169 00001583 66B8                    	db	0x66, 0xB8
  3170                                  L203:
  3171 00001585 [00000000]              	dd	_descRecurso
  3172 00001589 6650                    	push	eax
  3173 0000158B 668B46F8                	mov	eax, [bp-8]
  3174 0000158F 666BC060                	imul	eax, eax, 96
  3175 00001593 6689C1                  	mov	ecx, eax
  3176 00001596 6658                    	pop	eax
  3177 00001598 6601C8                  	add	eax, ecx
  3178 0000159B 6683C030                	add	eax, 48
  3179 0000159F 6650                    	push	eax
  3180 000015A1 668B46E4                	mov	eax, [bp-28]
  3181 000015A5 666BC004                	imul	eax, eax, 4
  3182 000015A9 6689C1                  	mov	ecx, eax
  3183 000015AC 6658                    	pop	eax
  3184 000015AE 6601C8                  	add	eax, ecx
  3185 000015B1 6689C3                  	mov	ebx, eax
  3186 000015B4 66B800000000            	mov	eax, 0
  3187 000015BA 6689DE                  	mov	esi, ebx
  3188 000015BD 66C1CE04                	ror	esi, 4
  3189 000015C1 8EDE                    	mov	ds, si
  3190 000015C3 66C1EE1C                	shr	esi, 28
  3191 000015C7 668904                  	mov	[si], eax
  3192                                  ; }
  3193                                  L194:
  3194                                  ; Fused expression:    "++p(4) *(@-28) "
  3195 000015CA 668B46E4                	mov	eax, [bp-28]
  3196 000015CE 66FF46E4                	inc	dword [bp-28]
  3197 000015D2 E9B5FE                  	jmp	L193
  3198                                  L196:
  3199                                  ; RPN'ized expression: "descRecurso rindx + *u &u numVI -> *u 0 = "
  3200                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 40 + 0 =(1) "
  3201                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 40 =(156) *ax 0 "
  3202                                  section .relod
  3203 00000158 [D7150000]              	dd	L204
  3204                                  section .text
  3205 000015D5 66B8                    	db	0x66, 0xB8
  3206                                  L204:
  3207 000015D7 [00000000]              	dd	_descRecurso
  3208 000015DB 6650                    	push	eax
  3209 000015DD 668B46F8                	mov	eax, [bp-8]
  3210 000015E1 666BC060                	imul	eax, eax, 96
  3211 000015E5 6689C1                  	mov	ecx, eax
  3212 000015E8 6658                    	pop	eax
  3213 000015EA 6601C8                  	add	eax, ecx
  3214 000015ED 6683C028                	add	eax, 40
  3215 000015F1 6689C3                  	mov	ebx, eax
  3216 000015F4 66B800000000            	mov	eax, 0
  3217 000015FA 6689DE                  	mov	esi, ebx
  3218 000015FD 66C1CE04                	ror	esi, 4
  3219 00001601 8EDE                    	mov	ds, si
  3220 00001603 66C1EE1C                	shr	esi, 28
  3221 00001607 8804                    	mov	[si], al
  3222 00001609 660FB6C0                	movzx	eax, al
  3223                                  ; loc     <something> : * (
  3224                                  ; prm         dfs : int
  3225                                  ; prm         modo : unsigned short
  3226                                  ;         ) int
  3227                                  ; RPN'ized expression: "descRecurso rindx + *u &u open -> *u 0 (something205) = "
  3228                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 56 + 0 =(4) "
  3229                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 56 =(204) *ax 0 "
  3230                                  section .relod
  3231 0000015C [0F160000]              	dd	L206
  3232                                  section .text
  3233 0000160D 66B8                    	db	0x66, 0xB8
  3234                                  L206:
  3235 0000160F [00000000]              	dd	_descRecurso
  3236 00001613 6650                    	push	eax
  3237 00001615 668B46F8                	mov	eax, [bp-8]
  3238 00001619 666BC060                	imul	eax, eax, 96
  3239 0000161D 6689C1                  	mov	ecx, eax
  3240 00001620 6658                    	pop	eax
  3241 00001622 6601C8                  	add	eax, ecx
  3242 00001625 6683C038                	add	eax, 56
  3243 00001629 6689C3                  	mov	ebx, eax
  3244 0000162C 66B800000000            	mov	eax, 0
  3245 00001632 6689DE                  	mov	esi, ebx
  3246 00001635 66C1CE04                	ror	esi, 4
  3247 00001639 8EDE                    	mov	ds, si
  3248 0000163B 66C1EE1C                	shr	esi, 28
  3249 0000163F 668904                  	mov	[si], eax
  3250                                  ; loc     <something> : * (
  3251                                  ; prm         dfs : int
  3252                                  ;         ) int
  3253                                  ; RPN'ized expression: "descRecurso rindx + *u &u release -> *u 0 (something207) = "
  3254                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 60 + 0 =(4) "
  3255                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 60 =(204) *ax 0 "
  3256                                  section .relod
  3257 00000160 [44160000]              	dd	L208
  3258                                  section .text
  3259 00001642 66B8                    	db	0x66, 0xB8
  3260                                  L208:
  3261 00001644 [00000000]              	dd	_descRecurso
  3262 00001648 6650                    	push	eax
  3263 0000164A 668B46F8                	mov	eax, [bp-8]
  3264 0000164E 666BC060                	imul	eax, eax, 96
  3265 00001652 6689C1                  	mov	ecx, eax
  3266 00001655 6658                    	pop	eax
  3267 00001657 6601C8                  	add	eax, ecx
  3268 0000165A 6683C03C                	add	eax, 60
  3269 0000165E 6689C3                  	mov	ebx, eax
  3270 00001661 66B800000000            	mov	eax, 0
  3271 00001667 6689DE                  	mov	esi, ebx
  3272 0000166A 66C1CE04                	ror	esi, 4
  3273 0000166E 8EDE                    	mov	ds, si
  3274 00001670 66C1EE1C                	shr	esi, 28
  3275 00001674 668904                  	mov	[si], eax
  3276                                  ; loc     <something> : * (
  3277                                  ; prm         dfs : int
  3278                                  ; prm         dir : * unsigned char
  3279                                  ; prm         nbytes : unsigned short
  3280                                  ;         ) int
  3281                                  ; RPN'ized expression: "descRecurso rindx + *u &u read -> *u 0 (something209) = "
  3282                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 64 + 0 =(4) "
  3283                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 64 =(204) *ax 0 "
  3284                                  section .relod
  3285 00000164 [79160000]              	dd	L210
  3286                                  section .text
  3287 00001677 66B8                    	db	0x66, 0xB8
  3288                                  L210:
  3289 00001679 [00000000]              	dd	_descRecurso
  3290 0000167D 6650                    	push	eax
  3291 0000167F 668B46F8                	mov	eax, [bp-8]
  3292 00001683 666BC060                	imul	eax, eax, 96
  3293 00001687 6689C1                  	mov	ecx, eax
  3294 0000168A 6658                    	pop	eax
  3295 0000168C 6601C8                  	add	eax, ecx
  3296 0000168F 6683C040                	add	eax, 64
  3297 00001693 6689C3                  	mov	ebx, eax
  3298 00001696 66B800000000            	mov	eax, 0
  3299 0000169C 6689DE                  	mov	esi, ebx
  3300 0000169F 66C1CE04                	ror	esi, 4
  3301 000016A3 8EDE                    	mov	ds, si
  3302 000016A5 66C1EE1C                	shr	esi, 28
  3303 000016A9 668904                  	mov	[si], eax
  3304                                  ; loc     <something> : * (
  3305                                  ; prm         dfs : int
  3306                                  ; prm         dir : * unsigned char
  3307                                  ; prm         nbytes : unsigned short
  3308                                  ;         ) int
  3309                                  ; RPN'ized expression: "descRecurso rindx + *u &u aio_read -> *u 0 (something211) = "
  3310                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 68 + 0 =(4) "
  3311                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 68 =(204) *ax 0 "
  3312                                  section .relod
  3313 00000168 [AE160000]              	dd	L212
  3314                                  section .text
  3315 000016AC 66B8                    	db	0x66, 0xB8
  3316                                  L212:
  3317 000016AE [00000000]              	dd	_descRecurso
  3318 000016B2 6650                    	push	eax
  3319 000016B4 668B46F8                	mov	eax, [bp-8]
  3320 000016B8 666BC060                	imul	eax, eax, 96
  3321 000016BC 6689C1                  	mov	ecx, eax
  3322 000016BF 6658                    	pop	eax
  3323 000016C1 6601C8                  	add	eax, ecx
  3324 000016C4 6683C044                	add	eax, 68
  3325 000016C8 6689C3                  	mov	ebx, eax
  3326 000016CB 66B800000000            	mov	eax, 0
  3327 000016D1 6689DE                  	mov	esi, ebx
  3328 000016D4 66C1CE04                	ror	esi, 4
  3329 000016D8 8EDE                    	mov	ds, si
  3330 000016DA 66C1EE1C                	shr	esi, 28
  3331 000016DE 668904                  	mov	[si], eax
  3332                                  ; loc     <something> : * (
  3333                                  ; prm         dfs : int
  3334                                  ; prm         dir : * unsigned char
  3335                                  ; prm         nbytes : unsigned short
  3336                                  ;         ) int
  3337                                  ; RPN'ized expression: "descRecurso rindx + *u &u write -> *u 0 (something213) = "
  3338                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 72 + 0 =(4) "
  3339                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 72 =(204) *ax 0 "
  3340                                  section .relod
  3341 0000016C [E3160000]              	dd	L214
  3342                                  section .text
  3343 000016E1 66B8                    	db	0x66, 0xB8
  3344                                  L214:
  3345 000016E3 [00000000]              	dd	_descRecurso
  3346 000016E7 6650                    	push	eax
  3347 000016E9 668B46F8                	mov	eax, [bp-8]
  3348 000016ED 666BC060                	imul	eax, eax, 96
  3349 000016F1 6689C1                  	mov	ecx, eax
  3350 000016F4 6658                    	pop	eax
  3351 000016F6 6601C8                  	add	eax, ecx
  3352 000016F9 6683C048                	add	eax, 72
  3353 000016FD 6689C3                  	mov	ebx, eax
  3354 00001700 66B800000000            	mov	eax, 0
  3355 00001706 6689DE                  	mov	esi, ebx
  3356 00001709 66C1CE04                	ror	esi, 4
  3357 0000170D 8EDE                    	mov	ds, si
  3358 0000170F 66C1EE1C                	shr	esi, 28
  3359 00001713 668904                  	mov	[si], eax
  3360                                  ; loc     <something> : * (
  3361                                  ; prm         dfs : int
  3362                                  ; prm         dir : * unsigned char
  3363                                  ; prm         nbytes : unsigned short
  3364                                  ;         ) int
  3365                                  ; RPN'ized expression: "descRecurso rindx + *u &u aio_write -> *u 0 (something215) = "
  3366                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 76 + 0 =(4) "
  3367                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 76 =(204) *ax 0 "
  3368                                  section .relod
  3369 00000170 [18170000]              	dd	L216
  3370                                  section .text
  3371 00001716 66B8                    	db	0x66, 0xB8
  3372                                  L216:
  3373 00001718 [00000000]              	dd	_descRecurso
  3374 0000171C 6650                    	push	eax
  3375 0000171E 668B46F8                	mov	eax, [bp-8]
  3376 00001722 666BC060                	imul	eax, eax, 96
  3377 00001726 6689C1                  	mov	ecx, eax
  3378 00001729 6658                    	pop	eax
  3379 0000172B 6601C8                  	add	eax, ecx
  3380 0000172E 6683C04C                	add	eax, 76
  3381 00001732 6689C3                  	mov	ebx, eax
  3382 00001735 66B800000000            	mov	eax, 0
  3383 0000173B 6689DE                  	mov	esi, ebx
  3384 0000173E 66C1CE04                	ror	esi, 4
  3385 00001742 8EDE                    	mov	ds, si
  3386 00001744 66C1EE1C                	shr	esi, 28
  3387 00001748 668904                  	mov	[si], eax
  3388                                  ; loc     <something> : * (
  3389                                  ; prm         dfs : int
  3390                                  ; prm         pos : int
  3391                                  ; prm         whence : unsigned short
  3392                                  ;         ) int
  3393                                  ; RPN'ized expression: "descRecurso rindx + *u &u lseek -> *u 0 (something217) = "
  3394                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 80 + 0 =(4) "
  3395                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 80 =(204) *ax 0 "
  3396                                  section .relod
  3397 00000174 [4D170000]              	dd	L218
  3398                                  section .text
  3399 0000174B 66B8                    	db	0x66, 0xB8
  3400                                  L218:
  3401 0000174D [00000000]              	dd	_descRecurso
  3402 00001751 6650                    	push	eax
  3403 00001753 668B46F8                	mov	eax, [bp-8]
  3404 00001757 666BC060                	imul	eax, eax, 96
  3405 0000175B 6689C1                  	mov	ecx, eax
  3406 0000175E 6658                    	pop	eax
  3407 00001760 6601C8                  	add	eax, ecx
  3408 00001763 6683C050                	add	eax, 80
  3409 00001767 6689C3                  	mov	ebx, eax
  3410 0000176A 66B800000000            	mov	eax, 0
  3411 00001770 6689DE                  	mov	esi, ebx
  3412 00001773 66C1CE04                	ror	esi, 4
  3413 00001777 8EDE                    	mov	ds, si
  3414 00001779 66C1EE1C                	shr	esi, 28
  3415 0000177D 668904                  	mov	[si], eax
  3416                                  ; loc     <something> : * (
  3417                                  ; prm         dfs : int
  3418                                  ; prm         cmd : unsigned short
  3419                                  ; prm         arg : unsigned short
  3420                                  ;         ) int
  3421                                  ; RPN'ized expression: "descRecurso rindx + *u &u fcntl -> *u 0 (something219) = "
  3422                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 84 + 0 =(4) "
  3423                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 84 =(204) *ax 0 "
  3424                                  section .relod
  3425 00000178 [82170000]              	dd	L220
  3426                                  section .text
  3427 00001780 66B8                    	db	0x66, 0xB8
  3428                                  L220:
  3429 00001782 [00000000]              	dd	_descRecurso
  3430 00001786 6650                    	push	eax
  3431 00001788 668B46F8                	mov	eax, [bp-8]
  3432 0000178C 666BC060                	imul	eax, eax, 96
  3433 00001790 6689C1                  	mov	ecx, eax
  3434 00001793 6658                    	pop	eax
  3435 00001795 6601C8                  	add	eax, ecx
  3436 00001798 6683C054                	add	eax, 84
  3437 0000179C 6689C3                  	mov	ebx, eax
  3438 0000179F 66B800000000            	mov	eax, 0
  3439 000017A5 6689DE                  	mov	esi, ebx
  3440 000017A8 66C1CE04                	ror	esi, 4
  3441 000017AC 8EDE                    	mov	ds, si
  3442 000017AE 66C1EE1C                	shr	esi, 28
  3443 000017B2 668904                  	mov	[si], eax
  3444                                  ; loc     <something> : * (
  3445                                  ; prm         dfs : int
  3446                                  ; prm         request : unsigned short
  3447                                  ; prm         arg : unsigned short
  3448                                  ;         ) int
  3449                                  ; RPN'ized expression: "descRecurso rindx + *u &u ioctl -> *u 0 (something221) = "
  3450                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 88 + 0 =(4) "
  3451                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 88 =(204) *ax 0 "
  3452                                  section .relod
  3453 0000017C [B7170000]              	dd	L222
  3454                                  section .text
  3455 000017B5 66B8                    	db	0x66, 0xB8
  3456                                  L222:
  3457 000017B7 [00000000]              	dd	_descRecurso
  3458 000017BB 6650                    	push	eax
  3459 000017BD 668B46F8                	mov	eax, [bp-8]
  3460 000017C1 666BC060                	imul	eax, eax, 96
  3461 000017C5 6689C1                  	mov	ecx, eax
  3462 000017C8 6658                    	pop	eax
  3463 000017CA 6601C8                  	add	eax, ecx
  3464 000017CD 6683C058                	add	eax, 88
  3465 000017D1 6689C3                  	mov	ebx, eax
  3466 000017D4 66B800000000            	mov	eax, 0
  3467 000017DA 6689DE                  	mov	esi, ebx
  3468 000017DD 66C1CE04                	ror	esi, 4
  3469 000017E1 8EDE                    	mov	ds, si
  3470 000017E3 66C1EE1C                	shr	esi, 28
  3471 000017E7 668904                  	mov	[si], eax
  3472                                  ; loc     <something> : * (
  3473                                  ; prm         dfs : int
  3474                                  ; prm         request : unsigned short
  3475                                  ; prm         arg : unsigned short
  3476                                  ;         ) int
  3477                                  ; RPN'ized expression: "descRecurso rindx + *u &u eliminar -> *u 0 (something223) = "
  3478                                  ; Expanded expression: "descRecurso (@-8) *(4) 96 * + 92 + 0 =(4) "
  3479                                  ; Fused expression:    "descRecurso push-ax * *(@-8) 96 + *sp ax + ax 92 =(204) *ax 0 "
  3480                                  section .relod
  3481 00000180 [EC170000]              	dd	L224
  3482                                  section .text
  3483 000017EA 66B8                    	db	0x66, 0xB8
  3484                                  L224:
  3485 000017EC [00000000]              	dd	_descRecurso
  3486 000017F0 6650                    	push	eax
  3487 000017F2 668B46F8                	mov	eax, [bp-8]
  3488 000017F6 666BC060                	imul	eax, eax, 96
  3489 000017FA 6689C1                  	mov	ecx, eax
  3490 000017FD 6658                    	pop	eax
  3491 000017FF 6601C8                  	add	eax, ecx
  3492 00001802 6683C05C                	add	eax, 92
  3493 00001806 6689C3                  	mov	ebx, eax
  3494 00001809 66B800000000            	mov	eax, 0
  3495 0000180F 6689DE                  	mov	esi, ebx
  3496 00001812 66C1CE04                	ror	esi, 4
  3497 00001816 8EDE                    	mov	ds, si
  3498 00001818 66C1EE1C                	shr	esi, 28
  3499 0000181C 668904                  	mov	[si], eax
  3500                                  ; loc     <something> : * struct <something>
  3501                                  ; RPN'ized expression: "( c2cPFR DROcupados + *u &u (something225) , rindx eliminarPC2c ) "
  3502                                  ; Expanded expression: " c2cPFR 176 +  (@-8) *(4)  eliminarPC2c ()8 "
  3503                                  ; Fused expression:    "( c2cPFR + ax 176 , *(4) (@-8) , eliminarPC2c )8 "
  3504                                  section .relod
  3505 00000184 [21180000]              	dd	L226
  3506                                  section .text
  3507 0000181F 66B8                    	db	0x66, 0xB8
  3508                                  L226:
  3509 00001821 [00000000]              	dd	_c2cPFR
  3510 00001825 6605B0000000            	add	eax, 176
  3511 0000182B 6650                    	push	eax
  3512 0000182D 66FF76F8                	push	dword [bp-8]
  3513 00001831 9A                      	db	0x9A
  3514                                  section .relot
  3515 00000054 [32180000]              	dd	L227
  3516                                  section .text
  3517                                  L227:
  3518 00001832 [00000000]              	dd	_eliminarPC2c
  3519 00001836 83ECF8                  	sub	sp, -8
  3520                                  ; loc     <something> : * struct <something>
  3521                                  ; RPN'ized expression: "( c2cPFR DRLibres + *u &u (something228) , rindx apilarPC2c ) "
  3522                                  ; Expanded expression: " c2cPFR 160 +  (@-8) *(4)  apilarPC2c ()8 "
  3523                                  ; Fused expression:    "( c2cPFR + ax 160 , *(4) (@-8) , apilarPC2c )8 "
  3524                                  section .relod
  3525 00000188 [3B180000]              	dd	L229
  3526                                  section .text
  3527 00001839 66B8                    	db	0x66, 0xB8
  3528                                  L229:
  3529 0000183B [00000000]              	dd	_c2cPFR
  3530 0000183F 6605A0000000            	add	eax, 160
  3531 00001845 6650                    	push	eax
  3532 00001847 66FF76F8                	push	dword [bp-8]
  3533 0000184B 9A                      	db	0x9A
  3534                                  section .relot
  3535 00000058 [4C180000]              	dd	L230
  3536                                  section .text
  3537                                  L230:
  3538 0000184C [00000000]              	dd	_apilarPC2c
  3539 00001850 83ECF8                  	sub	sp, -8
  3540                                  ; return
  3541                                  ; RPN'ized expression: "0 "
  3542                                  ; Expanded expression: "0 "
  3543                                  ; Expression value: 0
  3544                                  ; Fused expression:    "0  "
  3545 00001853 66B800000000            	mov	eax, 0
  3546                                  L138:
  3547 00001859 66                      	db	0x66
  3548 0000185A C9                      	leave
  3549 0000185B CB                      	retf
  3550                                  L231:
  3551                                  
  3552                                  section .fxnsz
  3553 0000000C 7E090000                	dd	L231 - _destruirRec
  3554                                  
  3555                                  
  3556                                  	extern	_c2cPFR
  3557                                  	extern	_descRecurso
  3558                                  	extern	_strcmp
  3559                                  	extern	_recVInt
  3560                                  	extern	_desencolarPC2c
  3561                                  	extern	_apilarPC2c
  3562                                  	extern	_strcpy
  3563                                  	extern	_e2PFR
  3564                                  	extern	_inicializarPC2c
  3565                                  	extern	_redirigirIntHardware
  3566                                  	extern	_redirigirInt
  3567                                  	extern	_descFichero
  3568                                  	extern	_eliminarPC2c
  3569                                  	extern	_descProceso
  3570                                  	extern	_eliminarSegCcb
  3571                                  	extern	_vaciarCcb
  3572                                  	extern	_descThread
  3573                                  	extern	_encolarPC2c
  3574                                  	extern	_restablecerInt
  3575                                  
  3576                                  ; Syntax/declaration table/stack:
  3577                                  ; Bytes used: 10350/40960
  3578                                  
  3579                                  
  3580                                  ; Macro table:
  3581                                  ; Macro __SMALLER_C__ = `0x0100`
  3582                                  ; Macro __SMALLER_C_32__ = ``
  3583                                  ; Macro __HUGE__ = ``
  3584                                  ; Macro __SMALLER_C_SCHAR__ = ``
  3585                                  ; Bytes used: 74/5120
  3586                                  
  3587                                  
  3588                                  ; Identifier table:
  3589                                  ; Ident __floatsisf
  3590                                  ; Ident __floatunsisf
  3591                                  ; Ident __fixsfsi
  3592                                  ; Ident __fixunssfsi
  3593                                  ; Ident __addsf3
  3594                                  ; Ident __subsf3
  3595                                  ; Ident __negsf2
  3596                                  ; Ident __mulsf3
  3597                                  ; Ident __divsf3
  3598                                  ; Ident __lesf2
  3599                                  ; Ident __gesf2
  3600                                  ; Ident intptr_t
  3601                                  ; Ident uintptr_t
  3602                                  ; Ident intmax_t
  3603                                  ; Ident uintmax_t
  3604                                  ; Ident int8_t
  3605                                  ; Ident int_least8_t
  3606                                  ; Ident int_fast8_t
  3607                                  ; Ident uint8_t
  3608                                  ; Ident uint_least8_t
  3609                                  ; Ident uint_fast8_t
  3610                                  ; Ident int16_t
  3611                                  ; Ident int_least16_t
  3612                                  ; Ident int_fast16_t
  3613                                  ; Ident uint16_t
  3614                                  ; Ident uint_least16_t
  3615                                  ; Ident uint_fast16_t
  3616                                  ; Ident int32_t
  3617                                  ; Ident int_least32_t
  3618                                  ; Ident int_fast32_t
  3619                                  ; Ident uint32_t
  3620                                  ; Ident uint_least32_t
  3621                                  ; Ident uint_fast32_t
  3622                                  ; Ident <something>
  3623                                  ; Ident quot
  3624                                  ; Ident rem
  3625                                  ; Ident imaxdiv_t
  3626                                  ; Ident FALSE
  3627                                  ; Ident TRUE
  3628                                  ; Ident bool_t
  3629                                  ; Ident pointer_t
  3630                                  ; Ident funcion_t
  3631                                  ; Ident manejador_t
  3632                                  ; Ident rti_t
  3633                                  ; Ident isr_t
  3634                                  ; Ident handler_t
  3635                                  ; Ident retardarThread_t
  3636                                  ; Ident ptrTVI_t
  3637                                  ; Ident modoSO1_Bin
  3638                                  ; Ident modoSO1_Exe
  3639                                  ; Ident modoSO1_Bs
  3640                                  ; Ident modoSO1_t
  3641                                  ; Ident lo
  3642                                  ; Ident hi
  3643                                  ; Ident lh_t
  3644                                  ; Ident offset
  3645                                  ; Ident segment
  3646                                  ; Ident address_t
  3647                                  ; Ident ptr
  3648                                  ; Ident adr
  3649                                  ; Ident uPtrAdr_t
  3650                                  ; Ident pid_t
  3651                                  ; Ident tid_t
  3652                                  ; Ident uid_t
  3653                                  ; Ident gid_t
  3654                                  ; Ident pindx_t
  3655                                  ; Ident tindx_t
  3656                                  ; Ident df_t
  3657                                  ; Ident dfs_t
  3658                                  ; Ident rindx_t
  3659                                  ; Ident VIOrg
  3660                                  ; Ident recVInt
  3661                                  ; Ident redirigirInt
  3662                                  ; Ident nVInt
  3663                                  ; Ident isr
  3664                                  ; Ident redirigirIntHardware
  3665                                  ; Ident irq
  3666                                  ; Ident restablecerInt
  3667                                  ; Ident inicTVI
  3668                                  ; Ident link_ints
  3669                                  ; Ident modoAp_t
  3670                                  ; Ident DS
  3671                                  ; Ident ES
  3672                                  ; Ident EDI
  3673                                  ; Ident ESI
  3674                                  ; Ident EBP
  3675                                  ; Ident ESP
  3676                                  ; Ident EBX
  3677                                  ; Ident EDX
  3678                                  ; Ident ECX
  3679                                  ; Ident EAX
  3680                                  ; Ident IP
  3681                                  ; Ident CS
  3682                                  ; Ident Flags
  3683                                  ; Ident tramaDWords_t
  3684                                  ; Ident DI
  3685                                  ; Ident rDI
  3686                                  ; Ident SI
  3687                                  ; Ident rSI
  3688                                  ; Ident BP
  3689                                  ; Ident rBP
  3690                                  ; Ident SP
  3691                                  ; Ident rSP
  3692                                  ; Ident BX
  3693                                  ; Ident rBX
  3694                                  ; Ident DX
  3695                                  ; Ident rDX
  3696                                  ; Ident CX
  3697                                  ; Ident rCX
  3698                                  ; Ident AX
  3699                                  ; Ident rAX
  3700                                  ; Ident tramaWords_t
  3701                                  ; Ident BL
  3702                                  ; Ident BH
  3703                                  ; Ident rB
  3704                                  ; Ident DL
  3705                                  ; Ident DH
  3706                                  ; Ident rD
  3707                                  ; Ident CL
  3708                                  ; Ident CH
  3709                                  ; Ident rC
  3710                                  ; Ident AL
  3711                                  ; Ident AH
  3712                                  ; Ident rA
  3713                                  ; Ident tramaBytes_t
  3714                                  ; Ident td
  3715                                  ; Ident tw
  3716                                  ; Ident tb
  3717                                  ; Ident trama_t
  3718                                  ; Ident tam
  3719                                  ; Ident sig
  3720                                  ; Ident ant
  3721                                  ; Ident aux
  3722                                  ; Ident relleno
  3723                                  ; Ident bloque_t
  3724                                  ; Ident ptrBloque_t
  3725                                  ; Ident cab
  3726                                  ; Ident dobleEnlace_t
  3727                                  ; Ident numElem
  3728                                  ; Ident primero
  3729                                  ; Ident cabecera
  3730                                  ; Ident e
  3731                                  ; Ident c2c_t
  3732                                  ; Ident posicionC2c
  3733                                  ; Ident i
  3734                                  ; Ident c2c
  3735                                  ; Ident eliminarC2c
  3736                                  ; Ident apilarC2c
  3737                                  ; Ident encolarC2c
  3738                                  ; Ident desencolarC2c
  3739                                  ; Ident inicializarC2c
  3740                                  ; Ident compartida
  3741                                  ; Ident ptrC2c_t
  3742                                  ; Ident posicionPC2c
  3743                                  ; Ident eliminarPC2c
  3744                                  ; Ident ptrC2c
  3745                                  ; Ident apilarPC2c
  3746                                  ; Ident encolarPC2c
  3747                                  ; Ident desencolarPC2c
  3748                                  ; Ident inicializarPC2c
  3749                                  ; Ident callBack_t
  3750                                  ; Ident arg
  3751                                  ; Ident num
  3752                                  ; Ident in
  3753                                  ; Ident out
  3754                                  ; Ident max
  3755                                  ; Ident callBack
  3756                                  ; Ident descCcb_t
  3757                                  ; Ident ccb_t
  3758                                  ; Ident inicCcb
  3759                                  ; Ident ccb
  3760                                  ; Ident encolarCcb
  3761                                  ; Ident cb
  3762                                  ; Ident desencolarCcb
  3763                                  ; Ident eliminarCcb
  3764                                  ; Ident eliminarSegCcb
  3765                                  ; Ident segmento
  3766                                  ; Ident vaciarCcb
  3767                                  ; Ident atenderCcb
  3768                                  ; Ident libre
  3769                                  ; Ident preparado
  3770                                  ; Ident ejecutandose
  3771                                  ; Ident bloqueado
  3772                                  ; Ident estado_t
  3773                                  ; Ident modoAp
  3774                                  ; Ident dfs
  3775                                  ; Ident pos
  3776                                  ; Ident dfa_t
  3777                                  ; Ident pid
  3778                                  ; Ident noStatus
  3779                                  ; Ident status
  3780                                  ; Ident ppindx
  3781                                  ; Ident hpindx
  3782                                  ; Ident c2cHijos
  3783                                  ; Ident c2cThreads
  3784                                  ; Ident CSProc
  3785                                  ; Ident tamCodigo
  3786                                  ; Ident desplBSS
  3787                                  ; Ident desplPila
  3788                                  ; Ident tamFichero
  3789                                  ; Ident programa
  3790                                  ; Ident comando
  3791                                  ; Ident nfa
  3792                                  ; Ident tfa
  3793                                  ; Ident uid
  3794                                  ; Ident gid
  3795                                  ; Ident descProceso_t
  3796                                  ; Ident tid
  3797                                  ; Ident estado
  3798                                  ; Ident esperandoPor
  3799                                  ; Ident trama
  3800                                  ; Ident ptindx
  3801                                  ; Ident htindx
  3802                                  ; Ident pindx
  3803                                  ; Ident SSThread
  3804                                  ; Ident SP0
  3805                                  ; Ident descThread_t
  3806                                  ; Ident flibre
  3807                                  ; Ident fRegular
  3808                                  ; Ident fedBloques
  3809                                  ; Ident fedCaracteres
  3810                                  ; Ident tuberia
  3811                                  ; Ident tipoFichero_t
  3812                                  ; Ident tipo
  3813                                  ; Ident nombre
  3814                                  ; Ident rindx
  3815                                  ; Ident menor
  3816                                  ; Ident shareMode
  3817                                  ; Ident contAp_L
  3818                                  ; Ident contAp_E
  3819                                  ; Ident descFichero_t
  3820                                  ; Ident rLibre
  3821                                  ; Ident rDCaracteres
  3822                                  ; Ident rDBloques
  3823                                  ; Ident rTuberia
  3824                                  ; Ident rGP
  3825                                  ; Ident rGM
  3826                                  ; Ident rSF
  3827                                  ; Ident rOtro
  3828                                  ; Ident tipoRecurso_t
  3829                                  ; Ident open_t
  3830                                  ; Ident modo
  3831                                  ; Ident release_t
  3832                                  ; Ident read_t
  3833                                  ; Ident dir
  3834                                  ; Ident nbytes
  3835                                  ; Ident aio_read_t
  3836                                  ; Ident write_t
  3837                                  ; Ident aio_write_t
  3838                                  ; Ident lseek_t
  3839                                  ; Ident whence
  3840                                  ; Ident fcntl_t
  3841                                  ; Ident cmd
  3842                                  ; Ident ioctl_t
  3843                                  ; Ident request
  3844                                  ; Ident eliminar_t
  3845                                  ; Ident tindx
  3846                                  ; Ident c2cFichRec
  3847                                  ; Ident numVI
  3848                                  ; Ident open
  3849                                  ; Ident release
  3850                                  ; Ident read
  3851                                  ; Ident aio_read
  3852                                  ; Ident write
  3853                                  ; Ident aio_write
  3854                                  ; Ident lseek
  3855                                  ; Ident fcntl
  3856                                  ; Ident ioctl
  3857                                  ; Ident eliminar
  3858                                  ; Ident descRecurso_t
  3859                                  ; Ident SP0_So1
  3860                                  ; Ident IMR
  3861                                  ; Ident modoSO1
  3862                                  ; Ident ptrDebugWord
  3863                                  ; Ident info_t
  3864                                  ; Ident signatura
  3865                                  ; Ident bytesUltSector
  3866                                  ; Ident sectores
  3867                                  ; Ident numDirReub
  3868                                  ; Ident numParCabecera
  3869                                  ; Ident minAlloc
  3870                                  ; Ident maxAlloc
  3871                                  ; Ident SS0
  3872                                  ; Ident checkSum
  3873                                  ; Ident IP0
  3874                                  ; Ident CS0
  3875                                  ; Ident offTablaReub
  3876                                  ; Ident numOverlay
  3877                                  ; Ident cabecera_t
  3878                                  ; Ident Libres
  3879                                  ; Ident Ocupados
  3880                                  ; Ident e2DescProceso
  3881                                  ; Ident e2DescThread
  3882                                  ; Ident e2DescFichero
  3883                                  ; Ident e2DescRecurso
  3884                                  ; Ident e2Hijos
  3885                                  ; Ident e2Threads
  3886                                  ; Ident e2Preparados
  3887                                  ; Ident e2Urgentes
  3888                                  ; Ident e2POrdenados
  3889                                  ; Ident e2TDormidos
  3890                                  ; Ident e2FichRec
  3891                                  ; Ident e2PFR_t
  3892                                  ; Ident DPLibres
  3893                                  ; Ident DPOcupados
  3894                                  ; Ident DTLibres
  3895                                  ; Ident DTOcupados
  3896                                  ; Ident TPreparados
  3897                                  ; Ident TUrgentes
  3898                                  ; Ident POrdenados
  3899                                  ; Ident TDormidos
  3900                                  ; Ident DFLibres
  3901                                  ; Ident DFOcupados
  3902                                  ; Ident DRLibres
  3903                                  ; Ident DROcupados
  3904                                  ; Ident numColasPFR
  3905                                  ; Ident cPFR_t
  3906                                  ; Ident sigThread_t
  3907                                  ; Ident activarThread_t
  3908                                  ; Ident buscarNuevoThreadActual_t
  3909                                  ; Ident bloquearThreadActual_t
  3910                                  ; Ident ptrIndProcesoActual
  3911                                  ; Ident ptrIndThreadActual
  3912                                  ; Ident ptrTramaThread
  3913                                  ; Ident ptrActivarAlEpilogo
  3914                                  ; Ident ptrDescProceso
  3915                                  ; Ident tamDescProceso
  3916                                  ; Ident ptrDescThread
  3917                                  ; Ident tamDescThread
  3918                                  ; Ident ptrDescFichero
  3919                                  ; Ident ptrDescRecurso
  3920                                  ; Ident ptrC2cPFR
  3921                                  ; Ident ptrE2PFR
  3922                                  ; Ident ptrNivelActivacionSO1H
  3923                                  ; Ident ptrEnHalt
  3924                                  ; Ident ptrHayTic
  3925                                  ; Ident ptrCcbAlEpilogo
  3926                                  ; Ident ptrSS_Thread
  3927                                  ; Ident ptrSP_Thread
  3928                                  ; Ident ptrSS_Kernel
  3929                                  ; Ident ptrSP0_Kernel
  3930                                  ; Ident SP0_SO1H
  3931                                  ; Ident ptrContRodajas
  3932                                  ; Ident ptrContTicsRodaja
  3933                                  ; Ident ptrVIOrg
  3934                                  ; Ident sigThread
  3935                                  ; Ident activarThread
  3936                                  ; Ident buscarNuevoThreadActual
  3937                                  ; Ident bloquearThreadActual
  3938                                  ; Ident ptrListaLibres
  3939                                  ; Ident ptrTamBloqueMax
  3940                                  ; Ident descSO1H_t
  3941                                  ; Ident descProcesoExt_t
  3942                                  ; Ident descThreadExt_t
  3943                                  ; Ident descProceso
  3944                                  ; Ident descThread
  3945                                  ; Ident descFichero
  3946                                  ; Ident descRecurso
  3947                                  ; Ident c2cPFR
  3948                                  ; Ident e2PFR
  3949                                  ; Ident descCcbAlEpilogo
  3950                                  ; Ident ccbAlEpilogo
  3951                                  ; Ident tramaThread
  3952                                  ; Ident tramaTarea
  3953                                  ; Ident indThreadActual
  3954                                  ; Ident indProcesoActual
  3955                                  ; Ident indThreadDeSuperficie
  3956                                  ; Ident contRodajas
  3957                                  ; Ident contTicsRodaja
  3958                                  ; Ident contadorTimer00
  3959                                  ; Ident contOcioso
  3960                                  ; Ident nuevoPid
  3961                                  ; Ident nuevoTid
  3962                                  ; Ident indice
  3963                                  ; Ident registrarEnPOrdenados
  3964                                  ; Ident crearThread
  3965                                  ; Ident funcion
  3966                                  ; Ident crearProceso
  3967                                  ; Ident tamFich
  3968                                  ; Ident inicProcesos
  3969                                  ; Ident resetPids
  3970                                  ; Ident resetTids
  3971                                  ; Ident terminarThreadIndx
  3972                                  ; Ident eliminarThreadIndx
  3973                                  ; Ident terminarProcIndx
  3974                                  ; Ident eliminarProcIndx
  3975                                  ; Ident matarThreadIndx
  3976                                  ; Ident matarProcIndx
  3977                                  ; Ident link_procs
  3978                                  ; Ident inicRecursos
  3979                                  ; Ident crearRec
  3980                                  ; Ident dR
  3981                                  ; Ident crearFich
  3982                                  ; Ident destruirFich
  3983                                  ; Ident destruirRec
  3984                                  ; Ident link_recurs
  3985                                  ; Bytes used: 4072/16384
  3986                                  
  3987                                  ; Next label number: 232
  3988                                  ; Compilation succeeded.
