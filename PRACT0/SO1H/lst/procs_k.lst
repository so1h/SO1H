     1                                  bits 16
     2                                  
     3                                  ; RPN'ized expression: "17 "
     4                                  ; Expanded expression: "17 "
     5                                  ; Expression value: 17
     6                                  ; glb dig : [17u] char
     7                                  ; glb intptr_t : int
     8                                  ; glb uintptr_t : unsigned
     9                                  ; glb intmax_t : int
    10                                  ; glb uintmax_t : unsigned
    11                                  ; glb int8_t : signed char
    12                                  ; glb int_least8_t : signed char
    13                                  ; glb int_fast8_t : signed char
    14                                  ; glb uint8_t : unsigned char
    15                                  ; glb uint_least8_t : unsigned char
    16                                  ; glb uint_fast8_t : unsigned char
    17                                  ; glb int16_t : short
    18                                  ; glb int_least16_t : short
    19                                  ; glb int_fast16_t : short
    20                                  ; glb uint16_t : unsigned short
    21                                  ; glb uint_least16_t : unsigned short
    22                                  ; glb uint_fast16_t : unsigned short
    23                                  ; glb int32_t : int
    24                                  ; glb int_least32_t : int
    25                                  ; glb int_fast32_t : int
    26                                  ; glb uint32_t : unsigned
    27                                  ; glb uint_least32_t : unsigned
    28                                  ; glb uint_fast32_t : unsigned
    29                                  ; glb imaxdiv_t : struct <something>
    30                                  ; glb bool_t : int
    31                                  ; glb pointer_t : * unsigned char
    32                                  ; glb funcion_t : * (
    33                                  ; prm     <something> : * void
    34                                  ;     ) * void
    35                                  ; glb manejador_t : * (void) void
    36                                  ; glb rti_t : * (void) void
    37                                  ; glb isr_t : * (void) void
    38                                  ; glb handler_t : * (void) void
    39                                  ; glb retardarThread_t : * (void) int
    40                                  ; glb ptrTVI_t : * * (void) void
    41                                  ; glb modoSO1_t : int
    42                                  ; glb lh_t : struct <something>
    43                                  ; glb address_t : struct <something>
    44                                  ; glb uPtrAdr_t : union <something>
    45                                  ; glb pid_t : int
    46                                  ; glb tid_t : int
    47                                  ; glb uid_t : int
    48                                  ; glb gid_t : int
    49                                  ; glb pindx_t : int
    50                                  ; glb tindx_t : int
    51                                  ; glb df_t : int
    52                                  ; glb dfs_t : int
    53                                  ; glb rindx_t : int
    54                                  ; glb inportb : (
    55                                  ; prm     port : unsigned short
    56                                  ;     ) unsigned char
    57                                  ; glb inport : (
    58                                  ; prm     port : unsigned short
    59                                  ;     ) unsigned short
    60                                  ; glb outport : (
    61                                  ; prm     port : unsigned short
    62                                  ; prm     val : unsigned short
    63                                  ;     ) void
    64                                  ; glb outportb : (
    65                                  ; prm     port : unsigned short
    66                                  ; prm     val : unsigned char
    67                                  ;     ) void
    68                                  ; glb inportb_r : (
    69                                  ; prm     port : unsigned char
    70                                  ;     ) unsigned char
    71                                  ; glb outportb_r : (
    72                                  ; prm     port : unsigned char
    73                                  ; prm     val : unsigned char
    74                                  ;     ) void
    75                                  ; glb contadorTimer0 : (void) unsigned short
    76                                  ; glb size_t : unsigned
    77                                  ; glb memset : (
    78                                  ; prm     <something> : * void
    79                                  ; prm     <something> : int
    80                                  ; prm     <something> : unsigned
    81                                  ;     ) * void
    82                                  ; glb memcpy : (
    83                                  ; prm     <something> : * void
    84                                  ; prm     <something> : * void
    85                                  ; prm     <something> : unsigned
    86                                  ;     ) * void
    87                                  ; glb memmove : (
    88                                  ; prm     <something> : * void
    89                                  ; prm     <something> : * void
    90                                  ; prm     <something> : unsigned
    91                                  ;     ) * void
    92                                  ; glb memchr : (
    93                                  ; prm     <something> : * char
    94                                  ; prm     <something> : int
    95                                  ; prm     <something> : unsigned
    96                                  ;     ) * char
    97                                  ; glb memcmp : (
    98                                  ; prm     <something> : * void
    99                                  ; prm     <something> : * void
   100                                  ; prm     <something> : unsigned
   101                                  ;     ) int
   102                                  ; glb strcpy : (
   103                                  ; prm     <something> : * char
   104                                  ; prm     <something> : * char
   105                                  ;     ) * char
   106                                  ; glb strncpy : (
   107                                  ; prm     <something> : * char
   108                                  ; prm     <something> : * char
   109                                  ; prm     <something> : unsigned
   110                                  ;     ) * char
   111                                  ; glb strxfrm : (
   112                                  ; prm     <something> : * char
   113                                  ; prm     <something> : * char
   114                                  ; prm     <something> : unsigned
   115                                  ;     ) unsigned
   116                                  ; glb strcat : (
   117                                  ; prm     <something> : * char
   118                                  ; prm     <something> : * char
   119                                  ;     ) * char
   120                                  ; glb strncat : (
   121                                  ; prm     <something> : * char
   122                                  ; prm     <something> : * char
   123                                  ; prm     <something> : unsigned
   124                                  ;     ) * char
   125                                  ; glb strlen : (
   126                                  ; prm     <something> : * char
   127                                  ;     ) unsigned
   128                                  ; glb strchr : (
   129                                  ; prm     <something> : * char
   130                                  ; prm     <something> : int
   131                                  ;     ) * char
   132                                  ; glb strrchr : (
   133                                  ; prm     <something> : * char
   134                                  ; prm     <something> : int
   135                                  ;     ) * char
   136                                  ; glb strstr : (
   137                                  ; prm     <something> : * char
   138                                  ; prm     <something> : * char
   139                                  ;     ) * char
   140                                  ; glb strspn : (
   141                                  ; prm     <something> : * char
   142                                  ; prm     <something> : * char
   143                                  ;     ) unsigned
   144                                  ; glb strcspn : (
   145                                  ; prm     <something> : * char
   146                                  ; prm     <something> : * char
   147                                  ;     ) unsigned
   148                                  ; glb strpbrk : (
   149                                  ; prm     <something> : * char
   150                                  ; prm     <something> : * char
   151                                  ;     ) * char
   152                                  ; glb strtok : (
   153                                  ; prm     <something> : * char
   154                                  ; prm     <something> : * char
   155                                  ;     ) * char
   156                                  ; glb strcmp : (
   157                                  ; prm     <something> : * char
   158                                  ; prm     <something> : * char
   159                                  ;     ) int
   160                                  ; glb strncmp : (
   161                                  ; prm     <something> : * char
   162                                  ; prm     <something> : * char
   163                                  ; prm     <something> : unsigned
   164                                  ;     ) int
   165                                  ; glb strcoll : (
   166                                  ; prm     <something> : * char
   167                                  ; prm     <something> : * char
   168                                  ;     ) int
   169                                  ; glb strerror : (
   170                                  ; prm     <something> : int
   171                                  ;     ) * char
   172                                  ; glb modoAp_t : unsigned short
   173                                  ; glb startBin : (void) void
   174                                  ; glb modoSO1 : (void) int
   175                                  ; glb unidadBIOS : (void) unsigned char
   176                                  ; glb CS_SO1H : unsigned short
   177                                  ; glb RO_SO1H : unsigned short
   178                                  ; glb DS_SO1H : unsigned short
   179                                  ; glb BSS_SO1H : unsigned short
   180                                  ; glb SS_SO1H : unsigned short
   181                                  ; glb SS_Kernel : unsigned short
   182                                  ; glb IMRInicial : unsigned short
   183                                  ; glb obtenerMapa : (void) void
   184                                  ; glb _start : (void) void
   185                                  ; glb __start__ : (void) void
   186                                  ; glb main : (void) void
   187                                  ; glb finProceso : (void) void
   188                                  ; glb finThread : (void) void
   189                                  ; glb tramaDWords_t : struct <something>
   190                                  ; glb tramaWords_t : struct <something>
   191                                  ; RPN'ized expression: "2 "
   192                                  ; Expanded expression: "2 "
   193                                  ; Expression value: 2
   194                                  ; RPN'ized expression: "2 "
   195                                  ; Expanded expression: "2 "
   196                                  ; Expression value: 2
   197                                  ; RPN'ized expression: "2 "
   198                                  ; Expanded expression: "2 "
   199                                  ; Expression value: 2
   200                                  ; RPN'ized expression: "2 "
   201                                  ; Expanded expression: "2 "
   202                                  ; Expression value: 2
   203                                  ; glb tramaBytes_t : struct <something>
   204                                  ; glb trama_t : union <something>
   205                                  ; RPN'ized expression: "8 "
   206                                  ; Expanded expression: "8 "
   207                                  ; Expression value: 8
   208                                  ; glb bloque_t : struct <something>
   209                                  ; glb ptrBloque_t : * struct <something>
   210                                  ; glb dobleEnlace_t : struct <something>
   211                                  ; glb c2c_t : struct <something>
   212                                  ; glb posicionC2c : (
   213                                  ; prm     i : int
   214                                  ; prm     c2c : struct <something>
   215                                  ;     ) int
   216                                  ; glb eliminarC2c : (
   217                                  ; prm     i : int
   218                                  ; prm     c2c : struct <something>
   219                                  ;     ) void
   220                                  ; glb apilarC2c : (
   221                                  ; prm     i : int
   222                                  ; prm     c2c : struct <something>
   223                                  ;     ) void
   224                                  ; glb encolarC2c : (
   225                                  ; prm     i : int
   226                                  ; prm     c2c : struct <something>
   227                                  ;     ) void
   228                                  ; glb desencolarC2c : (
   229                                  ; prm     c2c : struct <something>
   230                                  ;     ) int
   231                                  ; glb inicializarC2c : (
   232                                  ; prm     c2c : * struct <something>
   233                                  ; prm     e : * struct <something>
   234                                  ; prm     cabecera : int
   235                                  ; prm     compartida : int
   236                                  ;     ) void
   237                                  ; glb ptrC2c_t : * struct <something>
   238                                  ; glb posicionPC2c : (
   239                                  ; prm     i : int
   240                                  ; prm     c2c : * struct <something>
   241                                  ;     ) int
   242                                  ; glb eliminarPC2c : (
   243                                  ; prm     i : int
   244                                  ; prm     ptrC2c : * struct <something>
   245                                  ;     ) void
   246                                  ; glb apilarPC2c : (
   247                                  ; prm     i : int
   248                                  ; prm     ptrC2c : * struct <something>
   249                                  ;     ) void
   250                                  ; glb encolarPC2c : (
   251                                  ; prm     i : int
   252                                  ; prm     ptrC2c : * struct <something>
   253                                  ;     ) void
   254                                  ; glb desencolarPC2c : (
   255                                  ; prm     ptrC2c : * struct <something>
   256                                  ;     ) int
   257                                  ; glb inicializarPC2c : (
   258                                  ; prm     ptrC2c : * struct <something>
   259                                  ; prm     e : * struct <something>
   260                                  ; prm     cabecera : int
   261                                  ; prm     compartida : int
   262                                  ;     ) void
   263                                  ; glb callBack_t : * (
   264                                  ; prm     arg : * void
   265                                  ;     ) int
   266                                  ; RPN'ized expression: "10 "
   267                                  ; Expanded expression: "10 "
   268                                  ; Expression value: 10
   269                                  ; glb descCcb_t : struct <something>
   270                                  ; glb ccb_t : * struct <something>
   271                                  ; glb inicCcb : (
   272                                  ; prm     ccb : * struct <something>
   273                                  ; prm     max : unsigned short
   274                                  ;     ) int
   275                                  ; glb encolarCcb : (
   276                                  ; prm     cb : * (
   277                                  ; prm         arg : * void
   278                                  ;         ) int
   279                                  ; prm     ccb : * struct <something>
   280                                  ;     ) int
   281                                  ; glb desencolarCcb : (
   282                                  ; prm     ccb : * struct <something>
   283                                  ;     ) * (
   284                                  ; prm     arg : * void
   285                                  ;     ) int
   286                                  ; glb eliminarCcb : (
   287                                  ; prm     cb : * (
   288                                  ; prm         arg : * void
   289                                  ;         ) int
   290                                  ; prm     ccb : * struct <something>
   291                                  ;     ) int
   292                                  ; glb eliminarSegCcb : (
   293                                  ; prm     segmento : unsigned short
   294                                  ; prm     ccb : * struct <something>
   295                                  ;     ) int
   296                                  ; glb vaciarCcb : (
   297                                  ; prm     ccb : * struct <something>
   298                                  ;     ) int
   299                                  ; glb atenderCcb : (
   300                                  ; prm     ccb : * struct <something>
   301                                  ;     ) int
   302                                  ; glb estado_t : int
   303                                  ; glb dfa_t : struct <something>
   304                                  ; RPN'ized expression: "12 "
   305                                  ; Expanded expression: "12 "
   306                                  ; Expression value: 12
   307                                  ; RPN'ized expression: "80 "
   308                                  ; Expanded expression: "80 "
   309                                  ; Expression value: 80
   310                                  ; RPN'ized expression: "10 "
   311                                  ; Expanded expression: "10 "
   312                                  ; Expression value: 10
   313                                  ; glb descProceso_t : struct <something>
   314                                  ; glb descThread_t : struct <something>
   315                                  ; glb tipoFichero_t : int
   316                                  ; RPN'ized expression: "9 "
   317                                  ; Expanded expression: "9 "
   318                                  ; Expression value: 9
   319                                  ; glb descFichero_t : struct <something>
   320                                  ; glb tipoRecurso_t : int
   321                                  ; glb open_t : * (
   322                                  ; prm     dfs : int
   323                                  ; prm     modo : unsigned short
   324                                  ;     ) int
   325                                  ; glb release_t : * (
   326                                  ; prm     dfs : int
   327                                  ;     ) int
   328                                  ; glb read_t : * (
   329                                  ; prm     dfs : int
   330                                  ; prm     dir : * unsigned char
   331                                  ; prm     nbytes : unsigned short
   332                                  ;     ) int
   333                                  ; glb aio_read_t : * (
   334                                  ; prm     dfs : int
   335                                  ; prm     dir : * unsigned char
   336                                  ; prm     nbytes : unsigned short
   337                                  ;     ) int
   338                                  ; glb write_t : * (
   339                                  ; prm     dfs : int
   340                                  ; prm     dir : * unsigned char
   341                                  ; prm     nbytes : unsigned short
   342                                  ;     ) int
   343                                  ; glb aio_write_t : * (
   344                                  ; prm     dfs : int
   345                                  ; prm     dir : * unsigned char
   346                                  ; prm     nbytes : unsigned short
   347                                  ;     ) int
   348                                  ; glb lseek_t : * (
   349                                  ; prm     dfs : int
   350                                  ; prm     pos : int
   351                                  ; prm     whence : unsigned short
   352                                  ;     ) int
   353                                  ; glb fcntl_t : * (
   354                                  ; prm     dfs : int
   355                                  ; prm     cmd : unsigned short
   356                                  ; prm     arg : unsigned short
   357                                  ;     ) int
   358                                  ; glb ioctl_t : * (
   359                                  ; prm     dfs : int
   360                                  ; prm     request : unsigned short
   361                                  ; prm     arg : unsigned short
   362                                  ;     ) int
   363                                  ; glb eliminar_t : * (
   364                                  ; prm     pindx : int
   365                                  ;     ) int
   366                                  ; RPN'ized expression: "12 "
   367                                  ; Expanded expression: "12 "
   368                                  ; Expression value: 12
   369                                  ; RPN'ized expression: "2 "
   370                                  ; Expanded expression: "2 "
   371                                  ; Expression value: 2
   372                                  ; RPN'ized expression: "2 "
   373                                  ; Expanded expression: "2 "
   374                                  ; Expression value: 2
   375                                  ; RPN'ized expression: "2 "
   376                                  ; Expanded expression: "2 "
   377                                  ; Expression value: 2
   378                                  ; glb descRecurso_t : struct <something>
   379                                  ; glb info_t : struct <something>
   380                                  ; glb cabecera_t : struct <something>
   381                                  ; RPN'ized expression: "16 1 + "
   382                                  ; Expanded expression: "17 "
   383                                  ; Expression value: 17
   384                                  ; RPN'ized expression: "16 2 + "
   385                                  ; Expanded expression: "18 "
   386                                  ; Expression value: 18
   387                                  ; RPN'ized expression: "2010 1 + "
   388                                  ; Expanded expression: "2011 "
   389                                  ; Expression value: 2011
   390                                  ; RPN'ized expression: "2010 2 + "
   391                                  ; Expanded expression: "2012 "
   392                                  ; Expression value: 2012
   393                                  ; RPN'ized expression: "20 1 + "
   394                                  ; Expanded expression: "21 "
   395                                  ; Expression value: 21
   396                                  ; RPN'ized expression: "20 2 + "
   397                                  ; Expanded expression: "22 "
   398                                  ; Expression value: 22
   399                                  ; RPN'ized expression: "14 1 + "
   400                                  ; Expanded expression: "15 "
   401                                  ; Expression value: 15
   402                                  ; RPN'ized expression: "14 2 + "
   403                                  ; Expanded expression: "16 "
   404                                  ; Expression value: 16
   405                                  ; RPN'ized expression: "16 16 + "
   406                                  ; Expanded expression: "32 "
   407                                  ; Expression value: 32
   408                                  ; RPN'ized expression: "2010 16 + "
   409                                  ; Expanded expression: "2026 "
   410                                  ; Expression value: 2026
   411                                  ; RPN'ized expression: "2010 1 + "
   412                                  ; Expanded expression: "2011 "
   413                                  ; Expression value: 2011
   414                                  ; RPN'ized expression: "2010 1 + "
   415                                  ; Expanded expression: "2011 "
   416                                  ; Expression value: 2011
   417                                  ; RPN'ized expression: "16 1 + "
   418                                  ; Expanded expression: "17 "
   419                                  ; Expression value: 17
   420                                  ; RPN'ized expression: "2010 1 + "
   421                                  ; Expanded expression: "2011 "
   422                                  ; Expression value: 2011
   423                                  ; RPN'ized expression: "20 14 + "
   424                                  ; Expanded expression: "34 "
   425                                  ; Expression value: 34
   426                                  ; glb e2PFR_t : struct <something>
   427                                  ; glb cPFR_t : int
   428                                  ; glb sigThread_t : * () int
   429                                  ; glb activarThread_t : * (
   430                                  ; prm     tindx : int
   431                                  ;     ) void
   432                                  ; glb buscarNuevoThreadActual_t : * (void) void
   433                                  ; glb bloquearThreadActual_t : * (
   434                                  ; prm     rindx : int
   435                                  ;     ) void
   436                                  ; glb descSO1H_t : struct <something>
   437                                  ; glb SS_Thread : unsigned short
   438                                  ; glb SP_Thread : unsigned short
   439                                  ; glb SS_Tarea : unsigned short
   440                                  ; glb SP_Tarea : unsigned short
   441                                  ; glb nivelActivacionSO1H : int
   442                                  ; glb nVIntActual : int
   443                                  ; glb enHalt : int
   444                                  ; glb activarAlEpilogo1 : int
   445                                  ; glb hayTic : int
   446                                  ; glb setKernelStack : (void) void
   447                                  ; glb setThreadStack : (
   448                                  ; prm     SS_Thread : unsigned short
   449                                  ; prm     SP_Thread : unsigned short
   450                                  ;     ) void
   451                                  ; glb reg_DL : (void) unsigned
   452                                  ; glb prepararDesbloqueadosUrgentes : (void) void
   453                                  ; glb buscarNuevoThreadActual : (void) void
   454                                  ; glb bloquearThreadActual : (
   455                                  ; prm     rindx : int
   456                                  ;     ) void
   457                                  ; glb tamBloqueMax : unsigned short
   458                                  ; glb listaLibres : * struct <something>
   459                                  ; glb k_buscarBloque : (
   460                                  ; prm     tam : unsigned short
   461                                  ;     ) unsigned short
   462                                  ; glb k_devolverBloque : (
   463                                  ; prm     segmento : unsigned short
   464                                  ; prm     tam : unsigned short
   465                                  ;     ) int
   466                                  ; glb rec_gm : int
   467                                  ; glb inicGM : (void) void
   468                                  ; glb mostrarListaLibres : (void) void
   469                                  ; glb link_gm_k : (void) void
   470                                  ; RPN'ized expression: "12 "
   471                                  ; Expanded expression: "12 "
   472                                  ; Expression value: 12
   473                                  ; RPN'ized expression: "80 "
   474                                  ; Expanded expression: "80 "
   475                                  ; Expression value: 80
   476                                  ; RPN'ized expression: "10 "
   477                                  ; Expanded expression: "10 "
   478                                  ; Expression value: 10
   479                                  ; glb descProcesoExt_t : struct <something>
   480                                  ; glb descThreadExt_t : struct <something>
   481                                  ; RPN'ized expression: "16 "
   482                                  ; Expanded expression: "16 "
   483                                  ; Expression value: 16
   484                                  ; glb descProceso : [16u] struct <something>
   485                                  ; RPN'ized expression: "2010 "
   486                                  ; Expanded expression: "2010 "
   487                                  ; Expression value: 2010
   488                                  ; glb descThread : [2010u] struct <something>
   489                                  ; RPN'ized expression: "20 "
   490                                  ; Expanded expression: "20 "
   491                                  ; Expression value: 20
   492                                  ; glb descFichero : [20u] struct <something>
   493                                  ; RPN'ized expression: "14 "
   494                                  ; Expanded expression: "14 "
   495                                  ; Expression value: 14
   496                                  ; glb descRecurso : [14u] struct <something>
   497                                  ; RPN'ized expression: "numColasPFR "
   498                                  ; Expanded expression: "12 "
   499                                  ; Expression value: 12
   500                                  ; glb c2cPFR : [12u] struct <something>
   501                                  ; glb e2PFR : struct <something>
   502                                  ; glb descCcbAlEpilogo : struct <something>
   503                                  ; glb ccbAlEpilogo : * struct <something>
   504                                  ; glb tramaThread : * union <something>
   505                                  ; glb tramaTarea : * union <something>
   506                                  ; glb indThreadActual : int
   507                                  ; glb indProcesoActual : int
   508                                  ; glb indThreadDeSuperficie : int
   509                                  ; glb contRodajas : unsigned
   510                                  ; glb contTicsRodaja : int
   511                                  ; glb contadorTimer00 : unsigned short
   512                                  ; glb contOcioso : int
   513                                  ; glb nuevoPid : (void) int
   514                                  ; glb nuevoTid : (void) int
   515                                  ; glb indice : (
   516                                  ; prm     tid : int
   517                                  ;     ) int
   518                                  ; glb sigThread : (void) int
   519                                  ; glb activarThread : (
   520                                  ; prm     tindx : int
   521                                  ;     ) int
   522                                  ; glb registrarEnPOrdenados : (
   523                                  ; prm     pindx : int
   524                                  ;     ) void
   525                                  ; glb crearThread : (
   526                                  ; prm     funcion : * (
   527                                  ; prm         <something> : * void
   528                                  ;         ) * void
   529                                  ; prm     SP0 : unsigned short
   530                                  ; prm     arg : * void
   531                                  ; prm     pindx : int
   532                                  ;     ) int
   533                                  ; glb crearProceso : (
   534                                  ; prm     segmento : unsigned short
   535                                  ; prm     tam : unsigned short
   536                                  ; prm     tamFich : unsigned
   537                                  ; prm     programa : * char
   538                                  ; prm     comando : * char
   539                                  ; prm     pindx : int
   540                                  ;     ) int
   541                                  ; glb inicProcesos : (void) void
   542                                  ; glb resetPids : (void) void
   543                                  ; glb resetTids : (void) void
   544                                  ; glb terminarThreadIndx : (
   545                                  ; prm     tindx : int
   546                                  ;     ) int
   547                                  ; glb eliminarThreadIndx : (
   548                                  ; prm     tindx : int
   549                                  ;     ) int
   550                                  ; glb terminarProcIndx : (
   551                                  ; prm     pindx : int
   552                                  ;     ) int
   553                                  ; glb eliminarProcIndx : (
   554                                  ; prm     pindx : int
   555                                  ;     ) int
   556                                  ; glb matarThreadIndx : (
   557                                  ; prm     tindx : int
   558                                  ;     ) int
   559                                  ; glb matarProcIndx : (
   560                                  ; prm     pindx : int
   561                                  ;     ) int
   562                                  ; glb link_procs : (void) void
   563                                  ; glb tipoOrdenador : (void) unsigned char
   564                                  ; glb rebootLegacy : (void) void
   565                                  ; glb tipoTeclado : (void) unsigned char
   566                                  ; glb leerTeclaBIOS : (void) unsigned short
   567                                  ; glb leerTeclaExtBIOS : (void) unsigned short
   568                                  ; glb teclaListaBIOS : (void) unsigned short
   569                                  ; glb leerTeclaListaBDA : (void) unsigned short
   570                                  ; glb teclaListaBDA : (void) unsigned short
   571                                  ; glb printCarBIOS : (
   572                                  ; prm     car : char
   573                                  ;     ) int
   574                                  ; glb printCarPagBIOS : (
   575                                  ; prm     car : char
   576                                  ; prm     pag : unsigned char
   577                                  ;     ) int
   578                                  ; glb printCarAtrPagBIOS : (
   579                                  ; prm     car : char
   580                                  ; prm     atr : unsigned char
   581                                  ; prm     pag : unsigned char
   582                                  ;     ) int
   583                                  ; glb printLnBIOS : (void) int
   584                                  ; glb printStrBIOS : (
   585                                  ; prm     str : * char
   586                                  ;     ) int
   587                                  ; glb printStrHastaBIOS : (
   588                                  ; prm     str : * char
   589                                  ; prm     n : unsigned short
   590                                  ; prm     lleno : int
   591                                  ;     ) int
   592                                  ; glb printDecBIOS : (
   593                                  ; prm     num : unsigned short
   594                                  ; prm     l : unsigned short
   595                                  ;     ) int
   596                                  ; glb printLDecBIOS : (
   597                                  ; prm     num : unsigned
   598                                  ; prm     l : unsigned short
   599                                  ;     ) int
   600                                  ; glb printIntBIOS : (
   601                                  ; prm     num : short
   602                                  ; prm     l : unsigned short
   603                                  ;     ) int
   604                                  ; glb printLIntBIOS : (
   605                                  ; prm     num : int
   606                                  ; prm     l : unsigned short
   607                                  ;     ) int
   608                                  ; glb printHexBIOS : (
   609                                  ; prm     num : unsigned short
   610                                  ; prm     l : unsigned short
   611                                  ;     ) int
   612                                  ; glb printLHexBIOS : (
   613                                  ; prm     num : unsigned
   614                                  ; prm     l : unsigned short
   615                                  ;     ) int
   616                                  ; glb printBinBIOS : (
   617                                  ; prm     num : unsigned short
   618                                  ; prm     l : unsigned short
   619                                  ;     ) int
   620                                  ; glb printLBinBIOS : (
   621                                  ; prm     num : unsigned
   622                                  ; prm     l : unsigned short
   623                                  ;     ) int
   624                                  ; glb printPtrBIOS : (
   625                                  ; prm     ptr : * unsigned char
   626                                  ;     ) int
   627                                  ; glb printByteBIOS : (
   628                                  ; prm     b : unsigned char
   629                                  ;     ) int
   630                                  ; glb printWordBIOS : (
   631                                  ; prm     w : unsigned short
   632                                  ;     ) int
   633                                  ; glb printCadBIOS : (
   634                                  ; prm     cad : * char
   635                                  ;     ) int
   636                                  ; glb esperarTicsBIOS : (
   637                                  ; prm     tics : unsigned short
   638                                  ;     ) void
   639                                  ; glb modoDeVideo : (void) unsigned char
   640                                  ; glb establecerModoDeVideo : (
   641                                  ; prm     modo : unsigned char
   642                                  ;     ) void
   643                                  ; glb paginaActiva : (void) unsigned char
   644                                  ; glb establecerPaginaActiva : (
   645                                  ; prm     num : unsigned char
   646                                  ;     ) void
   647                                  ; glb numPagsVideo : (void) unsigned char
   648                                  ; glb scrollPagBDA : (
   649                                  ; prm     numLineas : unsigned char
   650                                  ; prm     pag : unsigned char
   651                                  ;     ) void
   652                                  ; glb scrollPagBIOS : (
   653                                  ; prm     numLineas : unsigned char
   654                                  ; prm     pag : unsigned char
   655                                  ;     ) void
   656                                  ; glb scrollBIOS : (
   657                                  ; prm     numLineas : unsigned char
   658                                  ;     ) void
   659                                  ; glb goToXYPag : (
   660                                  ; prm     fila : unsigned char
   661                                  ; prm     columna : unsigned char
   662                                  ; prm     pag : unsigned char
   663                                  ;     ) void
   664                                  ; glb goToXYBIOS : (
   665                                  ; prm     fila : unsigned char
   666                                  ; prm     columna : unsigned char
   667                                  ;     ) void
   668                                  ; glb setCursorBIOS : (
   669                                  ; prm     linea1 : unsigned char
   670                                  ; prm     linea2 : unsigned char
   671                                  ;     ) void
   672                                  ; glb ocultaCursorBIOS : (void) void
   673                                  ; glb readXYPagBIOS : (
   674                                  ; prm     fila : * unsigned char
   675                                  ; prm     columna : * unsigned char
   676                                  ; prm     linea1 : * unsigned char
   677                                  ; prm     linea2 : * unsigned char
   678                                  ; prm     pag : unsigned char
   679                                  ;     ) void
   680                                  ; glb readXYBIOS : (
   681                                  ; prm     fila : * unsigned char
   682                                  ; prm     columna : * unsigned char
   683                                  ; prm     linea1 : * unsigned char
   684                                  ; prm     linea2 : * unsigned char
   685                                  ;     ) void
   686                                  ; glb memBIOS : (void) unsigned short
   687                                  ; glb enviarBIOS : (
   688                                  ; prm     car : char
   689                                  ;     ) void
   690                                  ; glb recibirBIOS : (void) char
   691                                  ; glb hayApmBIOS : (
   692                                  ; prm     version : * unsigned short
   693                                  ;     ) int
   694                                  ; glb connectApmBIOS : (void) int
   695                                  ; glb disconnectApmBIOS : (void) int
   696                                  ; glb cpuIdleBIOS : (void) void
   697                                  ; glb cpuBusyBIOS : (void) void
   698                                  ; glb printCarVideo : (
   699                                  ; prm     car : char
   700                                  ;     ) int
   701                                  ; glb printLnVideo : (void) int
   702                                  ; glb printStrVideo : (
   703                                  ; prm     str : * char
   704                                  ;     ) int
   705                                  ; glb printStrHastaVideo : (
   706                                  ; prm     str : * char
   707                                  ; prm     n : unsigned short
   708                                  ; prm     lleno : int
   709                                  ;     ) int
   710                                  ; glb printDecVideo : (
   711                                  ; prm     num : unsigned short
   712                                  ; prm     l : unsigned short
   713                                  ;     ) int
   714                                  ; glb printLDecVideo : (
   715                                  ; prm     num : unsigned
   716                                  ; prm     l : unsigned short
   717                                  ;     ) int
   718                                  ; glb printIntVideo : (
   719                                  ; prm     num : int
   720                                  ; prm     l : unsigned short
   721                                  ;     ) int
   722                                  ; glb printLIntVideo : (
   723                                  ; prm     num : int
   724                                  ; prm     l : unsigned short
   725                                  ;     ) int
   726                                  ; glb printHexVideo : (
   727                                  ; prm     num : unsigned short
   728                                  ; prm     l : unsigned short
   729                                  ;     ) int
   730                                  ; glb printLHexVideo : (
   731                                  ; prm     num : unsigned
   732                                  ; prm     l : unsigned short
   733                                  ;     ) int
   734                                  ; glb printBinVideo : (
   735                                  ; prm     num : unsigned short
   736                                  ; prm     l : unsigned short
   737                                  ;     ) int
   738                                  ; glb printLBinVideo : (
   739                                  ; prm     num : unsigned
   740                                  ; prm     l : unsigned short
   741                                  ;     ) int
   742                                  ; glb printPtrVideo : (
   743                                  ; prm     ptr : * unsigned char
   744                                  ;     ) int
   745                                  ; glb printByteVideo : (
   746                                  ; prm     b : unsigned char
   747                                  ;     ) int
   748                                  ; glb printWordVideo : (
   749                                  ; prm     w : unsigned short
   750                                  ;     ) int
   751                                  ; glb printCadVideo : (
   752                                  ; prm     cad : * char
   753                                  ;     ) int
   754                                  ; glb _start__text : char
   755                                  ; glb _stop__text : char
   756                                  ; glb _start__rodata : char
   757                                  ; glb _stop__rodata : char
   758                                  ; glb _start__data : char
   759                                  ; glb _stop__data : char
   760                                  ; glb _start__bss : char
   761                                  ; glb _stop__bss : char
   762                                  ; glb _start_allcode__ : char
   763                                  ; glb _stop_allcode__ : char
   764                                  ; glb _start_alldata__ : char
   765                                  ; glb _stop_alldata__ : char
   766                                  ; glb mostrarSeccion : (
   767                                  ; prm     start : unsigned
   768                                  ; prm     stop : unsigned
   769                                  ; prm     descripcion : * char
   770                                  ;     ) void
   771                                  ; glb mostrarSecciones : (void) void
   772                                  %define SP0_SO1H 0x8000
   773                                  %define SP0_Kernel  0xA000
   774                                   section .text          
   775                                     global _link_procs_k 
   776                                   _link_procs_k:         
   777                                  
   778                                  ; RPN'ized expression: "16 "
   779                                  ; Expanded expression: "16 "
   780                                  ; Expression value: 16
   781                                  ; glb descProceso : [16u] struct <something>
   782                                  section .bss
   783                                  	alignb 4
   784                                  	global	_descProceso
   785                                  _descProceso:
   786 00000000 <res 00001240>          	resb	4672
   787                                  
   788                                  ; RPN'ized expression: "2010 "
   789                                  ; Expanded expression: "2010 "
   790                                  ; Expression value: 2010
   791                                  ; glb descThread : [2010u] struct <something>
   792                                  section .bss
   793                                  	alignb 4
   794                                  	global	_descThread
   795                                  _descThread:
   796 00001240 <res 00013A10>          	resb	80400
   797                                  
   798                                  ; RPN'ized expression: "20 "
   799                                  ; Expanded expression: "20 "
   800                                  ; Expression value: 20
   801                                  ; glb descFichero : [20u] struct <something>
   802                                  section .bss
   803                                  	alignb 4
   804                                  	global	_descFichero
   805                                  _descFichero:
   806 00014C50 <res 000002D0>          	resb	720
   807                                  
   808                                  ; RPN'ized expression: "14 "
   809                                  ; Expanded expression: "14 "
   810                                  ; Expression value: 14
   811                                  ; glb descRecurso : [14u] struct <something>
   812                                  section .bss
   813                                  	alignb 4
   814                                  	global	_descRecurso
   815                                  _descRecurso:
   816 00014F20 <res 00000540>          	resb	1344
   817                                  
   818                                  ; RPN'ized expression: "numColasPFR "
   819                                  ; Expanded expression: "12 "
   820                                  ; Expression value: 12
   821                                  ; glb c2cPFR : [12u] struct <something>
   822                                  section .bss
   823                                  	alignb 4
   824                                  	global	_c2cPFR
   825                                  _c2cPFR:
   826 00015460 <res 000000C0>          	resb	192
   827                                  
   828                                  ; glb e2PFR : struct <something>
   829                                  section .bss
   830                                  	alignb 4
   831                                  	global	_e2PFR
   832                                  _e2PFR:
   833 00015520 <res 0001DE98>          	resb	122520
   834                                  
   835                                  ; glb descCcbAlEpilogo : struct <something>
   836                                  section .data
   837                                  	align 4
   838                                  	global	_descCcbAlEpilogo
   839                                  _descCcbAlEpilogo:
   840                                  ; =
   841                                  ; RPN'ized expression: "0 "
   842                                  ; Expanded expression: "0 "
   843                                  ; Expression value: 0
   844 00000000 0000                    	dw	0
   845                                  ; RPN'ized expression: "0 "
   846                                  ; Expanded expression: "0 "
   847                                  ; Expression value: 0
   848 00000002 0000                    	dw	0
   849                                  ; RPN'ized expression: "0 "
   850                                  ; Expanded expression: "0 "
   851                                  ; Expression value: 0
   852 00000004 0000                    	dw	0
   853                                  ; RPN'ized expression: "9 "
   854                                  ; Expanded expression: "9 "
   855                                  ; Expression value: 9
   856 00000006 0900                    	dw	9
   857                                  ; glb <something> : * void
   858                                  ; glb <something> : * unsigned char
   859                                  ; RPN'ized expression: "0 (something2) (something1) "
   860                                  ; Expanded expression: "0 "
   861 00000008 00000000                	dd	0
   862                                  ; glb <something> : * (
   863                                  ; prm     arg : * void
   864                                  ;     ) int
   865                                  ; RPN'ized expression: "0 (something3) "
   866                                  ; Expanded expression: "0 "
   867 0000000C 00000000                	dd	0
   868                                  ; glb <something> : * (
   869                                  ; prm     arg : * void
   870                                  ;     ) int
   871                                  ; RPN'ized expression: "0 (something4) "
   872                                  ; Expanded expression: "0 "
   873 00000010 00000000                	dd	0
   874                                  ; glb <something> : * (
   875                                  ; prm     arg : * void
   876                                  ;     ) int
   877                                  ; RPN'ized expression: "0 (something5) "
   878                                  ; Expanded expression: "0 "
   879 00000014 00000000                	dd	0
   880                                  ; glb <something> : * (
   881                                  ; prm     arg : * void
   882                                  ;     ) int
   883                                  ; RPN'ized expression: "0 (something6) "
   884                                  ; Expanded expression: "0 "
   885 00000018 00000000                	dd	0
   886                                  ; glb <something> : * (
   887                                  ; prm     arg : * void
   888                                  ;     ) int
   889                                  ; RPN'ized expression: "0 (something7) "
   890                                  ; Expanded expression: "0 "
   891 0000001C 00000000                	dd	0
   892                                  ; glb <something> : * (
   893                                  ; prm     arg : * void
   894                                  ;     ) int
   895                                  ; RPN'ized expression: "0 (something8) "
   896                                  ; Expanded expression: "0 "
   897 00000020 00000000                	dd	0
   898                                  ; glb <something> : * (
   899                                  ; prm     arg : * void
   900                                  ;     ) int
   901                                  ; RPN'ized expression: "0 (something9) "
   902                                  ; Expanded expression: "0 "
   903 00000024 00000000                	dd	0
   904                                  ; glb <something> : * (
   905                                  ; prm     arg : * void
   906                                  ;     ) int
   907                                  ; RPN'ized expression: "0 (something10) "
   908                                  ; Expanded expression: "0 "
   909 00000028 00000000                	dd	0
   910                                  ; glb <something> : * (
   911                                  ; prm     arg : * void
   912                                  ;     ) int
   913                                  ; RPN'ized expression: "0 (something11) "
   914                                  ; Expanded expression: "0 "
   915 0000002C 00000000                	dd	0
   916 00000030 00<rept>                	times	4 db 0
   917                                  
   918                                  ; glb ccbAlEpilogo : * struct <something>
   919                                  section .bss
   920                                  	alignb 4
   921                                  	global	_ccbAlEpilogo
   922                                  _ccbAlEpilogo:
   923 000333B8 <res 00000004>          	resb	4
   924                                  
   925                                  ; glb numPids : unsigned short
   926                                  section .data
   927                                  	align 4
   928                                  	global	_numPids
   929                                  _numPids:
   930                                  ; =
   931                                  ; RPN'ized expression: "0 "
   932                                  ; Expanded expression: "0 "
   933                                  ; Expression value: 0
   934 00000034 0000                    	dw	0
   935                                  
   936                                  ; glb numTids : unsigned short
   937                                  section .data
   938 00000036 90<rept>                	align 4
   939                                  	global	_numTids
   940                                  _numTids:
   941                                  ; =
   942                                  ; RPN'ized expression: "0 "
   943                                  ; Expanded expression: "0 "
   944                                  ; Expression value: 0
   945 00000038 0000                    	dw	0
   946                                  
   947                                  ; glb indThreadActual : int
   948                                  section .data
   949 0000003A 90<rept>                	align 4
   950                                  	global	_indThreadActual
   951                                  _indThreadActual:
   952                                  ; =
   953                                  ; RPN'ized expression: "0 "
   954                                  ; Expanded expression: "0 "
   955                                  ; Expression value: 0
   956 0000003C 00000000                	dd	0
   957                                  
   958                                  ; glb indProcesoActual : int
   959                                  section .data
   960                                  	align 4
   961                                  	global	_indProcesoActual
   962                                  _indProcesoActual:
   963                                  ; =
   964                                  ; RPN'ized expression: "0 "
   965                                  ; Expanded expression: "0 "
   966                                  ; Expression value: 0
   967 00000040 00000000                	dd	0
   968                                  
   969                                  ; glb indThreadDeSuperficie : int
   970                                  section .data
   971                                  	align 4
   972                                  	global	_indThreadDeSuperficie
   973                                  _indThreadDeSuperficie:
   974                                  ; =
   975                                  ; RPN'ized expression: "0 "
   976                                  ; Expanded expression: "0 "
   977                                  ; Expression value: 0
   978 00000044 00000000                	dd	0
   979                                  
   980                                  ; glb contRodajas : unsigned
   981                                  section .bss
   982                                  	alignb 4
   983                                  	global	_contRodajas
   984                                  _contRodajas:
   985 000333BC <res 00000004>          	resb	4
   986                                  
   987                                  ; glb contTicsRodaja : int
   988                                  section .bss
   989                                  	alignb 4
   990                                  	global	_contTicsRodaja
   991                                  _contTicsRodaja:
   992 000333C0 <res 00000004>          	resb	4
   993                                  
   994                                  ; glb contadorTimer00 : unsigned short
   995                                  section .bss
   996                                  	alignb 4
   997                                  	global	_contadorTimer00
   998                                  _contadorTimer00:
   999 000333C4 <res 00000002>          	resb	2
  1000                                  
  1001                                  ; glb tramaThread : * union <something>
  1002                                  section .bss
  1003 000333C6 <res 00000002>          	alignb 4
  1004                                  	global	_tramaThread
  1005                                  _tramaThread:
  1006 000333C8 <res 00000004>          	resb	4
  1007                                  
  1008                                  ; glb tramaTarea : * union <something>
  1009                                  section .bss
  1010                                  	alignb 4
  1011                                  	global	_tramaTarea
  1012                                  _tramaTarea:
  1013 000333CC <res 00000004>          	resb	4
  1014                                  
  1015                                  ; glb nuevoPid : (void) int
  1016                                  section .text
  1017                                  	global	_nuevoPid
  1018                                  _nuevoPid:
  1019 00000000 6655                    	push	ebp
  1020 00000002 660FB7EC                	movzx	ebp, sp
  1021                                  	;sub	sp,          0
  1022                                  ; return
  1023                                  ; RPN'ized expression: "numPids ++p "
  1024                                  ; Expanded expression: "numPids ++p(2) "
  1025                                  ; Fused expression:    "numPids ++p(2) *ax  "
  1026                                  section .relod
  1027 00000000 [08000000]              	dd	L14
  1028                                  section .text
  1029 00000006 66B8                    	db	0x66, 0xB8
  1030                                  L14:
  1031 00000008 [34000000]              	dd	_numPids
  1032 0000000C 6689C3                  	mov	ebx, eax
  1033 0000000F 6689DE                  	mov	esi, ebx
  1034 00000012 66C1CE04                	ror	esi, 4
  1035 00000016 8EDE                    	mov	ds, si
  1036 00000018 66C1EE1C                	shr	esi, 28
  1037 0000001C 8B04                    	mov	ax, [si]
  1038 0000001E 660FB7C0                	movzx	eax, ax
  1039 00000022 FF04                    	inc	word [si]
  1040                                  L12:
  1041 00000024 66                      	db	0x66
  1042 00000025 C9                      	leave
  1043 00000026 CB                      	retf
  1044                                  L15:
  1045                                  
  1046                                  section .fxnsz noalloc
  1047 00000000 27000000                	dd	L15 - _nuevoPid
  1048                                  
  1049                                  ; glb nuevoTid : (void) int
  1050                                  section .text
  1051                                  	global	_nuevoTid
  1052                                  _nuevoTid:
  1053 00000027 6655                    	push	ebp
  1054 00000029 660FB7EC                	movzx	ebp, sp
  1055                                  	;sub	sp,          0
  1056                                  ; return
  1057                                  ; RPN'ized expression: "numTids ++p "
  1058                                  ; Expanded expression: "numTids ++p(2) "
  1059                                  ; Fused expression:    "numTids ++p(2) *ax  "
  1060                                  section .relod
  1061 00000004 [2F000000]              	dd	L18
  1062                                  section .text
  1063 0000002D 66B8                    	db	0x66, 0xB8
  1064                                  L18:
  1065 0000002F [38000000]              	dd	_numTids
  1066 00000033 6689C3                  	mov	ebx, eax
  1067 00000036 6689DE                  	mov	esi, ebx
  1068 00000039 66C1CE04                	ror	esi, 4
  1069 0000003D 8EDE                    	mov	ds, si
  1070 0000003F 66C1EE1C                	shr	esi, 28
  1071 00000043 8B04                    	mov	ax, [si]
  1072 00000045 660FB7C0                	movzx	eax, ax
  1073 00000049 FF04                    	inc	word [si]
  1074                                  L16:
  1075 0000004B 66                      	db	0x66
  1076 0000004C C9                      	leave
  1077 0000004D CB                      	retf
  1078                                  L19:
  1079                                  
  1080                                  section .fxnsz
  1081 00000004 27000000                	dd	L19 - _nuevoTid
  1082                                  
  1083                                  ; glb resetPids : (void) void
  1084                                  section .text
  1085                                  	global	_resetPids
  1086                                  _resetPids:
  1087 0000004E 6655                    	push	ebp
  1088 00000050 660FB7EC                	movzx	ebp, sp
  1089                                  	;sub	sp,          0
  1090                                  ; RPN'ized expression: "numPids 1 = "
  1091                                  ; Expanded expression: "numPids 1 =(2) "
  1092                                  ; Fused expression:    "numPids =(172) *ax 1 "
  1093                                  section .relod
  1094 00000008 [56000000]              	dd	L22
  1095                                  section .text
  1096 00000054 66B8                    	db	0x66, 0xB8
  1097                                  L22:
  1098 00000056 [34000000]              	dd	_numPids
  1099 0000005A 6689C3                  	mov	ebx, eax
  1100 0000005D 66B801000000            	mov	eax, 1
  1101 00000063 6689DE                  	mov	esi, ebx
  1102 00000066 66C1CE04                	ror	esi, 4
  1103 0000006A 8EDE                    	mov	ds, si
  1104 0000006C 66C1EE1C                	shr	esi, 28
  1105 00000070 8904                    	mov	[si], ax
  1106 00000072 660FB7C0                	movzx	eax, ax
  1107                                  L20:
  1108 00000076 66                      	db	0x66
  1109 00000077 C9                      	leave
  1110 00000078 CB                      	retf
  1111                                  L23:
  1112                                  
  1113                                  section .fxnsz
  1114 00000008 2B000000                	dd	L23 - _resetPids
  1115                                  
  1116                                  ; glb resetTids : (void) void
  1117                                  section .text
  1118                                  	global	_resetTids
  1119                                  _resetTids:
  1120 00000079 6655                    	push	ebp
  1121 0000007B 660FB7EC                	movzx	ebp, sp
  1122                                  	;sub	sp,          0
  1123                                  ; RPN'ized expression: "numTids 1 = "
  1124                                  ; Expanded expression: "numTids 1 =(2) "
  1125                                  ; Fused expression:    "numTids =(172) *ax 1 "
  1126                                  section .relod
  1127 0000000C [81000000]              	dd	L26
  1128                                  section .text
  1129 0000007F 66B8                    	db	0x66, 0xB8
  1130                                  L26:
  1131 00000081 [38000000]              	dd	_numTids
  1132 00000085 6689C3                  	mov	ebx, eax
  1133 00000088 66B801000000            	mov	eax, 1
  1134 0000008E 6689DE                  	mov	esi, ebx
  1135 00000091 66C1CE04                	ror	esi, 4
  1136 00000095 8EDE                    	mov	ds, si
  1137 00000097 66C1EE1C                	shr	esi, 28
  1138 0000009B 8904                    	mov	[si], ax
  1139 0000009D 660FB7C0                	movzx	eax, ax
  1140                                  L24:
  1141 000000A1 66                      	db	0x66
  1142 000000A2 C9                      	leave
  1143 000000A3 CB                      	retf
  1144                                  L27:
  1145                                  
  1146                                  section .fxnsz
  1147 0000000C 2B000000                	dd	L27 - _resetTids
  1148                                  
  1149                                  ; glb indice : (
  1150                                  ; prm     tid : int
  1151                                  ;     ) int
  1152                                  section .text
  1153                                  	global	_indice
  1154                                  _indice:
  1155 000000A4 6655                    	push	ebp
  1156 000000A6 660FB7EC                	movzx	ebp, sp
  1157 000000AA 83EC04                  	 sub	sp,          4
  1158                                  ; loc     tid : (@8): int
  1159                                  ; loc     i : (@-4): int
  1160                                  ; for
  1161                                  ; RPN'ized expression: "i 0 = "
  1162                                  ; Expanded expression: "(@-4) 0 =(4) "
  1163                                  ; Fused expression:    "=(204) *(@-4) 0 "
  1164 000000AD 66B800000000            	mov	eax, 0
  1165 000000B3 668946FC                	mov	[bp-4], eax
  1166                                  L30:
  1167                                  ; RPN'ized expression: "i 2010 < "
  1168                                  ; Expanded expression: "(@-4) *(4) 2010 < "
  1169                                  ; Fused expression:    "< *(@-4) 2010 IF! "
  1170 000000B7 668B46FC                	mov	eax, [bp-4]
  1171 000000BB 663DDA070000            	cmp	eax, 2010
  1172 000000C1 0F8D8B00                	jge	L33
  1173                                  ; RPN'ized expression: "i ++p "
  1174                                  ; Expanded expression: "(@-4) ++p(4) "
  1175                                  ; {
  1176                                  ; if
  1177                                  ; RPN'ized expression: "descThread i + *u &u estado -> *u libre != descThread i + *u &u tid -> *u tid == && "
  1178                                  ; Expanded expression: "descThread (@-4) *(4) 40 * + 4 + *(4) 0 != [sh&&->36] descThread (@-4) *(4) 40 * + 0 + *(4) (@8) *(4) == &&[36] "
  1179                                  ; Fused expression:    "descThread push-ax * *(@-4) 40 + *sp ax + ax 4 != *ax 0 [sh&&->36] descThread push-ax * *(@-4) 40 + *sp ax + ax 0 == *ax *(@8) &&[36]  "
  1180                                  section .relod
  1181 00000010 [C7000000]              	dd	L37
  1182                                  section .text
  1183 000000C5 66B8                    	db	0x66, 0xB8
  1184                                  L37:
  1185 000000C7 [40120000]              	dd	_descThread
  1186 000000CB 6650                    	push	eax
  1187 000000CD 668B46FC                	mov	eax, [bp-4]
  1188 000000D1 666BC028                	imul	eax, eax, 40
  1189 000000D5 6689C1                  	mov	ecx, eax
  1190 000000D8 6658                    	pop	eax
  1191 000000DA 6601C8                  	add	eax, ecx
  1192 000000DD 6683C004                	add	eax, 4
  1193 000000E1 6689C3                  	mov	ebx, eax
  1194 000000E4 6689DE                  	mov	esi, ebx
  1195 000000E7 66C1CE04                	ror	esi, 4
  1196 000000EB 8EDE                    	mov	ds, si
  1197 000000ED 66C1EE1C                	shr	esi, 28
  1198 000000F1 668B04                  	mov	eax, [si]
  1199 000000F4 6683F800                	cmp	eax, 0
  1200 000000F8 0F95C0                  	setne	al
  1201 000000FB 660FB6C0                	movzx	eax, al
  1202                                  ; JumpIfZero
  1203 000000FF 6685C0                  	test	eax, eax
  1204 00000102 7436                    	je	L36
  1205                                  section .relod
  1206 00000014 [06010000]              	dd	L38
  1207                                  section .text
  1208 00000104 66B8                    	db	0x66, 0xB8
  1209                                  L38:
  1210 00000106 [40120000]              	dd	_descThread
  1211 0000010A 6650                    	push	eax
  1212 0000010C 668B46FC                	mov	eax, [bp-4]
  1213 00000110 666BC028                	imul	eax, eax, 40
  1214 00000114 6689C1                  	mov	ecx, eax
  1215 00000117 6658                    	pop	eax
  1216 00000119 6601C8                  	add	eax, ecx
  1217 0000011C 6689C3                  	mov	ebx, eax
  1218 0000011F 6689DE                  	mov	esi, ebx
  1219 00000122 66C1CE04                	ror	esi, 4
  1220 00000126 8EDE                    	mov	ds, si
  1221 00000128 66C1EE1C                	shr	esi, 28
  1222 0000012C 668B04                  	mov	eax, [si]
  1223 0000012F 663B4608                	cmp	eax, [bp+8]
  1224 00000133 0F94C0                  	sete	al
  1225 00000136 660FB6C0                	movzx	eax, al
  1226                                  L36:
  1227                                  ; JumpIfZero
  1228 0000013A 6685C0                  	test	eax, eax
  1229 0000013D 7406                    	je	L34
  1230                                  ; return
  1231                                  ; RPN'ized expression: "i "
  1232                                  ; Expanded expression: "(@-4) *(4) "
  1233                                  ; Fused expression:    "*(4) (@-4)  "
  1234 0000013F 668B46FC                	mov	eax, [bp-4]
  1235 00000143 EB11                    	jmp	L28
  1236                                  L34:
  1237                                  ; }
  1238                                  L31:
  1239                                  ; Fused expression:    "++p(4) *(@-4) "
  1240 00000145 668B46FC                	mov	eax, [bp-4]
  1241 00000149 66FF46FC                	inc	dword [bp-4]
  1242 0000014D E967FF                  	jmp	L30
  1243                                  L33:
  1244                                  ; return
  1245                                  ; RPN'ized expression: "1 -u "
  1246                                  ; Expanded expression: "-1 "
  1247                                  ; Expression value: -1
  1248                                  ; Fused expression:    "-1  "
  1249 00000150 66B8FFFFFFFF            	mov	eax, -1
  1250                                  L28:
  1251 00000156 66                      	db	0x66
  1252 00000157 C9                      	leave
  1253 00000158 CB                      	retf
  1254                                  L39:
  1255                                  
  1256                                  section .fxnsz
  1257 00000010 B5000000                	dd	L39 - _indice
  1258                                  
  1259                                  ; RPN'ized expression: "4 "
  1260                                  ; Expanded expression: "4 "
  1261                                  ; Expression value: 4
  1262                                  ; glb molino : [4u] char
  1263                                  section .data
  1264                                  	global	_molino
  1265                                  _molino:
  1266                                  ; =
  1267                                  ; RPN'ized expression: "124 "
  1268                                  ; Expanded expression: "124 "
  1269                                  ; Expression value: 124
  1270 00000048 7C                      	db	124
  1271                                  ; RPN'ized expression: "47 "
  1272                                  ; Expanded expression: "47 "
  1273                                  ; Expression value: 47
  1274 00000049 2F                      	db	47
  1275                                  ; RPN'ized expression: "45 "
  1276                                  ; Expanded expression: "45 "
  1277                                  ; Expression value: 45
  1278 0000004A 2D                      	db	45
  1279                                  ; RPN'ized expression: "92 "
  1280                                  ; Expanded expression: "92 "
  1281                                  ; Expression value: 92
  1282 0000004B 5C                      	db	92
  1283                                  
  1284                                  ; glb indMolino : int
  1285                                  section .data
  1286                                  	align 4
  1287                                  	global	_indMolino
  1288                                  _indMolino:
  1289                                  ; =
  1290                                  ; RPN'ized expression: "0 "
  1291                                  ; Expanded expression: "0 "
  1292                                  ; Expression value: 0
  1293 0000004C 00000000                	dd	0
  1294                                  
  1295                                  ; glb contOcioso : int
  1296                                  section .data
  1297                                  	align 4
  1298                                  	global	_contOcioso
  1299                                  _contOcioso:
  1300                                  ; =
  1301                                  ; RPN'ized expression: "1 -u "
  1302                                  ; Expanded expression: "-1 "
  1303                                  ; Expression value: -1
  1304 00000050 FFFFFFFF                	dd	-1
  1305                                  
  1306                                  ; glb sigThread : (void) int
  1307                                  section .text
  1308                                  	global	_sigThread
  1309                                  _sigThread:
  1310 00000159 6655                    	push	ebp
  1311 0000015B 660FB7EC                	movzx	ebp, sp
  1312                                  	;sub	sp,          0
  1313                                  ; loc     42 : int
  1314                                  
  1315                                  section .bss
  1316                                  	alignb 4
  1317                                  L42:
  1318 000333D0 <res 00000004>          	resb	4
  1319                                  
  1320                                  section .text
  1321                                  ; RPN'ized expression: "contOcioso 1 -u = "
  1322                                  ; Expanded expression: "contOcioso -1 =(4) "
  1323                                  ; Fused expression:    "contOcioso =(204) *ax -1 "
  1324                                  section .relod
  1325 00000018 [61010000]              	dd	L43
  1326                                  section .text
  1327 0000015F 66B8                    	db	0x66, 0xB8
  1328                                  L43:
  1329 00000161 [50000000]              	dd	_contOcioso
  1330 00000165 6689C3                  	mov	ebx, eax
  1331 00000168 66B8FFFFFFFF            	mov	eax, -1
  1332 0000016E 6689DE                  	mov	esi, ebx
  1333 00000171 66C1CE04                	ror	esi, 4
  1334 00000175 8EDE                    	mov	ds, si
  1335 00000177 66C1EE1C                	shr	esi, 28
  1336 0000017B 668904                  	mov	[si], eax
  1337                                  ; while
  1338                                  ; RPN'ized expression: "c2cPFR TPreparados + *u &u numElem -> *u 0 == "
  1339                                  ; Expanded expression: "c2cPFR 64 + 0 + *(4) 0 == "
  1340                                  L44:
  1341                                  ; Fused expression:    "c2cPFR + ax 64 + ax 0 == *ax 0 IF! "
  1342                                  section .relod
  1343 0000001C [80010000]              	dd	L46
  1344                                  section .text
  1345 0000017E 66B8                    	db	0x66, 0xB8
  1346                                  L46:
  1347 00000180 [60540100]              	dd	_c2cPFR
  1348 00000184 6683C040                	add	eax, 64
  1349 00000188 6689C3                  	mov	ebx, eax
  1350 0000018B 6689DE                  	mov	esi, ebx
  1351 0000018E 66C1CE04                	ror	esi, 4
  1352 00000192 8EDE                    	mov	ds, si
  1353 00000194 66C1EE1C                	shr	esi, 28
  1354 00000198 668B04                  	mov	eax, [si]
  1355 0000019B 6683F800                	cmp	eax, 0
  1356 0000019F 0F85C600                	jne	L45
  1357                                  ; {
  1358                                  ; RPN'ized expression: "indProcesoActual 1 -u = "
  1359                                  ; Expanded expression: "indProcesoActual -1 =(4) "
  1360                                  ; Fused expression:    "indProcesoActual =(204) *ax -1 "
  1361                                  section .relod
  1362 00000020 [A5010000]              	dd	L47
  1363                                  section .text
  1364 000001A3 66B8                    	db	0x66, 0xB8
  1365                                  L47:
  1366 000001A5 [40000000]              	dd	_indProcesoActual
  1367 000001A9 6689C3                  	mov	ebx, eax
  1368 000001AC 66B8FFFFFFFF            	mov	eax, -1
  1369 000001B2 6689DE                  	mov	esi, ebx
  1370 000001B5 66C1CE04                	ror	esi, 4
  1371 000001B9 8EDE                    	mov	ds, si
  1372 000001BB 66C1EE1C                	shr	esi, 28
  1373 000001BF 668904                  	mov	[si], eax
  1374                                  ; RPN'ized expression: "indThreadActual 1 -u = "
  1375                                  ; Expanded expression: "indThreadActual -1 =(4) "
  1376                                  ; Fused expression:    "indThreadActual =(204) *ax -1 "
  1377                                  section .relod
  1378 00000024 [C4010000]              	dd	L48
  1379                                  section .text
  1380 000001C2 66B8                    	db	0x66, 0xB8
  1381                                  L48:
  1382 000001C4 [3C000000]              	dd	_indThreadActual
  1383 000001C8 6689C3                  	mov	ebx, eax
  1384 000001CB 66B8FFFFFFFF            	mov	eax, -1
  1385 000001D1 6689DE                  	mov	esi, ebx
  1386 000001D4 66C1CE04                	ror	esi, 4
  1387 000001D8 8EDE                    	mov	ds, si
  1388 000001DA 66C1EE1C                	shr	esi, 28
  1389 000001DE 668904                  	mov	[si], eax
  1390                                  ; RPN'ized expression: "enHalt TRUE = "
  1391                                  ; Expanded expression: "enHalt 1 =(4) "
  1392                                  ; Fused expression:    "enHalt =(204) *ax 1 "
  1393                                  section .relod
  1394 00000028 [E3010000]              	dd	L49
  1395                                  section .text
  1396 000001E1 66B8                    	db	0x66, 0xB8
  1397                                  L49:
  1398 000001E3 [00000000]              	dd	_enHalt
  1399 000001E7 6689C3                  	mov	ebx, eax
  1400 000001EA 66B801000000            	mov	eax, 1
  1401 000001F0 6689DE                  	mov	esi, ebx
  1402 000001F3 66C1CE04                	ror	esi, 4
  1403 000001F7 8EDE                    	mov	ds, si
  1404 000001F9 66C1EE1C                	shr	esi, 28
  1405 000001FD 668904                  	mov	[si], eax
  1406 00000200 FB                      sti
  1407 00000201 F4                      hlt
  1408 00000202 FA                      cli
  1409                                  ; loc         <something> : * char
  1410                                  ; RPN'ized expression: "753664 2 79 * + (something50) *u molino indMolino ++p 3 & + *u = "
  1411                                  ; Expanded expression: "753822 molino indMolino ++p(4) 3 & + *(-1) =(-1) "
  1412                                  ; Fused expression:    "753822 push-ax molino push-ax indMolino ++p(4) *ax & ax 3 + *sp ax =(119) **sp *ax "
  1413 00000203 66B89E800B00            	mov	eax, 753822
  1414 00000209 6650                    	push	eax
  1415                                  section .relod
  1416 0000002C [0D020000]              	dd	L51
  1417                                  section .text
  1418 0000020B 66B8                    	db	0x66, 0xB8
  1419                                  L51:
  1420 0000020D [48000000]              	dd	_molino
  1421 00000211 6650                    	push	eax
  1422                                  section .relod
  1423 00000030 [15020000]              	dd	L52
  1424                                  section .text
  1425 00000213 66B8                    	db	0x66, 0xB8
  1426                                  L52:
  1427 00000215 [4C000000]              	dd	_indMolino
  1428 00000219 6689C3                  	mov	ebx, eax
  1429 0000021C 6689DE                  	mov	esi, ebx
  1430 0000021F 66C1CE04                	ror	esi, 4
  1431 00000223 8EDE                    	mov	ds, si
  1432 00000225 66C1EE1C                	shr	esi, 28
  1433 00000229 668B04                  	mov	eax, [si]
  1434 0000022C 66FF04                  	inc	dword [si]
  1435 0000022F 6683E003                	and	eax, 3
  1436 00000233 6689C1                  	mov	ecx, eax
  1437 00000236 6658                    	pop	eax
  1438 00000238 6601C8                  	add	eax, ecx
  1439 0000023B 6689C3                  	mov	ebx, eax
  1440 0000023E 6689DE                  	mov	esi, ebx
  1441 00000241 66C1CE04                	ror	esi, 4
  1442 00000245 8EDE                    	mov	ds, si
  1443 00000247 66C1EE1C                	shr	esi, 28
  1444 0000024B 8A04                    	mov	al, [si]
  1445 0000024D 660FBEC0                	movsx	eax, al
  1446 00000251 665B                    	pop	ebx
  1447 00000253 6689DE                  	mov	esi, ebx
  1448 00000256 66C1CE04                	ror	esi, 4
  1449 0000025A 8EDE                    	mov	ds, si
  1450 0000025C 66C1EE1C                	shr	esi, 28
  1451 00000260 8804                    	mov	[si], al
  1452 00000262 660FBEC0                	movsx	eax, al
  1453                                  ; }
  1454 00000266 E915FF                  	jmp	L44
  1455                                  L45:
  1456                                  ; loc     <something> : * struct <something>
  1457                                  ; RPN'ized expression: "tindx ( c2cPFR TPreparados + *u &u (something53) desencolarPC2c ) = "
  1458                                  ; Expanded expression: "L42  c2cPFR 64 +  desencolarPC2c ()4 =(4) "
  1459                                  ; Fused expression:    "L42 push-ax ( c2cPFR + ax 64 , desencolarPC2c )4 =(204) **sp ax "
  1460                                  section .relod
  1461 00000034 [6B020000]              	dd	L54
  1462                                  section .text
  1463 00000269 66B8                    	db	0x66, 0xB8
  1464                                  L54:
  1465 0000026B [D0330300]              	dd	L42
  1466 0000026F 6650                    	push	eax
  1467                                  section .relod
  1468 00000038 [73020000]              	dd	L55
  1469                                  section .text
  1470 00000271 66B8                    	db	0x66, 0xB8
  1471                                  L55:
  1472 00000273 [60540100]              	dd	_c2cPFR
  1473 00000277 6683C040                	add	eax, 64
  1474 0000027B 6650                    	push	eax
  1475 0000027D 9A                      	db	0x9A
  1476                                  section .relot
  1477 00000000 [7E020000]              	dd	L56
  1478                                  section .text
  1479                                  L56:
  1480 0000027E [00000000]              	dd	_desencolarPC2c
  1481 00000282 83ECFC                  	sub	sp, -4
  1482 00000285 665B                    	pop	ebx
  1483 00000287 6689DE                  	mov	esi, ebx
  1484 0000028A 66C1CE04                	ror	esi, 4
  1485 0000028E 8EDE                    	mov	ds, si
  1486 00000290 66C1EE1C                	shr	esi, 28
  1487 00000294 668904                  	mov	[si], eax
  1488                                  ; return
  1489                                  ; RPN'ized expression: "tindx "
  1490                                  ; Expanded expression: "L42 *(4) "
  1491                                  ; Fused expression:    "L42 *(4) ax  "
  1492                                  section .relod
  1493 0000003C [99020000]              	dd	L57
  1494                                  section .text
  1495 00000297 66B8                    	db	0x66, 0xB8
  1496                                  L57:
  1497 00000299 [D0330300]              	dd	L42
  1498 0000029D 6689C3                  	mov	ebx, eax
  1499 000002A0 6689DE                  	mov	esi, ebx
  1500 000002A3 66C1CE04                	ror	esi, 4
  1501 000002A7 8EDE                    	mov	ds, si
  1502 000002A9 66C1EE1C                	shr	esi, 28
  1503 000002AD 668B04                  	mov	eax, [si]
  1504                                  L40:
  1505 000002B0 66                      	db	0x66
  1506 000002B1 C9                      	leave
  1507 000002B2 CB                      	retf
  1508                                  L58:
  1509                                  
  1510                                  section .fxnsz
  1511 00000014 5A010000                	dd	L58 - _sigThread
  1512                                  
  1513                                  ; glb activarThread : (
  1514                                  ; prm     tindx : int
  1515                                  ;     ) int
  1516                                  section .text
  1517                                  	global	_activarThread
  1518                                  _activarThread:
  1519 000002B3 6655                    	push	ebp
  1520 000002B5 660FB7EC                	movzx	ebp, sp
  1521                                  	;sub	sp,          0
  1522                                  ; loc     tindx : (@8): int
  1523                                  ; if
  1524                                  ; RPN'ized expression: "tindx 0 < descThread tindx + *u &u tid -> *u 0 < || "
  1525                                  ; Expanded expression: "(@8) *(4) 0 < [sh||->63] descThread (@8) *(4) 40 * + 0 + *(4) 0 < ||[63] "
  1526                                  ; Fused expression:    "< *(@8) 0 [sh||->63] descThread push-ax * *(@8) 40 + *sp ax + ax 0 < *ax 0 ||[63]  "
  1527 000002B9 668B4608                	mov	eax, [bp+8]
  1528 000002BD 6683F800                	cmp	eax, 0
  1529 000002C1 0F9CC0                  	setl	al
  1530 000002C4 660FB6C0                	movzx	eax, al
  1531                                  ; JumpIfNotZero
  1532 000002C8 6685C0                  	test	eax, eax
  1533 000002CB 7536                    	jne	L63
  1534                                  section .relod
  1535 00000040 [CF020000]              	dd	L64
  1536                                  section .text
  1537 000002CD 66B8                    	db	0x66, 0xB8
  1538                                  L64:
  1539 000002CF [40120000]              	dd	_descThread
  1540 000002D3 6650                    	push	eax
  1541 000002D5 668B4608                	mov	eax, [bp+8]
  1542 000002D9 666BC028                	imul	eax, eax, 40
  1543 000002DD 6689C1                  	mov	ecx, eax
  1544 000002E0 6658                    	pop	eax
  1545 000002E2 6601C8                  	add	eax, ecx
  1546 000002E5 6689C3                  	mov	ebx, eax
  1547 000002E8 6689DE                  	mov	esi, ebx
  1548 000002EB 66C1CE04                	ror	esi, 4
  1549 000002EF 8EDE                    	mov	ds, si
  1550 000002F1 66C1EE1C                	shr	esi, 28
  1551 000002F5 668B04                  	mov	eax, [si]
  1552 000002F8 6683F800                	cmp	eax, 0
  1553 000002FC 0F9CC0                  	setl	al
  1554 000002FF 660FB6C0                	movzx	eax, al
  1555                                  L63:
  1556                                  ; JumpIfZero
  1557 00000303 6685C0                  	test	eax, eax
  1558 00000306 7409                    	je	L61
  1559                                  ; {
  1560                                  ; return
  1561                                  ; RPN'ized expression: "1 -u "
  1562                                  ; Expanded expression: "-1 "
  1563                                  ; Expression value: -1
  1564                                  ; Fused expression:    "-1  "
  1565 00000308 66B8FFFFFFFF            	mov	eax, -1
  1566 0000030E E9EF02                  	jmp	L59
  1567                                  ; }
  1568                                  L61:
  1569                                  ; if
  1570                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u preparado != "
  1571                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 1 != "
  1572                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 != *ax 1 IF! "
  1573                                  section .relod
  1574 00000044 [13030000]              	dd	L67
  1575                                  section .text
  1576 00000311 66B8                    	db	0x66, 0xB8
  1577                                  L67:
  1578 00000313 [40120000]              	dd	_descThread
  1579 00000317 6650                    	push	eax
  1580 00000319 668B4608                	mov	eax, [bp+8]
  1581 0000031D 666BC028                	imul	eax, eax, 40
  1582 00000321 6689C1                  	mov	ecx, eax
  1583 00000324 6658                    	pop	eax
  1584 00000326 6601C8                  	add	eax, ecx
  1585 00000329 6683C004                	add	eax, 4
  1586 0000032D 6689C3                  	mov	ebx, eax
  1587 00000330 6689DE                  	mov	esi, ebx
  1588 00000333 66C1CE04                	ror	esi, 4
  1589 00000337 8EDE                    	mov	ds, si
  1590 00000339 66C1EE1C                	shr	esi, 28
  1591 0000033D 668B04                  	mov	eax, [si]
  1592 00000340 6683F801                	cmp	eax, 1
  1593 00000344 7409                    	je	L65
  1594                                  ; {
  1595                                  ; return
  1596                                  ; RPN'ized expression: "1 -u "
  1597                                  ; Expanded expression: "-1 "
  1598                                  ; Expression value: -1
  1599                                  ; Fused expression:    "-1  "
  1600 00000346 66B8FFFFFFFF            	mov	eax, -1
  1601 0000034C E9B102                  	jmp	L59
  1602                                  ; }
  1603                                  L65:
  1604                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u ejecutandose = "
  1605                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + 2 =(4) "
  1606                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 =(204) *ax 2 "
  1607                                  section .relod
  1608 00000048 [51030000]              	dd	L68
  1609                                  section .text
  1610 0000034F 66B8                    	db	0x66, 0xB8
  1611                                  L68:
  1612 00000351 [40120000]              	dd	_descThread
  1613 00000355 6650                    	push	eax
  1614 00000357 668B4608                	mov	eax, [bp+8]
  1615 0000035B 666BC028                	imul	eax, eax, 40
  1616 0000035F 6689C1                  	mov	ecx, eax
  1617 00000362 6658                    	pop	eax
  1618 00000364 6601C8                  	add	eax, ecx
  1619 00000367 6683C004                	add	eax, 4
  1620 0000036B 6689C3                  	mov	ebx, eax
  1621 0000036E 66B802000000            	mov	eax, 2
  1622 00000374 6689DE                  	mov	esi, ebx
  1623 00000377 66C1CE04                	ror	esi, 4
  1624 0000037B 8EDE                    	mov	ds, si
  1625 0000037D 66C1EE1C                	shr	esi, 28
  1626 00000381 668904                  	mov	[si], eax
  1627                                  ; RPN'ized expression: "indThreadActual tindx = "
  1628                                  ; Expanded expression: "indThreadActual (@8) *(4) =(4) "
  1629                                  ; Fused expression:    "indThreadActual =(204) *ax *(@8) "
  1630                                  section .relod
  1631 0000004C [86030000]              	dd	L69
  1632                                  section .text
  1633 00000384 66B8                    	db	0x66, 0xB8
  1634                                  L69:
  1635 00000386 [3C000000]              	dd	_indThreadActual
  1636 0000038A 6689C3                  	mov	ebx, eax
  1637 0000038D 668B4608                	mov	eax, [bp+8]
  1638 00000391 6689DE                  	mov	esi, ebx
  1639 00000394 66C1CE04                	ror	esi, 4
  1640 00000398 8EDE                    	mov	ds, si
  1641 0000039A 66C1EE1C                	shr	esi, 28
  1642 0000039E 668904                  	mov	[si], eax
  1643                                  ; RPN'ized expression: "indProcesoActual descThread tindx + *u &u pindx -> *u = "
  1644                                  ; Expanded expression: "indProcesoActual descThread (@8) *(4) 40 * + 32 + *(4) =(4) "
  1645                                  ; Fused expression:    "indProcesoActual push-ax descThread push-ax * *(@8) 40 + *sp ax + ax 32 =(204) **sp *ax "
  1646                                  section .relod
  1647 00000050 [A3030000]              	dd	L70
  1648                                  section .text
  1649 000003A1 66B8                    	db	0x66, 0xB8
  1650                                  L70:
  1651 000003A3 [40000000]              	dd	_indProcesoActual
  1652 000003A7 6650                    	push	eax
  1653                                  section .relod
  1654 00000054 [AB030000]              	dd	L71
  1655                                  section .text
  1656 000003A9 66B8                    	db	0x66, 0xB8
  1657                                  L71:
  1658 000003AB [40120000]              	dd	_descThread
  1659 000003AF 6650                    	push	eax
  1660 000003B1 668B4608                	mov	eax, [bp+8]
  1661 000003B5 666BC028                	imul	eax, eax, 40
  1662 000003B9 6689C1                  	mov	ecx, eax
  1663 000003BC 6658                    	pop	eax
  1664 000003BE 6601C8                  	add	eax, ecx
  1665 000003C1 6683C020                	add	eax, 32
  1666 000003C5 6689C3                  	mov	ebx, eax
  1667 000003C8 6689DE                  	mov	esi, ebx
  1668 000003CB 66C1CE04                	ror	esi, 4
  1669 000003CF 8EDE                    	mov	ds, si
  1670 000003D1 66C1EE1C                	shr	esi, 28
  1671 000003D5 668B04                  	mov	eax, [si]
  1672 000003D8 665B                    	pop	ebx
  1673 000003DA 6689DE                  	mov	esi, ebx
  1674 000003DD 66C1CE04                	ror	esi, 4
  1675 000003E1 8EDE                    	mov	ds, si
  1676 000003E3 66C1EE1C                	shr	esi, 28
  1677 000003E7 668904                  	mov	[si], eax
  1678                                  ; RPN'ized expression: "contRodajas ++p "
  1679                                  ; Expanded expression: "contRodajas ++p(4) "
  1680                                  ; Fused expression:    "contRodajas ++p(4) *ax "
  1681                                  section .relod
  1682 00000058 [EC030000]              	dd	L72
  1683                                  section .text
  1684 000003EA 66B8                    	db	0x66, 0xB8
  1685                                  L72:
  1686 000003EC [BC330300]              	dd	_contRodajas
  1687 000003F0 6689C3                  	mov	ebx, eax
  1688 000003F3 6689DE                  	mov	esi, ebx
  1689 000003F6 66C1CE04                	ror	esi, 4
  1690 000003FA 8EDE                    	mov	ds, si
  1691 000003FC 66C1EE1C                	shr	esi, 28
  1692 00000400 668B04                  	mov	eax, [si]
  1693 00000403 66FF04                  	inc	dword [si]
  1694                                  ; if
  1695                                  ; RPN'ized expression: "hayTic "
  1696                                  ; Expanded expression: "hayTic *(4) "
  1697                                  ; Fused expression:    "hayTic *(4) ax  "
  1698                                  section .relod
  1699 0000005C [08040000]              	dd	L75
  1700                                  section .text
  1701 00000406 66B8                    	db	0x66, 0xB8
  1702                                  L75:
  1703 00000408 [00000000]              	dd	_hayTic
  1704 0000040C 6689C3                  	mov	ebx, eax
  1705 0000040F 6689DE                  	mov	esi, ebx
  1706 00000412 66C1CE04                	ror	esi, 4
  1707 00000416 8EDE                    	mov	ds, si
  1708 00000418 66C1EE1C                	shr	esi, 28
  1709 0000041C 668B04                  	mov	eax, [si]
  1710                                  ; JumpIfZero
  1711 0000041F 6685C0                  	test	eax, eax
  1712 00000422 7421                    	je	L73
  1713                                  ; RPN'ized expression: "contTicsRodaja 0 = "
  1714                                  ; Expanded expression: "contTicsRodaja 0 =(4) "
  1715                                  ; Fused expression:    "contTicsRodaja =(204) *ax 0 "
  1716                                  section .relod
  1717 00000060 [26040000]              	dd	L76
  1718                                  section .text
  1719 00000424 66B8                    	db	0x66, 0xB8
  1720                                  L76:
  1721 00000426 [C0330300]              	dd	_contTicsRodaja
  1722 0000042A 6689C3                  	mov	ebx, eax
  1723 0000042D 66B800000000            	mov	eax, 0
  1724 00000433 6689DE                  	mov	esi, ebx
  1725 00000436 66C1CE04                	ror	esi, 4
  1726 0000043A 8EDE                    	mov	ds, si
  1727 0000043C 66C1EE1C                	shr	esi, 28
  1728 00000440 668904                  	mov	[si], eax
  1729 00000443 EB1F                    	jmp	L74
  1730                                  L73:
  1731                                  ; else
  1732                                  ; RPN'ized expression: "contTicsRodaja 1 -u = "
  1733                                  ; Expanded expression: "contTicsRodaja -1 =(4) "
  1734                                  ; Fused expression:    "contTicsRodaja =(204) *ax -1 "
  1735                                  section .relod
  1736 00000064 [47040000]              	dd	L77
  1737                                  section .text
  1738 00000445 66B8                    	db	0x66, 0xB8
  1739                                  L77:
  1740 00000447 [C0330300]              	dd	_contTicsRodaja
  1741 0000044B 6689C3                  	mov	ebx, eax
  1742 0000044E 66B8FFFFFFFF            	mov	eax, -1
  1743 00000454 6689DE                  	mov	esi, ebx
  1744 00000457 66C1CE04                	ror	esi, 4
  1745 0000045B 8EDE                    	mov	ds, si
  1746 0000045D 66C1EE1C                	shr	esi, 28
  1747 00000461 668904                  	mov	[si], eax
  1748                                  L74:
  1749                                  ; RPN'ized expression: "hayTic FALSE = "
  1750                                  ; Expanded expression: "hayTic 0 =(4) "
  1751                                  ; Fused expression:    "hayTic =(204) *ax 0 "
  1752                                  section .relod
  1753 00000068 [66040000]              	dd	L78
  1754                                  section .text
  1755 00000464 66B8                    	db	0x66, 0xB8
  1756                                  L78:
  1757 00000466 [00000000]              	dd	_hayTic
  1758 0000046A 6689C3                  	mov	ebx, eax
  1759 0000046D 66B800000000            	mov	eax, 0
  1760 00000473 6689DE                  	mov	esi, ebx
  1761 00000476 66C1CE04                	ror	esi, 4
  1762 0000047A 8EDE                    	mov	ds, si
  1763 0000047C 66C1EE1C                	shr	esi, 28
  1764 00000480 668904                  	mov	[si], eax
  1765                                  ; RPN'ized expression: "SS_Thread descThread indThreadActual + *u &u SSThread -> *u = "
  1766                                  ; Expanded expression: "SS_Thread descThread indThreadActual *(4) 40 * + 36 + *(2) =(2) "
  1767                                  ; Fused expression:    "SS_Thread push-ax descThread push-ax indThreadActual * *ax 40 + *sp ax + ax 36 =(170) **sp *ax "
  1768                                  section .relod
  1769 0000006C [85040000]              	dd	L79
  1770                                  section .text
  1771 00000483 66B8                    	db	0x66, 0xB8
  1772                                  L79:
  1773 00000485 [00000000]              	dd	_SS_Thread
  1774 00000489 6650                    	push	eax
  1775                                  section .relod
  1776 00000070 [8D040000]              	dd	L80
  1777                                  section .text
  1778 0000048B 66B8                    	db	0x66, 0xB8
  1779                                  L80:
  1780 0000048D [40120000]              	dd	_descThread
  1781 00000491 6650                    	push	eax
  1782                                  section .relod
  1783 00000074 [95040000]              	dd	L81
  1784                                  section .text
  1785 00000493 66B8                    	db	0x66, 0xB8
  1786                                  L81:
  1787 00000495 [3C000000]              	dd	_indThreadActual
  1788 00000499 6689C3                  	mov	ebx, eax
  1789 0000049C 6689DE                  	mov	esi, ebx
  1790 0000049F 66C1CE04                	ror	esi, 4
  1791 000004A3 8EDE                    	mov	ds, si
  1792 000004A5 66C1EE1C                	shr	esi, 28
  1793 000004A9 668B04                  	mov	eax, [si]
  1794 000004AC 666BC028                	imul	eax, eax, 40
  1795 000004B0 6689C1                  	mov	ecx, eax
  1796 000004B3 6658                    	pop	eax
  1797 000004B5 6601C8                  	add	eax, ecx
  1798 000004B8 6683C024                	add	eax, 36
  1799 000004BC 6689C3                  	mov	ebx, eax
  1800 000004BF 6689DE                  	mov	esi, ebx
  1801 000004C2 66C1CE04                	ror	esi, 4
  1802 000004C6 8EDE                    	mov	ds, si
  1803 000004C8 66C1EE1C                	shr	esi, 28
  1804 000004CC 8B04                    	mov	ax, [si]
  1805 000004CE 660FB7C0                	movzx	eax, ax
  1806 000004D2 665B                    	pop	ebx
  1807 000004D4 6689DE                  	mov	esi, ebx
  1808 000004D7 66C1CE04                	ror	esi, 4
  1809 000004DB 8EDE                    	mov	ds, si
  1810 000004DD 66C1EE1C                	shr	esi, 28
  1811 000004E1 8904                    	mov	[si], ax
  1812 000004E3 660FB7C0                	movzx	eax, ax
  1813                                  ; loc     <something> : unsigned short
  1814                                  ; loc     <something> : int
  1815                                  ; loc     <something> : int
  1816                                  ; loc     <something> : unsigned
  1817                                  ; RPN'ized expression: "SP_Thread descThread indThreadActual + *u &u trama -> *u (something83) SS_Thread (something85) 4 << (something84) - (something82) = "
  1818                                  ; Expanded expression: "SP_Thread descThread indThreadActual *(4) 40 * + 12 + *(4) SS_Thread *(2) 4 << - unsigned short =(2) "
  1819                                  ; Fused expression:    "SP_Thread push-ax descThread push-ax indThreadActual * *ax 40 + *sp ax + ax 12 push-ax SS_Thread << *ax 4 - **sp ax unsigned short =(172) **sp ax "
  1820                                  section .relod
  1821 00000078 [E9040000]              	dd	L86
  1822                                  section .text
  1823 000004E7 66B8                    	db	0x66, 0xB8
  1824                                  L86:
  1825 000004E9 [00000000]              	dd	_SP_Thread
  1826 000004ED 6650                    	push	eax
  1827                                  section .relod
  1828 0000007C [F1040000]              	dd	L87
  1829                                  section .text
  1830 000004EF 66B8                    	db	0x66, 0xB8
  1831                                  L87:
  1832 000004F1 [40120000]              	dd	_descThread
  1833 000004F5 6650                    	push	eax
  1834                                  section .relod
  1835 00000080 [F9040000]              	dd	L88
  1836                                  section .text
  1837 000004F7 66B8                    	db	0x66, 0xB8
  1838                                  L88:
  1839 000004F9 [3C000000]              	dd	_indThreadActual
  1840 000004FD 6689C3                  	mov	ebx, eax
  1841 00000500 6689DE                  	mov	esi, ebx
  1842 00000503 66C1CE04                	ror	esi, 4
  1843 00000507 8EDE                    	mov	ds, si
  1844 00000509 66C1EE1C                	shr	esi, 28
  1845 0000050D 668B04                  	mov	eax, [si]
  1846 00000510 666BC028                	imul	eax, eax, 40
  1847 00000514 6689C1                  	mov	ecx, eax
  1848 00000517 6658                    	pop	eax
  1849 00000519 6601C8                  	add	eax, ecx
  1850 0000051C 6683C00C                	add	eax, 12
  1851 00000520 6650                    	push	eax
  1852                                  section .relod
  1853 00000084 [24050000]              	dd	L89
  1854                                  section .text
  1855 00000522 66B8                    	db	0x66, 0xB8
  1856                                  L89:
  1857 00000524 [00000000]              	dd	_SS_Thread
  1858 00000528 6689C3                  	mov	ebx, eax
  1859 0000052B 6689DE                  	mov	esi, ebx
  1860 0000052E 66C1CE04                	ror	esi, 4
  1861 00000532 8EDE                    	mov	ds, si
  1862 00000534 66C1EE1C                	shr	esi, 28
  1863 00000538 8B04                    	mov	ax, [si]
  1864 0000053A 660FB7C0                	movzx	eax, ax
  1865 0000053E 66C1E004                	shl	eax, 4
  1866 00000542 6689C1                  	mov	ecx, eax
  1867 00000545 665B                    	pop	ebx
  1868 00000547 6689DE                  	mov	esi, ebx
  1869 0000054A 66C1CE04                	ror	esi, 4
  1870 0000054E 8EDE                    	mov	ds, si
  1871 00000550 66C1EE1C                	shr	esi, 28
  1872 00000554 668B04                  	mov	eax, [si]
  1873 00000557 6629C8                  	sub	eax, ecx
  1874 0000055A 660FB7C0                	movzx	eax, ax
  1875 0000055E 665B                    	pop	ebx
  1876 00000560 6689DE                  	mov	esi, ebx
  1877 00000563 66C1CE04                	ror	esi, 4
  1878 00000567 8EDE                    	mov	ds, si
  1879 00000569 66C1EE1C                	shr	esi, 28
  1880 0000056D 8904                    	mov	[si], ax
  1881 0000056F 660FB7C0                	movzx	eax, ax
  1882                                  ; RPN'ized expression: "enHalt FALSE = "
  1883                                  ; Expanded expression: "enHalt 0 =(4) "
  1884                                  ; Fused expression:    "enHalt =(204) *ax 0 "
  1885                                  section .relod
  1886 00000088 [75050000]              	dd	L90
  1887                                  section .text
  1888 00000573 66B8                    	db	0x66, 0xB8
  1889                                  L90:
  1890 00000575 [00000000]              	dd	_enHalt
  1891 00000579 6689C3                  	mov	ebx, eax
  1892 0000057C 66B800000000            	mov	eax, 0
  1893 00000582 6689DE                  	mov	esi, ebx
  1894 00000585 66C1CE04                	ror	esi, 4
  1895 00000589 8EDE                    	mov	ds, si
  1896 0000058B 66C1EE1C                	shr	esi, 28
  1897 0000058F 668904                  	mov	[si], eax
  1898                                  ; RPN'ized expression: "nivelActivacionSO1H 0 = "
  1899                                  ; Expanded expression: "nivelActivacionSO1H 0 =(4) "
  1900                                  ; Fused expression:    "nivelActivacionSO1H =(204) *ax 0 "
  1901                                  section .relod
  1902 0000008C [94050000]              	dd	L91
  1903                                  section .text
  1904 00000592 66B8                    	db	0x66, 0xB8
  1905                                  L91:
  1906 00000594 [00000000]              	dd	_nivelActivacionSO1H
  1907 00000598 6689C3                  	mov	ebx, eax
  1908 0000059B 66B800000000            	mov	eax, 0
  1909 000005A1 6689DE                  	mov	esi, ebx
  1910 000005A4 66C1CE04                	ror	esi, 4
  1911 000005A8 8EDE                    	mov	ds, si
  1912 000005AA 66C1EE1C                	shr	esi, 28
  1913 000005AE 668904                  	mov	[si], eax
  1914                                  ; RPN'ized expression: "( SP_Thread , SS_Thread setThreadStack ) "
  1915                                  ; Expanded expression: " SP_Thread *(2)  SS_Thread *(2)  setThreadStack ()8 "
  1916                                  ; Fused expression:    "( SP_Thread *(2) ax , SS_Thread *(2) ax , setThreadStack )8 "
  1917                                  section .relod
  1918 00000090 [B3050000]              	dd	L92
  1919                                  section .text
  1920 000005B1 66B8                    	db	0x66, 0xB8
  1921                                  L92:
  1922 000005B3 [00000000]              	dd	_SP_Thread
  1923 000005B7 6689C3                  	mov	ebx, eax
  1924 000005BA 6689DE                  	mov	esi, ebx
  1925 000005BD 66C1CE04                	ror	esi, 4
  1926 000005C1 8EDE                    	mov	ds, si
  1927 000005C3 66C1EE1C                	shr	esi, 28
  1928 000005C7 8B04                    	mov	ax, [si]
  1929 000005C9 660FB7C0                	movzx	eax, ax
  1930 000005CD 6650                    	push	eax
  1931                                  section .relod
  1932 00000094 [D1050000]              	dd	L93
  1933                                  section .text
  1934 000005CF 66B8                    	db	0x66, 0xB8
  1935                                  L93:
  1936 000005D1 [00000000]              	dd	_SS_Thread
  1937 000005D5 6689C3                  	mov	ebx, eax
  1938 000005D8 6689DE                  	mov	esi, ebx
  1939 000005DB 66C1CE04                	ror	esi, 4
  1940 000005DF 8EDE                    	mov	ds, si
  1941 000005E1 66C1EE1C                	shr	esi, 28
  1942 000005E5 8B04                    	mov	ax, [si]
  1943 000005E7 660FB7C0                	movzx	eax, ax
  1944 000005EB 6650                    	push	eax
  1945 000005ED 9A                      	db	0x9A
  1946                                  section .relot
  1947 00000004 [EE050000]              	dd	L94
  1948                                  section .text
  1949                                  L94:
  1950 000005EE [00000000]              	dd	_setThreadStack
  1951 000005F2 83ECF8                  	sub	sp, -8
  1952 000005F5 1F                         pop ds 
  1953 000005F6 07                         pop es 
  1954 000005F7 6661                       popad  
  1955 000005F9 CF                         iret   
  1956                                  
  1957                                  ; return
  1958                                  ; RPN'ized expression: "0 "
  1959                                  ; Expanded expression: "0 "
  1960                                  ; Expression value: 0
  1961                                  ; Fused expression:    "0  "
  1962 000005FA 66B800000000            	mov	eax, 0
  1963                                  L59:
  1964 00000600 66                      	db	0x66
  1965 00000601 C9                      	leave
  1966 00000602 CB                      	retf
  1967                                  L95:
  1968                                  
  1969                                  section .fxnsz
  1970 00000018 50030000                	dd	L95 - _activarThread
  1971                                  
  1972                                  ; glb salvarThread : (void) void
  1973                                  section .text
  1974                                  	global	_salvarThread
  1975                                  _salvarThread:
  1976 00000603 6655                    	push	ebp
  1977 00000605 660FB7EC                	movzx	ebp, sp
  1978                                  	;sub	sp,          0
  1979                                  ; loc     <something> : * union <something>
  1980                                  ; loc     <something> : unsigned
  1981                                  ; loc     <something> : unsigned
  1982                                  ; RPN'ized expression: "descThread indThreadActual + *u &u trama -> *u SS_Thread (something99) 4 << SP_Thread (something100) + (something98) = "
  1983                                  ; Expanded expression: "descThread indThreadActual *(4) 40 * + 12 + SS_Thread *(2) 4 << SP_Thread *(2) + =(4) "
  1984                                  ; Fused expression:    "descThread push-ax indThreadActual * *ax 40 + *sp ax + ax 12 push-ax SS_Thread << *ax 4 push-ax SP_Thread + *sp *ax =(204) **sp ax "
  1985                                  section .relod
  1986 00000098 [0B060000]              	dd	L101
  1987                                  section .text
  1988 00000609 66B8                    	db	0x66, 0xB8
  1989                                  L101:
  1990 0000060B [40120000]              	dd	_descThread
  1991 0000060F 6650                    	push	eax
  1992                                  section .relod
  1993 0000009C [13060000]              	dd	L102
  1994                                  section .text
  1995 00000611 66B8                    	db	0x66, 0xB8
  1996                                  L102:
  1997 00000613 [3C000000]              	dd	_indThreadActual
  1998 00000617 6689C3                  	mov	ebx, eax
  1999 0000061A 6689DE                  	mov	esi, ebx
  2000 0000061D 66C1CE04                	ror	esi, 4
  2001 00000621 8EDE                    	mov	ds, si
  2002 00000623 66C1EE1C                	shr	esi, 28
  2003 00000627 668B04                  	mov	eax, [si]
  2004 0000062A 666BC028                	imul	eax, eax, 40
  2005 0000062E 6689C1                  	mov	ecx, eax
  2006 00000631 6658                    	pop	eax
  2007 00000633 6601C8                  	add	eax, ecx
  2008 00000636 6683C00C                	add	eax, 12
  2009 0000063A 6650                    	push	eax
  2010                                  section .relod
  2011 000000A0 [3E060000]              	dd	L103
  2012                                  section .text
  2013 0000063C 66B8                    	db	0x66, 0xB8
  2014                                  L103:
  2015 0000063E [00000000]              	dd	_SS_Thread
  2016 00000642 6689C3                  	mov	ebx, eax
  2017 00000645 6689DE                  	mov	esi, ebx
  2018 00000648 66C1CE04                	ror	esi, 4
  2019 0000064C 8EDE                    	mov	ds, si
  2020 0000064E 66C1EE1C                	shr	esi, 28
  2021 00000652 8B04                    	mov	ax, [si]
  2022 00000654 660FB7C0                	movzx	eax, ax
  2023 00000658 66C1E004                	shl	eax, 4
  2024 0000065C 6650                    	push	eax
  2025                                  section .relod
  2026 000000A4 [60060000]              	dd	L104
  2027                                  section .text
  2028 0000065E 66B8                    	db	0x66, 0xB8
  2029                                  L104:
  2030 00000660 [00000000]              	dd	_SP_Thread
  2031 00000664 6689C3                  	mov	ebx, eax
  2032 00000667 6689DE                  	mov	esi, ebx
  2033 0000066A 66C1CE04                	ror	esi, 4
  2034 0000066E 8EDE                    	mov	ds, si
  2035 00000670 66C1EE1C                	shr	esi, 28
  2036 00000674 660FB70C                	movzx	ecx, word [si]
  2037 00000678 6658                    	pop	eax
  2038 0000067A 6601C8                  	add	eax, ecx
  2039 0000067D 665B                    	pop	ebx
  2040 0000067F 6689DE                  	mov	esi, ebx
  2041 00000682 66C1CE04                	ror	esi, 4
  2042 00000686 8EDE                    	mov	ds, si
  2043 00000688 66C1EE1C                	shr	esi, 28
  2044 0000068C 668904                  	mov	[si], eax
  2045                                  L96:
  2046 0000068F 66                      	db	0x66
  2047 00000690 C9                      	leave
  2048 00000691 CB                      	retf
  2049                                  L105:
  2050                                  
  2051                                  section .fxnsz
  2052 0000001C 8F000000                	dd	L105 - _salvarThread
  2053                                  
  2054                                  ; glb salvarTareaInterrumpida : (void) void
  2055                                  section .text
  2056                                  	global	_salvarTareaInterrumpida
  2057                                  _salvarTareaInterrumpida:
  2058 00000692 6655                    	push	ebp
  2059 00000694 660FB7EC                	movzx	ebp, sp
  2060                                  	;sub	sp,          0
  2061                                  ; loc     <something> : * union <something>
  2062                                  ; loc     <something> : unsigned
  2063                                  ; loc     <something> : unsigned
  2064                                  ; RPN'ized expression: "descThread indThreadActual + *u &u trama -> *u SS_Tarea (something109) 4 << SP_Tarea (something110) + (something108) = "
  2065                                  ; Expanded expression: "descThread indThreadActual *(4) 40 * + 12 + SS_Tarea *(2) 4 << SP_Tarea *(2) + =(4) "
  2066                                  ; Fused expression:    "descThread push-ax indThreadActual * *ax 40 + *sp ax + ax 12 push-ax SS_Tarea << *ax 4 push-ax SP_Tarea + *sp *ax =(204) **sp ax "
  2067                                  section .relod
  2068 000000A8 [9A060000]              	dd	L111
  2069                                  section .text
  2070 00000698 66B8                    	db	0x66, 0xB8
  2071                                  L111:
  2072 0000069A [40120000]              	dd	_descThread
  2073 0000069E 6650                    	push	eax
  2074                                  section .relod
  2075 000000AC [A2060000]              	dd	L112
  2076                                  section .text
  2077 000006A0 66B8                    	db	0x66, 0xB8
  2078                                  L112:
  2079 000006A2 [3C000000]              	dd	_indThreadActual
  2080 000006A6 6689C3                  	mov	ebx, eax
  2081 000006A9 6689DE                  	mov	esi, ebx
  2082 000006AC 66C1CE04                	ror	esi, 4
  2083 000006B0 8EDE                    	mov	ds, si
  2084 000006B2 66C1EE1C                	shr	esi, 28
  2085 000006B6 668B04                  	mov	eax, [si]
  2086 000006B9 666BC028                	imul	eax, eax, 40
  2087 000006BD 6689C1                  	mov	ecx, eax
  2088 000006C0 6658                    	pop	eax
  2089 000006C2 6601C8                  	add	eax, ecx
  2090 000006C5 6683C00C                	add	eax, 12
  2091 000006C9 6650                    	push	eax
  2092                                  section .relod
  2093 000000B0 [CD060000]              	dd	L113
  2094                                  section .text
  2095 000006CB 66B8                    	db	0x66, 0xB8
  2096                                  L113:
  2097 000006CD [00000000]              	dd	_SS_Tarea
  2098 000006D1 6689C3                  	mov	ebx, eax
  2099 000006D4 6689DE                  	mov	esi, ebx
  2100 000006D7 66C1CE04                	ror	esi, 4
  2101 000006DB 8EDE                    	mov	ds, si
  2102 000006DD 66C1EE1C                	shr	esi, 28
  2103 000006E1 8B04                    	mov	ax, [si]
  2104 000006E3 660FB7C0                	movzx	eax, ax
  2105 000006E7 66C1E004                	shl	eax, 4
  2106 000006EB 6650                    	push	eax
  2107                                  section .relod
  2108 000000B4 [EF060000]              	dd	L114
  2109                                  section .text
  2110 000006ED 66B8                    	db	0x66, 0xB8
  2111                                  L114:
  2112 000006EF [00000000]              	dd	_SP_Tarea
  2113 000006F3 6689C3                  	mov	ebx, eax
  2114 000006F6 6689DE                  	mov	esi, ebx
  2115 000006F9 66C1CE04                	ror	esi, 4
  2116 000006FD 8EDE                    	mov	ds, si
  2117 000006FF 66C1EE1C                	shr	esi, 28
  2118 00000703 660FB70C                	movzx	ecx, word [si]
  2119 00000707 6658                    	pop	eax
  2120 00000709 6601C8                  	add	eax, ecx
  2121 0000070C 665B                    	pop	ebx
  2122 0000070E 6689DE                  	mov	esi, ebx
  2123 00000711 66C1CE04                	ror	esi, 4
  2124 00000715 8EDE                    	mov	ds, si
  2125 00000717 66C1EE1C                	shr	esi, 28
  2126 0000071B 668904                  	mov	[si], eax
  2127                                  L106:
  2128 0000071E 66                      	db	0x66
  2129 0000071F C9                      	leave
  2130 00000720 CB                      	retf
  2131                                  L115:
  2132                                  
  2133                                  section .fxnsz
  2134 00000020 8F000000                	dd	L115 - _salvarTareaInterrumpida
  2135                                  
  2136                                  ; glb ponerNumeroHex : (
  2137                                  ; prm     num : unsigned short
  2138                                  ; prm     str : * * char
  2139                                  ;     ) void
  2140                                  section .text
  2141                                  	global	_ponerNumeroHex
  2142                                  _ponerNumeroHex:
  2143 00000721 6655                    	push	ebp
  2144 00000723 660FB7EC                	movzx	ebp, sp
  2145 00000727 83EC04                  	 sub	sp,          4
  2146                                  ; loc     num : (@8): unsigned short
  2147                                  ; loc     str : (@12): * * char
  2148                                  ; loc     d : (@-4): unsigned short
  2149                                  ; RPN'ized expression: "d 4096 = "
  2150                                  ; Expanded expression: "(@-4) 4096 =(2) "
  2151                                  ; Fused expression:    "=(204) *(@-4) 4096 "
  2152 0000072A 66B800100000            	mov	eax, 4096
  2153 00000730 668946FC                	mov	[bp-4], eax
  2154                                  ; if
  2155                                  ; RPN'ized expression: "num 0 == "
  2156                                  ; Expanded expression: "(@8) *(2) 0 == "
  2157                                  ; Fused expression:    "== *(@8) 0 IF! "
  2158 00000734 8B4608                  	mov	ax, [bp+8]
  2159 00000737 660FB7C0                	movzx	eax, ax
  2160 0000073B 6683F800                	cmp	eax, 0
  2161 0000073F 7539                    	jne	L118
  2162                                  ; RPN'ized expression: "str *u ++p *u 48 = "
  2163                                  ; Expanded expression: "(@12) *(4) ++p(4) 48 =(-1) "
  2164                                  ; Fused expression:    "*(4) (@12) ++p(4) *ax =(124) *ax 48 "
  2165 00000741 668B460C                	mov	eax, [bp+12]
  2166 00000745 6689C3                  	mov	ebx, eax
  2167 00000748 6689DE                  	mov	esi, ebx
  2168 0000074B 66C1CE04                	ror	esi, 4
  2169 0000074F 8EDE                    	mov	ds, si
  2170 00000751 66C1EE1C                	shr	esi, 28
  2171 00000755 668B04                  	mov	eax, [si]
  2172 00000758 66FF04                  	inc	dword [si]
  2173 0000075B 6689C3                  	mov	ebx, eax
  2174 0000075E 66B830000000            	mov	eax, 48
  2175 00000764 6689DE                  	mov	esi, ebx
  2176 00000767 66C1CE04                	ror	esi, 4
  2177 0000076B 8EDE                    	mov	ds, si
  2178 0000076D 66C1EE1C                	shr	esi, 28
  2179 00000771 8804                    	mov	[si], al
  2180 00000773 660FBEC0                	movsx	eax, al
  2181 00000777 E9D200                  	jmp	L119
  2182                                  L118:
  2183                                  ; else
  2184                                  ; {
  2185                                  ; while
  2186                                  ; RPN'ized expression: "num d / 0 == "
  2187                                  ; Expanded expression: "(@8) *(2) (@-4) *(2) / 0 == "
  2188                                  L120:
  2189                                  ; Fused expression:    "/ *(@8) *(@-4) == ax 0 IF! "
  2190 0000077A 8B4608                  	mov	ax, [bp+8]
  2191 0000077D 660FB7C0                	movzx	eax, ax
  2192 00000781 6699                    	cdq
  2193 00000783 660FB74EFC              	movzx	ecx, word [bp-4]
  2194 00000788 66F7F9                  	idiv	ecx
  2195 0000078B 6683F800                	cmp	eax, 0
  2196 0000078F 7514                    	jne	L121
  2197                                  ; RPN'ized expression: "d d 4 >> = "
  2198                                  ; Expanded expression: "(@-4) (@-4) *(2) 4 >> =(2) "
  2199                                  ; Fused expression:    ">> *(@-4) 4 =(172) *(@-4) ax "
  2200 00000791 8B46FC                  	mov	ax, [bp-4]
  2201 00000794 660FB7C0                	movzx	eax, ax
  2202 00000798 66C1F804                	sar	eax, 4
  2203 0000079C 8946FC                  	mov	[bp-4], ax
  2204 0000079F 660FB7C0                	movzx	eax, ax
  2205 000007A3 EBD5                    	jmp	L120
  2206                                  L121:
  2207                                  ; while
  2208                                  ; RPN'ized expression: "d 0 > "
  2209                                  ; Expanded expression: "(@-4) *(2) 0 > "
  2210                                  L122:
  2211                                  ; Fused expression:    "> *(@-4) 0 IF! "
  2212 000007A5 8B46FC                  	mov	ax, [bp-4]
  2213 000007A8 660FB7C0                	movzx	eax, ax
  2214 000007AC 6683F800                	cmp	eax, 0
  2215 000007B0 0F8E9800                	jle	L123
  2216                                  ; {
  2217                                  ; RPN'ized expression: "str *u ++p *u dig num d / + *u = "
  2218                                  ; Expanded expression: "(@12) *(4) ++p(4) dig (@8) *(2) (@-4) *(2) / + *(-1) =(-1) "
  2219                                  ; Fused expression:    "*(4) (@12) ++p(4) *ax push-ax dig push-ax / *(@8) *(@-4) + *sp ax =(119) **sp *ax "
  2220 000007B4 668B460C                	mov	eax, [bp+12]
  2221 000007B8 6689C3                  	mov	ebx, eax
  2222 000007BB 6689DE                  	mov	esi, ebx
  2223 000007BE 66C1CE04                	ror	esi, 4
  2224 000007C2 8EDE                    	mov	ds, si
  2225 000007C4 66C1EE1C                	shr	esi, 28
  2226 000007C8 668B04                  	mov	eax, [si]
  2227 000007CB 66FF04                  	inc	dword [si]
  2228 000007CE 6650                    	push	eax
  2229                                  section .relod
  2230 000000B8 [D2070000]              	dd	L124
  2231                                  section .text
  2232 000007D0 66B8                    	db	0x66, 0xB8
  2233                                  L124:
  2234 000007D2 [00000000]              	dd	_dig
  2235 000007D6 6650                    	push	eax
  2236 000007D8 8B4608                  	mov	ax, [bp+8]
  2237 000007DB 660FB7C0                	movzx	eax, ax
  2238 000007DF 6699                    	cdq
  2239 000007E1 660FB74EFC              	movzx	ecx, word [bp-4]
  2240 000007E6 66F7F9                  	idiv	ecx
  2241 000007E9 6689C1                  	mov	ecx, eax
  2242 000007EC 6658                    	pop	eax
  2243 000007EE 6601C8                  	add	eax, ecx
  2244 000007F1 6689C3                  	mov	ebx, eax
  2245 000007F4 6689DE                  	mov	esi, ebx
  2246 000007F7 66C1CE04                	ror	esi, 4
  2247 000007FB 8EDE                    	mov	ds, si
  2248 000007FD 66C1EE1C                	shr	esi, 28
  2249 00000801 8A04                    	mov	al, [si]
  2250 00000803 660FBEC0                	movsx	eax, al
  2251 00000807 665B                    	pop	ebx
  2252 00000809 6689DE                  	mov	esi, ebx
  2253 0000080C 66C1CE04                	ror	esi, 4
  2254 00000810 8EDE                    	mov	ds, si
  2255 00000812 66C1EE1C                	shr	esi, 28
  2256 00000816 8804                    	mov	[si], al
  2257 00000818 660FBEC0                	movsx	eax, al
  2258                                  ; RPN'ized expression: "num num d % = "
  2259                                  ; Expanded expression: "(@8) (@8) *(2) (@-4) *(2) % =(2) "
  2260                                  ; Fused expression:    "% *(@8) *(@-4) =(172) *(@8) ax "
  2261 0000081C 8B4608                  	mov	ax, [bp+8]
  2262 0000081F 660FB7C0                	movzx	eax, ax
  2263 00000823 6699                    	cdq
  2264 00000825 660FB74EFC              	movzx	ecx, word [bp-4]
  2265 0000082A 66F7F9                  	idiv	ecx
  2266 0000082D 6689D0                  	mov	eax, edx
  2267 00000830 894608                  	mov	[bp+8], ax
  2268 00000833 660FB7C0                	movzx	eax, ax
  2269                                  ; RPN'ized expression: "d d 4 >> = "
  2270                                  ; Expanded expression: "(@-4) (@-4) *(2) 4 >> =(2) "
  2271                                  ; Fused expression:    ">> *(@-4) 4 =(172) *(@-4) ax "
  2272 00000837 8B46FC                  	mov	ax, [bp-4]
  2273 0000083A 660FB7C0                	movzx	eax, ax
  2274 0000083E 66C1F804                	sar	eax, 4
  2275 00000842 8946FC                  	mov	[bp-4], ax
  2276 00000845 660FB7C0                	movzx	eax, ax
  2277                                  ; }
  2278 00000849 E959FF                  	jmp	L122
  2279                                  L123:
  2280                                  ; }
  2281                                  L119:
  2282                                  L116:
  2283 0000084C 66                      	db	0x66
  2284 0000084D C9                      	leave
  2285 0000084E CB                      	retf
  2286                                  L125:
  2287                                  
  2288                                  section .fxnsz
  2289 00000024 2E010000                	dd	L125 - _ponerNumeroHex
  2290                                  
  2291                                  ; glb ponerNumero : (
  2292                                  ; prm     num : unsigned short
  2293                                  ; prm     str : * * char
  2294                                  ;     ) void
  2295                                  section .text
  2296                                  	global	_ponerNumero
  2297                                  _ponerNumero:
  2298 0000084F 6655                    	push	ebp
  2299 00000851 660FB7EC                	movzx	ebp, sp
  2300 00000855 83EC04                  	 sub	sp,          4
  2301                                  ; loc     num : (@8): unsigned short
  2302                                  ; loc     str : (@12): * * char
  2303                                  ; loc     d : (@-4): unsigned short
  2304                                  ; RPN'ized expression: "d 10000 = "
  2305                                  ; Expanded expression: "(@-4) 10000 =(2) "
  2306                                  ; Fused expression:    "=(204) *(@-4) 10000 "
  2307 00000858 66B810270000            	mov	eax, 10000
  2308 0000085E 668946FC                	mov	[bp-4], eax
  2309                                  ; if
  2310                                  ; RPN'ized expression: "num 0 == "
  2311                                  ; Expanded expression: "(@8) *(2) 0 == "
  2312                                  ; Fused expression:    "== *(@8) 0 IF! "
  2313 00000862 8B4608                  	mov	ax, [bp+8]
  2314 00000865 660FB7C0                	movzx	eax, ax
  2315 00000869 6683F800                	cmp	eax, 0
  2316 0000086D 7539                    	jne	L128
  2317                                  ; RPN'ized expression: "str *u ++p *u 48 = "
  2318                                  ; Expanded expression: "(@12) *(4) ++p(4) 48 =(-1) "
  2319                                  ; Fused expression:    "*(4) (@12) ++p(4) *ax =(124) *ax 48 "
  2320 0000086F 668B460C                	mov	eax, [bp+12]
  2321 00000873 6689C3                  	mov	ebx, eax
  2322 00000876 6689DE                  	mov	esi, ebx
  2323 00000879 66C1CE04                	ror	esi, 4
  2324 0000087D 8EDE                    	mov	ds, si
  2325 0000087F 66C1EE1C                	shr	esi, 28
  2326 00000883 668B04                  	mov	eax, [si]
  2327 00000886 66FF04                  	inc	dword [si]
  2328 00000889 6689C3                  	mov	ebx, eax
  2329 0000088C 66B830000000            	mov	eax, 48
  2330 00000892 6689DE                  	mov	esi, ebx
  2331 00000895 66C1CE04                	ror	esi, 4
  2332 00000899 8EDE                    	mov	ds, si
  2333 0000089B 66C1EE1C                	shr	esi, 28
  2334 0000089F 8804                    	mov	[si], al
  2335 000008A1 660FBEC0                	movsx	eax, al
  2336 000008A5 E9C600                  	jmp	L129
  2337                                  L128:
  2338                                  ; else
  2339                                  ; {
  2340                                  ; while
  2341                                  ; RPN'ized expression: "num d / 0 == "
  2342                                  ; Expanded expression: "(@8) *(2) (@-4) *(2) / 0 == "
  2343                                  L130:
  2344                                  ; Fused expression:    "/ *(@8) *(@-4) == ax 0 IF! "
  2345 000008A8 8B4608                  	mov	ax, [bp+8]
  2346 000008AB 660FB7C0                	movzx	eax, ax
  2347 000008AF 6699                    	cdq
  2348 000008B1 660FB74EFC              	movzx	ecx, word [bp-4]
  2349 000008B6 66F7F9                  	idiv	ecx
  2350 000008B9 6683F800                	cmp	eax, 0
  2351 000008BD 751B                    	jne	L131
  2352                                  ; RPN'ized expression: "d d 10 / = "
  2353                                  ; Expanded expression: "(@-4) (@-4) *(2) 10 / =(2) "
  2354                                  ; Fused expression:    "/ *(@-4) 10 =(172) *(@-4) ax "
  2355 000008BF 8B46FC                  	mov	ax, [bp-4]
  2356 000008C2 660FB7C0                	movzx	eax, ax
  2357 000008C6 6699                    	cdq
  2358 000008C8 66B90A000000            	mov	ecx, 10
  2359 000008CE 66F7F9                  	idiv	ecx
  2360 000008D1 8946FC                  	mov	[bp-4], ax
  2361 000008D4 660FB7C0                	movzx	eax, ax
  2362 000008D8 EBCE                    	jmp	L130
  2363                                  L131:
  2364                                  ; while
  2365                                  ; RPN'ized expression: "d 0 > "
  2366                                  ; Expanded expression: "(@-4) *(2) 0 > "
  2367                                  L132:
  2368                                  ; Fused expression:    "> *(@-4) 0 IF! "
  2369 000008DA 8B46FC                  	mov	ax, [bp-4]
  2370 000008DD 660FB7C0                	movzx	eax, ax
  2371 000008E1 6683F800                	cmp	eax, 0
  2372 000008E5 0F8E8500                	jle	L133
  2373                                  ; {
  2374                                  ; RPN'ized expression: "str *u ++p *u 48 num d / + = "
  2375                                  ; Expanded expression: "(@12) *(4) ++p(4) 48 (@8) *(2) (@-4) *(2) / + =(-1) "
  2376                                  ; Fused expression:    "*(4) (@12) ++p(4) *ax push-ax / *(@8) *(@-4) + 48 ax =(124) **sp ax "
  2377 000008E9 668B460C                	mov	eax, [bp+12]
  2378 000008ED 6689C3                  	mov	ebx, eax
  2379 000008F0 6689DE                  	mov	esi, ebx
  2380 000008F3 66C1CE04                	ror	esi, 4
  2381 000008F7 8EDE                    	mov	ds, si
  2382 000008F9 66C1EE1C                	shr	esi, 28
  2383 000008FD 668B04                  	mov	eax, [si]
  2384 00000900 66FF04                  	inc	dword [si]
  2385 00000903 6650                    	push	eax
  2386 00000905 8B4608                  	mov	ax, [bp+8]
  2387 00000908 660FB7C0                	movzx	eax, ax
  2388 0000090C 6699                    	cdq
  2389 0000090E 660FB74EFC              	movzx	ecx, word [bp-4]
  2390 00000913 66F7F9                  	idiv	ecx
  2391 00000916 6689C1                  	mov	ecx, eax
  2392 00000919 66B830000000            	mov	eax, 48
  2393 0000091F 6601C8                  	add	eax, ecx
  2394 00000922 665B                    	pop	ebx
  2395 00000924 6689DE                  	mov	esi, ebx
  2396 00000927 66C1CE04                	ror	esi, 4
  2397 0000092B 8EDE                    	mov	ds, si
  2398 0000092D 66C1EE1C                	shr	esi, 28
  2399 00000931 8804                    	mov	[si], al
  2400 00000933 660FBEC0                	movsx	eax, al
  2401                                  ; RPN'ized expression: "num num d % = "
  2402                                  ; Expanded expression: "(@8) (@8) *(2) (@-4) *(2) % =(2) "
  2403                                  ; Fused expression:    "% *(@8) *(@-4) =(172) *(@8) ax "
  2404 00000937 8B4608                  	mov	ax, [bp+8]
  2405 0000093A 660FB7C0                	movzx	eax, ax
  2406 0000093E 6699                    	cdq
  2407 00000940 660FB74EFC              	movzx	ecx, word [bp-4]
  2408 00000945 66F7F9                  	idiv	ecx
  2409 00000948 6689D0                  	mov	eax, edx
  2410 0000094B 894608                  	mov	[bp+8], ax
  2411 0000094E 660FB7C0                	movzx	eax, ax
  2412                                  ; RPN'ized expression: "d d 10 / = "
  2413                                  ; Expanded expression: "(@-4) (@-4) *(2) 10 / =(2) "
  2414                                  ; Fused expression:    "/ *(@-4) 10 =(172) *(@-4) ax "
  2415 00000952 8B46FC                  	mov	ax, [bp-4]
  2416 00000955 660FB7C0                	movzx	eax, ax
  2417 00000959 6699                    	cdq
  2418 0000095B 66B90A000000            	mov	ecx, 10
  2419 00000961 66F7F9                  	idiv	ecx
  2420 00000964 8946FC                  	mov	[bp-4], ax
  2421 00000967 660FB7C0                	movzx	eax, ax
  2422                                  ; }
  2423 0000096B E96CFF                  	jmp	L132
  2424                                  L133:
  2425                                  ; }
  2426                                  L129:
  2427                                  L126:
  2428 0000096E 66                      	db	0x66
  2429 0000096F C9                      	leave
  2430 00000970 CB                      	retf
  2431                                  L134:
  2432                                  
  2433                                  section .fxnsz
  2434 00000028 22010000                	dd	L134 - _ponerNumero
  2435                                  
  2436                                  ; glb ponerArgs : (
  2437                                  ; prm     pindx : int
  2438                                  ; prm     DSProc : unsigned short
  2439                                  ; prm     offDATADS : unsigned short
  2440                                  ; prm     offArgv : * unsigned short
  2441                                  ;     ) int
  2442                                  section .text
  2443                                  _ponerArgs:
  2444 00000971 6655                    	push	ebp
  2445 00000973 660FB7EC                	movzx	ebp, sp
  2446 00000977 83EC18                  	 sub	sp,         24
  2447                                  ; loc     pindx : (@8): int
  2448                                  ; loc     DSProc : (@12): unsigned short
  2449                                  ; loc     offDATADS : (@16): unsigned short
  2450                                  ; loc     offArgv : (@20): * unsigned short
  2451                                  ; loc     i : (@-4): int
  2452                                  ; RPN'ized expression: "i 0 = "
  2453                                  ; Expanded expression: "(@-4) 0 =(4) "
  2454                                  ; Fused expression:    "=(204) *(@-4) 0 "
  2455 0000097A 66B800000000            	mov	eax, 0
  2456 00000980 668946FC                	mov	[bp-4], eax
  2457                                  ; loc     argc : (@-8): int
  2458                                  ; RPN'ized expression: "argc 0 = "
  2459                                  ; Expanded expression: "(@-8) 0 =(4) "
  2460                                  ; Fused expression:    "=(204) *(@-8) 0 "
  2461 00000984 66B800000000            	mov	eax, 0
  2462 0000098A 668946F8                	mov	[bp-8], eax
  2463                                  ; loc     car : (@-12): char
  2464                                  ; loc     estadoBlanco : (@-16): int
  2465                                  ; RPN'ized expression: "estadoBlanco TRUE = "
  2466                                  ; Expanded expression: "(@-16) 1 =(4) "
  2467                                  ; Fused expression:    "=(204) *(@-16) 1 "
  2468 0000098E 66B801000000            	mov	eax, 1
  2469 00000994 668946F0                	mov	[bp-16], eax
  2470                                  ; loc     ptrCmdLine : (@-20): * unsigned char
  2471                                  ; loc     ptrArgv : (@-24): * * char
  2472                                  ; RPN'ized expression: "ptrCmdLine ( offDATADS 1 + , DSProc pointer ) = "
  2473                                  ; Expanded expression: "(@-20)  (@16) *(2) 1 +  (@12) *(2)  pointer ()8 =(4) "
  2474                                  ; Fused expression:    "( + *(@16) 1 , *(2) (@12) , pointer )8 =(204) *(@-20) ax "
  2475 00000998 8B4610                  	mov	ax, [bp+16]
  2476 0000099B 660FB7C0                	movzx	eax, ax
  2477 0000099F 6640                    	inc	eax
  2478 000009A1 6650                    	push	eax
  2479 000009A3 8B460C                  	mov	ax, [bp+12]
  2480 000009A6 660FB7C0                	movzx	eax, ax
  2481 000009AA 6650                    	push	eax
  2482 000009AC 9A                      	db	0x9A
  2483                                  section .relot
  2484 00000008 [AD090000]              	dd	L137
  2485                                  section .text
  2486                                  L137:
  2487 000009AD [00000000]              	dd	_pointer
  2488 000009B1 83ECF8                  	sub	sp, -8
  2489 000009B4 668946EC                	mov	[bp-20], eax
  2490                                  ; while
  2491                                  ; loc     <something> : char
  2492                                  ; RPN'ized expression: "car ptrCmdLine i + *u = 0 (something140) != "
  2493                                  ; Expanded expression: "(@-12) (@-20) *(4) (@-4) *(4) + *(1) =(-1) 0 != "
  2494                                  L138:
  2495                                  ; Fused expression:    "+ *(@-20) *(@-4) =(121) *(@-12) *ax != ax 0 IF! "
  2496 000009B8 668B46EC                	mov	eax, [bp-20]
  2497 000009BC 660346FC                	add	eax, [bp-4]
  2498 000009C0 6689C3                  	mov	ebx, eax
  2499 000009C3 6689DE                  	mov	esi, ebx
  2500 000009C6 66C1CE04                	ror	esi, 4
  2501 000009CA 8EDE                    	mov	ds, si
  2502 000009CC 66C1EE1C                	shr	esi, 28
  2503 000009D0 8A04                    	mov	al, [si]
  2504 000009D2 660FB6C0                	movzx	eax, al
  2505 000009D6 8846F4                  	mov	[bp-12], al
  2506 000009D9 660FBEC0                	movsx	eax, al
  2507 000009DD 6683F800                	cmp	eax, 0
  2508 000009E1 0F84C700                	je	L139
  2509                                  ; {
  2510                                  ; switch
  2511                                  ; RPN'ized expression: "estadoBlanco "
  2512                                  ; Expanded expression: "(@-16) *(4) "
  2513                                  ; Fused expression:    "*(4) (@-16)  "
  2514 000009E5 668B46F0                	mov	eax, [bp-16]
  2515 000009E9 E9A700                  	jmp	L142
  2516                                  ; {
  2517                                  ; case
  2518                                  ; RPN'ized expression: "TRUE "
  2519                                  ; Expanded expression: "1 "
  2520                                  ; Expression value: 1
  2521                                  L143:
  2522                                  ; if
  2523                                  ; RPN'ized expression: "car 32 != "
  2524                                  ; Expanded expression: "(@-12) *(-1) 32 != "
  2525                                  ; Fused expression:    "!= *(@-12) 32 IF! "
  2526 000009EC 8A46F4                  	mov	al, [bp-12]
  2527 000009EF 660FBEC0                	movsx	eax, al
  2528 000009F3 6683F820                	cmp	eax, 32
  2529 000009F7 745D                    	je	L144
  2530                                  ; {
  2531                                  ; if
  2532                                  ; RPN'ized expression: "argc 20 >= "
  2533                                  ; Expanded expression: "(@-8) *(4) 20 >= "
  2534                                  ; Fused expression:    ">= *(@-8) 20 IF! "
  2535 000009F9 668B46F8                	mov	eax, [bp-8]
  2536 000009FD 6683F814                	cmp	eax, 20
  2537 00000A01 7C09                    	jl	L146
  2538                                  ; return
  2539                                  ; RPN'ized expression: "1 -u "
  2540                                  ; Expanded expression: "-1 "
  2541                                  ; Expression value: -1
  2542                                  ; Fused expression:    "-1  "
  2543 00000A03 66B8FFFFFFFF            	mov	eax, -1
  2544 00000A09 E9A400                  	jmp	L135
  2545                                  L146:
  2546                                  ; RPN'ized expression: "estadoBlanco FALSE = "
  2547                                  ; Expanded expression: "(@-16) 0 =(4) "
  2548                                  ; Fused expression:    "=(204) *(@-16) 0 "
  2549 00000A0C 66B800000000            	mov	eax, 0
  2550 00000A12 668946F0                	mov	[bp-16], eax
  2551                                  ; loc                 <something> : * char
  2552                                  ; loc                 <something> : * unsigned char
  2553                                  ; RPN'ized expression: "ptrArgv argc + *u ( ptrCmdLine i + *u &u (something149) off ) (something148) = "
  2554                                  ; Expanded expression: "(@-24) *(4) (@-8) *(4) 4 * +  (@-20) *(4) (@-4) *(4) +  off ()4 =(4) "
  2555                                  ; Fused expression:    "* *(@-8) 4 + *(@-24) ax push-ax ( + *(@-20) *(@-4) , off )4 =(204) **sp ax "
  2556 00000A16 668B46F8                	mov	eax, [bp-8]
  2557 00000A1A 666BC004                	imul	eax, eax, 4
  2558 00000A1E 6689C1                  	mov	ecx, eax
  2559 00000A21 668B46E8                	mov	eax, [bp-24]
  2560 00000A25 6601C8                  	add	eax, ecx
  2561 00000A28 6650                    	push	eax
  2562 00000A2A 668B46EC                	mov	eax, [bp-20]
  2563 00000A2E 660346FC                	add	eax, [bp-4]
  2564 00000A32 6650                    	push	eax
  2565 00000A34 9A                      	db	0x9A
  2566                                  section .relot
  2567 0000000C [350A0000]              	dd	L150
  2568                                  section .text
  2569                                  L150:
  2570 00000A35 [00000000]              	dd	_off
  2571 00000A39 83ECFC                  	sub	sp, -4
  2572 00000A3C 665B                    	pop	ebx
  2573 00000A3E 6689DE                  	mov	esi, ebx
  2574 00000A41 66C1CE04                	ror	esi, 4
  2575 00000A45 8EDE                    	mov	ds, si
  2576 00000A47 66C1EE1C                	shr	esi, 28
  2577 00000A4B 668904                  	mov	[si], eax
  2578                                  ; RPN'ized expression: "argc ++p "
  2579                                  ; Expanded expression: "(@-8) ++p(4) "
  2580                                  ; Fused expression:    "++p(4) *(@-8) "
  2581 00000A4E 668B46F8                	mov	eax, [bp-8]
  2582 00000A52 66FF46F8                	inc	dword [bp-8]
  2583                                  ; }
  2584                                  L144:
  2585                                  ; case
  2586                                  ; RPN'ized expression: "FALSE "
  2587                                  ; Expanded expression: "0 "
  2588                                  ; Expression value: 0
  2589                                  L151:
  2590                                  ; if
  2591                                  ; RPN'ized expression: "car 32 == "
  2592                                  ; Expanded expression: "(@-12) *(-1) 32 == "
  2593                                  ; Fused expression:    "== *(@-12) 32 IF! "
  2594 00000A56 8A46F4                  	mov	al, [bp-12]
  2595 00000A59 660FBEC0                	movsx	eax, al
  2596 00000A5D 6683F820                	cmp	eax, 32
  2597 00000A61 752E                    	jne	L152
  2598                                  ; {
  2599                                  ; RPN'ized expression: "estadoBlanco TRUE = "
  2600                                  ; Expanded expression: "(@-16) 1 =(4) "
  2601                                  ; Fused expression:    "=(204) *(@-16) 1 "
  2602 00000A63 66B801000000            	mov	eax, 1
  2603 00000A69 668946F0                	mov	[bp-16], eax
  2604                                  ; loc                 <something> : char
  2605                                  ; RPN'ized expression: "ptrCmdLine i + *u 0 (something154) = "
  2606                                  ; Expanded expression: "(@-20) *(4) (@-4) *(4) + 0 =(1) "
  2607                                  ; Fused expression:    "+ *(@-20) *(@-4) =(156) *ax 0 "
  2608 00000A6D 668B46EC                	mov	eax, [bp-20]
  2609 00000A71 660346FC                	add	eax, [bp-4]
  2610 00000A75 6689C3                  	mov	ebx, eax
  2611 00000A78 66B800000000            	mov	eax, 0
  2612 00000A7E 6689DE                  	mov	esi, ebx
  2613 00000A81 66C1CE04                	ror	esi, 4
  2614 00000A85 8EDE                    	mov	ds, si
  2615 00000A87 66C1EE1C                	shr	esi, 28
  2616 00000A8B 8804                    	mov	[si], al
  2617 00000A8D 660FB6C0                	movzx	eax, al
  2618                                  ; }
  2619                                  L152:
  2620                                  ; }
  2621 00000A91 EB0E                    	jmp	L141
  2622                                  L142:
  2623 00000A93 6683F801                	cmp	eax, 1
  2624 00000A97 0F8451FF                	je	L143
  2625 00000A9B 6683F800                	cmp	eax, 0
  2626 00000A9F 74B5                    	je	L151
  2627                                  L141:
  2628                                  ; RPN'ized expression: "i ++p "
  2629                                  ; Expanded expression: "(@-4) ++p(4) "
  2630                                  ; Fused expression:    "++p(4) *(@-4) "
  2631 00000AA1 668B46FC                	mov	eax, [bp-4]
  2632 00000AA5 66FF46FC                	inc	dword [bp-4]
  2633                                  ; }
  2634 00000AA9 E90CFF                  	jmp	L138
  2635                                  L139:
  2636                                  ; return
  2637                                  ; RPN'ized expression: "argc "
  2638                                  ; Expanded expression: "(@-8) *(4) "
  2639                                  ; Fused expression:    "*(4) (@-8)  "
  2640 00000AAC 668B46F8                	mov	eax, [bp-8]
  2641                                  L135:
  2642 00000AB0 66                      	db	0x66
  2643 00000AB1 C9                      	leave
  2644 00000AB2 CB                      	retf
  2645                                  L155:
  2646                                  
  2647                                  section .fxnsz
  2648 0000002C 42010000                	dd	L155 - _ponerArgs
  2649                                  
  2650                                  ; glb registrarEnPOrdenados : (
  2651                                  ; prm     pindx : int
  2652                                  ;     ) void
  2653                                  section .text
  2654                                  	global	_registrarEnPOrdenados
  2655                                  _registrarEnPOrdenados:
  2656 00000AB3 6655                    	push	ebp
  2657 00000AB5 660FB7EC                	movzx	ebp, sp
  2658 00000AB9 83EC10                  	 sub	sp,         16
  2659                                  ; loc     pindx : (@8): int
  2660                                  ; loc     e : (@-4): * struct <something>
  2661                                  ; loc     segmento : (@-8): unsigned short
  2662                                  ; loc     j : (@-12): int
  2663                                  ; loc     ant : (@-16): int
  2664                                  ; RPN'ized expression: "segmento descProceso pindx + *u &u CSProc -> *u = "
  2665                                  ; Expanded expression: "(@-8) descProceso (@8) *(4) 292 * + 52 + *(2) =(2) "
  2666                                  ; Fused expression:    "descProceso push-ax * *(@8) 292 + *sp ax + ax 52 =(170) *(@-8) *ax "
  2667                                  section .relod
  2668 000000BC [BE0A0000]              	dd	L158
  2669                                  section .text
  2670 00000ABC 66B8                    	db	0x66, 0xB8
  2671                                  L158:
  2672 00000ABE [00000000]              	dd	_descProceso
  2673 00000AC2 6650                    	push	eax
  2674 00000AC4 668B4608                	mov	eax, [bp+8]
  2675 00000AC8 6669C024010000          	imul	eax, eax, 292
  2676 00000ACF 6689C1                  	mov	ecx, eax
  2677 00000AD2 6658                    	pop	eax
  2678 00000AD4 6601C8                  	add	eax, ecx
  2679 00000AD7 6683C034                	add	eax, 52
  2680 00000ADB 6689C3                  	mov	ebx, eax
  2681 00000ADE 6689DE                  	mov	esi, ebx
  2682 00000AE1 66C1CE04                	ror	esi, 4
  2683 00000AE5 8EDE                    	mov	ds, si
  2684 00000AE7 66C1EE1C                	shr	esi, 28
  2685 00000AEB 8B04                    	mov	ax, [si]
  2686 00000AED 660FB7C0                	movzx	eax, ax
  2687 00000AF1 8946F8                  	mov	[bp-8], ax
  2688 00000AF4 660FB7C0                	movzx	eax, ax
  2689                                  ; RPN'ized expression: "e c2cPFR POrdenados + *u &u e -> *u = "
  2690                                  ; Expanded expression: "(@-4) c2cPFR 96 + 12 + *(4) =(4) "
  2691                                  ; Fused expression:    "c2cPFR + ax 96 + ax 12 =(204) *(@-4) *ax "
  2692                                  section .relod
  2693 000000C0 [FA0A0000]              	dd	L159
  2694                                  section .text
  2695 00000AF8 66B8                    	db	0x66, 0xB8
  2696                                  L159:
  2697 00000AFA [60540100]              	dd	_c2cPFR
  2698 00000AFE 6683C060                	add	eax, 96
  2699 00000B02 6683C00C                	add	eax, 12
  2700 00000B06 6689C3                  	mov	ebx, eax
  2701 00000B09 6689DE                  	mov	esi, ebx
  2702 00000B0C 66C1CE04                	ror	esi, 4
  2703 00000B10 8EDE                    	mov	ds, si
  2704 00000B12 66C1EE1C                	shr	esi, 28
  2705 00000B16 668B04                  	mov	eax, [si]
  2706 00000B19 668946FC                	mov	[bp-4], eax
  2707                                  ; RPN'ized expression: "j c2cPFR POrdenados + *u &u primero -> *u = "
  2708                                  ; Expanded expression: "(@-12) c2cPFR 96 + 4 + *(4) =(4) "
  2709                                  ; Fused expression:    "c2cPFR + ax 96 + ax 4 =(204) *(@-12) *ax "
  2710                                  section .relod
  2711 000000C4 [1F0B0000]              	dd	L160
  2712                                  section .text
  2713 00000B1D 66B8                    	db	0x66, 0xB8
  2714                                  L160:
  2715 00000B1F [60540100]              	dd	_c2cPFR
  2716 00000B23 6683C060                	add	eax, 96
  2717 00000B27 6683C004                	add	eax, 4
  2718 00000B2B 6689C3                  	mov	ebx, eax
  2719 00000B2E 6689DE                  	mov	esi, ebx
  2720 00000B31 66C1CE04                	ror	esi, 4
  2721 00000B35 8EDE                    	mov	ds, si
  2722 00000B37 66C1EE1C                	shr	esi, 28
  2723 00000B3B 668B04                  	mov	eax, [si]
  2724 00000B3E 668946F4                	mov	[bp-12], eax
  2725                                  ; while
  2726                                  ; RPN'ized expression: "j c2cPFR POrdenados + *u &u cabecera -> *u != descProceso j + *u &u CSProc -> *u segmento < && "
  2727                                  ; Expanded expression: "(@-12) *(4) c2cPFR 96 + 8 + *(4) != [sh&&->163] descProceso (@-12) *(4) 292 * + 52 + *(2) (@-8) *(2) < &&[163] "
  2728                                  L161:
  2729                                  ; Fused expression:    "c2cPFR + ax 96 + ax 8 != *(@-12) *ax [sh&&->163] descProceso push-ax * *(@-12) 292 + *sp ax + ax 52 < *ax *(@-8) &&[163]  "
  2730                                  section .relod
  2731 000000C8 [440B0000]              	dd	L164
  2732                                  section .text
  2733 00000B42 66B8                    	db	0x66, 0xB8
  2734                                  L164:
  2735 00000B44 [60540100]              	dd	_c2cPFR
  2736 00000B48 6683C060                	add	eax, 96
  2737 00000B4C 6683C008                	add	eax, 8
  2738 00000B50 6689C3                  	mov	ebx, eax
  2739 00000B53 6689DE                  	mov	esi, ebx
  2740 00000B56 66C1CE04                	ror	esi, 4
  2741 00000B5A 8EDE                    	mov	ds, si
  2742 00000B5C 66C1EE1C                	shr	esi, 28
  2743 00000B60 668B0C                  	mov	ecx, [si]
  2744 00000B63 668B46F4                	mov	eax, [bp-12]
  2745 00000B67 6639C8                  	cmp	eax, ecx
  2746 00000B6A 0F95C0                  	setne	al
  2747 00000B6D 660FB6C0                	movzx	eax, al
  2748                                  ; JumpIfZero
  2749 00000B71 6685C0                  	test	eax, eax
  2750 00000B74 7444                    	je	L163
  2751                                  section .relod
  2752 000000CC [780B0000]              	dd	L165
  2753                                  section .text
  2754 00000B76 66B8                    	db	0x66, 0xB8
  2755                                  L165:
  2756 00000B78 [00000000]              	dd	_descProceso
  2757 00000B7C 6650                    	push	eax
  2758 00000B7E 668B46F4                	mov	eax, [bp-12]
  2759 00000B82 6669C024010000          	imul	eax, eax, 292
  2760 00000B89 6689C1                  	mov	ecx, eax
  2761 00000B8C 6658                    	pop	eax
  2762 00000B8E 6601C8                  	add	eax, ecx
  2763 00000B91 6683C034                	add	eax, 52
  2764 00000B95 6689C3                  	mov	ebx, eax
  2765 00000B98 6689DE                  	mov	esi, ebx
  2766 00000B9B 66C1CE04                	ror	esi, 4
  2767 00000B9F 8EDE                    	mov	ds, si
  2768 00000BA1 66C1EE1C                	shr	esi, 28
  2769 00000BA5 8B04                    	mov	ax, [si]
  2770 00000BA7 660FB7C0                	movzx	eax, ax
  2771 00000BAB 660FB74EF8              	movzx	ecx, word [bp-8]
  2772 00000BB0 6639C8                  	cmp	eax, ecx
  2773 00000BB3 0F9CC0                  	setl	al
  2774 00000BB6 660FB6C0                	movzx	eax, al
  2775                                  L163:
  2776                                  ; JumpIfZero
  2777 00000BBA 6685C0                  	test	eax, eax
  2778 00000BBD 742C                    	je	L162
  2779                                  ; RPN'ized expression: "j e j + *u &u sig -> *u = "
  2780                                  ; Expanded expression: "(@-12) (@-4) *(4) (@-12) *(4) 12 * + 0 + *(4) =(4) "
  2781                                  ; Fused expression:    "* *(@-12) 12 + *(@-4) ax + ax 0 =(204) *(@-12) *ax "
  2782 00000BBF 668B46F4                	mov	eax, [bp-12]
  2783 00000BC3 666BC00C                	imul	eax, eax, 12
  2784 00000BC7 6689C1                  	mov	ecx, eax
  2785 00000BCA 668B46FC                	mov	eax, [bp-4]
  2786 00000BCE 6601C8                  	add	eax, ecx
  2787 00000BD1 6689C3                  	mov	ebx, eax
  2788 00000BD4 6689DE                  	mov	esi, ebx
  2789 00000BD7 66C1CE04                	ror	esi, 4
  2790 00000BDB 8EDE                    	mov	ds, si
  2791 00000BDD 66C1EE1C                	shr	esi, 28
  2792 00000BE1 668B04                  	mov	eax, [si]
  2793 00000BE4 668946F4                	mov	[bp-12], eax
  2794 00000BE8 E957FF                  	jmp	L161
  2795                                  L162:
  2796                                  ; RPN'ized expression: "ant e j + *u &u ant -> *u = "
  2797                                  ; Expanded expression: "(@-16) (@-4) *(4) (@-12) *(4) 12 * + 4 + *(4) =(4) "
  2798                                  ; Fused expression:    "* *(@-12) 12 + *(@-4) ax + ax 4 =(204) *(@-16) *ax "
  2799 00000BEB 668B46F4                	mov	eax, [bp-12]
  2800 00000BEF 666BC00C                	imul	eax, eax, 12
  2801 00000BF3 6689C1                  	mov	ecx, eax
  2802 00000BF6 668B46FC                	mov	eax, [bp-4]
  2803 00000BFA 6601C8                  	add	eax, ecx
  2804 00000BFD 6683C004                	add	eax, 4
  2805 00000C01 6689C3                  	mov	ebx, eax
  2806 00000C04 6689DE                  	mov	esi, ebx
  2807 00000C07 66C1CE04                	ror	esi, 4
  2808 00000C0B 8EDE                    	mov	ds, si
  2809 00000C0D 66C1EE1C                	shr	esi, 28
  2810 00000C11 668B04                  	mov	eax, [si]
  2811 00000C14 668946F0                	mov	[bp-16], eax
  2812                                  ; RPN'ized expression: "e pindx + *u &u ant -> *u ant = "
  2813                                  ; Expanded expression: "(@-4) *(4) (@8) *(4) 12 * + 4 + (@-16) *(4) =(4) "
  2814                                  ; Fused expression:    "* *(@8) 12 + *(@-4) ax + ax 4 =(204) *ax *(@-16) "
  2815 00000C18 668B4608                	mov	eax, [bp+8]
  2816 00000C1C 666BC00C                	imul	eax, eax, 12
  2817 00000C20 6689C1                  	mov	ecx, eax
  2818 00000C23 668B46FC                	mov	eax, [bp-4]
  2819 00000C27 6601C8                  	add	eax, ecx
  2820 00000C2A 6683C004                	add	eax, 4
  2821 00000C2E 6689C3                  	mov	ebx, eax
  2822 00000C31 668B46F0                	mov	eax, [bp-16]
  2823 00000C35 6689DE                  	mov	esi, ebx
  2824 00000C38 66C1CE04                	ror	esi, 4
  2825 00000C3C 8EDE                    	mov	ds, si
  2826 00000C3E 66C1EE1C                	shr	esi, 28
  2827 00000C42 668904                  	mov	[si], eax
  2828                                  ; RPN'ized expression: "e pindx + *u &u sig -> *u j = "
  2829                                  ; Expanded expression: "(@-4) *(4) (@8) *(4) 12 * + 0 + (@-12) *(4) =(4) "
  2830                                  ; Fused expression:    "* *(@8) 12 + *(@-4) ax + ax 0 =(204) *ax *(@-12) "
  2831 00000C45 668B4608                	mov	eax, [bp+8]
  2832 00000C49 666BC00C                	imul	eax, eax, 12
  2833 00000C4D 6689C1                  	mov	ecx, eax
  2834 00000C50 668B46FC                	mov	eax, [bp-4]
  2835 00000C54 6601C8                  	add	eax, ecx
  2836 00000C57 6689C3                  	mov	ebx, eax
  2837 00000C5A 668B46F4                	mov	eax, [bp-12]
  2838 00000C5E 6689DE                  	mov	esi, ebx
  2839 00000C61 66C1CE04                	ror	esi, 4
  2840 00000C65 8EDE                    	mov	ds, si
  2841 00000C67 66C1EE1C                	shr	esi, 28
  2842 00000C6B 668904                  	mov	[si], eax
  2843                                  ; RPN'ized expression: "e ant + *u &u sig -> *u pindx = "
  2844                                  ; Expanded expression: "(@-4) *(4) (@-16) *(4) 12 * + 0 + (@8) *(4) =(4) "
  2845                                  ; Fused expression:    "* *(@-16) 12 + *(@-4) ax + ax 0 =(204) *ax *(@8) "
  2846 00000C6E 668B46F0                	mov	eax, [bp-16]
  2847 00000C72 666BC00C                	imul	eax, eax, 12
  2848 00000C76 6689C1                  	mov	ecx, eax
  2849 00000C79 668B46FC                	mov	eax, [bp-4]
  2850 00000C7D 6601C8                  	add	eax, ecx
  2851 00000C80 6689C3                  	mov	ebx, eax
  2852 00000C83 668B4608                	mov	eax, [bp+8]
  2853 00000C87 6689DE                  	mov	esi, ebx
  2854 00000C8A 66C1CE04                	ror	esi, 4
  2855 00000C8E 8EDE                    	mov	ds, si
  2856 00000C90 66C1EE1C                	shr	esi, 28
  2857 00000C94 668904                  	mov	[si], eax
  2858                                  ; RPN'ized expression: "e j + *u &u ant -> *u pindx = "
  2859                                  ; Expanded expression: "(@-4) *(4) (@-12) *(4) 12 * + 4 + (@8) *(4) =(4) "
  2860                                  ; Fused expression:    "* *(@-12) 12 + *(@-4) ax + ax 4 =(204) *ax *(@8) "
  2861 00000C97 668B46F4                	mov	eax, [bp-12]
  2862 00000C9B 666BC00C                	imul	eax, eax, 12
  2863 00000C9F 6689C1                  	mov	ecx, eax
  2864 00000CA2 668B46FC                	mov	eax, [bp-4]
  2865 00000CA6 6601C8                  	add	eax, ecx
  2866 00000CA9 6683C004                	add	eax, 4
  2867 00000CAD 6689C3                  	mov	ebx, eax
  2868 00000CB0 668B4608                	mov	eax, [bp+8]
  2869 00000CB4 6689DE                  	mov	esi, ebx
  2870 00000CB7 66C1CE04                	ror	esi, 4
  2871 00000CBB 8EDE                    	mov	ds, si
  2872 00000CBD 66C1EE1C                	shr	esi, 28
  2873 00000CC1 668904                  	mov	[si], eax
  2874                                  ; RPN'ized expression: "c2cPFR POrdenados + *u &u numElem -> *u ++p "
  2875                                  ; Expanded expression: "c2cPFR 96 + 0 + ++p(4) "
  2876                                  ; Fused expression:    "c2cPFR + ax 96 + ax 0 ++p(4) *ax "
  2877                                  section .relod
  2878 000000D0 [C60C0000]              	dd	L166
  2879                                  section .text
  2880 00000CC4 66B8                    	db	0x66, 0xB8
  2881                                  L166:
  2882 00000CC6 [60540100]              	dd	_c2cPFR
  2883 00000CCA 6683C060                	add	eax, 96
  2884 00000CCE 6689C3                  	mov	ebx, eax
  2885 00000CD1 6689DE                  	mov	esi, ebx
  2886 00000CD4 66C1CE04                	ror	esi, 4
  2887 00000CD8 8EDE                    	mov	ds, si
  2888 00000CDA 66C1EE1C                	shr	esi, 28
  2889 00000CDE 668B04                  	mov	eax, [si]
  2890 00000CE1 66FF04                  	inc	dword [si]
  2891                                  L156:
  2892 00000CE4 66                      	db	0x66
  2893 00000CE5 C9                      	leave
  2894 00000CE6 CB                      	retf
  2895                                  L167:
  2896                                  
  2897                                  section .fxnsz
  2898 00000030 34020000                	dd	L167 - _registrarEnPOrdenados
  2899                                  
  2900                                  ; glb crearThread : (
  2901                                  ; prm     funcion : * (
  2902                                  ; prm         <something> : * void
  2903                                  ;         ) * void
  2904                                  ; prm     SP0 : unsigned short
  2905                                  ; prm     arg : * void
  2906                                  ; prm     pindx : int
  2907                                  ;     ) int
  2908                                  section .text
  2909                                  	global	_crearThread
  2910                                  _crearThread:
  2911 00000CE7 6655                    	push	ebp
  2912 00000CE9 660FB7EC                	movzx	ebp, sp
  2913 00000CED 83EC10                  	 sub	sp,         16
  2914                                  ; loc     funcion : (@8): * (
  2915                                  ; prm         <something> : * void
  2916                                  ;         ) * void
  2917                                  ; loc     SP0 : (@12): unsigned short
  2918                                  ; loc     arg : (@16): * void
  2919                                  ; loc     pindx : (@20): int
  2920                                  ; loc     flags : (@-4): unsigned short
  2921                                  ; loc     i : (@-8): int
  2922                                  ; loc     SSThread : (@-12): unsigned short
  2923                                  ; loc     ptrPila : (@-16): * unsigned
  2924                                  ; if
  2925                                  ; RPN'ized expression: "pindx 0 < pindx 2010 > || "
  2926                                  ; Expanded expression: "(@20) *(4) 0 < [sh||->172] (@20) *(4) 2010 > ||[172] "
  2927                                  ; Fused expression:    "< *(@20) 0 [sh||->172] > *(@20) 2010 ||[172]  "
  2928 00000CF0 668B4614                	mov	eax, [bp+20]
  2929 00000CF4 6683F800                	cmp	eax, 0
  2930 00000CF8 0F9CC0                  	setl	al
  2931 00000CFB 660FB6C0                	movzx	eax, al
  2932                                  ; JumpIfNotZero
  2933 00000CFF 6685C0                  	test	eax, eax
  2934 00000D02 7511                    	jne	L172
  2935 00000D04 668B4614                	mov	eax, [bp+20]
  2936 00000D08 663DDA070000            	cmp	eax, 2010
  2937 00000D0E 0F9FC0                  	setg	al
  2938 00000D11 660FB6C0                	movzx	eax, al
  2939                                  L172:
  2940                                  ; JumpIfZero
  2941 00000D15 6685C0                  	test	eax, eax
  2942 00000D18 7409                    	je	L170
  2943                                  ; return
  2944                                  ; RPN'ized expression: "1 -u "
  2945                                  ; Expanded expression: "-1 "
  2946                                  ; Expression value: -1
  2947                                  ; Fused expression:    "-1  "
  2948 00000D1A 66B8FFFFFFFF            	mov	eax, -1
  2949 00000D20 E9B507                  	jmp	L168
  2950                                  L170:
  2951                                  ; if
  2952                                  ; RPN'ized expression: "( c2cPFR DPOcupados + *u , pindx posicionC2c ) 1 -u == "
  2953                                  ; Expanded expression: "  16u  c2cPFR 16 +  L175 ()8  (@20) *(4)  posicionC2c ()20 -1 == "
  2954                                  ; Fused expression:    "( ( 16u , c2cPFR + ax 16 , L175 )8 , *(4) (@20) , posicionC2c )20 == ax -1 IF! "
  2955 00000D23 666A10                  	push	dword 16
  2956                                  section .relod
  2957 000000D4 [280D0000]              	dd	L176
  2958                                  section .text
  2959 00000D26 66B8                    	db	0x66, 0xB8
  2960                                  L176:
  2961 00000D28 [60540100]              	dd	_c2cPFR
  2962 00000D2C 6683C010                	add	eax, 16
  2963 00000D30 6650                    	push	eax
  2964 00000D32 9A                      	db	0x9A
  2965                                  section .relot
  2966 00000010 [330D0000]              	dd	L177
  2967                                  section .text
  2968                                  L177:
  2969 00000D33 [4A2B0000]              	dd	L175
  2970 00000D37 83ECF8                  	sub	sp, -8
  2971 00000D3A 6650                    	push	eax
  2972 00000D3C 66FF7614                	push	dword [bp+20]
  2973 00000D40 9A                      	db	0x9A
  2974                                  section .relot
  2975 00000014 [410D0000]              	dd	L178
  2976                                  section .text
  2977                                  L178:
  2978 00000D41 [00000000]              	dd	_posicionC2c
  2979 00000D45 83ECEC                  	sub	sp, -20
  2980 00000D48 6683F8FF                	cmp	eax, -1
  2981 00000D4C 7509                    	jne	L173
  2982                                  ; return
  2983                                  ; RPN'ized expression: "2 -u "
  2984                                  ; Expanded expression: "-2 "
  2985                                  ; Expression value: -2
  2986                                  ; Fused expression:    "-2  "
  2987 00000D4E 66B8FEFFFFFF            	mov	eax, -2
  2988 00000D54 E98107                  	jmp	L168
  2989                                  L173:
  2990                                  ; if
  2991                                  ; RPN'ized expression: "c2cPFR DTLibres + *u &u numElem -> *u 0 == "
  2992                                  ; Expanded expression: "c2cPFR 32 + 0 + *(4) 0 == "
  2993                                  ; Fused expression:    "c2cPFR + ax 32 + ax 0 == *ax 0 IF! "
  2994                                  section .relod
  2995 000000D8 [590D0000]              	dd	L181
  2996                                  section .text
  2997 00000D57 66B8                    	db	0x66, 0xB8
  2998                                  L181:
  2999 00000D59 [60540100]              	dd	_c2cPFR
  3000 00000D5D 6683C020                	add	eax, 32
  3001 00000D61 6689C3                  	mov	ebx, eax
  3002 00000D64 6689DE                  	mov	esi, ebx
  3003 00000D67 66C1CE04                	ror	esi, 4
  3004 00000D6B 8EDE                    	mov	ds, si
  3005 00000D6D 66C1EE1C                	shr	esi, 28
  3006 00000D71 668B04                  	mov	eax, [si]
  3007 00000D74 6683F800                	cmp	eax, 0
  3008 00000D78 7509                    	jne	L179
  3009                                  ; return
  3010                                  ; RPN'ized expression: "3 -u "
  3011                                  ; Expanded expression: "-3 "
  3012                                  ; Expression value: -3
  3013                                  ; Fused expression:    "-3  "
  3014 00000D7A 66B8FDFFFFFF            	mov	eax, -3
  3015 00000D80 E95507                  	jmp	L168
  3016                                  L179:
  3017                                  ; RPN'ized expression: "SSThread ( SP0 15 + 16 / k_buscarBloque ) = "
  3018                                  ; Expanded expression: "(@-12)  (@12) *(2) 15 + 16 /  k_buscarBloque ()4 =(2) "
  3019                                  ; Fused expression:    "( + *(@12) 15 / ax 16 , k_buscarBloque )4 =(172) *(@-12) ax "
  3020 00000D83 8B460C                  	mov	ax, [bp+12]
  3021 00000D86 660FB7C0                	movzx	eax, ax
  3022 00000D8A 6683C00F                	add	eax, 15
  3023 00000D8E 6699                    	cdq
  3024 00000D90 66B910000000            	mov	ecx, 16
  3025 00000D96 66F7F9                  	idiv	ecx
  3026 00000D99 6650                    	push	eax
  3027 00000D9B 9A                      	db	0x9A
  3028                                  section .relot
  3029 00000018 [9C0D0000]              	dd	L182
  3030                                  section .text
  3031                                  L182:
  3032 00000D9C [00000000]              	dd	_k_buscarBloque
  3033 00000DA0 83ECFC                  	sub	sp, -4
  3034 00000DA3 8946F4                  	mov	[bp-12], ax
  3035 00000DA6 660FB7C0                	movzx	eax, ax
  3036                                  ; if
  3037                                  ; RPN'ized expression: "SSThread 0 == "
  3038                                  ; Expanded expression: "(@-12) *(2) 0 == "
  3039                                  ; Fused expression:    "== *(@-12) 0 IF! "
  3040 00000DAA 8B46F4                  	mov	ax, [bp-12]
  3041 00000DAD 660FB7C0                	movzx	eax, ax
  3042 00000DB1 6683F800                	cmp	eax, 0
  3043 00000DB5 7509                    	jne	L183
  3044                                  ; return
  3045                                  ; RPN'ized expression: "4 -u "
  3046                                  ; Expanded expression: "-4 "
  3047                                  ; Expression value: -4
  3048                                  ; Fused expression:    "-4  "
  3049 00000DB7 66B8FCFFFFFF            	mov	eax, -4
  3050 00000DBD E91807                  	jmp	L168
  3051                                  L183:
  3052                                  ; loc     <something> : * struct <something>
  3053                                  ; RPN'ized expression: "i ( c2cPFR DTLibres + *u &u (something185) desencolarPC2c ) = "
  3054                                  ; Expanded expression: "(@-8)  c2cPFR 32 +  desencolarPC2c ()4 =(4) "
  3055                                  ; Fused expression:    "( c2cPFR + ax 32 , desencolarPC2c )4 =(204) *(@-8) ax "
  3056                                  section .relod
  3057 000000DC [C20D0000]              	dd	L186
  3058                                  section .text
  3059 00000DC0 66B8                    	db	0x66, 0xB8
  3060                                  L186:
  3061 00000DC2 [60540100]              	dd	_c2cPFR
  3062 00000DC6 6683C020                	add	eax, 32
  3063 00000DCA 6650                    	push	eax
  3064 00000DCC 9A                      	db	0x9A
  3065                                  section .relot
  3066 0000001C [CD0D0000]              	dd	L187
  3067                                  section .text
  3068                                  L187:
  3069 00000DCD [00000000]              	dd	_desencolarPC2c
  3070 00000DD1 83ECFC                  	sub	sp, -4
  3071 00000DD4 668946F8                	mov	[bp-8], eax
  3072                                  ; loc     <something> : * struct <something>
  3073                                  ; RPN'ized expression: "( c2cPFR DTOcupados + *u &u (something188) , i encolarPC2c ) "
  3074                                  ; Expanded expression: " c2cPFR 48 +  (@-8) *(4)  encolarPC2c ()8 "
  3075                                  ; Fused expression:    "( c2cPFR + ax 48 , *(4) (@-8) , encolarPC2c )8 "
  3076                                  section .relod
  3077 000000E0 [DA0D0000]              	dd	L189
  3078                                  section .text
  3079 00000DD8 66B8                    	db	0x66, 0xB8
  3080                                  L189:
  3081 00000DDA [60540100]              	dd	_c2cPFR
  3082 00000DDE 6683C030                	add	eax, 48
  3083 00000DE2 6650                    	push	eax
  3084 00000DE4 66FF76F8                	push	dword [bp-8]
  3085 00000DE8 9A                      	db	0x9A
  3086                                  section .relot
  3087 00000020 [E90D0000]              	dd	L190
  3088                                  section .text
  3089                                  L190:
  3090 00000DE9 [00000000]              	dd	_encolarPC2c
  3091 00000DED 83ECF8                  	sub	sp, -8
  3092                                  ; RPN'ized expression: "descThread i + *u &u tid -> *u ( nuevoTid ) = "
  3093                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 0 +  nuevoTid ()0 =(4) "
  3094                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 0 push-ax ( nuevoTid )0 =(204) **sp ax "
  3095                                  section .relod
  3096 000000E4 [F20D0000]              	dd	L191
  3097                                  section .text
  3098 00000DF0 66B8                    	db	0x66, 0xB8
  3099                                  L191:
  3100 00000DF2 [40120000]              	dd	_descThread
  3101 00000DF6 6650                    	push	eax
  3102 00000DF8 668B46F8                	mov	eax, [bp-8]
  3103 00000DFC 666BC028                	imul	eax, eax, 40
  3104 00000E00 6689C1                  	mov	ecx, eax
  3105 00000E03 6658                    	pop	eax
  3106 00000E05 6601C8                  	add	eax, ecx
  3107 00000E08 6650                    	push	eax
  3108 00000E0A 9A                      	db	0x9A
  3109                                  section .relot
  3110 00000024 [0B0E0000]              	dd	L192
  3111                                  section .text
  3112                                  L192:
  3113 00000E0B [27000000]              	dd	_nuevoTid
  3114 00000E0F 665B                    	pop	ebx
  3115 00000E11 6689DE                  	mov	esi, ebx
  3116 00000E14 66C1CE04                	ror	esi, 4
  3117 00000E18 8EDE                    	mov	ds, si
  3118 00000E1A 66C1EE1C                	shr	esi, 28
  3119 00000E1E 668904                  	mov	[si], eax
  3120                                  ; RPN'ized expression: "descThread i + *u &u estado -> *u preparado = "
  3121                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 4 + 1 =(4) "
  3122                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 4 =(204) *ax 1 "
  3123                                  section .relod
  3124 000000E8 [230E0000]              	dd	L193
  3125                                  section .text
  3126 00000E21 66B8                    	db	0x66, 0xB8
  3127                                  L193:
  3128 00000E23 [40120000]              	dd	_descThread
  3129 00000E27 6650                    	push	eax
  3130 00000E29 668B46F8                	mov	eax, [bp-8]
  3131 00000E2D 666BC028                	imul	eax, eax, 40
  3132 00000E31 6689C1                  	mov	ecx, eax
  3133 00000E34 6658                    	pop	eax
  3134 00000E36 6601C8                  	add	eax, ecx
  3135 00000E39 6683C004                	add	eax, 4
  3136 00000E3D 6689C3                  	mov	ebx, eax
  3137 00000E40 66B801000000            	mov	eax, 1
  3138 00000E46 6689DE                  	mov	esi, ebx
  3139 00000E49 66C1CE04                	ror	esi, 4
  3140 00000E4D 8EDE                    	mov	ds, si
  3141 00000E4F 66C1EE1C                	shr	esi, 28
  3142 00000E53 668904                  	mov	[si], eax
  3143                                  ; RPN'ized expression: "descThread i + *u &u pindx -> *u pindx = "
  3144                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 32 + (@20) *(4) =(4) "
  3145                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 32 =(204) *ax *(@20) "
  3146                                  section .relod
  3147 000000EC [580E0000]              	dd	L194
  3148                                  section .text
  3149 00000E56 66B8                    	db	0x66, 0xB8
  3150                                  L194:
  3151 00000E58 [40120000]              	dd	_descThread
  3152 00000E5C 6650                    	push	eax
  3153 00000E5E 668B46F8                	mov	eax, [bp-8]
  3154 00000E62 666BC028                	imul	eax, eax, 40
  3155 00000E66 6689C1                  	mov	ecx, eax
  3156 00000E69 6658                    	pop	eax
  3157 00000E6B 6601C8                  	add	eax, ecx
  3158 00000E6E 6683C020                	add	eax, 32
  3159 00000E72 6689C3                  	mov	ebx, eax
  3160 00000E75 668B4614                	mov	eax, [bp+20]
  3161 00000E79 6689DE                  	mov	esi, ebx
  3162 00000E7C 66C1CE04                	ror	esi, 4
  3163 00000E80 8EDE                    	mov	ds, si
  3164 00000E82 66C1EE1C                	shr	esi, 28
  3165 00000E86 668904                  	mov	[si], eax
  3166                                  ; RPN'ized expression: "descThread i + *u &u noStatus -> *u TRUE = "
  3167                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 16 + 1 =(4) "
  3168                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 16 =(204) *ax 1 "
  3169                                  section .relod
  3170 000000F0 [8B0E0000]              	dd	L195
  3171                                  section .text
  3172 00000E89 66B8                    	db	0x66, 0xB8
  3173                                  L195:
  3174 00000E8B [40120000]              	dd	_descThread
  3175 00000E8F 6650                    	push	eax
  3176 00000E91 668B46F8                	mov	eax, [bp-8]
  3177 00000E95 666BC028                	imul	eax, eax, 40
  3178 00000E99 6689C1                  	mov	ecx, eax
  3179 00000E9C 6658                    	pop	eax
  3180 00000E9E 6601C8                  	add	eax, ecx
  3181 00000EA1 6683C010                	add	eax, 16
  3182 00000EA5 6689C3                  	mov	ebx, eax
  3183 00000EA8 66B801000000            	mov	eax, 1
  3184 00000EAE 6689DE                  	mov	esi, ebx
  3185 00000EB1 66C1CE04                	ror	esi, 4
  3186 00000EB5 8EDE                    	mov	ds, si
  3187 00000EB7 66C1EE1C                	shr	esi, 28
  3188 00000EBB 668904                  	mov	[si], eax
  3189                                  ; RPN'ized expression: "descThread i + *u &u status -> *u 0 = "
  3190                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 20 + 0 =(4) "
  3191                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 20 =(204) *ax 0 "
  3192                                  section .relod
  3193 000000F4 [C00E0000]              	dd	L196
  3194                                  section .text
  3195 00000EBE 66B8                    	db	0x66, 0xB8
  3196                                  L196:
  3197 00000EC0 [40120000]              	dd	_descThread
  3198 00000EC4 6650                    	push	eax
  3199 00000EC6 668B46F8                	mov	eax, [bp-8]
  3200 00000ECA 666BC028                	imul	eax, eax, 40
  3201 00000ECE 6689C1                  	mov	ecx, eax
  3202 00000ED1 6658                    	pop	eax
  3203 00000ED3 6601C8                  	add	eax, ecx
  3204 00000ED6 6683C014                	add	eax, 20
  3205 00000EDA 6689C3                  	mov	ebx, eax
  3206 00000EDD 66B800000000            	mov	eax, 0
  3207 00000EE3 6689DE                  	mov	esi, ebx
  3208 00000EE6 66C1CE04                	ror	esi, 4
  3209 00000EEA 8EDE                    	mov	ds, si
  3210 00000EEC 66C1EE1C                	shr	esi, 28
  3211 00000EF0 668904                  	mov	[si], eax
  3212                                  ; RPN'ized expression: "descThread i + *u &u ptindx -> *u indThreadActual = "
  3213                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 24 + indThreadActual *(4) =(4) "
  3214                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 24 push-ax indThreadActual =(204) **sp *ax "
  3215                                  section .relod
  3216 000000F8 [F50E0000]              	dd	L197
  3217                                  section .text
  3218 00000EF3 66B8                    	db	0x66, 0xB8
  3219                                  L197:
  3220 00000EF5 [40120000]              	dd	_descThread
  3221 00000EF9 6650                    	push	eax
  3222 00000EFB 668B46F8                	mov	eax, [bp-8]
  3223 00000EFF 666BC028                	imul	eax, eax, 40
  3224 00000F03 6689C1                  	mov	ecx, eax
  3225 00000F06 6658                    	pop	eax
  3226 00000F08 6601C8                  	add	eax, ecx
  3227 00000F0B 6683C018                	add	eax, 24
  3228 00000F0F 6650                    	push	eax
  3229                                  section .relod
  3230 000000FC [130F0000]              	dd	L198
  3231                                  section .text
  3232 00000F11 66B8                    	db	0x66, 0xB8
  3233                                  L198:
  3234 00000F13 [3C000000]              	dd	_indThreadActual
  3235 00000F17 6689C3                  	mov	ebx, eax
  3236 00000F1A 6689DE                  	mov	esi, ebx
  3237 00000F1D 66C1CE04                	ror	esi, 4
  3238 00000F21 8EDE                    	mov	ds, si
  3239 00000F23 66C1EE1C                	shr	esi, 28
  3240 00000F27 668B04                  	mov	eax, [si]
  3241 00000F2A 665B                    	pop	ebx
  3242 00000F2C 6689DE                  	mov	esi, ebx
  3243 00000F2F 66C1CE04                	ror	esi, 4
  3244 00000F33 8EDE                    	mov	ds, si
  3245 00000F35 66C1EE1C                	shr	esi, 28
  3246 00000F39 668904                  	mov	[si], eax
  3247                                  ; RPN'ized expression: "descThread i + *u &u htindx -> *u 1 -u = "
  3248                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 28 + -1 =(4) "
  3249                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 28 =(204) *ax -1 "
  3250                                  section .relod
  3251 00000100 [3E0F0000]              	dd	L199
  3252                                  section .text
  3253 00000F3C 66B8                    	db	0x66, 0xB8
  3254                                  L199:
  3255 00000F3E [40120000]              	dd	_descThread
  3256 00000F42 6650                    	push	eax
  3257 00000F44 668B46F8                	mov	eax, [bp-8]
  3258 00000F48 666BC028                	imul	eax, eax, 40
  3259 00000F4C 6689C1                  	mov	ecx, eax
  3260 00000F4F 6658                    	pop	eax
  3261 00000F51 6601C8                  	add	eax, ecx
  3262 00000F54 6683C01C                	add	eax, 28
  3263 00000F58 6689C3                  	mov	ebx, eax
  3264 00000F5B 66B8FFFFFFFF            	mov	eax, -1
  3265 00000F61 6689DE                  	mov	esi, ebx
  3266 00000F64 66C1CE04                	ror	esi, 4
  3267 00000F68 8EDE                    	mov	ds, si
  3268 00000F6A 66C1EE1C                	shr	esi, 28
  3269 00000F6E 668904                  	mov	[si], eax
  3270                                  ; RPN'ized expression: "descThread i + *u &u SSThread -> *u SSThread = "
  3271                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 36 + (@-12) *(2) =(2) "
  3272                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 36 =(170) *ax *(@-12) "
  3273                                  section .relod
  3274 00000104 [730F0000]              	dd	L200
  3275                                  section .text
  3276 00000F71 66B8                    	db	0x66, 0xB8
  3277                                  L200:
  3278 00000F73 [40120000]              	dd	_descThread
  3279 00000F77 6650                    	push	eax
  3280 00000F79 668B46F8                	mov	eax, [bp-8]
  3281 00000F7D 666BC028                	imul	eax, eax, 40
  3282 00000F81 6689C1                  	mov	ecx, eax
  3283 00000F84 6658                    	pop	eax
  3284 00000F86 6601C8                  	add	eax, ecx
  3285 00000F89 6683C024                	add	eax, 36
  3286 00000F8D 6689C3                  	mov	ebx, eax
  3287 00000F90 8B46F4                  	mov	ax, [bp-12]
  3288 00000F93 660FB7C0                	movzx	eax, ax
  3289 00000F97 6689DE                  	mov	esi, ebx
  3290 00000F9A 66C1CE04                	ror	esi, 4
  3291 00000F9E 8EDE                    	mov	ds, si
  3292 00000FA0 66C1EE1C                	shr	esi, 28
  3293 00000FA4 8904                    	mov	[si], ax
  3294 00000FA6 660FB7C0                	movzx	eax, ax
  3295                                  ; RPN'ized expression: "descThread i + *u &u SP0 -> *u SP0 = "
  3296                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 38 + (@12) *(2) =(2) "
  3297                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 38 =(170) *ax *(@12) "
  3298                                  section .relod
  3299 00000108 [AC0F0000]              	dd	L201
  3300                                  section .text
  3301 00000FAA 66B8                    	db	0x66, 0xB8
  3302                                  L201:
  3303 00000FAC [40120000]              	dd	_descThread
  3304 00000FB0 6650                    	push	eax
  3305 00000FB2 668B46F8                	mov	eax, [bp-8]
  3306 00000FB6 666BC028                	imul	eax, eax, 40
  3307 00000FBA 6689C1                  	mov	ecx, eax
  3308 00000FBD 6658                    	pop	eax
  3309 00000FBF 6601C8                  	add	eax, ecx
  3310 00000FC2 6683C026                	add	eax, 38
  3311 00000FC6 6689C3                  	mov	ebx, eax
  3312 00000FC9 8B460C                  	mov	ax, [bp+12]
  3313 00000FCC 660FB7C0                	movzx	eax, ax
  3314 00000FD0 6689DE                  	mov	esi, ebx
  3315 00000FD3 66C1CE04                	ror	esi, 4
  3316 00000FD7 8EDE                    	mov	ds, si
  3317 00000FD9 66C1EE1C                	shr	esi, 28
  3318 00000FDD 8904                    	mov	[si], ax
  3319 00000FDF 660FB7C0                	movzx	eax, ax
  3320                                  ; loc     <something> : unsigned
  3321                                  ; loc     <something> : unsigned
  3322                                  ; RPN'ized expression: "ptrPila SSThread (something202) 4 << SP0 (something203) + = "
  3323                                  ; Expanded expression: "(@-16) (@-12) *(2) 4 << (@12) *(2) + =(4) "
  3324                                  ; Fused expression:    "<< *(@-12) 4 + ax *(@12) =(204) *(@-16) ax "
  3325 00000FE3 8B46F4                  	mov	ax, [bp-12]
  3326 00000FE6 660FB7C0                	movzx	eax, ax
  3327 00000FEA 66C1E004                	shl	eax, 4
  3328 00000FEE 660FB74E0C              	movzx	ecx, word [bp+12]
  3329 00000FF3 6601C8                  	add	eax, ecx
  3330 00000FF6 668946F0                	mov	[bp-16], eax
  3331                                  ; loc     <something> : unsigned
  3332                                  ; RPN'ized expression: "ptrPila -- *u arg (something204) = "
  3333                                  ; Expanded expression: "(@-16) 4 -=(4) (@16) *(4) =(4) "
  3334                                  ; Fused expression:    "-=(204) *(@-16) 4 =(204) *ax *(@16) "
  3335 00000FFA 668B46F0                	mov	eax, [bp-16]
  3336 00000FFE 6683E804                	sub	eax, 4
  3337 00001002 668946F0                	mov	[bp-16], eax
  3338 00001006 6689C3                  	mov	ebx, eax
  3339 00001009 668B4610                	mov	eax, [bp+16]
  3340 0000100D 6689DE                  	mov	esi, ebx
  3341 00001010 66C1CE04                	ror	esi, 4
  3342 00001014 8EDE                    	mov	ds, si
  3343 00001016 66C1EE1C                	shr	esi, 28
  3344 0000101A 668904                  	mov	[si], eax
  3345                                  ; loc     <something> : unsigned
  3346                                  ; RPN'ized expression: "ptrPila -- *u finThread (something205) = "
  3347                                  ; Expanded expression: "(@-16) 4 -=(4) finThread =(4) "
  3348                                  ; Fused expression:    "-=(204) *(@-16) 4 push-ax finThread =(204) **sp ax "
  3349 0000101D 668B46F0                	mov	eax, [bp-16]
  3350 00001021 6683E804                	sub	eax, 4
  3351 00001025 668946F0                	mov	[bp-16], eax
  3352 00001029 6650                    	push	eax
  3353                                  section .relod
  3354 0000010C [2D100000]              	dd	L206
  3355                                  section .text
  3356 0000102B 66B8                    	db	0x66, 0xB8
  3357                                  L206:
  3358 0000102D [00000000]              	dd	_finThread
  3359 00001031 665B                    	pop	ebx
  3360 00001033 6689DE                  	mov	esi, ebx
  3361 00001036 66C1CE04                	ror	esi, 4
  3362 0000103A 8EDE                    	mov	ds, si
  3363 0000103C 66C1EE1C                	shr	esi, 28
  3364 00001040 668904                  	mov	[si], eax
  3365                                  ; loc     <something> : * union <something>
  3366                                  ; loc     <something> : unsigned
  3367                                  ; loc     <something> : union <something>
  3368                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u ptrPila (something208) <something209> sizeof - (something207) = "
  3369                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + (@-16) *(4) 42u - =(4) "
  3370                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 push-ax - *(@-16) 42u =(204) **sp ax "
  3371                                  section .relod
  3372 00000110 [45100000]              	dd	L210
  3373                                  section .text
  3374 00001043 66B8                    	db	0x66, 0xB8
  3375                                  L210:
  3376 00001045 [40120000]              	dd	_descThread
  3377 00001049 6650                    	push	eax
  3378 0000104B 668B46F8                	mov	eax, [bp-8]
  3379 0000104F 666BC028                	imul	eax, eax, 40
  3380 00001053 6689C1                  	mov	ecx, eax
  3381 00001056 6658                    	pop	eax
  3382 00001058 6601C8                  	add	eax, ecx
  3383 0000105B 6683C00C                	add	eax, 12
  3384 0000105F 6650                    	push	eax
  3385 00001061 668B46F0                	mov	eax, [bp-16]
  3386 00001065 6683E82A                	sub	eax, 42
  3387 00001069 665B                    	pop	ebx
  3388 0000106B 6689DE                  	mov	esi, ebx
  3389 0000106E 66C1CE04                	ror	esi, 4
  3390 00001072 8EDE                    	mov	ds, si
  3391 00001074 66C1EE1C                	shr	esi, 28
  3392 00001078 668904                  	mov	[si], eax
  3393                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u DS -> *u 0 = "
  3394                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 0 + 0 =(2) "
  3395                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 0 =(172) *ax 0 "
  3396                                  section .relod
  3397 00000114 [7D100000]              	dd	L211
  3398                                  section .text
  3399 0000107B 66B8                    	db	0x66, 0xB8
  3400                                  L211:
  3401 0000107D [40120000]              	dd	_descThread
  3402 00001081 6650                    	push	eax
  3403 00001083 668B46F8                	mov	eax, [bp-8]
  3404 00001087 666BC028                	imul	eax, eax, 40
  3405 0000108B 6689C1                  	mov	ecx, eax
  3406 0000108E 6658                    	pop	eax
  3407 00001090 6601C8                  	add	eax, ecx
  3408 00001093 6683C00C                	add	eax, 12
  3409 00001097 6689C3                  	mov	ebx, eax
  3410 0000109A 6689DE                  	mov	esi, ebx
  3411 0000109D 66C1CE04                	ror	esi, 4
  3412 000010A1 8EDE                    	mov	ds, si
  3413 000010A3 66C1EE1C                	shr	esi, 28
  3414 000010A7 668B04                  	mov	eax, [si]
  3415 000010AA 6689C3                  	mov	ebx, eax
  3416 000010AD 66B800000000            	mov	eax, 0
  3417 000010B3 6689DE                  	mov	esi, ebx
  3418 000010B6 66C1CE04                	ror	esi, 4
  3419 000010BA 8EDE                    	mov	ds, si
  3420 000010BC 66C1EE1C                	shr	esi, 28
  3421 000010C0 8904                    	mov	[si], ax
  3422 000010C2 660FB7C0                	movzx	eax, ax
  3423                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u ES -> *u 0 = "
  3424                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 2 + 0 =(2) "
  3425                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 2 =(172) *ax 0 "
  3426                                  section .relod
  3427 00000118 [C8100000]              	dd	L212
  3428                                  section .text
  3429 000010C6 66B8                    	db	0x66, 0xB8
  3430                                  L212:
  3431 000010C8 [40120000]              	dd	_descThread
  3432 000010CC 6650                    	push	eax
  3433 000010CE 668B46F8                	mov	eax, [bp-8]
  3434 000010D2 666BC028                	imul	eax, eax, 40
  3435 000010D6 6689C1                  	mov	ecx, eax
  3436 000010D9 6658                    	pop	eax
  3437 000010DB 6601C8                  	add	eax, ecx
  3438 000010DE 6683C00C                	add	eax, 12
  3439 000010E2 6689C3                  	mov	ebx, eax
  3440 000010E5 6689DE                  	mov	esi, ebx
  3441 000010E8 66C1CE04                	ror	esi, 4
  3442 000010EC 8EDE                    	mov	ds, si
  3443 000010EE 66C1EE1C                	shr	esi, 28
  3444 000010F2 668B04                  	mov	eax, [si]
  3445 000010F5 6683C002                	add	eax, 2
  3446 000010F9 6689C3                  	mov	ebx, eax
  3447 000010FC 66B800000000            	mov	eax, 0
  3448 00001102 6689DE                  	mov	esi, ebx
  3449 00001105 66C1CE04                	ror	esi, 4
  3450 00001109 8EDE                    	mov	ds, si
  3451 0000110B 66C1EE1C                	shr	esi, 28
  3452 0000110F 8904                    	mov	[si], ax
  3453 00001111 660FB7C0                	movzx	eax, ax
  3454                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EDI -> *u 0 = "
  3455                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 4 + 0 =(4) "
  3456                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 4 =(204) *ax 0 "
  3457                                  section .relod
  3458 0000011C [17110000]              	dd	L213
  3459                                  section .text
  3460 00001115 66B8                    	db	0x66, 0xB8
  3461                                  L213:
  3462 00001117 [40120000]              	dd	_descThread
  3463 0000111B 6650                    	push	eax
  3464 0000111D 668B46F8                	mov	eax, [bp-8]
  3465 00001121 666BC028                	imul	eax, eax, 40
  3466 00001125 6689C1                  	mov	ecx, eax
  3467 00001128 6658                    	pop	eax
  3468 0000112A 6601C8                  	add	eax, ecx
  3469 0000112D 6683C00C                	add	eax, 12
  3470 00001131 6689C3                  	mov	ebx, eax
  3471 00001134 6689DE                  	mov	esi, ebx
  3472 00001137 66C1CE04                	ror	esi, 4
  3473 0000113B 8EDE                    	mov	ds, si
  3474 0000113D 66C1EE1C                	shr	esi, 28
  3475 00001141 668B04                  	mov	eax, [si]
  3476 00001144 6683C004                	add	eax, 4
  3477 00001148 6689C3                  	mov	ebx, eax
  3478 0000114B 66B800000000            	mov	eax, 0
  3479 00001151 6689DE                  	mov	esi, ebx
  3480 00001154 66C1CE04                	ror	esi, 4
  3481 00001158 8EDE                    	mov	ds, si
  3482 0000115A 66C1EE1C                	shr	esi, 28
  3483 0000115E 668904                  	mov	[si], eax
  3484                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u ESI -> *u 0 = "
  3485                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 8 + 0 =(4) "
  3486                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 8 =(204) *ax 0 "
  3487                                  section .relod
  3488 00000120 [63110000]              	dd	L214
  3489                                  section .text
  3490 00001161 66B8                    	db	0x66, 0xB8
  3491                                  L214:
  3492 00001163 [40120000]              	dd	_descThread
  3493 00001167 6650                    	push	eax
  3494 00001169 668B46F8                	mov	eax, [bp-8]
  3495 0000116D 666BC028                	imul	eax, eax, 40
  3496 00001171 6689C1                  	mov	ecx, eax
  3497 00001174 6658                    	pop	eax
  3498 00001176 6601C8                  	add	eax, ecx
  3499 00001179 6683C00C                	add	eax, 12
  3500 0000117D 6689C3                  	mov	ebx, eax
  3501 00001180 6689DE                  	mov	esi, ebx
  3502 00001183 66C1CE04                	ror	esi, 4
  3503 00001187 8EDE                    	mov	ds, si
  3504 00001189 66C1EE1C                	shr	esi, 28
  3505 0000118D 668B04                  	mov	eax, [si]
  3506 00001190 6683C008                	add	eax, 8
  3507 00001194 6689C3                  	mov	ebx, eax
  3508 00001197 66B800000000            	mov	eax, 0
  3509 0000119D 6689DE                  	mov	esi, ebx
  3510 000011A0 66C1CE04                	ror	esi, 4
  3511 000011A4 8EDE                    	mov	ds, si
  3512 000011A6 66C1EE1C                	shr	esi, 28
  3513 000011AA 668904                  	mov	[si], eax
  3514                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EBP -> *u SP0 14 - = "
  3515                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 12 + (@12) *(2) 14 - =(4) "
  3516                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 12 push-ax - *(@12) 14 =(204) **sp ax "
  3517                                  section .relod
  3518 00000124 [AF110000]              	dd	L215
  3519                                  section .text
  3520 000011AD 66B8                    	db	0x66, 0xB8
  3521                                  L215:
  3522 000011AF [40120000]              	dd	_descThread
  3523 000011B3 6650                    	push	eax
  3524 000011B5 668B46F8                	mov	eax, [bp-8]
  3525 000011B9 666BC028                	imul	eax, eax, 40
  3526 000011BD 6689C1                  	mov	ecx, eax
  3527 000011C0 6658                    	pop	eax
  3528 000011C2 6601C8                  	add	eax, ecx
  3529 000011C5 6683C00C                	add	eax, 12
  3530 000011C9 6689C3                  	mov	ebx, eax
  3531 000011CC 6689DE                  	mov	esi, ebx
  3532 000011CF 66C1CE04                	ror	esi, 4
  3533 000011D3 8EDE                    	mov	ds, si
  3534 000011D5 66C1EE1C                	shr	esi, 28
  3535 000011D9 668B04                  	mov	eax, [si]
  3536 000011DC 6683C00C                	add	eax, 12
  3537 000011E0 6650                    	push	eax
  3538 000011E2 8B460C                  	mov	ax, [bp+12]
  3539 000011E5 660FB7C0                	movzx	eax, ax
  3540 000011E9 6683E80E                	sub	eax, 14
  3541 000011ED 665B                    	pop	ebx
  3542 000011EF 6689DE                  	mov	esi, ebx
  3543 000011F2 66C1CE04                	ror	esi, 4
  3544 000011F6 8EDE                    	mov	ds, si
  3545 000011F8 66C1EE1C                	shr	esi, 28
  3546 000011FC 668904                  	mov	[si], eax
  3547                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u ESP -> *u SP0 14 - = "
  3548                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 16 + (@12) *(2) 14 - =(4) "
  3549                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 16 push-ax - *(@12) 14 =(204) **sp ax "
  3550                                  section .relod
  3551 00000128 [01120000]              	dd	L216
  3552                                  section .text
  3553 000011FF 66B8                    	db	0x66, 0xB8
  3554                                  L216:
  3555 00001201 [40120000]              	dd	_descThread
  3556 00001205 6650                    	push	eax
  3557 00001207 668B46F8                	mov	eax, [bp-8]
  3558 0000120B 666BC028                	imul	eax, eax, 40
  3559 0000120F 6689C1                  	mov	ecx, eax
  3560 00001212 6658                    	pop	eax
  3561 00001214 6601C8                  	add	eax, ecx
  3562 00001217 6683C00C                	add	eax, 12
  3563 0000121B 6689C3                  	mov	ebx, eax
  3564 0000121E 6689DE                  	mov	esi, ebx
  3565 00001221 66C1CE04                	ror	esi, 4
  3566 00001225 8EDE                    	mov	ds, si
  3567 00001227 66C1EE1C                	shr	esi, 28
  3568 0000122B 668B04                  	mov	eax, [si]
  3569 0000122E 6683C010                	add	eax, 16
  3570 00001232 6650                    	push	eax
  3571 00001234 8B460C                  	mov	ax, [bp+12]
  3572 00001237 660FB7C0                	movzx	eax, ax
  3573 0000123B 6683E80E                	sub	eax, 14
  3574 0000123F 665B                    	pop	ebx
  3575 00001241 6689DE                  	mov	esi, ebx
  3576 00001244 66C1CE04                	ror	esi, 4
  3577 00001248 8EDE                    	mov	ds, si
  3578 0000124A 66C1EE1C                	shr	esi, 28
  3579 0000124E 668904                  	mov	[si], eax
  3580                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EBX -> *u 0 = "
  3581                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 20 + 0 =(4) "
  3582                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 20 =(204) *ax 0 "
  3583                                  section .relod
  3584 0000012C [53120000]              	dd	L217
  3585                                  section .text
  3586 00001251 66B8                    	db	0x66, 0xB8
  3587                                  L217:
  3588 00001253 [40120000]              	dd	_descThread
  3589 00001257 6650                    	push	eax
  3590 00001259 668B46F8                	mov	eax, [bp-8]
  3591 0000125D 666BC028                	imul	eax, eax, 40
  3592 00001261 6689C1                  	mov	ecx, eax
  3593 00001264 6658                    	pop	eax
  3594 00001266 6601C8                  	add	eax, ecx
  3595 00001269 6683C00C                	add	eax, 12
  3596 0000126D 6689C3                  	mov	ebx, eax
  3597 00001270 6689DE                  	mov	esi, ebx
  3598 00001273 66C1CE04                	ror	esi, 4
  3599 00001277 8EDE                    	mov	ds, si
  3600 00001279 66C1EE1C                	shr	esi, 28
  3601 0000127D 668B04                  	mov	eax, [si]
  3602 00001280 6683C014                	add	eax, 20
  3603 00001284 6689C3                  	mov	ebx, eax
  3604 00001287 66B800000000            	mov	eax, 0
  3605 0000128D 6689DE                  	mov	esi, ebx
  3606 00001290 66C1CE04                	ror	esi, 4
  3607 00001294 8EDE                    	mov	ds, si
  3608 00001296 66C1EE1C                	shr	esi, 28
  3609 0000129A 668904                  	mov	[si], eax
  3610                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EDX -> *u 0 = "
  3611                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 24 + 0 =(4) "
  3612                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 24 =(204) *ax 0 "
  3613                                  section .relod
  3614 00000130 [9F120000]              	dd	L218
  3615                                  section .text
  3616 0000129D 66B8                    	db	0x66, 0xB8
  3617                                  L218:
  3618 0000129F [40120000]              	dd	_descThread
  3619 000012A3 6650                    	push	eax
  3620 000012A5 668B46F8                	mov	eax, [bp-8]
  3621 000012A9 666BC028                	imul	eax, eax, 40
  3622 000012AD 6689C1                  	mov	ecx, eax
  3623 000012B0 6658                    	pop	eax
  3624 000012B2 6601C8                  	add	eax, ecx
  3625 000012B5 6683C00C                	add	eax, 12
  3626 000012B9 6689C3                  	mov	ebx, eax
  3627 000012BC 6689DE                  	mov	esi, ebx
  3628 000012BF 66C1CE04                	ror	esi, 4
  3629 000012C3 8EDE                    	mov	ds, si
  3630 000012C5 66C1EE1C                	shr	esi, 28
  3631 000012C9 668B04                  	mov	eax, [si]
  3632 000012CC 6683C018                	add	eax, 24
  3633 000012D0 6689C3                  	mov	ebx, eax
  3634 000012D3 66B800000000            	mov	eax, 0
  3635 000012D9 6689DE                  	mov	esi, ebx
  3636 000012DC 66C1CE04                	ror	esi, 4
  3637 000012E0 8EDE                    	mov	ds, si
  3638 000012E2 66C1EE1C                	shr	esi, 28
  3639 000012E6 668904                  	mov	[si], eax
  3640                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u ECX -> *u 0 = "
  3641                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 28 + 0 =(4) "
  3642                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 28 =(204) *ax 0 "
  3643                                  section .relod
  3644 00000134 [EB120000]              	dd	L219
  3645                                  section .text
  3646 000012E9 66B8                    	db	0x66, 0xB8
  3647                                  L219:
  3648 000012EB [40120000]              	dd	_descThread
  3649 000012EF 6650                    	push	eax
  3650 000012F1 668B46F8                	mov	eax, [bp-8]
  3651 000012F5 666BC028                	imul	eax, eax, 40
  3652 000012F9 6689C1                  	mov	ecx, eax
  3653 000012FC 6658                    	pop	eax
  3654 000012FE 6601C8                  	add	eax, ecx
  3655 00001301 6683C00C                	add	eax, 12
  3656 00001305 6689C3                  	mov	ebx, eax
  3657 00001308 6689DE                  	mov	esi, ebx
  3658 0000130B 66C1CE04                	ror	esi, 4
  3659 0000130F 8EDE                    	mov	ds, si
  3660 00001311 66C1EE1C                	shr	esi, 28
  3661 00001315 668B04                  	mov	eax, [si]
  3662 00001318 6683C01C                	add	eax, 28
  3663 0000131C 6689C3                  	mov	ebx, eax
  3664 0000131F 66B800000000            	mov	eax, 0
  3665 00001325 6689DE                  	mov	esi, ebx
  3666 00001328 66C1CE04                	ror	esi, 4
  3667 0000132C 8EDE                    	mov	ds, si
  3668 0000132E 66C1EE1C                	shr	esi, 28
  3669 00001332 668904                  	mov	[si], eax
  3670                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EAX -> *u 0 = "
  3671                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 32 + 0 =(4) "
  3672                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 32 =(204) *ax 0 "
  3673                                  section .relod
  3674 00000138 [37130000]              	dd	L220
  3675                                  section .text
  3676 00001335 66B8                    	db	0x66, 0xB8
  3677                                  L220:
  3678 00001337 [40120000]              	dd	_descThread
  3679 0000133B 6650                    	push	eax
  3680 0000133D 668B46F8                	mov	eax, [bp-8]
  3681 00001341 666BC028                	imul	eax, eax, 40
  3682 00001345 6689C1                  	mov	ecx, eax
  3683 00001348 6658                    	pop	eax
  3684 0000134A 6601C8                  	add	eax, ecx
  3685 0000134D 6683C00C                	add	eax, 12
  3686 00001351 6689C3                  	mov	ebx, eax
  3687 00001354 6689DE                  	mov	esi, ebx
  3688 00001357 66C1CE04                	ror	esi, 4
  3689 0000135B 8EDE                    	mov	ds, si
  3690 0000135D 66C1EE1C                	shr	esi, 28
  3691 00001361 668B04                  	mov	eax, [si]
  3692 00001364 6683C020                	add	eax, 32
  3693 00001368 6689C3                  	mov	ebx, eax
  3694 0000136B 66B800000000            	mov	eax, 0
  3695 00001371 6689DE                  	mov	esi, ebx
  3696 00001374 66C1CE04                	ror	esi, 4
  3697 00001378 8EDE                    	mov	ds, si
  3698 0000137A 66C1EE1C                	shr	esi, 28
  3699 0000137E 668904                  	mov	[si], eax
  3700                                  ; loc     <something> : unsigned short
  3701                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u IP -> *u funcion (something221) 15 & = "
  3702                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 36 + (@8) *(4) unsigned short 15 & =(2) "
  3703                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 36 push-ax *(4) (@8) unsigned short & ax 15 =(172) **sp ax "
  3704                                  section .relod
  3705 0000013C [83130000]              	dd	L222
  3706                                  section .text
  3707 00001381 66B8                    	db	0x66, 0xB8
  3708                                  L222:
  3709 00001383 [40120000]              	dd	_descThread
  3710 00001387 6650                    	push	eax
  3711 00001389 668B46F8                	mov	eax, [bp-8]
  3712 0000138D 666BC028                	imul	eax, eax, 40
  3713 00001391 6689C1                  	mov	ecx, eax
  3714 00001394 6658                    	pop	eax
  3715 00001396 6601C8                  	add	eax, ecx
  3716 00001399 6683C00C                	add	eax, 12
  3717 0000139D 6689C3                  	mov	ebx, eax
  3718 000013A0 6689DE                  	mov	esi, ebx
  3719 000013A3 66C1CE04                	ror	esi, 4
  3720 000013A7 8EDE                    	mov	ds, si
  3721 000013A9 66C1EE1C                	shr	esi, 28
  3722 000013AD 668B04                  	mov	eax, [si]
  3723 000013B0 6683C024                	add	eax, 36
  3724 000013B4 6650                    	push	eax
  3725 000013B6 668B4608                	mov	eax, [bp+8]
  3726 000013BA 660FB7C0                	movzx	eax, ax
  3727 000013BE 6683E00F                	and	eax, 15
  3728 000013C2 665B                    	pop	ebx
  3729 000013C4 6689DE                  	mov	esi, ebx
  3730 000013C7 66C1CE04                	ror	esi, 4
  3731 000013CB 8EDE                    	mov	ds, si
  3732 000013CD 66C1EE1C                	shr	esi, 28
  3733 000013D1 8904                    	mov	[si], ax
  3734 000013D3 660FB7C0                	movzx	eax, ax
  3735                                  ; loc     <something> : unsigned short
  3736                                  ; loc     <something> : unsigned
  3737                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u CS -> *u funcion (something224) 4 >> (something223) = "
  3738                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 38 + (@8) *(4) 4 >>u unsigned short =(2) "
  3739                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 38 push-ax >>u *(@8) 4 unsigned short =(172) **sp ax "
  3740                                  section .relod
  3741 00000140 [D9130000]              	dd	L225
  3742                                  section .text
  3743 000013D7 66B8                    	db	0x66, 0xB8
  3744                                  L225:
  3745 000013D9 [40120000]              	dd	_descThread
  3746 000013DD 6650                    	push	eax
  3747 000013DF 668B46F8                	mov	eax, [bp-8]
  3748 000013E3 666BC028                	imul	eax, eax, 40
  3749 000013E7 6689C1                  	mov	ecx, eax
  3750 000013EA 6658                    	pop	eax
  3751 000013EC 6601C8                  	add	eax, ecx
  3752 000013EF 6683C00C                	add	eax, 12
  3753 000013F3 6689C3                  	mov	ebx, eax
  3754 000013F6 6689DE                  	mov	esi, ebx
  3755 000013F9 66C1CE04                	ror	esi, 4
  3756 000013FD 8EDE                    	mov	ds, si
  3757 000013FF 66C1EE1C                	shr	esi, 28
  3758 00001403 668B04                  	mov	eax, [si]
  3759 00001406 6683C026                	add	eax, 38
  3760 0000140A 6650                    	push	eax
  3761 0000140C 668B4608                	mov	eax, [bp+8]
  3762 00001410 66C1E804                	shr	eax, 4
  3763 00001414 660FB7C0                	movzx	eax, ax
  3764 00001418 665B                    	pop	ebx
  3765 0000141A 6689DE                  	mov	esi, ebx
  3766 0000141D 66C1CE04                	ror	esi, 4
  3767 00001421 8EDE                    	mov	ds, si
  3768 00001423 66C1EE1C                	shr	esi, 28
  3769 00001427 8904                    	mov	[si], ax
  3770 00001429 660FB7C0                	movzx	eax, ax
  3771 0000142D 9C                         pushf         
  3772 0000142E 58                         pop ax        
  3773 0000142F 8946FC                     mov [bp-4],ax 
  3774                                  
  3775                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u Flags -> *u flags 61440 & 514 | = "
  3776                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 40 + (@-4) *(2) 61440 & 514 | =(2) "
  3777                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 40 push-ax & *(@-4) 61440 | ax 514 =(172) **sp ax "
  3778                                  section .relod
  3779 00000144 [34140000]              	dd	L226
  3780                                  section .text
  3781 00001432 66B8                    	db	0x66, 0xB8
  3782                                  L226:
  3783 00001434 [40120000]              	dd	_descThread
  3784 00001438 6650                    	push	eax
  3785 0000143A 668B46F8                	mov	eax, [bp-8]
  3786 0000143E 666BC028                	imul	eax, eax, 40
  3787 00001442 6689C1                  	mov	ecx, eax
  3788 00001445 6658                    	pop	eax
  3789 00001447 6601C8                  	add	eax, ecx
  3790 0000144A 6683C00C                	add	eax, 12
  3791 0000144E 6689C3                  	mov	ebx, eax
  3792 00001451 6689DE                  	mov	esi, ebx
  3793 00001454 66C1CE04                	ror	esi, 4
  3794 00001458 8EDE                    	mov	ds, si
  3795 0000145A 66C1EE1C                	shr	esi, 28
  3796 0000145E 668B04                  	mov	eax, [si]
  3797 00001461 6683C028                	add	eax, 40
  3798 00001465 6650                    	push	eax
  3799 00001467 8B46FC                  	mov	ax, [bp-4]
  3800 0000146A 660FB7C0                	movzx	eax, ax
  3801 0000146E 662500F00000            	and	eax, 61440
  3802 00001474 660D02020000            	or	eax, 514
  3803 0000147A 665B                    	pop	ebx
  3804 0000147C 6689DE                  	mov	esi, ebx
  3805 0000147F 66C1CE04                	ror	esi, 4
  3806 00001483 8EDE                    	mov	ds, si
  3807 00001485 66C1EE1C                	shr	esi, 28
  3808 00001489 8904                    	mov	[si], ax
  3809 0000148B 660FB7C0                	movzx	eax, ax
  3810                                  ; loc     <something> : * struct <something>
  3811                                  ; RPN'ized expression: "( descProceso pindx + *u &u c2cThreads -> *u &u (something227) , i encolarPC2c ) "
  3812                                  ; Expanded expression: " descProceso (@20) *(4) 292 * + 36 +  (@-8) *(4)  encolarPC2c ()8 "
  3813                                  ; Fused expression:    "( descProceso push-ax * *(@20) 292 + *sp ax + ax 36 , *(4) (@-8) , encolarPC2c )8 "
  3814                                  section .relod
  3815 00000148 [91140000]              	dd	L228
  3816                                  section .text
  3817 0000148F 66B8                    	db	0x66, 0xB8
  3818                                  L228:
  3819 00001491 [00000000]              	dd	_descProceso
  3820 00001495 6650                    	push	eax
  3821 00001497 668B4614                	mov	eax, [bp+20]
  3822 0000149B 6669C024010000          	imul	eax, eax, 292
  3823 000014A2 6689C1                  	mov	ecx, eax
  3824 000014A5 6658                    	pop	eax
  3825 000014A7 6601C8                  	add	eax, ecx
  3826 000014AA 6683C024                	add	eax, 36
  3827 000014AE 6650                    	push	eax
  3828 000014B0 66FF76F8                	push	dword [bp-8]
  3829 000014B4 9A                      	db	0x9A
  3830                                  section .relot
  3831 00000028 [B5140000]              	dd	L229
  3832                                  section .text
  3833                                  L229:
  3834 000014B5 [00000000]              	dd	_encolarPC2c
  3835 000014B9 83ECF8                  	sub	sp, -8
  3836                                  ; loc     <something> : * struct <something>
  3837                                  ; RPN'ized expression: "( c2cPFR TPreparados + *u &u (something230) , i encolarPC2c ) "
  3838                                  ; Expanded expression: " c2cPFR 64 +  (@-8) *(4)  encolarPC2c ()8 "
  3839                                  ; Fused expression:    "( c2cPFR + ax 64 , *(4) (@-8) , encolarPC2c )8 "
  3840                                  section .relod
  3841 0000014C [BE140000]              	dd	L231
  3842                                  section .text
  3843 000014BC 66B8                    	db	0x66, 0xB8
  3844                                  L231:
  3845 000014BE [60540100]              	dd	_c2cPFR
  3846 000014C2 6683C040                	add	eax, 64
  3847 000014C6 6650                    	push	eax
  3848 000014C8 66FF76F8                	push	dword [bp-8]
  3849 000014CC 9A                      	db	0x9A
  3850                                  section .relot
  3851 0000002C [CD140000]              	dd	L232
  3852                                  section .text
  3853                                  L232:
  3854 000014CD [00000000]              	dd	_encolarPC2c
  3855 000014D1 83ECF8                  	sub	sp, -8
  3856                                  ; return
  3857                                  ; RPN'ized expression: "i "
  3858                                  ; Expanded expression: "(@-8) *(4) "
  3859                                  ; Fused expression:    "*(4) (@-8)  "
  3860 000014D4 668B46F8                	mov	eax, [bp-8]
  3861                                  L168:
  3862 000014D8 66                      	db	0x66
  3863 000014D9 C9                      	leave
  3864 000014DA CB                      	retf
  3865                                  L233:
  3866                                  
  3867                                  section .fxnsz
  3868 00000034 F4070000                	dd	L233 - _crearThread
  3869                                  
  3870                                  ; glb crearProceso : (
  3871                                  ; prm     segmento : unsigned short
  3872                                  ; prm     tam : unsigned short
  3873                                  ; prm     tamFich : unsigned
  3874                                  ; prm     programa : * char
  3875                                  ; prm     comando : * char
  3876                                  ; prm     pindx : int
  3877                                  ;     ) int
  3878                                  section .text
  3879                                  	global	_crearProceso
  3880                                  _crearProceso:
  3881 000014DB 6655                    	push	ebp
  3882 000014DD 660FB7EC                	movzx	ebp, sp
  3883 000014E1 83EC40                  	 sub	sp,         64
  3884                                  ; loc     segmento : (@8): unsigned short
  3885                                  ; loc     tam : (@12): unsigned short
  3886                                  ; loc     tamFich : (@16): unsigned
  3887                                  ; loc     programa : (@20): * char
  3888                                  ; loc     comando : (@24): * char
  3889                                  ; loc     pindx : (@28): int
  3890                                  ; loc     cabecera : (@-4): * struct <something>
  3891                                  ; loc     i : (@-8): int
  3892                                  ; loc     j : (@-12): int
  3893                                  ; loc     despl : (@-16): unsigned short
  3894                                  ; loc     offDATADS : (@-20): unsigned short
  3895                                  ; loc     SS_NuevoProceso : (@-24): unsigned short
  3896                                  ; loc     SP_NuevoProceso : (@-28): unsigned short
  3897                                  ; loc     SR : (@-32): unsigned short
  3898                                  ; loc     tamCodigo : (@-36): unsigned short
  3899                                  ; loc     tamPila : (@-40): unsigned short
  3900                                  ; loc     argc : (@-44): int
  3901                                  ; loc     offArgv : (@-48): unsigned short
  3902                                  ; loc     ptrPila : (@-52): * unsigned short
  3903                                  ; loc     carCmd : (@-56): char
  3904                                  ; loc     dfs : (@-60): int
  3905                                  ; loc     modoAp : (@-64): unsigned short
  3906                                  ; if
  3907                                  ; RPN'ized expression: "pindx 0 < c2cPFR DPOcupados + *u &u numElem -> *u 16 == && "
  3908                                  ; Expanded expression: "(@28) *(4) 0 < [sh&&->238] c2cPFR 16 + 0 + *(4) 16 == &&[238] "
  3909                                  ; Fused expression:    "< *(@28) 0 [sh&&->238] c2cPFR + ax 16 + ax 0 == *ax 16 &&[238]  "
  3910 000014E4 668B461C                	mov	eax, [bp+28]
  3911 000014E8 6683F800                	cmp	eax, 0
  3912 000014EC 0F9CC0                  	setl	al
  3913 000014EF 660FB6C0                	movzx	eax, al
  3914                                  ; JumpIfZero
  3915 000014F3 6685C0                  	test	eax, eax
  3916 000014F6 7428                    	je	L238
  3917                                  section .relod
  3918 00000150 [FA140000]              	dd	L239
  3919                                  section .text
  3920 000014F8 66B8                    	db	0x66, 0xB8
  3921                                  L239:
  3922 000014FA [60540100]              	dd	_c2cPFR
  3923 000014FE 6683C010                	add	eax, 16
  3924 00001502 6689C3                  	mov	ebx, eax
  3925 00001505 6689DE                  	mov	esi, ebx
  3926 00001508 66C1CE04                	ror	esi, 4
  3927 0000150C 8EDE                    	mov	ds, si
  3928 0000150E 66C1EE1C                	shr	esi, 28
  3929 00001512 668B04                  	mov	eax, [si]
  3930 00001515 6683F810                	cmp	eax, 16
  3931 00001519 0F94C0                  	sete	al
  3932 0000151C 660FB6C0                	movzx	eax, al
  3933                                  L238:
  3934                                  ; JumpIfZero
  3935 00001520 6685C0                  	test	eax, eax
  3936 00001523 7409                    	je	L236
  3937                                  ; return
  3938                                  ; RPN'ized expression: "1 -u "
  3939                                  ; Expanded expression: "-1 "
  3940                                  ; Expression value: -1
  3941                                  ; Fused expression:    "-1  "
  3942 00001525 66B8FFFFFFFF            	mov	eax, -1
  3943 0000152B E9F10C                  	jmp	L234
  3944                                  L236:
  3945                                  ; loc     <something> : * struct <something>
  3946                                  ; RPN'ized expression: "cabecera ( 0 , segmento pointer ) (something240) = "
  3947                                  ; Expanded expression: "(@-4)  0  (@8) *(2)  pointer ()8 =(4) "
  3948                                  ; Fused expression:    "( 0 , *(2) (@8) , pointer )8 =(204) *(@-4) ax "
  3949 0000152E 666A00                  	push	dword 0
  3950 00001531 8B4608                  	mov	ax, [bp+8]
  3951 00001534 660FB7C0                	movzx	eax, ax
  3952 00001538 6650                    	push	eax
  3953 0000153A 9A                      	db	0x9A
  3954                                  section .relot
  3955 00000030 [3B150000]              	dd	L241
  3956                                  section .text
  3957                                  L241:
  3958 0000153B [00000000]              	dd	_pointer
  3959 0000153F 83ECF8                  	sub	sp, -8
  3960 00001542 668946FC                	mov	[bp-4], eax
  3961                                  ; if
  3962                                  ; RPN'ized expression: "pindx 0 >= "
  3963                                  ; Expanded expression: "(@28) *(4) 0 >= "
  3964                                  ; Fused expression:    ">= *(@28) 0 IF! "
  3965 00001546 668B461C                	mov	eax, [bp+28]
  3966 0000154A 6683F800                	cmp	eax, 0
  3967 0000154E 7C0A                    	jl	L242
  3968                                  ; RPN'ized expression: "i pindx = "
  3969                                  ; Expanded expression: "(@-8) (@28) *(4) =(4) "
  3970                                  ; Fused expression:    "=(204) *(@-8) *(@28) "
  3971 00001550 668B461C                	mov	eax, [bp+28]
  3972 00001554 668946F8                	mov	[bp-8], eax
  3973 00001558 EB2C                    	jmp	L243
  3974                                  L242:
  3975                                  ; else
  3976                                  ; {
  3977                                  ; loc         <something> : * struct <something>
  3978                                  ; RPN'ized expression: "i ( c2cPFR DPLibres + *u &u (something244) desencolarPC2c ) = "
  3979                                  ; Expanded expression: "(@-8)  c2cPFR 0 +  desencolarPC2c ()4 =(4) "
  3980                                  ; Fused expression:    "( c2cPFR + ax 0 , desencolarPC2c )4 =(204) *(@-8) ax "
  3981                                  section .relod
  3982 00000154 [5C150000]              	dd	L245
  3983                                  section .text
  3984 0000155A 66B8                    	db	0x66, 0xB8
  3985                                  L245:
  3986 0000155C [60540100]              	dd	_c2cPFR
  3987 00001560 6650                    	push	eax
  3988 00001562 9A                      	db	0x9A
  3989                                  section .relot
  3990 00000034 [63150000]              	dd	L246
  3991                                  section .text
  3992                                  L246:
  3993 00001563 [00000000]              	dd	_desencolarPC2c
  3994 00001567 83ECFC                  	sub	sp, -4
  3995 0000156A 668946F8                	mov	[bp-8], eax
  3996                                  ; loc         <something> : * struct <something>
  3997                                  ; RPN'ized expression: "( c2cPFR DPOcupados + *u &u (something247) , i encolarPC2c ) "
  3998                                  ; Expanded expression: " c2cPFR 16 +  (@-8) *(4)  encolarPC2c ()8 "
  3999                                  ; Fused expression:    "( c2cPFR + ax 16 , *(4) (@-8) , encolarPC2c )8 "
  4000                                  section .relod
  4001 00000158 [70150000]              	dd	L248
  4002                                  section .text
  4003 0000156E 66B8                    	db	0x66, 0xB8
  4004                                  L248:
  4005 00001570 [60540100]              	dd	_c2cPFR
  4006 00001574 6683C010                	add	eax, 16
  4007 00001578 6650                    	push	eax
  4008 0000157A 66FF76F8                	push	dword [bp-8]
  4009 0000157E 9A                      	db	0x9A
  4010                                  section .relot
  4011 00000038 [7F150000]              	dd	L249
  4012                                  section .text
  4013                                  L249:
  4014 0000157F [00000000]              	dd	_encolarPC2c
  4015 00001583 83ECF8                  	sub	sp, -8
  4016                                  ; }
  4017                                  L243:
  4018                                  ; RPN'ized expression: "descProceso i + *u &u CSProc -> *u segmento = "
  4019                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 52 + (@8) *(2) =(2) "
  4020                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 52 =(170) *ax *(@8) "
  4021                                  section .relod
  4022 0000015C [88150000]              	dd	L250
  4023                                  section .text
  4024 00001586 66B8                    	db	0x66, 0xB8
  4025                                  L250:
  4026 00001588 [00000000]              	dd	_descProceso
  4027 0000158C 6650                    	push	eax
  4028 0000158E 668B46F8                	mov	eax, [bp-8]
  4029 00001592 6669C024010000          	imul	eax, eax, 292
  4030 00001599 6689C1                  	mov	ecx, eax
  4031 0000159C 6658                    	pop	eax
  4032 0000159E 6601C8                  	add	eax, ecx
  4033 000015A1 6683C034                	add	eax, 52
  4034 000015A5 6689C3                  	mov	ebx, eax
  4035 000015A8 8B4608                  	mov	ax, [bp+8]
  4036 000015AB 660FB7C0                	movzx	eax, ax
  4037 000015AF 6689DE                  	mov	esi, ebx
  4038 000015B2 66C1CE04                	ror	esi, 4
  4039 000015B6 8EDE                    	mov	ds, si
  4040 000015B8 66C1EE1C                	shr	esi, 28
  4041 000015BC 8904                    	mov	[si], ax
  4042 000015BE 660FB7C0                	movzx	eax, ax
  4043                                  ; RPN'ized expression: "descProceso i + *u &u tamFichero -> *u tamFich = "
  4044                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 64 + (@16) *(4) =(4) "
  4045                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 64 =(204) *ax *(@16) "
  4046                                  section .relod
  4047 00000160 [C4150000]              	dd	L251
  4048                                  section .text
  4049 000015C2 66B8                    	db	0x66, 0xB8
  4050                                  L251:
  4051 000015C4 [00000000]              	dd	_descProceso
  4052 000015C8 6650                    	push	eax
  4053 000015CA 668B46F8                	mov	eax, [bp-8]
  4054 000015CE 6669C024010000          	imul	eax, eax, 292
  4055 000015D5 6689C1                  	mov	ecx, eax
  4056 000015D8 6658                    	pop	eax
  4057 000015DA 6601C8                  	add	eax, ecx
  4058 000015DD 6683C040                	add	eax, 64
  4059 000015E1 6689C3                  	mov	ebx, eax
  4060 000015E4 668B4610                	mov	eax, [bp+16]
  4061 000015E8 6689DE                  	mov	esi, ebx
  4062 000015EB 66C1CE04                	ror	esi, 4
  4063 000015EF 8EDE                    	mov	ds, si
  4064 000015F1 66C1EE1C                	shr	esi, 28
  4065 000015F5 668904                  	mov	[si], eax
  4066                                  ; RPN'ized expression: "descProceso i + *u &u tam -> *u tam = "
  4067                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 60 + (@12) *(2) =(2) "
  4068                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 60 =(170) *ax *(@12) "
  4069                                  section .relod
  4070 00000164 [FA150000]              	dd	L252
  4071                                  section .text
  4072 000015F8 66B8                    	db	0x66, 0xB8
  4073                                  L252:
  4074 000015FA [00000000]              	dd	_descProceso
  4075 000015FE 6650                    	push	eax
  4076 00001600 668B46F8                	mov	eax, [bp-8]
  4077 00001604 6669C024010000          	imul	eax, eax, 292
  4078 0000160B 6689C1                  	mov	ecx, eax
  4079 0000160E 6658                    	pop	eax
  4080 00001610 6601C8                  	add	eax, ecx
  4081 00001613 6683C03C                	add	eax, 60
  4082 00001617 6689C3                  	mov	ebx, eax
  4083 0000161A 8B460C                  	mov	ax, [bp+12]
  4084 0000161D 660FB7C0                	movzx	eax, ax
  4085 00001621 6689DE                  	mov	esi, ebx
  4086 00001624 66C1CE04                	ror	esi, 4
  4087 00001628 8EDE                    	mov	ds, si
  4088 0000162A 66C1EE1C                	shr	esi, 28
  4089 0000162E 8904                    	mov	[si], ax
  4090 00001630 660FB7C0                	movzx	eax, ax
  4091                                  ; RPN'ized expression: "( programa , descProceso i + *u &u programa -> *u strcpy ) "
  4092                                  ; Expanded expression: " (@20) *(4)  descProceso (@-8) *(4) 292 * + 68 +  strcpy ()8 "
  4093                                  ; Fused expression:    "( *(4) (@20) , descProceso push-ax * *(@-8) 292 + *sp ax + ax 68 , strcpy )8 "
  4094 00001634 66FF7614                	push	dword [bp+20]
  4095                                  section .relod
  4096 00000168 [3A160000]              	dd	L253
  4097                                  section .text
  4098 00001638 66B8                    	db	0x66, 0xB8
  4099                                  L253:
  4100 0000163A [00000000]              	dd	_descProceso
  4101 0000163E 6650                    	push	eax
  4102 00001640 668B46F8                	mov	eax, [bp-8]
  4103 00001644 6669C024010000          	imul	eax, eax, 292
  4104 0000164B 6689C1                  	mov	ecx, eax
  4105 0000164E 6658                    	pop	eax
  4106 00001650 6601C8                  	add	eax, ecx
  4107 00001653 6683C044                	add	eax, 68
  4108 00001657 6650                    	push	eax
  4109 00001659 9A                      	db	0x9A
  4110                                  section .relot
  4111 0000003C [5A160000]              	dd	L254
  4112                                  section .text
  4113                                  L254:
  4114 0000165A [00000000]              	dd	_strcpy
  4115 0000165E 83ECF8                  	sub	sp, -8
  4116                                  ; if
  4117                                  ; RPN'ized expression: "pindx 1 -u == "
  4118                                  ; Expanded expression: "(@28) *(4) -1 == "
  4119                                  ; Fused expression:    "== *(@28) -1 IF! "
  4120 00001661 668B461C                	mov	eax, [bp+28]
  4121 00001665 6683F8FF                	cmp	eax, -1
  4122 00001669 0F857A01                	jne	L255
  4123                                  ; {
  4124                                  ; RPN'ized expression: "descProceso i + *u &u pid -> *u ( nuevoPid ) = "
  4125                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 0 +  nuevoPid ()0 =(4) "
  4126                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 0 push-ax ( nuevoPid )0 =(204) **sp ax "
  4127                                  section .relod
  4128 0000016C [6F160000]              	dd	L257
  4129                                  section .text
  4130 0000166D 66B8                    	db	0x66, 0xB8
  4131                                  L257:
  4132 0000166F [00000000]              	dd	_descProceso
  4133 00001673 6650                    	push	eax
  4134 00001675 668B46F8                	mov	eax, [bp-8]
  4135 00001679 6669C024010000          	imul	eax, eax, 292
  4136 00001680 6689C1                  	mov	ecx, eax
  4137 00001683 6658                    	pop	eax
  4138 00001685 6601C8                  	add	eax, ecx
  4139 00001688 6650                    	push	eax
  4140 0000168A 9A                      	db	0x9A
  4141                                  section .relot
  4142 00000040 [8B160000]              	dd	L258
  4143                                  section .text
  4144                                  L258:
  4145 0000168B [00000000]              	dd	_nuevoPid
  4146 0000168F 665B                    	pop	ebx
  4147 00001691 6689DE                  	mov	esi, ebx
  4148 00001694 66C1CE04                	ror	esi, 4
  4149 00001698 8EDE                    	mov	ds, si
  4150 0000169A 66C1EE1C                	shr	esi, 28
  4151 0000169E 668904                  	mov	[si], eax
  4152                                  ; RPN'ized expression: "descProceso i + *u &u noStatus -> *u FALSE = "
  4153                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 4 + 0 =(4) "
  4154                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 4 =(204) *ax 0 "
  4155                                  section .relod
  4156 00000170 [A3160000]              	dd	L259
  4157                                  section .text
  4158 000016A1 66B8                    	db	0x66, 0xB8
  4159                                  L259:
  4160 000016A3 [00000000]              	dd	_descProceso
  4161 000016A7 6650                    	push	eax
  4162 000016A9 668B46F8                	mov	eax, [bp-8]
  4163 000016AD 6669C024010000          	imul	eax, eax, 292
  4164 000016B4 6689C1                  	mov	ecx, eax
  4165 000016B7 6658                    	pop	eax
  4166 000016B9 6601C8                  	add	eax, ecx
  4167 000016BC 6683C004                	add	eax, 4
  4168 000016C0 6689C3                  	mov	ebx, eax
  4169 000016C3 66B800000000            	mov	eax, 0
  4170 000016C9 6689DE                  	mov	esi, ebx
  4171 000016CC 66C1CE04                	ror	esi, 4
  4172 000016D0 8EDE                    	mov	ds, si
  4173 000016D2 66C1EE1C                	shr	esi, 28
  4174 000016D6 668904                  	mov	[si], eax
  4175                                  ; RPN'ized expression: "descProceso i + *u &u ppindx -> *u indProcesoActual = "
  4176                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 12 + indProcesoActual *(4) =(4) "
  4177                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 12 push-ax indProcesoActual =(204) **sp *ax "
  4178                                  section .relod
  4179 00000174 [DB160000]              	dd	L260
  4180                                  section .text
  4181 000016D9 66B8                    	db	0x66, 0xB8
  4182                                  L260:
  4183 000016DB [00000000]              	dd	_descProceso
  4184 000016DF 6650                    	push	eax
  4185 000016E1 668B46F8                	mov	eax, [bp-8]
  4186 000016E5 6669C024010000          	imul	eax, eax, 292
  4187 000016EC 6689C1                  	mov	ecx, eax
  4188 000016EF 6658                    	pop	eax
  4189 000016F1 6601C8                  	add	eax, ecx
  4190 000016F4 6683C00C                	add	eax, 12
  4191 000016F8 6650                    	push	eax
  4192                                  section .relod
  4193 00000178 [FC160000]              	dd	L261
  4194                                  section .text
  4195 000016FA 66B8                    	db	0x66, 0xB8
  4196                                  L261:
  4197 000016FC [40000000]              	dd	_indProcesoActual
  4198 00001700 6689C3                  	mov	ebx, eax
  4199 00001703 6689DE                  	mov	esi, ebx
  4200 00001706 66C1CE04                	ror	esi, 4
  4201 0000170A 8EDE                    	mov	ds, si
  4202 0000170C 66C1EE1C                	shr	esi, 28
  4203 00001710 668B04                  	mov	eax, [si]
  4204 00001713 665B                    	pop	ebx
  4205 00001715 6689DE                  	mov	esi, ebx
  4206 00001718 66C1CE04                	ror	esi, 4
  4207 0000171C 8EDE                    	mov	ds, si
  4208 0000171E 66C1EE1C                	shr	esi, 28
  4209 00001722 668904                  	mov	[si], eax
  4210                                  ; RPN'ized expression: "descProceso i + *u &u hpindx -> *u 1 -u = "
  4211                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 16 + -1 =(4) "
  4212                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 16 =(204) *ax -1 "
  4213                                  section .relod
  4214 0000017C [27170000]              	dd	L262
  4215                                  section .text
  4216 00001725 66B8                    	db	0x66, 0xB8
  4217                                  L262:
  4218 00001727 [00000000]              	dd	_descProceso
  4219 0000172B 6650                    	push	eax
  4220 0000172D 668B46F8                	mov	eax, [bp-8]
  4221 00001731 6669C024010000          	imul	eax, eax, 292
  4222 00001738 6689C1                  	mov	ecx, eax
  4223 0000173B 6658                    	pop	eax
  4224 0000173D 6601C8                  	add	eax, ecx
  4225 00001740 6683C010                	add	eax, 16
  4226 00001744 6689C3                  	mov	ebx, eax
  4227 00001747 66B8FFFFFFFF            	mov	eax, -1
  4228 0000174D 6689DE                  	mov	esi, ebx
  4229 00001750 66C1CE04                	ror	esi, 4
  4230 00001754 8EDE                    	mov	ds, si
  4231 00001756 66C1EE1C                	shr	esi, 28
  4232 0000175A 668904                  	mov	[si], eax
  4233                                  ; loc         <something> : * struct <something>
  4234                                  ; loc         <something> : * struct <something>
  4235                                  ; RPN'ized expression: "( TRUE , 16 i + , e2PFR &u e2Hijos -> *u &u (something264) , descProceso i + *u &u c2cHijos -> *u &u (something263) inicializarPC2c ) "
  4236                                  ; Expanded expression: " 1  16 (@-8) *(4) +  e2PFR 24816 +  descProceso (@-8) *(4) 292 * + 20 +  inicializarPC2c ()16 "
  4237                                  ; Fused expression:    "( 1 , + 16 *(@-8) , e2PFR + ax 24816 , descProceso push-ax * *(@-8) 292 + *sp ax + ax 20 , inicializarPC2c )16 "
  4238 0000175D 666A01                  	push	dword 1
  4239 00001760 66B810000000            	mov	eax, 16
  4240 00001766 660346F8                	add	eax, [bp-8]
  4241 0000176A 6650                    	push	eax
  4242                                  section .relod
  4243 00000180 [6E170000]              	dd	L265
  4244                                  section .text
  4245 0000176C 66B8                    	db	0x66, 0xB8
  4246                                  L265:
  4247 0000176E [20550100]              	dd	_e2PFR
  4248 00001772 6605F0600000            	add	eax, 24816
  4249 00001778 6650                    	push	eax
  4250                                  section .relod
  4251 00000184 [7C170000]              	dd	L266
  4252                                  section .text
  4253 0000177A 66B8                    	db	0x66, 0xB8
  4254                                  L266:
  4255 0000177C [00000000]              	dd	_descProceso
  4256 00001780 6650                    	push	eax
  4257 00001782 668B46F8                	mov	eax, [bp-8]
  4258 00001786 6669C024010000          	imul	eax, eax, 292
  4259 0000178D 6689C1                  	mov	ecx, eax
  4260 00001790 6658                    	pop	eax
  4261 00001792 6601C8                  	add	eax, ecx
  4262 00001795 6683C014                	add	eax, 20
  4263 00001799 6650                    	push	eax
  4264 0000179B 9A                      	db	0x9A
  4265                                  section .relot
  4266 00000044 [9C170000]              	dd	L267
  4267                                  section .text
  4268                                  L267:
  4269 0000179C [00000000]              	dd	_inicializarPC2c
  4270 000017A0 83ECF0                  	sub	sp, -16
  4271                                  ; loc         <something> : * struct <something>
  4272                                  ; RPN'ized expression: "( descProceso indProcesoActual + *u &u c2cHijos -> *u &u (something268) , i encolarPC2c ) "
  4273                                  ; Expanded expression: " descProceso indProcesoActual *(4) 292 * + 20 +  (@-8) *(4)  encolarPC2c ()8 "
  4274                                  ; Fused expression:    "( descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 20 , *(4) (@-8) , encolarPC2c )8 "
  4275                                  section .relod
  4276 00000188 [A5170000]              	dd	L269
  4277                                  section .text
  4278 000017A3 66B8                    	db	0x66, 0xB8
  4279                                  L269:
  4280 000017A5 [00000000]              	dd	_descProceso
  4281 000017A9 6650                    	push	eax
  4282                                  section .relod
  4283 0000018C [AD170000]              	dd	L270
  4284                                  section .text
  4285 000017AB 66B8                    	db	0x66, 0xB8
  4286                                  L270:
  4287 000017AD [40000000]              	dd	_indProcesoActual
  4288 000017B1 6689C3                  	mov	ebx, eax
  4289 000017B4 6689DE                  	mov	esi, ebx
  4290 000017B7 66C1CE04                	ror	esi, 4
  4291 000017BB 8EDE                    	mov	ds, si
  4292 000017BD 66C1EE1C                	shr	esi, 28
  4293 000017C1 668B04                  	mov	eax, [si]
  4294 000017C4 6669C024010000          	imul	eax, eax, 292
  4295 000017CB 6689C1                  	mov	ecx, eax
  4296 000017CE 6658                    	pop	eax
  4297 000017D0 6601C8                  	add	eax, ecx
  4298 000017D3 6683C014                	add	eax, 20
  4299 000017D7 6650                    	push	eax
  4300 000017D9 66FF76F8                	push	dword [bp-8]
  4301 000017DD 9A                      	db	0x9A
  4302                                  section .relot
  4303 00000048 [DE170000]              	dd	L271
  4304                                  section .text
  4305                                  L271:
  4306 000017DE [00000000]              	dd	_encolarPC2c
  4307 000017E2 83ECF8                  	sub	sp, -8
  4308                                  ; }
  4309 000017E5 EB18                    	jmp	L256
  4310                                  L255:
  4311                                  ; else
  4312                                  ; loc     <something> : * struct <something>
  4313                                  ; RPN'ized expression: "( c2cPFR POrdenados + *u &u (something272) , i eliminarPC2c ) "
  4314                                  ; Expanded expression: " c2cPFR 96 +  (@-8) *(4)  eliminarPC2c ()8 "
  4315                                  ; Fused expression:    "( c2cPFR + ax 96 , *(4) (@-8) , eliminarPC2c )8 "
  4316                                  section .relod
  4317 00000190 [E9170000]              	dd	L273
  4318                                  section .text
  4319 000017E7 66B8                    	db	0x66, 0xB8
  4320                                  L273:
  4321 000017E9 [60540100]              	dd	_c2cPFR
  4322 000017ED 6683C060                	add	eax, 96
  4323 000017F1 6650                    	push	eax
  4324 000017F3 66FF76F8                	push	dword [bp-8]
  4325 000017F7 9A                      	db	0x9A
  4326                                  section .relot
  4327 0000004C [F8170000]              	dd	L274
  4328                                  section .text
  4329                                  L274:
  4330 000017F8 [00000000]              	dd	_eliminarPC2c
  4331 000017FC 83ECF8                  	sub	sp, -8
  4332                                  L256:
  4333                                  ; RPN'ized expression: "descThread i + *u &u estado -> *u preparado = "
  4334                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 4 + 1 =(4) "
  4335                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 4 =(204) *ax 1 "
  4336                                  section .relod
  4337 00000194 [01180000]              	dd	L275
  4338                                  section .text
  4339 000017FF 66B8                    	db	0x66, 0xB8
  4340                                  L275:
  4341 00001801 [40120000]              	dd	_descThread
  4342 00001805 6650                    	push	eax
  4343 00001807 668B46F8                	mov	eax, [bp-8]
  4344 0000180B 666BC028                	imul	eax, eax, 40
  4345 0000180F 6689C1                  	mov	ecx, eax
  4346 00001812 6658                    	pop	eax
  4347 00001814 6601C8                  	add	eax, ecx
  4348 00001817 6683C004                	add	eax, 4
  4349 0000181B 6689C3                  	mov	ebx, eax
  4350 0000181E 66B801000000            	mov	eax, 1
  4351 00001824 6689DE                  	mov	esi, ebx
  4352 00001827 66C1CE04                	ror	esi, 4
  4353 0000182B 8EDE                    	mov	ds, si
  4354 0000182D 66C1EE1C                	shr	esi, 28
  4355 00001831 668904                  	mov	[si], eax
  4356                                  ; RPN'ized expression: "( i registrarEnPOrdenados ) "
  4357                                  ; Expanded expression: " (@-8) *(4)  registrarEnPOrdenados ()4 "
  4358                                  ; Fused expression:    "( *(4) (@-8) , registrarEnPOrdenados )4 "
  4359 00001834 66FF76F8                	push	dword [bp-8]
  4360 00001838 9A                      	db	0x9A
  4361                                  section .relot
  4362 00000050 [39180000]              	dd	L276
  4363                                  section .text
  4364                                  L276:
  4365 00001839 [B30A0000]              	dd	_registrarEnPOrdenados
  4366 0000183D 83ECFC                  	sub	sp, -4
  4367                                  ; RPN'ized expression: "argc ( offArgv &u , offDATADS , SS_NuevoProceso , i ponerArgs ) = "
  4368                                  ; Expanded expression: "(@-44)  (@-48)  (@-20) *(2)  (@-24) *(2)  (@-8) *(4)  ponerArgs ()16 =(4) "
  4369                                  ; Fused expression:    "( (@-48) , *(2) (@-20) , *(2) (@-24) , *(4) (@-8) , ponerArgs )16 =(204) *(@-44) ax "
  4370 00001840 6631C0                  	xor	eax, eax
  4371 00001843 8CD0                    	mov	ax, ss
  4372 00001845 66C1E004                	shl	eax, 4
  4373 00001849 66678D4405D0            	lea	eax, [ebp+eax-48]
  4374 0000184F 6650                    	push	eax
  4375 00001851 8B46EC                  	mov	ax, [bp-20]
  4376 00001854 660FB7C0                	movzx	eax, ax
  4377 00001858 6650                    	push	eax
  4378 0000185A 8B46E8                  	mov	ax, [bp-24]
  4379 0000185D 660FB7C0                	movzx	eax, ax
  4380 00001861 6650                    	push	eax
  4381 00001863 66FF76F8                	push	dword [bp-8]
  4382 00001867 9A                      	db	0x9A
  4383                                  section .relot
  4384 00000054 [68180000]              	dd	L277
  4385                                  section .text
  4386                                  L277:
  4387 00001868 [71090000]              	dd	_ponerArgs
  4388 0000186C 83ECF0                  	sub	sp, -16
  4389 0000186F 668946D4                	mov	[bp-44], eax
  4390                                  ; loc     <something> : * unsigned short
  4391                                  ; RPN'ized expression: "ptrPila ( SP_NuevoProceso , SS_NuevoProceso pointer ) (something278) = "
  4392                                  ; Expanded expression: "(@-52)  (@-28) *(2)  (@-24) *(2)  pointer ()8 =(4) "
  4393                                  ; Fused expression:    "( *(2) (@-28) , *(2) (@-24) , pointer )8 =(204) *(@-52) ax "
  4394 00001873 8B46E4                  	mov	ax, [bp-28]
  4395 00001876 660FB7C0                	movzx	eax, ax
  4396 0000187A 6650                    	push	eax
  4397 0000187C 8B46E8                  	mov	ax, [bp-24]
  4398 0000187F 660FB7C0                	movzx	eax, ax
  4399 00001883 6650                    	push	eax
  4400 00001885 9A                      	db	0x9A
  4401                                  section .relot
  4402 00000058 [86180000]              	dd	L279
  4403                                  section .text
  4404                                  L279:
  4405 00001886 [00000000]              	dd	_pointer
  4406 0000188A 83ECF8                  	sub	sp, -8
  4407 0000188D 668946CC                	mov	[bp-52], eax
  4408                                  ; RPN'ized expression: "ptrPila -- *u offArgv = "
  4409                                  ; Expanded expression: "(@-52) 2 -=(4) (@-48) *(2) =(2) "
  4410                                  ; Fused expression:    "-=(204) *(@-52) 2 =(170) *ax *(@-48) "
  4411 00001891 668B46CC                	mov	eax, [bp-52]
  4412 00001895 6683E802                	sub	eax, 2
  4413 00001899 668946CC                	mov	[bp-52], eax
  4414 0000189D 6689C3                  	mov	ebx, eax
  4415 000018A0 8B46D0                  	mov	ax, [bp-48]
  4416 000018A3 660FB7C0                	movzx	eax, ax
  4417 000018A7 6689DE                  	mov	esi, ebx
  4418 000018AA 66C1CE04                	ror	esi, 4
  4419 000018AE 8EDE                    	mov	ds, si
  4420 000018B0 66C1EE1C                	shr	esi, 28
  4421 000018B4 8904                    	mov	[si], ax
  4422 000018B6 660FB7C0                	movzx	eax, ax
  4423                                  ; RPN'ized expression: "ptrPila -- *u argc = "
  4424                                  ; Expanded expression: "(@-52) 2 -=(4) (@-44) *(4) =(2) "
  4425                                  ; Fused expression:    "-=(204) *(@-52) 2 =(172) *ax *(@-44) "
  4426 000018BA 668B46CC                	mov	eax, [bp-52]
  4427 000018BE 6683E802                	sub	eax, 2
  4428 000018C2 668946CC                	mov	[bp-52], eax
  4429 000018C6 6689C3                  	mov	ebx, eax
  4430 000018C9 668B46D4                	mov	eax, [bp-44]
  4431 000018CD 6689DE                  	mov	esi, ebx
  4432 000018D0 66C1CE04                	ror	esi, 4
  4433 000018D4 8EDE                    	mov	ds, si
  4434 000018D6 66C1EE1C                	shr	esi, 28
  4435 000018DA 8904                    	mov	[si], ax
  4436 000018DC 660FB7C0                	movzx	eax, ax
  4437                                  ; loc     <something> : * unsigned char
  4438                                  ; loc     <something> : union <something>
  4439                                  ; RPN'ized expression: "SP_NuevoProceso ( ptrPila (something280) off ) <something281> sizeof - = "
  4440                                  ; Expanded expression: "(@-28)  (@-52) *(4)  off ()4 42u - =(2) "
  4441                                  ; Fused expression:    "( *(4) (@-52) , off )4 - ax 42u =(172) *(@-28) ax "
  4442 000018E0 66FF76CC                	push	dword [bp-52]
  4443 000018E4 9A                      	db	0x9A
  4444                                  section .relot
  4445 0000005C [E5180000]              	dd	L282
  4446                                  section .text
  4447                                  L282:
  4448 000018E5 [00000000]              	dd	_off
  4449 000018E9 83ECFC                  	sub	sp, -4
  4450 000018EC 6683E82A                	sub	eax, 42
  4451 000018F0 8946E4                  	mov	[bp-28], ax
  4452 000018F3 660FB7C0                	movzx	eax, ax
  4453                                  ; loc     <something> : * union <something>
  4454                                  ; loc     <something> : unsigned
  4455                                  ; loc     <something> : unsigned
  4456                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u SS_NuevoProceso (something284) 4 << SP_NuevoProceso (something285) + (something283) = "
  4457                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + (@-24) *(2) 4 << (@-28) *(2) + =(4) "
  4458                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 push-ax << *(@-24) 4 + ax *(@-28) =(204) **sp ax "
  4459                                  section .relod
  4460 00000198 [F9180000]              	dd	L286
  4461                                  section .text
  4462 000018F7 66B8                    	db	0x66, 0xB8
  4463                                  L286:
  4464 000018F9 [40120000]              	dd	_descThread
  4465 000018FD 6650                    	push	eax
  4466 000018FF 668B46F8                	mov	eax, [bp-8]
  4467 00001903 666BC028                	imul	eax, eax, 40
  4468 00001907 6689C1                  	mov	ecx, eax
  4469 0000190A 6658                    	pop	eax
  4470 0000190C 6601C8                  	add	eax, ecx
  4471 0000190F 6683C00C                	add	eax, 12
  4472 00001913 6650                    	push	eax
  4473 00001915 8B46E8                  	mov	ax, [bp-24]
  4474 00001918 660FB7C0                	movzx	eax, ax
  4475 0000191C 66C1E004                	shl	eax, 4
  4476 00001920 660FB74EE4              	movzx	ecx, word [bp-28]
  4477 00001925 6601C8                  	add	eax, ecx
  4478 00001928 665B                    	pop	ebx
  4479 0000192A 6689DE                  	mov	esi, ebx
  4480 0000192D 66C1CE04                	ror	esi, 4
  4481 00001931 8EDE                    	mov	ds, si
  4482 00001933 66C1EE1C                	shr	esi, 28
  4483 00001937 668904                  	mov	[si], eax
  4484                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u DS -> *u SS_NuevoProceso = "
  4485                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 0 + (@-24) *(2) =(2) "
  4486                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 0 =(170) *ax *(@-24) "
  4487                                  section .relod
  4488 0000019C [3C190000]              	dd	L287
  4489                                  section .text
  4490 0000193A 66B8                    	db	0x66, 0xB8
  4491                                  L287:
  4492 0000193C [40120000]              	dd	_descThread
  4493 00001940 6650                    	push	eax
  4494 00001942 668B46F8                	mov	eax, [bp-8]
  4495 00001946 666BC028                	imul	eax, eax, 40
  4496 0000194A 6689C1                  	mov	ecx, eax
  4497 0000194D 6658                    	pop	eax
  4498 0000194F 6601C8                  	add	eax, ecx
  4499 00001952 6683C00C                	add	eax, 12
  4500 00001956 6689C3                  	mov	ebx, eax
  4501 00001959 6689DE                  	mov	esi, ebx
  4502 0000195C 66C1CE04                	ror	esi, 4
  4503 00001960 8EDE                    	mov	ds, si
  4504 00001962 66C1EE1C                	shr	esi, 28
  4505 00001966 668B04                  	mov	eax, [si]
  4506 00001969 6689C3                  	mov	ebx, eax
  4507 0000196C 8B46E8                  	mov	ax, [bp-24]
  4508 0000196F 660FB7C0                	movzx	eax, ax
  4509 00001973 6689DE                  	mov	esi, ebx
  4510 00001976 66C1CE04                	ror	esi, 4
  4511 0000197A 8EDE                    	mov	ds, si
  4512 0000197C 66C1EE1C                	shr	esi, 28
  4513 00001980 8904                    	mov	[si], ax
  4514 00001982 660FB7C0                	movzx	eax, ax
  4515                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u ES -> *u SS_NuevoProceso = "
  4516                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 2 + (@-24) *(2) =(2) "
  4517                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 2 =(170) *ax *(@-24) "
  4518                                  section .relod
  4519 000001A0 [88190000]              	dd	L288
  4520                                  section .text
  4521 00001986 66B8                    	db	0x66, 0xB8
  4522                                  L288:
  4523 00001988 [40120000]              	dd	_descThread
  4524 0000198C 6650                    	push	eax
  4525 0000198E 668B46F8                	mov	eax, [bp-8]
  4526 00001992 666BC028                	imul	eax, eax, 40
  4527 00001996 6689C1                  	mov	ecx, eax
  4528 00001999 6658                    	pop	eax
  4529 0000199B 6601C8                  	add	eax, ecx
  4530 0000199E 6683C00C                	add	eax, 12
  4531 000019A2 6689C3                  	mov	ebx, eax
  4532 000019A5 6689DE                  	mov	esi, ebx
  4533 000019A8 66C1CE04                	ror	esi, 4
  4534 000019AC 8EDE                    	mov	ds, si
  4535 000019AE 66C1EE1C                	shr	esi, 28
  4536 000019B2 668B04                  	mov	eax, [si]
  4537 000019B5 6683C002                	add	eax, 2
  4538 000019B9 6689C3                  	mov	ebx, eax
  4539 000019BC 8B46E8                  	mov	ax, [bp-24]
  4540 000019BF 660FB7C0                	movzx	eax, ax
  4541 000019C3 6689DE                  	mov	esi, ebx
  4542 000019C6 66C1CE04                	ror	esi, 4
  4543 000019CA 8EDE                    	mov	ds, si
  4544 000019CC 66C1EE1C                	shr	esi, 28
  4545 000019D0 8904                    	mov	[si], ax
  4546 000019D2 660FB7C0                	movzx	eax, ax
  4547                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EDI -> *u 0 = "
  4548                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 4 + 0 =(4) "
  4549                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 4 =(204) *ax 0 "
  4550                                  section .relod
  4551 000001A4 [D8190000]              	dd	L289
  4552                                  section .text
  4553 000019D6 66B8                    	db	0x66, 0xB8
  4554                                  L289:
  4555 000019D8 [40120000]              	dd	_descThread
  4556 000019DC 6650                    	push	eax
  4557 000019DE 668B46F8                	mov	eax, [bp-8]
  4558 000019E2 666BC028                	imul	eax, eax, 40
  4559 000019E6 6689C1                  	mov	ecx, eax
  4560 000019E9 6658                    	pop	eax
  4561 000019EB 6601C8                  	add	eax, ecx
  4562 000019EE 6683C00C                	add	eax, 12
  4563 000019F2 6689C3                  	mov	ebx, eax
  4564 000019F5 6689DE                  	mov	esi, ebx
  4565 000019F8 66C1CE04                	ror	esi, 4
  4566 000019FC 8EDE                    	mov	ds, si
  4567 000019FE 66C1EE1C                	shr	esi, 28
  4568 00001A02 668B04                  	mov	eax, [si]
  4569 00001A05 6683C004                	add	eax, 4
  4570 00001A09 6689C3                  	mov	ebx, eax
  4571 00001A0C 66B800000000            	mov	eax, 0
  4572 00001A12 6689DE                  	mov	esi, ebx
  4573 00001A15 66C1CE04                	ror	esi, 4
  4574 00001A19 8EDE                    	mov	ds, si
  4575 00001A1B 66C1EE1C                	shr	esi, 28
  4576 00001A1F 668904                  	mov	[si], eax
  4577                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u ESI -> *u 0 = "
  4578                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 8 + 0 =(4) "
  4579                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 8 =(204) *ax 0 "
  4580                                  section .relod
  4581 000001A8 [241A0000]              	dd	L290
  4582                                  section .text
  4583 00001A22 66B8                    	db	0x66, 0xB8
  4584                                  L290:
  4585 00001A24 [40120000]              	dd	_descThread
  4586 00001A28 6650                    	push	eax
  4587 00001A2A 668B46F8                	mov	eax, [bp-8]
  4588 00001A2E 666BC028                	imul	eax, eax, 40
  4589 00001A32 6689C1                  	mov	ecx, eax
  4590 00001A35 6658                    	pop	eax
  4591 00001A37 6601C8                  	add	eax, ecx
  4592 00001A3A 6683C00C                	add	eax, 12
  4593 00001A3E 6689C3                  	mov	ebx, eax
  4594 00001A41 6689DE                  	mov	esi, ebx
  4595 00001A44 66C1CE04                	ror	esi, 4
  4596 00001A48 8EDE                    	mov	ds, si
  4597 00001A4A 66C1EE1C                	shr	esi, 28
  4598 00001A4E 668B04                  	mov	eax, [si]
  4599 00001A51 6683C008                	add	eax, 8
  4600 00001A55 6689C3                  	mov	ebx, eax
  4601 00001A58 66B800000000            	mov	eax, 0
  4602 00001A5E 6689DE                  	mov	esi, ebx
  4603 00001A61 66C1CE04                	ror	esi, 4
  4604 00001A65 8EDE                    	mov	ds, si
  4605 00001A67 66C1EE1C                	shr	esi, 28
  4606 00001A6B 668904                  	mov	[si], eax
  4607                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EBP -> *u cabecera SP0 -> *u 6 - = "
  4608                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 12 + (@-4) *(4) 16 + *(2) 6 - =(4) "
  4609                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 12 push-ax + *(@-4) 16 - *ax 6 =(204) **sp ax "
  4610                                  section .relod
  4611 000001AC [701A0000]              	dd	L291
  4612                                  section .text
  4613 00001A6E 66B8                    	db	0x66, 0xB8
  4614                                  L291:
  4615 00001A70 [40120000]              	dd	_descThread
  4616 00001A74 6650                    	push	eax
  4617 00001A76 668B46F8                	mov	eax, [bp-8]
  4618 00001A7A 666BC028                	imul	eax, eax, 40
  4619 00001A7E 6689C1                  	mov	ecx, eax
  4620 00001A81 6658                    	pop	eax
  4621 00001A83 6601C8                  	add	eax, ecx
  4622 00001A86 6683C00C                	add	eax, 12
  4623 00001A8A 6689C3                  	mov	ebx, eax
  4624 00001A8D 6689DE                  	mov	esi, ebx
  4625 00001A90 66C1CE04                	ror	esi, 4
  4626 00001A94 8EDE                    	mov	ds, si
  4627 00001A96 66C1EE1C                	shr	esi, 28
  4628 00001A9A 668B04                  	mov	eax, [si]
  4629 00001A9D 6683C00C                	add	eax, 12
  4630 00001AA1 6650                    	push	eax
  4631 00001AA3 668B46FC                	mov	eax, [bp-4]
  4632 00001AA7 6683C010                	add	eax, 16
  4633 00001AAB 6689C3                  	mov	ebx, eax
  4634 00001AAE 6689DE                  	mov	esi, ebx
  4635 00001AB1 66C1CE04                	ror	esi, 4
  4636 00001AB5 8EDE                    	mov	ds, si
  4637 00001AB7 66C1EE1C                	shr	esi, 28
  4638 00001ABB 8B04                    	mov	ax, [si]
  4639 00001ABD 660FB7C0                	movzx	eax, ax
  4640 00001AC1 6683E806                	sub	eax, 6
  4641 00001AC5 665B                    	pop	ebx
  4642 00001AC7 6689DE                  	mov	esi, ebx
  4643 00001ACA 66C1CE04                	ror	esi, 4
  4644 00001ACE 8EDE                    	mov	ds, si
  4645 00001AD0 66C1EE1C                	shr	esi, 28
  4646 00001AD4 668904                  	mov	[si], eax
  4647                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u ESP -> *u cabecera SP0 -> *u 6 - = "
  4648                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 16 + (@-4) *(4) 16 + *(2) 6 - =(4) "
  4649                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 16 push-ax + *(@-4) 16 - *ax 6 =(204) **sp ax "
  4650                                  section .relod
  4651 000001B0 [D91A0000]              	dd	L292
  4652                                  section .text
  4653 00001AD7 66B8                    	db	0x66, 0xB8
  4654                                  L292:
  4655 00001AD9 [40120000]              	dd	_descThread
  4656 00001ADD 6650                    	push	eax
  4657 00001ADF 668B46F8                	mov	eax, [bp-8]
  4658 00001AE3 666BC028                	imul	eax, eax, 40
  4659 00001AE7 6689C1                  	mov	ecx, eax
  4660 00001AEA 6658                    	pop	eax
  4661 00001AEC 6601C8                  	add	eax, ecx
  4662 00001AEF 6683C00C                	add	eax, 12
  4663 00001AF3 6689C3                  	mov	ebx, eax
  4664 00001AF6 6689DE                  	mov	esi, ebx
  4665 00001AF9 66C1CE04                	ror	esi, 4
  4666 00001AFD 8EDE                    	mov	ds, si
  4667 00001AFF 66C1EE1C                	shr	esi, 28
  4668 00001B03 668B04                  	mov	eax, [si]
  4669 00001B06 6683C010                	add	eax, 16
  4670 00001B0A 6650                    	push	eax
  4671 00001B0C 668B46FC                	mov	eax, [bp-4]
  4672 00001B10 6683C010                	add	eax, 16
  4673 00001B14 6689C3                  	mov	ebx, eax
  4674 00001B17 6689DE                  	mov	esi, ebx
  4675 00001B1A 66C1CE04                	ror	esi, 4
  4676 00001B1E 8EDE                    	mov	ds, si
  4677 00001B20 66C1EE1C                	shr	esi, 28
  4678 00001B24 8B04                    	mov	ax, [si]
  4679 00001B26 660FB7C0                	movzx	eax, ax
  4680 00001B2A 6683E806                	sub	eax, 6
  4681 00001B2E 665B                    	pop	ebx
  4682 00001B30 6689DE                  	mov	esi, ebx
  4683 00001B33 66C1CE04                	ror	esi, 4
  4684 00001B37 8EDE                    	mov	ds, si
  4685 00001B39 66C1EE1C                	shr	esi, 28
  4686 00001B3D 668904                  	mov	[si], eax
  4687                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EBX -> *u 0 = "
  4688                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 20 + 0 =(4) "
  4689                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 20 =(204) *ax 0 "
  4690                                  section .relod
  4691 000001B4 [421B0000]              	dd	L293
  4692                                  section .text
  4693 00001B40 66B8                    	db	0x66, 0xB8
  4694                                  L293:
  4695 00001B42 [40120000]              	dd	_descThread
  4696 00001B46 6650                    	push	eax
  4697 00001B48 668B46F8                	mov	eax, [bp-8]
  4698 00001B4C 666BC028                	imul	eax, eax, 40
  4699 00001B50 6689C1                  	mov	ecx, eax
  4700 00001B53 6658                    	pop	eax
  4701 00001B55 6601C8                  	add	eax, ecx
  4702 00001B58 6683C00C                	add	eax, 12
  4703 00001B5C 6689C3                  	mov	ebx, eax
  4704 00001B5F 6689DE                  	mov	esi, ebx
  4705 00001B62 66C1CE04                	ror	esi, 4
  4706 00001B66 8EDE                    	mov	ds, si
  4707 00001B68 66C1EE1C                	shr	esi, 28
  4708 00001B6C 668B04                  	mov	eax, [si]
  4709 00001B6F 6683C014                	add	eax, 20
  4710 00001B73 6689C3                  	mov	ebx, eax
  4711 00001B76 66B800000000            	mov	eax, 0
  4712 00001B7C 6689DE                  	mov	esi, ebx
  4713 00001B7F 66C1CE04                	ror	esi, 4
  4714 00001B83 8EDE                    	mov	ds, si
  4715 00001B85 66C1EE1C                	shr	esi, 28
  4716 00001B89 668904                  	mov	[si], eax
  4717                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EDX -> *u 0 = "
  4718                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 24 + 0 =(4) "
  4719                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 24 =(204) *ax 0 "
  4720                                  section .relod
  4721 000001B8 [8E1B0000]              	dd	L294
  4722                                  section .text
  4723 00001B8C 66B8                    	db	0x66, 0xB8
  4724                                  L294:
  4725 00001B8E [40120000]              	dd	_descThread
  4726 00001B92 6650                    	push	eax
  4727 00001B94 668B46F8                	mov	eax, [bp-8]
  4728 00001B98 666BC028                	imul	eax, eax, 40
  4729 00001B9C 6689C1                  	mov	ecx, eax
  4730 00001B9F 6658                    	pop	eax
  4731 00001BA1 6601C8                  	add	eax, ecx
  4732 00001BA4 6683C00C                	add	eax, 12
  4733 00001BA8 6689C3                  	mov	ebx, eax
  4734 00001BAB 6689DE                  	mov	esi, ebx
  4735 00001BAE 66C1CE04                	ror	esi, 4
  4736 00001BB2 8EDE                    	mov	ds, si
  4737 00001BB4 66C1EE1C                	shr	esi, 28
  4738 00001BB8 668B04                  	mov	eax, [si]
  4739 00001BBB 6683C018                	add	eax, 24
  4740 00001BBF 6689C3                  	mov	ebx, eax
  4741 00001BC2 66B800000000            	mov	eax, 0
  4742 00001BC8 6689DE                  	mov	esi, ebx
  4743 00001BCB 66C1CE04                	ror	esi, 4
  4744 00001BCF 8EDE                    	mov	ds, si
  4745 00001BD1 66C1EE1C                	shr	esi, 28
  4746 00001BD5 668904                  	mov	[si], eax
  4747                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u ECX -> *u 0 = "
  4748                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 28 + 0 =(4) "
  4749                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 28 =(204) *ax 0 "
  4750                                  section .relod
  4751 000001BC [DA1B0000]              	dd	L295
  4752                                  section .text
  4753 00001BD8 66B8                    	db	0x66, 0xB8
  4754                                  L295:
  4755 00001BDA [40120000]              	dd	_descThread
  4756 00001BDE 6650                    	push	eax
  4757 00001BE0 668B46F8                	mov	eax, [bp-8]
  4758 00001BE4 666BC028                	imul	eax, eax, 40
  4759 00001BE8 6689C1                  	mov	ecx, eax
  4760 00001BEB 6658                    	pop	eax
  4761 00001BED 6601C8                  	add	eax, ecx
  4762 00001BF0 6683C00C                	add	eax, 12
  4763 00001BF4 6689C3                  	mov	ebx, eax
  4764 00001BF7 6689DE                  	mov	esi, ebx
  4765 00001BFA 66C1CE04                	ror	esi, 4
  4766 00001BFE 8EDE                    	mov	ds, si
  4767 00001C00 66C1EE1C                	shr	esi, 28
  4768 00001C04 668B04                  	mov	eax, [si]
  4769 00001C07 6683C01C                	add	eax, 28
  4770 00001C0B 6689C3                  	mov	ebx, eax
  4771 00001C0E 66B800000000            	mov	eax, 0
  4772 00001C14 6689DE                  	mov	esi, ebx
  4773 00001C17 66C1CE04                	ror	esi, 4
  4774 00001C1B 8EDE                    	mov	ds, si
  4775 00001C1D 66C1EE1C                	shr	esi, 28
  4776 00001C21 668904                  	mov	[si], eax
  4777                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u td -> *u &u EAX -> *u 0 = "
  4778                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 32 + 0 =(4) "
  4779                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 32 =(204) *ax 0 "
  4780                                  section .relod
  4781 000001C0 [261C0000]              	dd	L296
  4782                                  section .text
  4783 00001C24 66B8                    	db	0x66, 0xB8
  4784                                  L296:
  4785 00001C26 [40120000]              	dd	_descThread
  4786 00001C2A 6650                    	push	eax
  4787 00001C2C 668B46F8                	mov	eax, [bp-8]
  4788 00001C30 666BC028                	imul	eax, eax, 40
  4789 00001C34 6689C1                  	mov	ecx, eax
  4790 00001C37 6658                    	pop	eax
  4791 00001C39 6601C8                  	add	eax, ecx
  4792 00001C3C 6683C00C                	add	eax, 12
  4793 00001C40 6689C3                  	mov	ebx, eax
  4794 00001C43 6689DE                  	mov	esi, ebx
  4795 00001C46 66C1CE04                	ror	esi, 4
  4796 00001C4A 8EDE                    	mov	ds, si
  4797 00001C4C 66C1EE1C                	shr	esi, 28
  4798 00001C50 668B04                  	mov	eax, [si]
  4799 00001C53 6683C020                	add	eax, 32
  4800 00001C57 6689C3                  	mov	ebx, eax
  4801 00001C5A 66B800000000            	mov	eax, 0
  4802 00001C60 6689DE                  	mov	esi, ebx
  4803 00001C63 66C1CE04                	ror	esi, 4
  4804 00001C67 8EDE                    	mov	ds, si
  4805 00001C69 66C1EE1C                	shr	esi, 28
  4806 00001C6D 668904                  	mov	[si], eax
  4807                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u CS -> *u segmento = "
  4808                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 38 + (@8) *(2) =(2) "
  4809                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 38 =(170) *ax *(@8) "
  4810                                  section .relod
  4811 000001C4 [721C0000]              	dd	L297
  4812                                  section .text
  4813 00001C70 66B8                    	db	0x66, 0xB8
  4814                                  L297:
  4815 00001C72 [40120000]              	dd	_descThread
  4816 00001C76 6650                    	push	eax
  4817 00001C78 668B46F8                	mov	eax, [bp-8]
  4818 00001C7C 666BC028                	imul	eax, eax, 40
  4819 00001C80 6689C1                  	mov	ecx, eax
  4820 00001C83 6658                    	pop	eax
  4821 00001C85 6601C8                  	add	eax, ecx
  4822 00001C88 6683C00C                	add	eax, 12
  4823 00001C8C 6689C3                  	mov	ebx, eax
  4824 00001C8F 6689DE                  	mov	esi, ebx
  4825 00001C92 66C1CE04                	ror	esi, 4
  4826 00001C96 8EDE                    	mov	ds, si
  4827 00001C98 66C1EE1C                	shr	esi, 28
  4828 00001C9C 668B04                  	mov	eax, [si]
  4829 00001C9F 6683C026                	add	eax, 38
  4830 00001CA3 6689C3                  	mov	ebx, eax
  4831 00001CA6 8B4608                  	mov	ax, [bp+8]
  4832 00001CA9 660FB7C0                	movzx	eax, ax
  4833 00001CAD 6689DE                  	mov	esi, ebx
  4834 00001CB0 66C1CE04                	ror	esi, 4
  4835 00001CB4 8EDE                    	mov	ds, si
  4836 00001CB6 66C1EE1C                	shr	esi, 28
  4837 00001CBA 8904                    	mov	[si], ax
  4838 00001CBC 660FB7C0                	movzx	eax, ax
  4839                                  ; RPN'ized expression: "descThread i + *u &u trama -> *u tw -> *u &u Flags -> *u SR 61440 & 514 | = "
  4840                                  ; Expanded expression: "descThread (@-8) *(4) 40 * + 12 + *(4) 0 + 40 + (@-32) *(2) 61440 & 514 | =(2) "
  4841                                  ; Fused expression:    "descThread push-ax * *(@-8) 40 + *sp ax + ax 12 + *ax 0 + ax 40 push-ax & *(@-32) 61440 | ax 514 =(172) **sp ax "
  4842                                  section .relod
  4843 000001C8 [C21C0000]              	dd	L298
  4844                                  section .text
  4845 00001CC0 66B8                    	db	0x66, 0xB8
  4846                                  L298:
  4847 00001CC2 [40120000]              	dd	_descThread
  4848 00001CC6 6650                    	push	eax
  4849 00001CC8 668B46F8                	mov	eax, [bp-8]
  4850 00001CCC 666BC028                	imul	eax, eax, 40
  4851 00001CD0 6689C1                  	mov	ecx, eax
  4852 00001CD3 6658                    	pop	eax
  4853 00001CD5 6601C8                  	add	eax, ecx
  4854 00001CD8 6683C00C                	add	eax, 12
  4855 00001CDC 6689C3                  	mov	ebx, eax
  4856 00001CDF 6689DE                  	mov	esi, ebx
  4857 00001CE2 66C1CE04                	ror	esi, 4
  4858 00001CE6 8EDE                    	mov	ds, si
  4859 00001CE8 66C1EE1C                	shr	esi, 28
  4860 00001CEC 668B04                  	mov	eax, [si]
  4861 00001CEF 6683C028                	add	eax, 40
  4862 00001CF3 6650                    	push	eax
  4863 00001CF5 8B46E0                  	mov	ax, [bp-32]
  4864 00001CF8 660FB7C0                	movzx	eax, ax
  4865 00001CFC 662500F00000            	and	eax, 61440
  4866 00001D02 660D02020000            	or	eax, 514
  4867 00001D08 665B                    	pop	ebx
  4868 00001D0A 6689DE                  	mov	esi, ebx
  4869 00001D0D 66C1CE04                	ror	esi, 4
  4870 00001D11 8EDE                    	mov	ds, si
  4871 00001D13 66C1EE1C                	shr	esi, 28
  4872 00001D17 8904                    	mov	[si], ax
  4873 00001D19 660FB7C0                	movzx	eax, ax
  4874                                  ; if
  4875                                  ; RPN'ized expression: "pindx 1 -u == "
  4876                                  ; Expanded expression: "(@28) *(4) -1 == "
  4877                                  ; Fused expression:    "== *(@28) -1 IF! "
  4878 00001D1D 668B461C                	mov	eax, [bp+28]
  4879 00001D21 6683F8FF                	cmp	eax, -1
  4880 00001D25 0F85F204                	jne	L299
  4881                                  ; {
  4882                                  ; RPN'ized expression: "descProceso i + *u &u uid -> *u descProceso indProcesoActual + *u &u uid -> *u = "
  4883                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 284 + descProceso indProcesoActual *(4) 292 * + 284 + *(4) =(4) "
  4884                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 284 push-ax descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 284 =(204) **sp *ax "
  4885                                  section .relod
  4886 000001CC [2B1D0000]              	dd	L301
  4887                                  section .text
  4888 00001D29 66B8                    	db	0x66, 0xB8
  4889                                  L301:
  4890 00001D2B [00000000]              	dd	_descProceso
  4891 00001D2F 6650                    	push	eax
  4892 00001D31 668B46F8                	mov	eax, [bp-8]
  4893 00001D35 6669C024010000          	imul	eax, eax, 292
  4894 00001D3C 6689C1                  	mov	ecx, eax
  4895 00001D3F 6658                    	pop	eax
  4896 00001D41 6601C8                  	add	eax, ecx
  4897 00001D44 66051C010000            	add	eax, 284
  4898 00001D4A 6650                    	push	eax
  4899                                  section .relod
  4900 000001D0 [4E1D0000]              	dd	L302
  4901                                  section .text
  4902 00001D4C 66B8                    	db	0x66, 0xB8
  4903                                  L302:
  4904 00001D4E [00000000]              	dd	_descProceso
  4905 00001D52 6650                    	push	eax
  4906                                  section .relod
  4907 000001D4 [561D0000]              	dd	L303
  4908                                  section .text
  4909 00001D54 66B8                    	db	0x66, 0xB8
  4910                                  L303:
  4911 00001D56 [40000000]              	dd	_indProcesoActual
  4912 00001D5A 6689C3                  	mov	ebx, eax
  4913 00001D5D 6689DE                  	mov	esi, ebx
  4914 00001D60 66C1CE04                	ror	esi, 4
  4915 00001D64 8EDE                    	mov	ds, si
  4916 00001D66 66C1EE1C                	shr	esi, 28
  4917 00001D6A 668B04                  	mov	eax, [si]
  4918 00001D6D 6669C024010000          	imul	eax, eax, 292
  4919 00001D74 6689C1                  	mov	ecx, eax
  4920 00001D77 6658                    	pop	eax
  4921 00001D79 6601C8                  	add	eax, ecx
  4922 00001D7C 66051C010000            	add	eax, 284
  4923 00001D82 6689C3                  	mov	ebx, eax
  4924 00001D85 6689DE                  	mov	esi, ebx
  4925 00001D88 66C1CE04                	ror	esi, 4
  4926 00001D8C 8EDE                    	mov	ds, si
  4927 00001D8E 66C1EE1C                	shr	esi, 28
  4928 00001D92 668B04                  	mov	eax, [si]
  4929 00001D95 665B                    	pop	ebx
  4930 00001D97 6689DE                  	mov	esi, ebx
  4931 00001D9A 66C1CE04                	ror	esi, 4
  4932 00001D9E 8EDE                    	mov	ds, si
  4933 00001DA0 66C1EE1C                	shr	esi, 28
  4934 00001DA4 668904                  	mov	[si], eax
  4935                                  ; RPN'ized expression: "descProceso i + *u &u gid -> *u descProceso indProcesoActual + *u &u gid -> *u = "
  4936                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 288 + descProceso indProcesoActual *(4) 292 * + 288 + *(4) =(4) "
  4937                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 288 push-ax descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 288 =(204) **sp *ax "
  4938                                  section .relod
  4939 000001D8 [A91D0000]              	dd	L304
  4940                                  section .text
  4941 00001DA7 66B8                    	db	0x66, 0xB8
  4942                                  L304:
  4943 00001DA9 [00000000]              	dd	_descProceso
  4944 00001DAD 6650                    	push	eax
  4945 00001DAF 668B46F8                	mov	eax, [bp-8]
  4946 00001DB3 6669C024010000          	imul	eax, eax, 292
  4947 00001DBA 6689C1                  	mov	ecx, eax
  4948 00001DBD 6658                    	pop	eax
  4949 00001DBF 6601C8                  	add	eax, ecx
  4950 00001DC2 660520010000            	add	eax, 288
  4951 00001DC8 6650                    	push	eax
  4952                                  section .relod
  4953 000001DC [CC1D0000]              	dd	L305
  4954                                  section .text
  4955 00001DCA 66B8                    	db	0x66, 0xB8
  4956                                  L305:
  4957 00001DCC [00000000]              	dd	_descProceso
  4958 00001DD0 6650                    	push	eax
  4959                                  section .relod
  4960 000001E0 [D41D0000]              	dd	L306
  4961                                  section .text
  4962 00001DD2 66B8                    	db	0x66, 0xB8
  4963                                  L306:
  4964 00001DD4 [40000000]              	dd	_indProcesoActual
  4965 00001DD8 6689C3                  	mov	ebx, eax
  4966 00001DDB 6689DE                  	mov	esi, ebx
  4967 00001DDE 66C1CE04                	ror	esi, 4
  4968 00001DE2 8EDE                    	mov	ds, si
  4969 00001DE4 66C1EE1C                	shr	esi, 28
  4970 00001DE8 668B04                  	mov	eax, [si]
  4971 00001DEB 6669C024010000          	imul	eax, eax, 292
  4972 00001DF2 6689C1                  	mov	ecx, eax
  4973 00001DF5 6658                    	pop	eax
  4974 00001DF7 6601C8                  	add	eax, ecx
  4975 00001DFA 660520010000            	add	eax, 288
  4976 00001E00 6689C3                  	mov	ebx, eax
  4977 00001E03 6689DE                  	mov	esi, ebx
  4978 00001E06 66C1CE04                	ror	esi, 4
  4979 00001E0A 8EDE                    	mov	ds, si
  4980 00001E0C 66C1EE1C                	shr	esi, 28
  4981 00001E10 668B04                  	mov	eax, [si]
  4982 00001E13 665B                    	pop	ebx
  4983 00001E15 6689DE                  	mov	esi, ebx
  4984 00001E18 66C1CE04                	ror	esi, 4
  4985 00001E1C 8EDE                    	mov	ds, si
  4986 00001E1E 66C1EE1C                	shr	esi, 28
  4987 00001E22 668904                  	mov	[si], eax
  4988                                  ; RPN'ized expression: "descProceso i + *u &u nfa -> *u descProceso indProcesoActual + *u &u nfa -> *u = "
  4989                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 160 + descProceso indProcesoActual *(4) 292 * + 160 + *(2) =(2) "
  4990                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 160 push-ax descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 160 =(170) **sp *ax "
  4991                                  section .relod
  4992 000001E4 [271E0000]              	dd	L307
  4993                                  section .text
  4994 00001E25 66B8                    	db	0x66, 0xB8
  4995                                  L307:
  4996 00001E27 [00000000]              	dd	_descProceso
  4997 00001E2B 6650                    	push	eax
  4998 00001E2D 668B46F8                	mov	eax, [bp-8]
  4999 00001E31 6669C024010000          	imul	eax, eax, 292
  5000 00001E38 6689C1                  	mov	ecx, eax
  5001 00001E3B 6658                    	pop	eax
  5002 00001E3D 6601C8                  	add	eax, ecx
  5003 00001E40 6605A0000000            	add	eax, 160
  5004 00001E46 6650                    	push	eax
  5005                                  section .relod
  5006 000001E8 [4A1E0000]              	dd	L308
  5007                                  section .text
  5008 00001E48 66B8                    	db	0x66, 0xB8
  5009                                  L308:
  5010 00001E4A [00000000]              	dd	_descProceso
  5011 00001E4E 6650                    	push	eax
  5012                                  section .relod
  5013 000001EC [521E0000]              	dd	L309
  5014                                  section .text
  5015 00001E50 66B8                    	db	0x66, 0xB8
  5016                                  L309:
  5017 00001E52 [40000000]              	dd	_indProcesoActual
  5018 00001E56 6689C3                  	mov	ebx, eax
  5019 00001E59 6689DE                  	mov	esi, ebx
  5020 00001E5C 66C1CE04                	ror	esi, 4
  5021 00001E60 8EDE                    	mov	ds, si
  5022 00001E62 66C1EE1C                	shr	esi, 28
  5023 00001E66 668B04                  	mov	eax, [si]
  5024 00001E69 6669C024010000          	imul	eax, eax, 292
  5025 00001E70 6689C1                  	mov	ecx, eax
  5026 00001E73 6658                    	pop	eax
  5027 00001E75 6601C8                  	add	eax, ecx
  5028 00001E78 6605A0000000            	add	eax, 160
  5029 00001E7E 6689C3                  	mov	ebx, eax
  5030 00001E81 6689DE                  	mov	esi, ebx
  5031 00001E84 66C1CE04                	ror	esi, 4
  5032 00001E88 8EDE                    	mov	ds, si
  5033 00001E8A 66C1EE1C                	shr	esi, 28
  5034 00001E8E 8B04                    	mov	ax, [si]
  5035 00001E90 660FB7C0                	movzx	eax, ax
  5036 00001E94 665B                    	pop	ebx
  5037 00001E96 6689DE                  	mov	esi, ebx
  5038 00001E99 66C1CE04                	ror	esi, 4
  5039 00001E9D 8EDE                    	mov	ds, si
  5040 00001E9F 66C1EE1C                	shr	esi, 28
  5041 00001EA3 8904                    	mov	[si], ax
  5042 00001EA5 660FB7C0                	movzx	eax, ax
  5043                                  ; for
  5044                                  ; RPN'ized expression: "j 0 = "
  5045                                  ; Expanded expression: "(@-12) 0 =(4) "
  5046                                  ; Fused expression:    "=(204) *(@-12) 0 "
  5047 00001EA9 66B800000000            	mov	eax, 0
  5048 00001EAF 668946F4                	mov	[bp-12], eax
  5049                                  L310:
  5050                                  ; RPN'ized expression: "j 10 < "
  5051                                  ; Expanded expression: "(@-12) *(4) 10 < "
  5052                                  ; Fused expression:    "< *(@-12) 10 IF! "
  5053 00001EB3 668B46F4                	mov	eax, [bp-12]
  5054 00001EB7 6683F80A                	cmp	eax, 10
  5055 00001EBB 0F8D0702                	jge	L313
  5056                                  ; RPN'ized expression: "j ++p "
  5057                                  ; Expanded expression: "(@-12) ++p(4) "
  5058                                  ; {
  5059                                  ; RPN'ized expression: "descProceso i + *u &u tfa -> *u j + *u &u dfs -> *u descProceso indProcesoActual + *u &u tfa -> *u j + *u &u dfs -> *u = "
  5060                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 164 + (@-12) *(4) 12 * + 4 + descProceso indProcesoActual *(4) 292 * + 164 + (@-12) *(4) 12 * + 4 + *(4) =(4) "
  5061                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax + ax 4 push-ax descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax 
  5062                                  section .relod
  5063 000001F0 [C11E0000]              	dd	L314
  5064                                  section .text
  5065 00001EBF 66B8                    	db	0x66, 0xB8
  5066                                  L314:
  5067 00001EC1 [00000000]              	dd	_descProceso
  5068 00001EC5 6650                    	push	eax
  5069 00001EC7 668B46F8                	mov	eax, [bp-8]
  5070 00001ECB 6669C024010000          	imul	eax, eax, 292
  5071 00001ED2 6689C1                  	mov	ecx, eax
  5072 00001ED5 6658                    	pop	eax
  5073 00001ED7 6601C8                  	add	eax, ecx
  5074 00001EDA 6605A4000000            	add	eax, 164
  5075 00001EE0 6650                    	push	eax
  5076 00001EE2 668B46F4                	mov	eax, [bp-12]
  5077 00001EE6 666BC00C                	imul	eax, eax, 12
  5078 00001EEA 6689C1                  	mov	ecx, eax
  5079 00001EED 6658                    	pop	eax
  5080 00001EEF 6601C8                  	add	eax, ecx
  5081 00001EF2 6683C004                	add	eax, 4
  5082 00001EF6 6650                    	push	eax
  5083                                  section .relod
  5084 000001F4 [FA1E0000]              	dd	L315
  5085                                  section .text
  5086 00001EF8 66B8                    	db	0x66, 0xB8
  5087                                  L315:
  5088 00001EFA [00000000]              	dd	_descProceso
  5089 00001EFE 6650                    	push	eax
  5090                                  section .relod
  5091 000001F8 [021F0000]              	dd	L316
  5092                                  section .text
  5093 00001F00 66B8                    	db	0x66, 0xB8
  5094                                  L316:
  5095 00001F02 [40000000]              	dd	_indProcesoActual
  5096 00001F06 6689C3                  	mov	ebx, eax
  5097 00001F09 6689DE                  	mov	esi, ebx
  5098 00001F0C 66C1CE04                	ror	esi, 4
  5099 00001F10 8EDE                    	mov	ds, si
  5100 00001F12 66C1EE1C                	shr	esi, 28
  5101 00001F16 668B04                  	mov	eax, [si]
  5102 00001F19 6669C024010000          	imul	eax, eax, 292
  5103 00001F20 6689C1                  	mov	ecx, eax
  5104 00001F23 6658                    	pop	eax
  5105 00001F25 6601C8                  	add	eax, ecx
  5106 00001F28 6605A4000000            	add	eax, 164
  5107 00001F2E 6650                    	push	eax
  5108 00001F30 668B46F4                	mov	eax, [bp-12]
  5109 00001F34 666BC00C                	imul	eax, eax, 12
  5110 00001F38 6689C1                  	mov	ecx, eax
  5111 00001F3B 6658                    	pop	eax
  5112 00001F3D 6601C8                  	add	eax, ecx
  5113 00001F40 6683C004                	add	eax, 4
  5114 00001F44 6689C3                  	mov	ebx, eax
  5115 00001F47 6689DE                  	mov	esi, ebx
  5116 00001F4A 66C1CE04                	ror	esi, 4
  5117 00001F4E 8EDE                    	mov	ds, si
  5118 00001F50 66C1EE1C                	shr	esi, 28
  5119 00001F54 668B04                  	mov	eax, [si]
  5120 00001F57 665B                    	pop	ebx
  5121 00001F59 6689DE                  	mov	esi, ebx
  5122 00001F5C 66C1CE04                	ror	esi, 4
  5123 00001F60 8EDE                    	mov	ds, si
  5124 00001F62 66C1EE1C                	shr	esi, 28
  5125 00001F66 668904                  	mov	[si], eax
  5126                                  ; RPN'ized expression: "descProceso i + *u &u tfa -> *u j + *u &u pos -> *u descProceso indProcesoActual + *u &u tfa -> *u j + *u &u pos -> *u = "
  5127                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 164 + (@-12) *(4) 12 * + 8 + descProceso indProcesoActual *(4) 292 * + 164 + (@-12) *(4) 12 * + 8 + *(4) =(4) "
  5128                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax + ax 8 push-ax descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax 
  5129                                  section .relod
  5130 000001FC [6B1F0000]              	dd	L317
  5131                                  section .text
  5132 00001F69 66B8                    	db	0x66, 0xB8
  5133                                  L317:
  5134 00001F6B [00000000]              	dd	_descProceso
  5135 00001F6F 6650                    	push	eax
  5136 00001F71 668B46F8                	mov	eax, [bp-8]
  5137 00001F75 6669C024010000          	imul	eax, eax, 292
  5138 00001F7C 6689C1                  	mov	ecx, eax
  5139 00001F7F 6658                    	pop	eax
  5140 00001F81 6601C8                  	add	eax, ecx
  5141 00001F84 6605A4000000            	add	eax, 164
  5142 00001F8A 6650                    	push	eax
  5143 00001F8C 668B46F4                	mov	eax, [bp-12]
  5144 00001F90 666BC00C                	imul	eax, eax, 12
  5145 00001F94 6689C1                  	mov	ecx, eax
  5146 00001F97 6658                    	pop	eax
  5147 00001F99 6601C8                  	add	eax, ecx
  5148 00001F9C 6683C008                	add	eax, 8
  5149 00001FA0 6650                    	push	eax
  5150                                  section .relod
  5151 00000200 [A41F0000]              	dd	L318
  5152                                  section .text
  5153 00001FA2 66B8                    	db	0x66, 0xB8
  5154                                  L318:
  5155 00001FA4 [00000000]              	dd	_descProceso
  5156 00001FA8 6650                    	push	eax
  5157                                  section .relod
  5158 00000204 [AC1F0000]              	dd	L319
  5159                                  section .text
  5160 00001FAA 66B8                    	db	0x66, 0xB8
  5161                                  L319:
  5162 00001FAC [40000000]              	dd	_indProcesoActual
  5163 00001FB0 6689C3                  	mov	ebx, eax
  5164 00001FB3 6689DE                  	mov	esi, ebx
  5165 00001FB6 66C1CE04                	ror	esi, 4
  5166 00001FBA 8EDE                    	mov	ds, si
  5167 00001FBC 66C1EE1C                	shr	esi, 28
  5168 00001FC0 668B04                  	mov	eax, [si]
  5169 00001FC3 6669C024010000          	imul	eax, eax, 292
  5170 00001FCA 6689C1                  	mov	ecx, eax
  5171 00001FCD 6658                    	pop	eax
  5172 00001FCF 6601C8                  	add	eax, ecx
  5173 00001FD2 6605A4000000            	add	eax, 164
  5174 00001FD8 6650                    	push	eax
  5175 00001FDA 668B46F4                	mov	eax, [bp-12]
  5176 00001FDE 666BC00C                	imul	eax, eax, 12
  5177 00001FE2 6689C1                  	mov	ecx, eax
  5178 00001FE5 6658                    	pop	eax
  5179 00001FE7 6601C8                  	add	eax, ecx
  5180 00001FEA 6683C008                	add	eax, 8
  5181 00001FEE 6689C3                  	mov	ebx, eax
  5182 00001FF1 6689DE                  	mov	esi, ebx
  5183 00001FF4 66C1CE04                	ror	esi, 4
  5184 00001FF8 8EDE                    	mov	ds, si
  5185 00001FFA 66C1EE1C                	shr	esi, 28
  5186 00001FFE 668B04                  	mov	eax, [si]
  5187 00002001 665B                    	pop	ebx
  5188 00002003 6689DE                  	mov	esi, ebx
  5189 00002006 66C1CE04                	ror	esi, 4
  5190 0000200A 8EDE                    	mov	ds, si
  5191 0000200C 66C1EE1C                	shr	esi, 28
  5192 00002010 668904                  	mov	[si], eax
  5193                                  ; RPN'ized expression: "descProceso i + *u &u tfa -> *u j + *u &u modoAp -> *u descProceso indProcesoActual + *u &u tfa -> *u j + *u &u modoAp -> *u = "
  5194                                  ; Expanded expression: "descProceso (@-8) *(4) 292 * + 164 + (@-12) *(4) 12 * + 0 + descProceso indProcesoActual *(4) 292 * + 164 + (@-12) *(4) 12 * + 0 + *(2) =(2) "
  5195                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax + ax 0 push-ax descProceso push-ax indProcesoActual * *ax 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax 
  5196                                  section .relod
  5197 00000208 [15200000]              	dd	L320
  5198                                  section .text
  5199 00002013 66B8                    	db	0x66, 0xB8
  5200                                  L320:
  5201 00002015 [00000000]              	dd	_descProceso
  5202 00002019 6650                    	push	eax
  5203 0000201B 668B46F8                	mov	eax, [bp-8]
  5204 0000201F 6669C024010000          	imul	eax, eax, 292
  5205 00002026 6689C1                  	mov	ecx, eax
  5206 00002029 6658                    	pop	eax
  5207 0000202B 6601C8                  	add	eax, ecx
  5208 0000202E 6605A4000000            	add	eax, 164
  5209 00002034 6650                    	push	eax
  5210 00002036 668B46F4                	mov	eax, [bp-12]
  5211 0000203A 666BC00C                	imul	eax, eax, 12
  5212 0000203E 6689C1                  	mov	ecx, eax
  5213 00002041 6658                    	pop	eax
  5214 00002043 6601C8                  	add	eax, ecx
  5215 00002046 6650                    	push	eax
  5216                                  section .relod
  5217 0000020C [4A200000]              	dd	L321
  5218                                  section .text
  5219 00002048 66B8                    	db	0x66, 0xB8
  5220                                  L321:
  5221 0000204A [00000000]              	dd	_descProceso
  5222 0000204E 6650                    	push	eax
  5223                                  section .relod
  5224 00000210 [52200000]              	dd	L322
  5225                                  section .text
  5226 00002050 66B8                    	db	0x66, 0xB8
  5227                                  L322:
  5228 00002052 [40000000]              	dd	_indProcesoActual
  5229 00002056 6689C3                  	mov	ebx, eax
  5230 00002059 6689DE                  	mov	esi, ebx
  5231 0000205C 66C1CE04                	ror	esi, 4
  5232 00002060 8EDE                    	mov	ds, si
  5233 00002062 66C1EE1C                	shr	esi, 28
  5234 00002066 668B04                  	mov	eax, [si]
  5235 00002069 6669C024010000          	imul	eax, eax, 292
  5236 00002070 6689C1                  	mov	ecx, eax
  5237 00002073 6658                    	pop	eax
  5238 00002075 6601C8                  	add	eax, ecx
  5239 00002078 6605A4000000            	add	eax, 164
  5240 0000207E 6650                    	push	eax
  5241 00002080 668B46F4                	mov	eax, [bp-12]
  5242 00002084 666BC00C                	imul	eax, eax, 12
  5243 00002088 6689C1                  	mov	ecx, eax
  5244 0000208B 6658                    	pop	eax
  5245 0000208D 6601C8                  	add	eax, ecx
  5246 00002090 6689C3                  	mov	ebx, eax
  5247 00002093 6689DE                  	mov	esi, ebx
  5248 00002096 66C1CE04                	ror	esi, 4
  5249 0000209A 8EDE                    	mov	ds, si
  5250 0000209C 66C1EE1C                	shr	esi, 28
  5251 000020A0 8B04                    	mov	ax, [si]
  5252 000020A2 660FB7C0                	movzx	eax, ax
  5253 000020A6 665B                    	pop	ebx
  5254 000020A8 6689DE                  	mov	esi, ebx
  5255 000020AB 66C1CE04                	ror	esi, 4
  5256 000020AF 8EDE                    	mov	ds, si
  5257 000020B1 66C1EE1C                	shr	esi, 28
  5258 000020B5 8904                    	mov	[si], ax
  5259 000020B7 660FB7C0                	movzx	eax, ax
  5260                                  ; }
  5261                                  L311:
  5262                                  ; Fused expression:    "++p(4) *(@-12) "
  5263 000020BB 668B46F4                	mov	eax, [bp-12]
  5264 000020BF 66FF46F4                	inc	dword [bp-12]
  5265 000020C3 E9EDFD                  	jmp	L310
  5266                                  L313:
  5267                                  ; for
  5268                                  ; RPN'ized expression: "j 0 = "
  5269                                  ; Expanded expression: "(@-12) 0 =(4) "
  5270                                  ; Fused expression:    "=(204) *(@-12) 0 "
  5271 000020C6 66B800000000            	mov	eax, 0
  5272 000020CC 668946F4                	mov	[bp-12], eax
  5273                                  L323:
  5274                                  ; RPN'ized expression: "j 10 < "
  5275                                  ; Expanded expression: "(@-12) *(4) 10 < "
  5276                                  ; Fused expression:    "< *(@-12) 10 IF! "
  5277 000020D0 668B46F4                	mov	eax, [bp-12]
  5278 000020D4 6683F80A                	cmp	eax, 10
  5279 000020D8 0F8D3D01                	jge	L326
  5280                                  ; RPN'ized expression: "j ++p "
  5281                                  ; Expanded expression: "(@-12) ++p(4) "
  5282                                  ; {
  5283                                  ; RPN'ized expression: "dfs descProceso i + *u &u tfa -> *u j + *u &u dfs -> *u = "
  5284                                  ; Expanded expression: "(@-60) descProceso (@-8) *(4) 292 * + 164 + (@-12) *(4) 12 * + 4 + *(4) =(4) "
  5285                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax + ax 4 =(204) *(@-60) *ax "
  5286                                  section .relod
  5287 00000214 [DE200000]              	dd	L327
  5288                                  section .text
  5289 000020DC 66B8                    	db	0x66, 0xB8
  5290                                  L327:
  5291 000020DE [00000000]              	dd	_descProceso
  5292 000020E2 6650                    	push	eax
  5293 000020E4 668B46F8                	mov	eax, [bp-8]
  5294 000020E8 6669C024010000          	imul	eax, eax, 292
  5295 000020EF 6689C1                  	mov	ecx, eax
  5296 000020F2 6658                    	pop	eax
  5297 000020F4 6601C8                  	add	eax, ecx
  5298 000020F7 6605A4000000            	add	eax, 164
  5299 000020FD 6650                    	push	eax
  5300 000020FF 668B46F4                	mov	eax, [bp-12]
  5301 00002103 666BC00C                	imul	eax, eax, 12
  5302 00002107 6689C1                  	mov	ecx, eax
  5303 0000210A 6658                    	pop	eax
  5304 0000210C 6601C8                  	add	eax, ecx
  5305 0000210F 6683C004                	add	eax, 4
  5306 00002113 6689C3                  	mov	ebx, eax
  5307 00002116 6689DE                  	mov	esi, ebx
  5308 00002119 66C1CE04                	ror	esi, 4
  5309 0000211D 8EDE                    	mov	ds, si
  5310 0000211F 66C1EE1C                	shr	esi, 28
  5311 00002123 668B04                  	mov	eax, [si]
  5312 00002126 668946C4                	mov	[bp-60], eax
  5313                                  ; if
  5314                                  ; RPN'ized expression: "dfs 0 >= "
  5315                                  ; Expanded expression: "(@-60) *(4) 0 >= "
  5316                                  ; Fused expression:    ">= *(@-60) 0 IF! "
  5317 0000212A 668B46C4                	mov	eax, [bp-60]
  5318 0000212E 6683F800                	cmp	eax, 0
  5319 00002132 0F8CD800                	jl	L328
  5320                                  ; {
  5321                                  ; RPN'ized expression: "modoAp descProceso i + *u &u tfa -> *u j + *u &u modoAp -> *u = "
  5322                                  ; Expanded expression: "(@-64) descProceso (@-8) *(4) 292 * + 164 + (@-12) *(4) 12 * + 0 + *(2) =(2) "
  5323                                  ; Fused expression:    "descProceso push-ax * *(@-8) 292 + *sp ax + ax 164 push-ax * *(@-12) 12 + *sp ax + ax 0 =(170) *(@-64) *ax "
  5324                                  section .relod
  5325 00000218 [38210000]              	dd	L330
  5326                                  section .text
  5327 00002136 66B8                    	db	0x66, 0xB8
  5328                                  L330:
  5329 00002138 [00000000]              	dd	_descProceso
  5330 0000213C 6650                    	push	eax
  5331 0000213E 668B46F8                	mov	eax, [bp-8]
  5332 00002142 6669C024010000          	imul	eax, eax, 292
  5333 00002149 6689C1                  	mov	ecx, eax
  5334 0000214C 6658                    	pop	eax
  5335 0000214E 6601C8                  	add	eax, ecx
  5336 00002151 6605A4000000            	add	eax, 164
  5337 00002157 6650                    	push	eax
  5338 00002159 668B46F4                	mov	eax, [bp-12]
  5339 0000215D 666BC00C                	imul	eax, eax, 12
  5340 00002161 6689C1                  	mov	ecx, eax
  5341 00002164 6658                    	pop	eax
  5342 00002166 6601C8                  	add	eax, ecx
  5343 00002169 6689C3                  	mov	ebx, eax
  5344 0000216C 6689DE                  	mov	esi, ebx
  5345 0000216F 66C1CE04                	ror	esi, 4
  5346 00002173 8EDE                    	mov	ds, si
  5347 00002175 66C1EE1C                	shr	esi, 28
  5348 00002179 8B04                    	mov	ax, [si]
  5349 0000217B 660FB7C0                	movzx	eax, ax
  5350 0000217F 8946C0                  	mov	[bp-64], ax
  5351 00002182 660FB7C0                	movzx	eax, ax
  5352                                  ; if
  5353                                  ; RPN'ized expression: "modoAp 7 & 1 == "
  5354                                  ; Expanded expression: "(@-64) *(2) 7 & 1 == "
  5355                                  ; Fused expression:    "& *(@-64) 7 == ax 1 IF! "
  5356 00002186 8B46C0                  	mov	ax, [bp-64]
  5357 00002189 660FB7C0                	movzx	eax, ax
  5358 0000218D 6683E007                	and	eax, 7
  5359 00002191 6683F801                	cmp	eax, 1
  5360 00002195 7534                    	jne	L331
  5361                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_L -> *u ++p "
  5362                                  ; Expanded expression: "descFichero (@-60) *(4) 36 * + 28 + ++p(4) "
  5363                                  ; Fused expression:    "descFichero push-ax * *(@-60) 36 + *sp ax + ax 28 ++p(4) *ax "
  5364                                  section .relod
  5365 0000021C [99210000]              	dd	L333
  5366                                  section .text
  5367 00002197 66B8                    	db	0x66, 0xB8
  5368                                  L333:
  5369 00002199 [504C0100]              	dd	_descFichero
  5370 0000219D 6650                    	push	eax
  5371 0000219F 668B46C4                	mov	eax, [bp-60]
  5372 000021A3 666BC024                	imul	eax, eax, 36
  5373 000021A7 6689C1                  	mov	ecx, eax
  5374 000021AA 6658                    	pop	eax
  5375 000021AC 6601C8                  	add	eax, ecx
  5376 000021AF 6683C01C                	add	eax, 28
  5377 000021B3 6689C3                  	mov	ebx, eax
  5378 000021B6 6689DE                  	mov	esi, ebx
  5379 000021B9 66C1CE04                	ror	esi, 4
  5380 000021BD 8EDE                    	mov	ds, si
  5381 000021BF 66C1EE1C                	shr	esi, 28
  5382 000021C3 668B04                  	mov	eax, [si]
  5383 000021C6 66FF04                  	inc	dword [si]
  5384 000021C9 EB43                    	jmp	L332
  5385                                  L331:
  5386                                  ; else
  5387                                  ; if
  5388                                  ; RPN'ized expression: "modoAp 7 & 2 == "
  5389                                  ; Expanded expression: "(@-64) *(2) 7 & 2 == "
  5390                                  ; Fused expression:    "& *(@-64) 7 == ax 2 IF! "
  5391 000021CB 8B46C0                  	mov	ax, [bp-64]
  5392 000021CE 660FB7C0                	movzx	eax, ax
  5393 000021D2 6683E007                	and	eax, 7
  5394 000021D6 6683F802                	cmp	eax, 2
  5395 000021DA 7532                    	jne	L334
  5396                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_E -> *u ++p "
  5397                                  ; Expanded expression: "descFichero (@-60) *(4) 36 * + 32 + ++p(4) "
  5398                                  ; Fused expression:    "descFichero push-ax * *(@-60) 36 + *sp ax + ax 32 ++p(4) *ax "
  5399                                  section .relod
  5400 00000220 [DE210000]              	dd	L336
  5401                                  section .text
  5402 000021DC 66B8                    	db	0x66, 0xB8
  5403                                  L336:
  5404 000021DE [504C0100]              	dd	_descFichero
  5405 000021E2 6650                    	push	eax
  5406 000021E4 668B46C4                	mov	eax, [bp-60]
  5407 000021E8 666BC024                	imul	eax, eax, 36
  5408 000021EC 6689C1                  	mov	ecx, eax
  5409 000021EF 6658                    	pop	eax
  5410 000021F1 6601C8                  	add	eax, ecx
  5411 000021F4 6683C020                	add	eax, 32
  5412 000021F8 6689C3                  	mov	ebx, eax
  5413 000021FB 6689DE                  	mov	esi, ebx
  5414 000021FE 66C1CE04                	ror	esi, 4
  5415 00002202 8EDE                    	mov	ds, si
  5416 00002204 66C1EE1C                	shr	esi, 28
  5417 00002208 668B04                  	mov	eax, [si]
  5418 0000220B 66FF04                  	inc	dword [si]
  5419                                  L334:
  5420                                  L332:
  5421                                  ; }
  5422                                  L328:
  5423                                  ; }
  5424                                  L324:
  5425                                  ; Fused expression:    "++p(4) *(@-12) "
  5426 0000220E 668B46F4                	mov	eax, [bp-12]
  5427 00002212 66FF46F4                	inc	dword [bp-12]
  5428 00002216 E9B7FE                  	jmp	L323
  5429                                  L326:
  5430                                  ; }
  5431 00002219 EB00                    	jmp	L300
  5432                                  L299:
  5433                                  ; else
  5434                                  ; {
  5435                                  ; }
  5436                                  L300:
  5437                                  ; return
  5438                                  ; RPN'ized expression: "i "
  5439                                  ; Expanded expression: "(@-8) *(4) "
  5440                                  ; Fused expression:    "*(4) (@-8)  "
  5441 0000221B 668B46F8                	mov	eax, [bp-8]
  5442                                  L234:
  5443 0000221F 66                      	db	0x66
  5444 00002220 C9                      	leave
  5445 00002221 CB                      	retf
  5446                                  L337:
  5447                                  
  5448                                  section .fxnsz
  5449 00000038 470D0000                	dd	L337 - _crearProceso
  5450                                  
  5451                                  ; glb devolverPila : (
  5452                                  ; prm     tindx : int
  5453                                  ;     ) int
  5454                                  section .text
  5455                                  	global	_devolverPila
  5456                                  _devolverPila:
  5457 00002222 6655                    	push	ebp
  5458 00002224 660FB7EC                	movzx	ebp, sp
  5459                                  	;sub	sp,          0
  5460                                  ; loc     tindx : (@8): int
  5461                                  ; return
  5462                                  ; RPN'ized expression: "( descThread tindx + *u &u SP0 -> *u 15 + 16 / , descThread tindx + *u &u SSThread -> *u k_devolverBloque ) "
  5463                                  ; Expanded expression: " descThread (@8) *(4) 40 * + 38 + *(2) 15 + 16 /  descThread (@8) *(4) 40 * + 36 + *(2)  k_devolverBloque ()8 "
  5464                                  ; Fused expression:    "( descThread push-ax * *(@8) 40 + *sp ax + ax 38 + *ax 15 / ax 16 , descThread push-ax * *(@8) 40 + *sp ax + ax 36 *(2) ax , k_devolverBloque )8  "
  5465                                  section .relod
  5466 00000224 [2A220000]              	dd	L340
  5467                                  section .text
  5468 00002228 66B8                    	db	0x66, 0xB8
  5469                                  L340:
  5470 0000222A [40120000]              	dd	_descThread
  5471 0000222E 6650                    	push	eax
  5472 00002230 668B4608                	mov	eax, [bp+8]
  5473 00002234 666BC028                	imul	eax, eax, 40
  5474 00002238 6689C1                  	mov	ecx, eax
  5475 0000223B 6658                    	pop	eax
  5476 0000223D 6601C8                  	add	eax, ecx
  5477 00002240 6683C026                	add	eax, 38
  5478 00002244 6689C3                  	mov	ebx, eax
  5479 00002247 6689DE                  	mov	esi, ebx
  5480 0000224A 66C1CE04                	ror	esi, 4
  5481 0000224E 8EDE                    	mov	ds, si
  5482 00002250 66C1EE1C                	shr	esi, 28
  5483 00002254 8B04                    	mov	ax, [si]
  5484 00002256 660FB7C0                	movzx	eax, ax
  5485 0000225A 6683C00F                	add	eax, 15
  5486 0000225E 6699                    	cdq
  5487 00002260 66B910000000            	mov	ecx, 16
  5488 00002266 66F7F9                  	idiv	ecx
  5489 00002269 6650                    	push	eax
  5490                                  section .relod
  5491 00000228 [6D220000]              	dd	L341
  5492                                  section .text
  5493 0000226B 66B8                    	db	0x66, 0xB8
  5494                                  L341:
  5495 0000226D [40120000]              	dd	_descThread
  5496 00002271 6650                    	push	eax
  5497 00002273 668B4608                	mov	eax, [bp+8]
  5498 00002277 666BC028                	imul	eax, eax, 40
  5499 0000227B 6689C1                  	mov	ecx, eax
  5500 0000227E 6658                    	pop	eax
  5501 00002280 6601C8                  	add	eax, ecx
  5502 00002283 6683C024                	add	eax, 36
  5503 00002287 6689C3                  	mov	ebx, eax
  5504 0000228A 6689DE                  	mov	esi, ebx
  5505 0000228D 66C1CE04                	ror	esi, 4
  5506 00002291 8EDE                    	mov	ds, si
  5507 00002293 66C1EE1C                	shr	esi, 28
  5508 00002297 8B04                    	mov	ax, [si]
  5509 00002299 660FB7C0                	movzx	eax, ax
  5510 0000229D 6650                    	push	eax
  5511 0000229F 9A                      	db	0x9A
  5512                                  section .relot
  5513 00000060 [A0220000]              	dd	L342
  5514                                  section .text
  5515                                  L342:
  5516 000022A0 [00000000]              	dd	_k_devolverBloque
  5517 000022A4 83ECF8                  	sub	sp, -8
  5518                                  L338:
  5519 000022A7 66                      	db	0x66
  5520 000022A8 C9                      	leave
  5521 000022A9 CB                      	retf
  5522                                  L343:
  5523                                  
  5524                                  section .fxnsz
  5525 0000003C 88000000                	dd	L343 - _devolverPila
  5526                                  
  5527                                  ; glb devolverParticion : (
  5528                                  ; prm     pindx : int
  5529                                  ;     ) int
  5530                                  section .text
  5531                                  	global	_devolverParticion
  5532                                  _devolverParticion:
  5533 000022AA 6655                    	push	ebp
  5534 000022AC 660FB7EC                	movzx	ebp, sp
  5535                                  	;sub	sp,          0
  5536                                  ; loc     pindx : (@8): int
  5537                                  ; if
  5538                                  ; loc     <something> : * struct <something>
  5539                                  ; loc     <something> : * struct <something>
  5540                                  ; loc     <something> : * struct <something>
  5541                                  ; loc     <something> : * struct <something>
  5542                                  ; RPN'ized expression: "c2cPFR POrdenados + *u &u (something349) (something348) e -> *u pindx + *u &u cab -> *u c2cPFR POrdenados + *u &u (something351) (something350) cabecera -> *u == 0 == "
  5543                                  ; Expanded expression: "c2cPFR 96 + 12 + *(4) (@8) *(4) 12 * + 8 + *(4) c2cPFR 96 + 8 + *(4) == 0 == "
  5544                                  ; Fused expression:    "c2cPFR + ax 96 + ax 12 push-ax * *(@8) 12 + **sp ax + ax 8 push-ax c2cPFR + ax 96 + ax 8 == **sp *ax == ax 0 IF! "
  5545                                  section .relod
  5546 0000022C [B2220000]              	dd	L352
  5547                                  section .text
  5548 000022B0 66B8                    	db	0x66, 0xB8
  5549                                  L352:
  5550 000022B2 [60540100]              	dd	_c2cPFR
  5551 000022B6 6683C060                	add	eax, 96
  5552 000022BA 6683C00C                	add	eax, 12
  5553 000022BE 6650                    	push	eax
  5554 000022C0 668B4608                	mov	eax, [bp+8]
  5555 000022C4 666BC00C                	imul	eax, eax, 12
  5556 000022C8 6689C1                  	mov	ecx, eax
  5557 000022CB 665B                    	pop	ebx
  5558 000022CD 6689DE                  	mov	esi, ebx
  5559 000022D0 66C1CE04                	ror	esi, 4
  5560 000022D4 8EDE                    	mov	ds, si
  5561 000022D6 66C1EE1C                	shr	esi, 28
  5562 000022DA 668B04                  	mov	eax, [si]
  5563 000022DD 6601C8                  	add	eax, ecx
  5564 000022E0 6683C008                	add	eax, 8
  5565 000022E4 6650                    	push	eax
  5566                                  section .relod
  5567 00000230 [E8220000]              	dd	L353
  5568                                  section .text
  5569 000022E6 66B8                    	db	0x66, 0xB8
  5570                                  L353:
  5571 000022E8 [60540100]              	dd	_c2cPFR
  5572 000022EC 6683C060                	add	eax, 96
  5573 000022F0 6683C008                	add	eax, 8
  5574 000022F4 6689C3                  	mov	ebx, eax
  5575 000022F7 6689DE                  	mov	esi, ebx
  5576 000022FA 66C1CE04                	ror	esi, 4
  5577 000022FE 8EDE                    	mov	ds, si
  5578 00002300 66C1EE1C                	shr	esi, 28
  5579 00002304 668B0C                  	mov	ecx, [si]
  5580 00002307 665B                    	pop	ebx
  5581 00002309 6689DE                  	mov	esi, ebx
  5582 0000230C 66C1CE04                	ror	esi, 4
  5583 00002310 8EDE                    	mov	ds, si
  5584 00002312 66C1EE1C                	shr	esi, 28
  5585 00002316 668B04                  	mov	eax, [si]
  5586 00002319 6639C8                  	cmp	eax, ecx
  5587 0000231C 0F94C0                  	sete	al
  5588 0000231F 660FB6C0                	movzx	eax, al
  5589 00002323 6683F800                	cmp	eax, 0
  5590 00002327 7509                    	jne	L346
  5591                                  ; return
  5592                                  ; RPN'ized expression: "FALSE "
  5593                                  ; Expanded expression: "0 "
  5594                                  ; Expression value: 0
  5595                                  ; Fused expression:    "0  "
  5596 00002329 66B800000000            	mov	eax, 0
  5597 0000232F E98E00                  	jmp	L344
  5598                                  L346:
  5599                                  ; loc     <something> : * struct <something>
  5600                                  ; RPN'ized expression: "( c2cPFR POrdenados + *u &u (something354) , pindx eliminarPC2c ) "
  5601                                  ; Expanded expression: " c2cPFR 96 +  (@8) *(4)  eliminarPC2c ()8 "
  5602                                  ; Fused expression:    "( c2cPFR + ax 96 , *(4) (@8) , eliminarPC2c )8 "
  5603                                  section .relod
  5604 00000234 [34230000]              	dd	L355
  5605                                  section .text
  5606 00002332 66B8                    	db	0x66, 0xB8
  5607                                  L355:
  5608 00002334 [60540100]              	dd	_c2cPFR
  5609 00002338 6683C060                	add	eax, 96
  5610 0000233C 6650                    	push	eax
  5611 0000233E 66FF7608                	push	dword [bp+8]
  5612 00002342 9A                      	db	0x9A
  5613                                  section .relot
  5614 00000064 [43230000]              	dd	L356
  5615                                  section .text
  5616                                  L356:
  5617 00002343 [00000000]              	dd	_eliminarPC2c
  5618 00002347 83ECF8                  	sub	sp, -8
  5619                                  ; return
  5620                                  ; RPN'ized expression: "( descProceso pindx + *u &u tam -> *u , descProceso pindx + *u &u CSProc -> *u k_devolverBloque ) "
  5621                                  ; Expanded expression: " descProceso (@8) *(4) 292 * + 60 + *(2)  descProceso (@8) *(4) 292 * + 52 + *(2)  k_devolverBloque ()8 "
  5622                                  ; Fused expression:    "( descProceso push-ax * *(@8) 292 + *sp ax + ax 60 *(2) ax , descProceso push-ax * *(@8) 292 + *sp ax + ax 52 *(2) ax , k_devolverBloque )8  "
  5623                                  section .relod
  5624 00000238 [4C230000]              	dd	L357
  5625                                  section .text
  5626 0000234A 66B8                    	db	0x66, 0xB8
  5627                                  L357:
  5628 0000234C [00000000]              	dd	_descProceso
  5629 00002350 6650                    	push	eax
  5630 00002352 668B4608                	mov	eax, [bp+8]
  5631 00002356 6669C024010000          	imul	eax, eax, 292
  5632 0000235D 6689C1                  	mov	ecx, eax
  5633 00002360 6658                    	pop	eax
  5634 00002362 6601C8                  	add	eax, ecx
  5635 00002365 6683C03C                	add	eax, 60
  5636 00002369 6689C3                  	mov	ebx, eax
  5637 0000236C 6689DE                  	mov	esi, ebx
  5638 0000236F 66C1CE04                	ror	esi, 4
  5639 00002373 8EDE                    	mov	ds, si
  5640 00002375 66C1EE1C                	shr	esi, 28
  5641 00002379 8B04                    	mov	ax, [si]
  5642 0000237B 660FB7C0                	movzx	eax, ax
  5643 0000237F 6650                    	push	eax
  5644                                  section .relod
  5645 0000023C [83230000]              	dd	L358
  5646                                  section .text
  5647 00002381 66B8                    	db	0x66, 0xB8
  5648                                  L358:
  5649 00002383 [00000000]              	dd	_descProceso
  5650 00002387 6650                    	push	eax
  5651 00002389 668B4608                	mov	eax, [bp+8]
  5652 0000238D 6669C024010000          	imul	eax, eax, 292
  5653 00002394 6689C1                  	mov	ecx, eax
  5654 00002397 6658                    	pop	eax
  5655 00002399 6601C8                  	add	eax, ecx
  5656 0000239C 6683C034                	add	eax, 52
  5657 000023A0 6689C3                  	mov	ebx, eax
  5658 000023A3 6689DE                  	mov	esi, ebx
  5659 000023A6 66C1CE04                	ror	esi, 4
  5660 000023AA 8EDE                    	mov	ds, si
  5661 000023AC 66C1EE1C                	shr	esi, 28
  5662 000023B0 8B04                    	mov	ax, [si]
  5663 000023B2 660FB7C0                	movzx	eax, ax
  5664 000023B6 6650                    	push	eax
  5665 000023B8 9A                      	db	0x9A
  5666                                  section .relot
  5667 00000068 [B9230000]              	dd	L359
  5668                                  section .text
  5669                                  L359:
  5670 000023B9 [00000000]              	dd	_k_devolverBloque
  5671 000023BD 83ECF8                  	sub	sp, -8
  5672                                  L344:
  5673 000023C0 66                      	db	0x66
  5674 000023C1 C9                      	leave
  5675 000023C2 CB                      	retf
  5676                                  L360:
  5677                                  
  5678                                  section .fxnsz
  5679 00000040 19010000                	dd	L360 - _devolverParticion
  5680                                  
  5681                                  ; glb terminarThreadIndx : (
  5682                                  ; prm     tindx : int
  5683                                  ;     ) int
  5684                                  section .text
  5685                                  	global	_terminarThreadIndx
  5686                                  _terminarThreadIndx:
  5687 000023C3 6655                    	push	ebp
  5688 000023C5 660FB7EC                	movzx	ebp, sp
  5689 000023C9 83EC0C                  	 sub	sp,         12
  5690                                  ; loc     tindx : (@8): int
  5691                                  ; loc     modoAp : (@-4): unsigned short
  5692                                  ; loc     j : (@-8): int
  5693                                  ; loc     dfs : (@-12): int
  5694                                  ; if
  5695                                  ; RPN'ized expression: "tindx 0 == "
  5696                                  ; Expanded expression: "(@8) *(4) 0 == "
  5697                                  ; Fused expression:    "== *(@8) 0 IF! "
  5698 000023CC 668B4608                	mov	eax, [bp+8]
  5699 000023D0 6683F800                	cmp	eax, 0
  5700 000023D4 7509                    	jne	L363
  5701                                  ; return
  5702                                  ; RPN'ized expression: "1 -u "
  5703                                  ; Expanded expression: "-1 "
  5704                                  ; Expression value: -1
  5705                                  ; Fused expression:    "-1  "
  5706 000023D6 66B8FFFFFFFF            	mov	eax, -1
  5707 000023DC E9CF00                  	jmp	L361
  5708                                  L363:
  5709                                  ; if
  5710                                  ; RPN'ized expression: "tindx 0 < tindx 2010 >= || "
  5711                                  ; Expanded expression: "(@8) *(4) 0 < [sh||->367] (@8) *(4) 2010 >= ||[367] "
  5712                                  ; Fused expression:    "< *(@8) 0 [sh||->367] >= *(@8) 2010 ||[367]  "
  5713 000023DF 668B4608                	mov	eax, [bp+8]
  5714 000023E3 6683F800                	cmp	eax, 0
  5715 000023E7 0F9CC0                  	setl	al
  5716 000023EA 660FB6C0                	movzx	eax, al
  5717                                  ; JumpIfNotZero
  5718 000023EE 6685C0                  	test	eax, eax
  5719 000023F1 7511                    	jne	L367
  5720 000023F3 668B4608                	mov	eax, [bp+8]
  5721 000023F7 663DDA070000            	cmp	eax, 2010
  5722 000023FD 0F9DC0                  	setge	al
  5723 00002400 660FB6C0                	movzx	eax, al
  5724                                  L367:
  5725                                  ; JumpIfZero
  5726 00002404 6685C0                  	test	eax, eax
  5727 00002407 7409                    	je	L365
  5728                                  ; return
  5729                                  ; RPN'ized expression: "2 -u "
  5730                                  ; Expanded expression: "-2 "
  5731                                  ; Expression value: -2
  5732                                  ; Fused expression:    "-2  "
  5733 00002409 66B8FEFFFFFF            	mov	eax, -2
  5734 0000240F E99C00                  	jmp	L361
  5735                                  L365:
  5736                                  ; if
  5737                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u libre == "
  5738                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 0 == "
  5739                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 0 IF! "
  5740                                  section .relod
  5741 00000240 [14240000]              	dd	L370
  5742                                  section .text
  5743 00002412 66B8                    	db	0x66, 0xB8
  5744                                  L370:
  5745 00002414 [40120000]              	dd	_descThread
  5746 00002418 6650                    	push	eax
  5747 0000241A 668B4608                	mov	eax, [bp+8]
  5748 0000241E 666BC028                	imul	eax, eax, 40
  5749 00002422 6689C1                  	mov	ecx, eax
  5750 00002425 6658                    	pop	eax
  5751 00002427 6601C8                  	add	eax, ecx
  5752 0000242A 6683C004                	add	eax, 4
  5753 0000242E 6689C3                  	mov	ebx, eax
  5754 00002431 6689DE                  	mov	esi, ebx
  5755 00002434 66C1CE04                	ror	esi, 4
  5756 00002438 8EDE                    	mov	ds, si
  5757 0000243A 66C1EE1C                	shr	esi, 28
  5758 0000243E 668B04                  	mov	eax, [si]
  5759 00002441 6683F800                	cmp	eax, 0
  5760 00002445 7508                    	jne	L368
  5761                                  ; return
  5762                                  ; RPN'ized expression: "3 -u "
  5763                                  ; Expanded expression: "-3 "
  5764                                  ; Expression value: -3
  5765                                  ; Fused expression:    "-3  "
  5766 00002447 66B8FDFFFFFF            	mov	eax, -3
  5767 0000244D EB5F                    	jmp	L361
  5768                                  L368:
  5769                                  ; if
  5770                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u preparado == "
  5771                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 1 == "
  5772                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 1 IF! "
  5773                                  section .relod
  5774 00000244 [51240000]              	dd	L373
  5775                                  section .text
  5776 0000244F 66B8                    	db	0x66, 0xB8
  5777                                  L373:
  5778 00002451 [40120000]              	dd	_descThread
  5779 00002455 6650                    	push	eax
  5780 00002457 668B4608                	mov	eax, [bp+8]
  5781 0000245B 666BC028                	imul	eax, eax, 40
  5782 0000245F 6689C1                  	mov	ecx, eax
  5783 00002462 6658                    	pop	eax
  5784 00002464 6601C8                  	add	eax, ecx
  5785 00002467 6683C004                	add	eax, 4
  5786 0000246B 6689C3                  	mov	ebx, eax
  5787 0000246E 6689DE                  	mov	esi, ebx
  5788 00002471 66C1CE04                	ror	esi, 4
  5789 00002475 8EDE                    	mov	ds, si
  5790 00002477 66C1EE1C                	shr	esi, 28
  5791 0000247B 668B04                  	mov	eax, [si]
  5792 0000247E 6683F801                	cmp	eax, 1
  5793 00002482 7518                    	jne	L371
  5794                                  ; loc     <something> : * struct <something>
  5795                                  ; RPN'ized expression: "( c2cPFR TPreparados + *u &u (something374) , tindx eliminarPC2c ) "
  5796                                  ; Expanded expression: " c2cPFR 64 +  (@8) *(4)  eliminarPC2c ()8 "
  5797                                  ; Fused expression:    "( c2cPFR + ax 64 , *(4) (@8) , eliminarPC2c )8 "
  5798                                  section .relod
  5799 00000248 [86240000]              	dd	L375
  5800                                  section .text
  5801 00002484 66B8                    	db	0x66, 0xB8
  5802                                  L375:
  5803 00002486 [60540100]              	dd	_c2cPFR
  5804 0000248A 6683C040                	add	eax, 64
  5805 0000248E 6650                    	push	eax
  5806 00002490 66FF7608                	push	dword [bp+8]
  5807 00002494 9A                      	db	0x9A
  5808                                  section .relot
  5809 0000006C [95240000]              	dd	L376
  5810                                  section .text
  5811                                  L376:
  5812 00002495 [00000000]              	dd	_eliminarPC2c
  5813 00002499 83ECF8                  	sub	sp, -8
  5814                                  L371:
  5815                                  ; RPN'ized expression: "( tindx devolverPila ) "
  5816                                  ; Expanded expression: " (@8) *(4)  devolverPila ()4 "
  5817                                  ; Fused expression:    "( *(4) (@8) , devolverPila )4 "
  5818 0000249C 66FF7608                	push	dword [bp+8]
  5819 000024A0 9A                      	db	0x9A
  5820                                  section .relot
  5821 00000070 [A1240000]              	dd	L377
  5822                                  section .text
  5823                                  L377:
  5824 000024A1 [22220000]              	dd	_devolverPila
  5825 000024A5 83ECFC                  	sub	sp, -4
  5826                                  ; return
  5827                                  ; RPN'ized expression: "0 "
  5828                                  ; Expanded expression: "0 "
  5829                                  ; Expression value: 0
  5830                                  ; Fused expression:    "0  "
  5831 000024A8 66B800000000            	mov	eax, 0
  5832                                  L361:
  5833 000024AE 66                      	db	0x66
  5834 000024AF C9                      	leave
  5835 000024B0 CB                      	retf
  5836                                  L378:
  5837                                  
  5838                                  section .fxnsz
  5839 00000044 EE000000                	dd	L378 - _terminarThreadIndx
  5840                                  
  5841                                  ; glb terminarProcIndx : (
  5842                                  ; prm     pindx : int
  5843                                  ;     ) int
  5844                                  section .text
  5845                                  	global	_terminarProcIndx
  5846                                  _terminarProcIndx:
  5847 000024B1 6655                    	push	ebp
  5848 000024B3 660FB7EC                	movzx	ebp, sp
  5849 000024B7 83EC0C                  	 sub	sp,         12
  5850                                  ; loc     pindx : (@8): int
  5851                                  ; loc     modoAp : (@-4): unsigned short
  5852                                  ; loc     j : (@-8): int
  5853                                  ; loc     dfs : (@-12): int
  5854                                  ; if
  5855                                  ; RPN'ized expression: "pindx 0 == "
  5856                                  ; Expanded expression: "(@8) *(4) 0 == "
  5857                                  ; Fused expression:    "== *(@8) 0 IF! "
  5858 000024BA 668B4608                	mov	eax, [bp+8]
  5859 000024BE 6683F800                	cmp	eax, 0
  5860 000024C2 7509                    	jne	L381
  5861                                  ; return
  5862                                  ; RPN'ized expression: "1 -u "
  5863                                  ; Expanded expression: "-1 "
  5864                                  ; Expression value: -1
  5865                                  ; Fused expression:    "-1  "
  5866 000024C4 66B8FFFFFFFF            	mov	eax, -1
  5867 000024CA E92102                  	jmp	L379
  5868                                  L381:
  5869                                  ; if
  5870                                  ; RPN'ized expression: "pindx 0 < pindx 16 >= || "
  5871                                  ; Expanded expression: "(@8) *(4) 0 < [sh||->385] (@8) *(4) 16 >= ||[385] "
  5872                                  ; Fused expression:    "< *(@8) 0 [sh||->385] >= *(@8) 16 ||[385]  "
  5873 000024CD 668B4608                	mov	eax, [bp+8]
  5874 000024D1 6683F800                	cmp	eax, 0
  5875 000024D5 0F9CC0                  	setl	al
  5876 000024D8 660FB6C0                	movzx	eax, al
  5877                                  ; JumpIfNotZero
  5878 000024DC 6685C0                  	test	eax, eax
  5879 000024DF 750F                    	jne	L385
  5880 000024E1 668B4608                	mov	eax, [bp+8]
  5881 000024E5 6683F810                	cmp	eax, 16
  5882 000024E9 0F9DC0                  	setge	al
  5883 000024EC 660FB6C0                	movzx	eax, al
  5884                                  L385:
  5885                                  ; JumpIfZero
  5886 000024F0 6685C0                  	test	eax, eax
  5887 000024F3 7409                    	je	L383
  5888                                  ; return
  5889                                  ; RPN'ized expression: "2 -u "
  5890                                  ; Expanded expression: "-2 "
  5891                                  ; Expression value: -2
  5892                                  ; Fused expression:    "-2  "
  5893 000024F5 66B8FEFFFFFF            	mov	eax, -2
  5894 000024FB E9F001                  	jmp	L379
  5895                                  L383:
  5896                                  ; if
  5897                                  ; RPN'ized expression: "descThread pindx + *u &u estado -> *u libre == "
  5898                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 0 == "
  5899                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 0 IF! "
  5900                                  section .relod
  5901 0000024C [00250000]              	dd	L388
  5902                                  section .text
  5903 000024FE 66B8                    	db	0x66, 0xB8
  5904                                  L388:
  5905 00002500 [40120000]              	dd	_descThread
  5906 00002504 6650                    	push	eax
  5907 00002506 668B4608                	mov	eax, [bp+8]
  5908 0000250A 666BC028                	imul	eax, eax, 40
  5909 0000250E 6689C1                  	mov	ecx, eax
  5910 00002511 6658                    	pop	eax
  5911 00002513 6601C8                  	add	eax, ecx
  5912 00002516 6683C004                	add	eax, 4
  5913 0000251A 6689C3                  	mov	ebx, eax
  5914 0000251D 6689DE                  	mov	esi, ebx
  5915 00002520 66C1CE04                	ror	esi, 4
  5916 00002524 8EDE                    	mov	ds, si
  5917 00002526 66C1EE1C                	shr	esi, 28
  5918 0000252A 668B04                  	mov	eax, [si]
  5919 0000252D 6683F800                	cmp	eax, 0
  5920 00002531 7509                    	jne	L386
  5921                                  ; return
  5922                                  ; RPN'ized expression: "3 -u "
  5923                                  ; Expanded expression: "-3 "
  5924                                  ; Expression value: -3
  5925                                  ; Fused expression:    "-3  "
  5926 00002533 66B8FDFFFFFF            	mov	eax, -3
  5927 00002539 E9B201                  	jmp	L379
  5928                                  L386:
  5929                                  ; if
  5930                                  ; RPN'ized expression: "descThread pindx + *u &u estado -> *u preparado == "
  5931                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 1 == "
  5932                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 1 IF! "
  5933                                  section .relod
  5934 00000250 [3E250000]              	dd	L391
  5935                                  section .text
  5936 0000253C 66B8                    	db	0x66, 0xB8
  5937                                  L391:
  5938 0000253E [40120000]              	dd	_descThread
  5939 00002542 6650                    	push	eax
  5940 00002544 668B4608                	mov	eax, [bp+8]
  5941 00002548 666BC028                	imul	eax, eax, 40
  5942 0000254C 6689C1                  	mov	ecx, eax
  5943 0000254F 6658                    	pop	eax
  5944 00002551 6601C8                  	add	eax, ecx
  5945 00002554 6683C004                	add	eax, 4
  5946 00002558 6689C3                  	mov	ebx, eax
  5947 0000255B 6689DE                  	mov	esi, ebx
  5948 0000255E 66C1CE04                	ror	esi, 4
  5949 00002562 8EDE                    	mov	ds, si
  5950 00002564 66C1EE1C                	shr	esi, 28
  5951 00002568 668B04                  	mov	eax, [si]
  5952 0000256B 6683F801                	cmp	eax, 1
  5953 0000256F 7518                    	jne	L389
  5954                                  ; loc     <something> : * struct <something>
  5955                                  ; RPN'ized expression: "( c2cPFR TPreparados + *u &u (something392) , pindx eliminarPC2c ) "
  5956                                  ; Expanded expression: " c2cPFR 64 +  (@8) *(4)  eliminarPC2c ()8 "
  5957                                  ; Fused expression:    "( c2cPFR + ax 64 , *(4) (@8) , eliminarPC2c )8 "
  5958                                  section .relod
  5959 00000254 [73250000]              	dd	L393
  5960                                  section .text
  5961 00002571 66B8                    	db	0x66, 0xB8
  5962                                  L393:
  5963 00002573 [60540100]              	dd	_c2cPFR
  5964 00002577 6683C040                	add	eax, 64
  5965 0000257B 6650                    	push	eax
  5966 0000257D 66FF7608                	push	dword [bp+8]
  5967 00002581 9A                      	db	0x9A
  5968                                  section .relot
  5969 00000074 [82250000]              	dd	L394
  5970                                  section .text
  5971                                  L394:
  5972 00002582 [00000000]              	dd	_eliminarPC2c
  5973 00002586 83ECF8                  	sub	sp, -8
  5974                                  L389:
  5975                                  ; for
  5976                                  ; RPN'ized expression: "j 0 = "
  5977                                  ; Expanded expression: "(@-8) 0 =(4) "
  5978                                  ; Fused expression:    "=(204) *(@-8) 0 "
  5979 00002589 66B800000000            	mov	eax, 0
  5980 0000258F 668946F8                	mov	[bp-8], eax
  5981                                  L395:
  5982                                  ; RPN'ized expression: "j 10 < "
  5983                                  ; Expanded expression: "(@-8) *(4) 10 < "
  5984                                  ; Fused expression:    "< *(@-8) 10 IF! "
  5985 00002593 668B46F8                	mov	eax, [bp-8]
  5986 00002597 6683F80A                	cmp	eax, 10
  5987 0000259B 0F8D3D01                	jge	L398
  5988                                  ; RPN'ized expression: "j ++p "
  5989                                  ; Expanded expression: "(@-8) ++p(4) "
  5990                                  ; {
  5991                                  ; RPN'ized expression: "dfs descProceso pindx + *u &u tfa -> *u j + *u &u dfs -> *u = "
  5992                                  ; Expanded expression: "(@-12) descProceso (@8) *(4) 292 * + 164 + (@-8) *(4) 12 * + 4 + *(4) =(4) "
  5993                                  ; Fused expression:    "descProceso push-ax * *(@8) 292 + *sp ax + ax 164 push-ax * *(@-8) 12 + *sp ax + ax 4 =(204) *(@-12) *ax "
  5994                                  section .relod
  5995 00000258 [A1250000]              	dd	L399
  5996                                  section .text
  5997 0000259F 66B8                    	db	0x66, 0xB8
  5998                                  L399:
  5999 000025A1 [00000000]              	dd	_descProceso
  6000 000025A5 6650                    	push	eax
  6001 000025A7 668B4608                	mov	eax, [bp+8]
  6002 000025AB 6669C024010000          	imul	eax, eax, 292
  6003 000025B2 6689C1                  	mov	ecx, eax
  6004 000025B5 6658                    	pop	eax
  6005 000025B7 6601C8                  	add	eax, ecx
  6006 000025BA 6605A4000000            	add	eax, 164
  6007 000025C0 6650                    	push	eax
  6008 000025C2 668B46F8                	mov	eax, [bp-8]
  6009 000025C6 666BC00C                	imul	eax, eax, 12
  6010 000025CA 6689C1                  	mov	ecx, eax
  6011 000025CD 6658                    	pop	eax
  6012 000025CF 6601C8                  	add	eax, ecx
  6013 000025D2 6683C004                	add	eax, 4
  6014 000025D6 6689C3                  	mov	ebx, eax
  6015 000025D9 6689DE                  	mov	esi, ebx
  6016 000025DC 66C1CE04                	ror	esi, 4
  6017 000025E0 8EDE                    	mov	ds, si
  6018 000025E2 66C1EE1C                	shr	esi, 28
  6019 000025E6 668B04                  	mov	eax, [si]
  6020 000025E9 668946F4                	mov	[bp-12], eax
  6021                                  ; if
  6022                                  ; RPN'ized expression: "dfs 0 > "
  6023                                  ; Expanded expression: "(@-12) *(4) 0 > "
  6024                                  ; Fused expression:    "> *(@-12) 0 IF! "
  6025 000025ED 668B46F4                	mov	eax, [bp-12]
  6026 000025F1 6683F800                	cmp	eax, 0
  6027 000025F5 0F8ED800                	jle	L400
  6028                                  ; {
  6029                                  ; RPN'ized expression: "modoAp descProceso pindx + *u &u tfa -> *u j + *u &u modoAp -> *u = "
  6030                                  ; Expanded expression: "(@-4) descProceso (@8) *(4) 292 * + 164 + (@-8) *(4) 12 * + 0 + *(2) =(2) "
  6031                                  ; Fused expression:    "descProceso push-ax * *(@8) 292 + *sp ax + ax 164 push-ax * *(@-8) 12 + *sp ax + ax 0 =(170) *(@-4) *ax "
  6032                                  section .relod
  6033 0000025C [FB250000]              	dd	L402
  6034                                  section .text
  6035 000025F9 66B8                    	db	0x66, 0xB8
  6036                                  L402:
  6037 000025FB [00000000]              	dd	_descProceso
  6038 000025FF 6650                    	push	eax
  6039 00002601 668B4608                	mov	eax, [bp+8]
  6040 00002605 6669C024010000          	imul	eax, eax, 292
  6041 0000260C 6689C1                  	mov	ecx, eax
  6042 0000260F 6658                    	pop	eax
  6043 00002611 6601C8                  	add	eax, ecx
  6044 00002614 6605A4000000            	add	eax, 164
  6045 0000261A 6650                    	push	eax
  6046 0000261C 668B46F8                	mov	eax, [bp-8]
  6047 00002620 666BC00C                	imul	eax, eax, 12
  6048 00002624 6689C1                  	mov	ecx, eax
  6049 00002627 6658                    	pop	eax
  6050 00002629 6601C8                  	add	eax, ecx
  6051 0000262C 6689C3                  	mov	ebx, eax
  6052 0000262F 6689DE                  	mov	esi, ebx
  6053 00002632 66C1CE04                	ror	esi, 4
  6054 00002636 8EDE                    	mov	ds, si
  6055 00002638 66C1EE1C                	shr	esi, 28
  6056 0000263C 8B04                    	mov	ax, [si]
  6057 0000263E 660FB7C0                	movzx	eax, ax
  6058 00002642 8946FC                  	mov	[bp-4], ax
  6059 00002645 660FB7C0                	movzx	eax, ax
  6060                                  ; if
  6061                                  ; RPN'ized expression: "modoAp 7 & 1 == "
  6062                                  ; Expanded expression: "(@-4) *(2) 7 & 1 == "
  6063                                  ; Fused expression:    "& *(@-4) 7 == ax 1 IF! "
  6064 00002649 8B46FC                  	mov	ax, [bp-4]
  6065 0000264C 660FB7C0                	movzx	eax, ax
  6066 00002650 6683E007                	and	eax, 7
  6067 00002654 6683F801                	cmp	eax, 1
  6068 00002658 7534                    	jne	L403
  6069                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_L -> *u --p "
  6070                                  ; Expanded expression: "descFichero (@-12) *(4) 36 * + 28 + --p(4) "
  6071                                  ; Fused expression:    "descFichero push-ax * *(@-12) 36 + *sp ax + ax 28 --p(4) *ax "
  6072                                  section .relod
  6073 00000260 [5C260000]              	dd	L405
  6074                                  section .text
  6075 0000265A 66B8                    	db	0x66, 0xB8
  6076                                  L405:
  6077 0000265C [504C0100]              	dd	_descFichero
  6078 00002660 6650                    	push	eax
  6079 00002662 668B46F4                	mov	eax, [bp-12]
  6080 00002666 666BC024                	imul	eax, eax, 36
  6081 0000266A 6689C1                  	mov	ecx, eax
  6082 0000266D 6658                    	pop	eax
  6083 0000266F 6601C8                  	add	eax, ecx
  6084 00002672 6683C01C                	add	eax, 28
  6085 00002676 6689C3                  	mov	ebx, eax
  6086 00002679 6689DE                  	mov	esi, ebx
  6087 0000267C 66C1CE04                	ror	esi, 4
  6088 00002680 8EDE                    	mov	ds, si
  6089 00002682 66C1EE1C                	shr	esi, 28
  6090 00002686 668B04                  	mov	eax, [si]
  6091 00002689 66FF0C                  	dec	dword [si]
  6092 0000268C EB43                    	jmp	L404
  6093                                  L403:
  6094                                  ; else
  6095                                  ; if
  6096                                  ; RPN'ized expression: "modoAp 7 & 2 == "
  6097                                  ; Expanded expression: "(@-4) *(2) 7 & 2 == "
  6098                                  ; Fused expression:    "& *(@-4) 7 == ax 2 IF! "
  6099 0000268E 8B46FC                  	mov	ax, [bp-4]
  6100 00002691 660FB7C0                	movzx	eax, ax
  6101 00002695 6683E007                	and	eax, 7
  6102 00002699 6683F802                	cmp	eax, 2
  6103 0000269D 7532                    	jne	L406
  6104                                  ; RPN'ized expression: "descFichero dfs + *u &u contAp_E -> *u --p "
  6105                                  ; Expanded expression: "descFichero (@-12) *(4) 36 * + 32 + --p(4) "
  6106                                  ; Fused expression:    "descFichero push-ax * *(@-12) 36 + *sp ax + ax 32 --p(4) *ax "
  6107                                  section .relod
  6108 00000264 [A1260000]              	dd	L408
  6109                                  section .text
  6110 0000269F 66B8                    	db	0x66, 0xB8
  6111                                  L408:
  6112 000026A1 [504C0100]              	dd	_descFichero
  6113 000026A5 6650                    	push	eax
  6114 000026A7 668B46F4                	mov	eax, [bp-12]
  6115 000026AB 666BC024                	imul	eax, eax, 36
  6116 000026AF 6689C1                  	mov	ecx, eax
  6117 000026B2 6658                    	pop	eax
  6118 000026B4 6601C8                  	add	eax, ecx
  6119 000026B7 6683C020                	add	eax, 32
  6120 000026BB 6689C3                  	mov	ebx, eax
  6121 000026BE 6689DE                  	mov	esi, ebx
  6122 000026C1 66C1CE04                	ror	esi, 4
  6123 000026C5 8EDE                    	mov	ds, si
  6124 000026C7 66C1EE1C                	shr	esi, 28
  6125 000026CB 668B04                  	mov	eax, [si]
  6126 000026CE 66FF0C                  	dec	dword [si]
  6127                                  L406:
  6128                                  L404:
  6129                                  ; }
  6130                                  L400:
  6131                                  ; }
  6132                                  L396:
  6133                                  ; Fused expression:    "++p(4) *(@-8) "
  6134 000026D1 668B46F8                	mov	eax, [bp-8]
  6135 000026D5 66FF46F8                	inc	dword [bp-8]
  6136 000026D9 E9B7FE                  	jmp	L395
  6137                                  L398:
  6138                                  ; RPN'ized expression: "( pindx devolverParticion ) "
  6139                                  ; Expanded expression: " (@8) *(4)  devolverParticion ()4 "
  6140                                  ; Fused expression:    "( *(4) (@8) , devolverParticion )4 "
  6141 000026DC 66FF7608                	push	dword [bp+8]
  6142 000026E0 9A                      	db	0x9A
  6143                                  section .relot
  6144 00000078 [E1260000]              	dd	L409
  6145                                  section .text
  6146                                  L409:
  6147 000026E1 [AA220000]              	dd	_devolverParticion
  6148 000026E5 83ECFC                  	sub	sp, -4
  6149                                  ; return
  6150                                  ; RPN'ized expression: "0 "
  6151                                  ; Expanded expression: "0 "
  6152                                  ; Expression value: 0
  6153                                  ; Fused expression:    "0  "
  6154 000026E8 66B800000000            	mov	eax, 0
  6155                                  L379:
  6156 000026EE 66                      	db	0x66
  6157 000026EF C9                      	leave
  6158 000026F0 CB                      	retf
  6159                                  L410:
  6160                                  
  6161                                  section .fxnsz
  6162 00000048 40020000                	dd	L410 - _terminarProcIndx
  6163                                  
  6164                                  ; glb eliminarThreadIndx : (
  6165                                  ; prm     tindx : int
  6166                                  ;     ) int
  6167                                  section .text
  6168                                  	global	_eliminarThreadIndx
  6169                                  _eliminarThreadIndx:
  6170 000026F1 6655                    	push	ebp
  6171 000026F3 660FB7EC                	movzx	ebp, sp
  6172                                  	;sub	sp,          0
  6173                                  ; loc     tindx : (@8): int
  6174                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u libre = "
  6175                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + 0 =(4) "
  6176                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 =(204) *ax 0 "
  6177                                  section .relod
  6178 00000268 [F9260000]              	dd	L413
  6179                                  section .text
  6180 000026F7 66B8                    	db	0x66, 0xB8
  6181                                  L413:
  6182 000026F9 [40120000]              	dd	_descThread
  6183 000026FD 6650                    	push	eax
  6184 000026FF 668B4608                	mov	eax, [bp+8]
  6185 00002703 666BC028                	imul	eax, eax, 40
  6186 00002707 6689C1                  	mov	ecx, eax
  6187 0000270A 6658                    	pop	eax
  6188 0000270C 6601C8                  	add	eax, ecx
  6189 0000270F 6683C004                	add	eax, 4
  6190 00002713 6689C3                  	mov	ebx, eax
  6191 00002716 66B800000000            	mov	eax, 0
  6192 0000271C 6689DE                  	mov	esi, ebx
  6193 0000271F 66C1CE04                	ror	esi, 4
  6194 00002723 8EDE                    	mov	ds, si
  6195 00002725 66C1EE1C                	shr	esi, 28
  6196 00002729 668904                  	mov	[si], eax
  6197                                  ; RPN'ized expression: "descThread tindx + *u &u pindx -> *u 1 -u = "
  6198                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 32 + -1 =(4) "
  6199                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 32 =(204) *ax -1 "
  6200                                  section .relod
  6201 0000026C [2E270000]              	dd	L414
  6202                                  section .text
  6203 0000272C 66B8                    	db	0x66, 0xB8
  6204                                  L414:
  6205 0000272E [40120000]              	dd	_descThread
  6206 00002732 6650                    	push	eax
  6207 00002734 668B4608                	mov	eax, [bp+8]
  6208 00002738 666BC028                	imul	eax, eax, 40
  6209 0000273C 6689C1                  	mov	ecx, eax
  6210 0000273F 6658                    	pop	eax
  6211 00002741 6601C8                  	add	eax, ecx
  6212 00002744 6683C020                	add	eax, 32
  6213 00002748 6689C3                  	mov	ebx, eax
  6214 0000274B 66B8FFFFFFFF            	mov	eax, -1
  6215 00002751 6689DE                  	mov	esi, ebx
  6216 00002754 66C1CE04                	ror	esi, 4
  6217 00002758 8EDE                    	mov	ds, si
  6218 0000275A 66C1EE1C                	shr	esi, 28
  6219 0000275E 668904                  	mov	[si], eax
  6220                                  ; loc     <something> : * struct <something>
  6221                                  ; RPN'ized expression: "( c2cPFR DTOcupados + *u &u (something415) , tindx eliminarPC2c ) "
  6222                                  ; Expanded expression: " c2cPFR 48 +  (@8) *(4)  eliminarPC2c ()8 "
  6223                                  ; Fused expression:    "( c2cPFR + ax 48 , *(4) (@8) , eliminarPC2c )8 "
  6224                                  section .relod
  6225 00000270 [63270000]              	dd	L416
  6226                                  section .text
  6227 00002761 66B8                    	db	0x66, 0xB8
  6228                                  L416:
  6229 00002763 [60540100]              	dd	_c2cPFR
  6230 00002767 6683C030                	add	eax, 48
  6231 0000276B 6650                    	push	eax
  6232 0000276D 66FF7608                	push	dword [bp+8]
  6233 00002771 9A                      	db	0x9A
  6234                                  section .relot
  6235 0000007C [72270000]              	dd	L417
  6236                                  section .text
  6237                                  L417:
  6238 00002772 [00000000]              	dd	_eliminarPC2c
  6239 00002776 83ECF8                  	sub	sp, -8
  6240                                  ; loc     <something> : * struct <something>
  6241                                  ; RPN'ized expression: "( c2cPFR DTLibres + *u &u (something418) , tindx apilarPC2c ) "
  6242                                  ; Expanded expression: " c2cPFR 32 +  (@8) *(4)  apilarPC2c ()8 "
  6243                                  ; Fused expression:    "( c2cPFR + ax 32 , *(4) (@8) , apilarPC2c )8 "
  6244                                  section .relod
  6245 00000274 [7B270000]              	dd	L419
  6246                                  section .text
  6247 00002779 66B8                    	db	0x66, 0xB8
  6248                                  L419:
  6249 0000277B [60540100]              	dd	_c2cPFR
  6250 0000277F 6683C020                	add	eax, 32
  6251 00002783 6650                    	push	eax
  6252 00002785 66FF7608                	push	dword [bp+8]
  6253 00002789 9A                      	db	0x9A
  6254                                  section .relot
  6255 00000080 [8A270000]              	dd	L420
  6256                                  section .text
  6257                                  L420:
  6258 0000278A [00000000]              	dd	_apilarPC2c
  6259 0000278E 83ECF8                  	sub	sp, -8
  6260                                  ; return
  6261                                  ; RPN'ized expression: "0 "
  6262                                  ; Expanded expression: "0 "
  6263                                  ; Expression value: 0
  6264                                  ; Fused expression:    "0  "
  6265 00002791 66B800000000            	mov	eax, 0
  6266                                  L411:
  6267 00002797 66                      	db	0x66
  6268 00002798 C9                      	leave
  6269 00002799 CB                      	retf
  6270                                  L421:
  6271                                  
  6272                                  section .fxnsz
  6273 0000004C A9000000                	dd	L421 - _eliminarThreadIndx
  6274                                  
  6275                                  ; glb eliminarProcIndx : (
  6276                                  ; prm     pindx : int
  6277                                  ;     ) int
  6278                                  section .text
  6279                                  	global	_eliminarProcIndx
  6280                                  _eliminarProcIndx:
  6281 0000279A 6655                    	push	ebp
  6282 0000279C 660FB7EC                	movzx	ebp, sp
  6283                                  	;sub	sp,          0
  6284                                  ; loc     pindx : (@8): int
  6285                                  ; RPN'ized expression: "descThread pindx + *u &u estado -> *u libre = "
  6286                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + 0 =(4) "
  6287                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 =(204) *ax 0 "
  6288                                  section .relod
  6289 00000278 [A2270000]              	dd	L424
  6290                                  section .text
  6291 000027A0 66B8                    	db	0x66, 0xB8
  6292                                  L424:
  6293 000027A2 [40120000]              	dd	_descThread
  6294 000027A6 6650                    	push	eax
  6295 000027A8 668B4608                	mov	eax, [bp+8]
  6296 000027AC 666BC028                	imul	eax, eax, 40
  6297 000027B0 6689C1                  	mov	ecx, eax
  6298 000027B3 6658                    	pop	eax
  6299 000027B5 6601C8                  	add	eax, ecx
  6300 000027B8 6683C004                	add	eax, 4
  6301 000027BC 6689C3                  	mov	ebx, eax
  6302 000027BF 66B800000000            	mov	eax, 0
  6303 000027C5 6689DE                  	mov	esi, ebx
  6304 000027C8 66C1CE04                	ror	esi, 4
  6305 000027CC 8EDE                    	mov	ds, si
  6306 000027CE 66C1EE1C                	shr	esi, 28
  6307 000027D2 668904                  	mov	[si], eax
  6308                                  ; RPN'ized expression: "descProceso pindx + *u &u pid -> *u 1 -u = "
  6309                                  ; Expanded expression: "descProceso (@8) *(4) 292 * + 0 + -1 =(4) "
  6310                                  ; Fused expression:    "descProceso push-ax * *(@8) 292 + *sp ax + ax 0 =(204) *ax -1 "
  6311                                  section .relod
  6312 0000027C [D7270000]              	dd	L425
  6313                                  section .text
  6314 000027D5 66B8                    	db	0x66, 0xB8
  6315                                  L425:
  6316 000027D7 [00000000]              	dd	_descProceso
  6317 000027DB 6650                    	push	eax
  6318 000027DD 668B4608                	mov	eax, [bp+8]
  6319 000027E1 6669C024010000          	imul	eax, eax, 292
  6320 000027E8 6689C1                  	mov	ecx, eax
  6321 000027EB 6658                    	pop	eax
  6322 000027ED 6601C8                  	add	eax, ecx
  6323 000027F0 6689C3                  	mov	ebx, eax
  6324 000027F3 66B8FFFFFFFF            	mov	eax, -1
  6325 000027F9 6689DE                  	mov	esi, ebx
  6326 000027FC 66C1CE04                	ror	esi, 4
  6327 00002800 8EDE                    	mov	ds, si
  6328 00002802 66C1EE1C                	shr	esi, 28
  6329 00002806 668904                  	mov	[si], eax
  6330                                  ; loc     <something> : * struct <something>
  6331                                  ; RPN'ized expression: "( c2cPFR DPOcupados + *u &u (something426) , pindx eliminarPC2c ) "
  6332                                  ; Expanded expression: " c2cPFR 16 +  (@8) *(4)  eliminarPC2c ()8 "
  6333                                  ; Fused expression:    "( c2cPFR + ax 16 , *(4) (@8) , eliminarPC2c )8 "
  6334                                  section .relod
  6335 00000280 [0B280000]              	dd	L427
  6336                                  section .text
  6337 00002809 66B8                    	db	0x66, 0xB8
  6338                                  L427:
  6339 0000280B [60540100]              	dd	_c2cPFR
  6340 0000280F 6683C010                	add	eax, 16
  6341 00002813 6650                    	push	eax
  6342 00002815 66FF7608                	push	dword [bp+8]
  6343 00002819 9A                      	db	0x9A
  6344                                  section .relot
  6345 00000084 [1A280000]              	dd	L428
  6346                                  section .text
  6347                                  L428:
  6348 0000281A [00000000]              	dd	_eliminarPC2c
  6349 0000281E 83ECF8                  	sub	sp, -8
  6350                                  ; loc     <something> : * struct <something>
  6351                                  ; RPN'ized expression: "( c2cPFR DPLibres + *u &u (something429) , pindx apilarPC2c ) "
  6352                                  ; Expanded expression: " c2cPFR 0 +  (@8) *(4)  apilarPC2c ()8 "
  6353                                  ; Fused expression:    "( c2cPFR + ax 0 , *(4) (@8) , apilarPC2c )8 "
  6354                                  section .relod
  6355 00000284 [23280000]              	dd	L430
  6356                                  section .text
  6357 00002821 66B8                    	db	0x66, 0xB8
  6358                                  L430:
  6359 00002823 [60540100]              	dd	_c2cPFR
  6360 00002827 6650                    	push	eax
  6361 00002829 66FF7608                	push	dword [bp+8]
  6362 0000282D 9A                      	db	0x9A
  6363                                  section .relot
  6364 00000088 [2E280000]              	dd	L431
  6365                                  section .text
  6366                                  L431:
  6367 0000282E [00000000]              	dd	_apilarPC2c
  6368 00002832 83ECF8                  	sub	sp, -8
  6369                                  ; return
  6370                                  ; RPN'ized expression: "0 "
  6371                                  ; Expanded expression: "0 "
  6372                                  ; Expression value: 0
  6373                                  ; Fused expression:    "0  "
  6374 00002835 66B800000000            	mov	eax, 0
  6375                                  L422:
  6376 0000283B 66                      	db	0x66
  6377 0000283C C9                      	leave
  6378 0000283D CB                      	retf
  6379                                  L432:
  6380                                  
  6381                                  section .fxnsz
  6382 00000050 A4000000                	dd	L432 - _eliminarProcIndx
  6383                                  
  6384                                  ; glb matarThreadIndx : (
  6385                                  ; prm     tindx : int
  6386                                  ;     ) int
  6387                                  section .text
  6388                                  	global	_matarThreadIndx
  6389                                  _matarThreadIndx:
  6390 0000283E 6655                    	push	ebp
  6391 00002840 660FB7EC                	movzx	ebp, sp
  6392 00002844 83EC08                  	 sub	sp,          8
  6393                                  ; loc     tindx : (@8): int
  6394                                  ; loc     err : (@-4): int
  6395                                  ; RPN'ized expression: "err 0 = "
  6396                                  ; Expanded expression: "(@-4) 0 =(4) "
  6397                                  ; Fused expression:    "=(204) *(@-4) 0 "
  6398 00002847 66B800000000            	mov	eax, 0
  6399 0000284D 668946FC                	mov	[bp-4], eax
  6400                                  ; loc     rindx : (@-8): int
  6401                                  ; if
  6402                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u libre == "
  6403                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 0 == "
  6404                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 0 IF! "
  6405                                  section .relod
  6406 00000288 [53280000]              	dd	L437
  6407                                  section .text
  6408 00002851 66B8                    	db	0x66, 0xB8
  6409                                  L437:
  6410 00002853 [40120000]              	dd	_descThread
  6411 00002857 6650                    	push	eax
  6412 00002859 668B4608                	mov	eax, [bp+8]
  6413 0000285D 666BC028                	imul	eax, eax, 40
  6414 00002861 6689C1                  	mov	ecx, eax
  6415 00002864 6658                    	pop	eax
  6416 00002866 6601C8                  	add	eax, ecx
  6417 00002869 6683C004                	add	eax, 4
  6418 0000286D 6689C3                  	mov	ebx, eax
  6419 00002870 6689DE                  	mov	esi, ebx
  6420 00002873 66C1CE04                	ror	esi, 4
  6421 00002877 8EDE                    	mov	ds, si
  6422 00002879 66C1EE1C                	shr	esi, 28
  6423 0000287D 668B04                  	mov	eax, [si]
  6424 00002880 6683F800                	cmp	eax, 0
  6425 00002884 7509                    	jne	L435
  6426                                  ; return
  6427                                  ; RPN'ized expression: "1 -u "
  6428                                  ; Expanded expression: "-1 "
  6429                                  ; Expression value: -1
  6430                                  ; Fused expression:    "-1  "
  6431 00002886 66B8FFFFFFFF            	mov	eax, -1
  6432 0000288C E93201                  	jmp	L433
  6433                                  L435:
  6434                                  ; if
  6435                                  ; RPN'ized expression: "descThread tindx + *u &u estado -> *u bloqueado == "
  6436                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 3 == "
  6437                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 3 IF! "
  6438                                  section .relod
  6439 0000028C [91280000]              	dd	L440
  6440                                  section .text
  6441 0000288F 66B8                    	db	0x66, 0xB8
  6442                                  L440:
  6443 00002891 [40120000]              	dd	_descThread
  6444 00002895 6650                    	push	eax
  6445 00002897 668B4608                	mov	eax, [bp+8]
  6446 0000289B 666BC028                	imul	eax, eax, 40
  6447 0000289F 6689C1                  	mov	ecx, eax
  6448 000028A2 6658                    	pop	eax
  6449 000028A4 6601C8                  	add	eax, ecx
  6450 000028A7 6683C004                	add	eax, 4
  6451 000028AB 6689C3                  	mov	ebx, eax
  6452 000028AE 6689DE                  	mov	esi, ebx
  6453 000028B1 66C1CE04                	ror	esi, 4
  6454 000028B5 8EDE                    	mov	ds, si
  6455 000028B7 66C1EE1C                	shr	esi, 28
  6456 000028BB 668B04                  	mov	eax, [si]
  6457 000028BE 6683F803                	cmp	eax, 3
  6458 000028C2 0F85D100                	jne	L438
  6459                                  ; {
  6460                                  ; RPN'ized expression: "rindx descThread tindx + *u &u esperandoPor -> *u = "
  6461                                  ; Expanded expression: "(@-8) descThread (@8) *(4) 40 * + 8 + *(4) =(4) "
  6462                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 8 =(204) *(@-8) *ax "
  6463                                  section .relod
  6464 00000290 [C8280000]              	dd	L441
  6465                                  section .text
  6466 000028C6 66B8                    	db	0x66, 0xB8
  6467                                  L441:
  6468 000028C8 [40120000]              	dd	_descThread
  6469 000028CC 6650                    	push	eax
  6470 000028CE 668B4608                	mov	eax, [bp+8]
  6471 000028D2 666BC028                	imul	eax, eax, 40
  6472 000028D6 6689C1                  	mov	ecx, eax
  6473 000028D9 6658                    	pop	eax
  6474 000028DB 6601C8                  	add	eax, ecx
  6475 000028DE 6683C008                	add	eax, 8
  6476 000028E2 6689C3                  	mov	ebx, eax
  6477 000028E5 6689DE                  	mov	esi, ebx
  6478 000028E8 66C1CE04                	ror	esi, 4
  6479 000028EC 8EDE                    	mov	ds, si
  6480 000028EE 66C1EE1C                	shr	esi, 28
  6481 000028F2 668B04                  	mov	eax, [si]
  6482 000028F5 668946F8                	mov	[bp-8], eax
  6483                                  ; switch
  6484                                  ; RPN'ized expression: "rindx "
  6485                                  ; Expanded expression: "(@-8) *(4) "
  6486                                  ; Fused expression:    "*(4) (@-8)  "
  6487 000028F9 668B46F8                	mov	eax, [bp-8]
  6488 000028FD E98C00                  	jmp	L443
  6489                                  ; {
  6490                                  ; case
  6491                                  ; loc             <something> : int
  6492                                  ; RPN'ized expression: "2 -u (something444) "
  6493                                  ; Expanded expression: "-2 "
  6494                                  ; Expression value: -2
  6495                                  L445:
  6496                                  ; RPN'ized expression: "( tindx eliminarThreadIndx ) "
  6497                                  ; Expanded expression: " (@8) *(4)  eliminarThreadIndx ()4 "
  6498                                  ; Fused expression:    "( *(4) (@8) , eliminarThreadIndx )4 "
  6499 00002900 66FF7608                	push	dword [bp+8]
  6500 00002904 9A                      	db	0x9A
  6501                                  section .relot
  6502 0000008C [05290000]              	dd	L446
  6503                                  section .text
  6504                                  L446:
  6505 00002905 [F1260000]              	dd	_eliminarThreadIndx
  6506 00002909 83ECFC                  	sub	sp, -4
  6507                                  ; return
  6508                                  ; RPN'ized expression: "0 "
  6509                                  ; Expanded expression: "0 "
  6510                                  ; Expression value: 0
  6511                                  ; Fused expression:    "0  "
  6512 0000290C 66B800000000            	mov	eax, 0
  6513 00002912 E9AC00                  	jmp	L433
  6514                                  ; default
  6515                                  L447:
  6516                                  ; if
  6517                                  ; RPN'ized expression: "0 rindx <= rindx 14 < && "
  6518                                  ; Expanded expression: "0 (@-8) *(4) <= [sh&&->450] (@-8) *(4) 14 < &&[450] "
  6519                                  ; Fused expression:    "<= 0 *(@-8) [sh&&->450] < *(@-8) 14 &&[450]  "
  6520 00002915 66B800000000            	mov	eax, 0
  6521 0000291B 663B46F8                	cmp	eax, [bp-8]
  6522 0000291F 0F9EC0                  	setle	al
  6523 00002922 660FB6C0                	movzx	eax, al
  6524                                  ; JumpIfZero
  6525 00002926 6685C0                  	test	eax, eax
  6526 00002929 740F                    	je	L450
  6527 0000292B 668B46F8                	mov	eax, [bp-8]
  6528 0000292F 6683F80E                	cmp	eax, 14
  6529 00002933 0F9CC0                  	setl	al
  6530 00002936 660FB6C0                	movzx	eax, al
  6531                                  L450:
  6532                                  ; JumpIfZero
  6533 0000293A 6685C0                  	test	eax, eax
  6534 0000293D 744B                    	je	L448
  6535                                  ; {
  6536                                  ; RPN'ized expression: "( tindx descRecurso rindx + *u &u eliminar -> *u ) "
  6537                                  ; Expanded expression: " (@8) *(4)  descRecurso (@-8) *(4) 96 * + 92 + *(4) ()4 "
  6538                                  ; Fused expression:    "( *(4) (@8) , descRecurso push-ax * *(@-8) 96 + *sp ax + ax 92 *(4) ax )4 "
  6539 0000293F 66FF7608                	push	dword [bp+8]
  6540                                  section .relod
  6541 00000294 [45290000]              	dd	L451
  6542                                  section .text
  6543 00002943 66B8                    	db	0x66, 0xB8
  6544                                  L451:
  6545 00002945 [204F0100]              	dd	_descRecurso
  6546 00002949 6650                    	push	eax
  6547 0000294B 668B46F8                	mov	eax, [bp-8]
  6548 0000294F 666BC060                	imul	eax, eax, 96
  6549 00002953 6689C1                  	mov	ecx, eax
  6550 00002956 6658                    	pop	eax
  6551 00002958 6601C8                  	add	eax, ecx
  6552 0000295B 6683C05C                	add	eax, 92
  6553 0000295F 6689C3                  	mov	ebx, eax
  6554 00002962 6689DE                  	mov	esi, ebx
  6555 00002965 66C1CE04                	ror	esi, 4
  6556 00002969 8EDE                    	mov	ds, si
  6557 0000296B 66C1EE1C                	shr	esi, 28
  6558 0000296F 668B04                  	mov	eax, [si]
  6559 00002972 9A                      	db	0x9A
  6560                                  section .relot
  6561 00000090 [73290000]              	dd	L452
  6562                                  section .text
  6563                                  L452:
  6564 00002973 [77290000]              	dd	L453
  6565                                  L453:
  6566 00002977 89E6                    	mov	si, sp
  6567 00002979 36830410                	add	word [ss:si], L454 - L453
  6568 0000297D 66C1E00C                	shl	eax, 12
  6569 00002981 C1C004                  	rol	ax, 4
  6570 00002984 6650                    	push	eax
  6571 00002986 CB                      	retf
  6572                                  L454:
  6573 00002987 83ECFC                  	sub	sp, -4
  6574                                  ; }
  6575                                  L448:
  6576                                  ; }
  6577 0000298A EB0B                    	jmp	L442
  6578                                  L443:
  6579 0000298C 6683F8FE                	cmp	eax, -2
  6580 00002990 0F846CFF                	je	L445
  6581 00002994 E97EFF                  	jmp	L447
  6582                                  L442:
  6583                                  ; }
  6584                                  L438:
  6585                                  ; RPN'ized expression: "err ( tindx terminarThreadIndx ) = "
  6586                                  ; Expanded expression: "(@-4)  (@8) *(4)  terminarThreadIndx ()4 =(4) "
  6587                                  ; Fused expression:    "( *(4) (@8) , terminarThreadIndx )4 =(204) *(@-4) ax "
  6588 00002997 66FF7608                	push	dword [bp+8]
  6589 0000299B 9A                      	db	0x9A
  6590                                  section .relot
  6591 00000094 [9C290000]              	dd	L455
  6592                                  section .text
  6593                                  L455:
  6594 0000299C [C3230000]              	dd	_terminarThreadIndx
  6595 000029A0 83ECFC                  	sub	sp, -4
  6596 000029A3 668946FC                	mov	[bp-4], eax
  6597                                  ; if
  6598                                  ; RPN'ized expression: "err 0 == "
  6599                                  ; Expanded expression: "(@-4) *(4) 0 == "
  6600                                  ; Fused expression:    "== *(@-4) 0 IF! "
  6601 000029A7 668B46FC                	mov	eax, [bp-4]
  6602 000029AB 6683F800                	cmp	eax, 0
  6603 000029AF 750C                    	jne	L456
  6604                                  ; RPN'ized expression: "( tindx eliminarThreadIndx ) "
  6605                                  ; Expanded expression: " (@8) *(4)  eliminarThreadIndx ()4 "
  6606                                  ; Fused expression:    "( *(4) (@8) , eliminarThreadIndx )4 "
  6607 000029B1 66FF7608                	push	dword [bp+8]
  6608 000029B5 9A                      	db	0x9A
  6609                                  section .relot
  6610 00000098 [B6290000]              	dd	L458
  6611                                  section .text
  6612                                  L458:
  6613 000029B6 [F1260000]              	dd	_eliminarThreadIndx
  6614 000029BA 83ECFC                  	sub	sp, -4
  6615                                  L456:
  6616                                  ; return
  6617                                  ; RPN'ized expression: "err "
  6618                                  ; Expanded expression: "(@-4) *(4) "
  6619                                  ; Fused expression:    "*(4) (@-4)  "
  6620 000029BD 668B46FC                	mov	eax, [bp-4]
  6621                                  L433:
  6622 000029C1 66                      	db	0x66
  6623 000029C2 C9                      	leave
  6624 000029C3 CB                      	retf
  6625                                  L459:
  6626                                  
  6627                                  section .fxnsz
  6628 00000054 86010000                	dd	L459 - _matarThreadIndx
  6629                                  
  6630                                  ; glb matarProcIndx : (
  6631                                  ; prm     pindx : int
  6632                                  ;     ) int
  6633                                  section .text
  6634                                  	global	_matarProcIndx
  6635                                  _matarProcIndx:
  6636 000029C4 6655                    	push	ebp
  6637 000029C6 660FB7EC                	movzx	ebp, sp
  6638 000029CA 83EC08                  	 sub	sp,          8
  6639                                  ; loc     pindx : (@8): int
  6640                                  ; loc     err : (@-4): int
  6641                                  ; RPN'ized expression: "err 0 = "
  6642                                  ; Expanded expression: "(@-4) 0 =(4) "
  6643                                  ; Fused expression:    "=(204) *(@-4) 0 "
  6644 000029CD 66B800000000            	mov	eax, 0
  6645 000029D3 668946FC                	mov	[bp-4], eax
  6646                                  ; loc     rindx : (@-8): int
  6647                                  ; if
  6648                                  ; RPN'ized expression: "descThread pindx + *u &u estado -> *u libre == "
  6649                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 0 == "
  6650                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 0 IF! "
  6651                                  section .relod
  6652 00000298 [D9290000]              	dd	L464
  6653                                  section .text
  6654 000029D7 66B8                    	db	0x66, 0xB8
  6655                                  L464:
  6656 000029D9 [40120000]              	dd	_descThread
  6657 000029DD 6650                    	push	eax
  6658 000029DF 668B4608                	mov	eax, [bp+8]
  6659 000029E3 666BC028                	imul	eax, eax, 40
  6660 000029E7 6689C1                  	mov	ecx, eax
  6661 000029EA 6658                    	pop	eax
  6662 000029EC 6601C8                  	add	eax, ecx
  6663 000029EF 6683C004                	add	eax, 4
  6664 000029F3 6689C3                  	mov	ebx, eax
  6665 000029F6 6689DE                  	mov	esi, ebx
  6666 000029F9 66C1CE04                	ror	esi, 4
  6667 000029FD 8EDE                    	mov	ds, si
  6668 000029FF 66C1EE1C                	shr	esi, 28
  6669 00002A03 668B04                  	mov	eax, [si]
  6670 00002A06 6683F800                	cmp	eax, 0
  6671 00002A0A 7509                    	jne	L462
  6672                                  ; return
  6673                                  ; RPN'ized expression: "1 -u "
  6674                                  ; Expanded expression: "-1 "
  6675                                  ; Expression value: -1
  6676                                  ; Fused expression:    "-1  "
  6677 00002A0C 66B8FFFFFFFF            	mov	eax, -1
  6678 00002A12 E93201                  	jmp	L460
  6679                                  L462:
  6680                                  ; if
  6681                                  ; RPN'ized expression: "descThread pindx + *u &u estado -> *u bloqueado == "
  6682                                  ; Expanded expression: "descThread (@8) *(4) 40 * + 4 + *(4) 3 == "
  6683                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 4 == *ax 3 IF! "
  6684                                  section .relod
  6685 0000029C [172A0000]              	dd	L467
  6686                                  section .text
  6687 00002A15 66B8                    	db	0x66, 0xB8
  6688                                  L467:
  6689 00002A17 [40120000]              	dd	_descThread
  6690 00002A1B 6650                    	push	eax
  6691 00002A1D 668B4608                	mov	eax, [bp+8]
  6692 00002A21 666BC028                	imul	eax, eax, 40
  6693 00002A25 6689C1                  	mov	ecx, eax
  6694 00002A28 6658                    	pop	eax
  6695 00002A2A 6601C8                  	add	eax, ecx
  6696 00002A2D 6683C004                	add	eax, 4
  6697 00002A31 6689C3                  	mov	ebx, eax
  6698 00002A34 6689DE                  	mov	esi, ebx
  6699 00002A37 66C1CE04                	ror	esi, 4
  6700 00002A3B 8EDE                    	mov	ds, si
  6701 00002A3D 66C1EE1C                	shr	esi, 28
  6702 00002A41 668B04                  	mov	eax, [si]
  6703 00002A44 6683F803                	cmp	eax, 3
  6704 00002A48 0F85D100                	jne	L465
  6705                                  ; {
  6706                                  ; RPN'ized expression: "rindx descThread pindx + *u &u esperandoPor -> *u = "
  6707                                  ; Expanded expression: "(@-8) descThread (@8) *(4) 40 * + 8 + *(4) =(4) "
  6708                                  ; Fused expression:    "descThread push-ax * *(@8) 40 + *sp ax + ax 8 =(204) *(@-8) *ax "
  6709                                  section .relod
  6710 000002A0 [4E2A0000]              	dd	L468
  6711                                  section .text
  6712 00002A4C 66B8                    	db	0x66, 0xB8
  6713                                  L468:
  6714 00002A4E [40120000]              	dd	_descThread
  6715 00002A52 6650                    	push	eax
  6716 00002A54 668B4608                	mov	eax, [bp+8]
  6717 00002A58 666BC028                	imul	eax, eax, 40
  6718 00002A5C 6689C1                  	mov	ecx, eax
  6719 00002A5F 6658                    	pop	eax
  6720 00002A61 6601C8                  	add	eax, ecx
  6721 00002A64 6683C008                	add	eax, 8
  6722 00002A68 6689C3                  	mov	ebx, eax
  6723 00002A6B 6689DE                  	mov	esi, ebx
  6724 00002A6E 66C1CE04                	ror	esi, 4
  6725 00002A72 8EDE                    	mov	ds, si
  6726 00002A74 66C1EE1C                	shr	esi, 28
  6727 00002A78 668B04                  	mov	eax, [si]
  6728 00002A7B 668946F8                	mov	[bp-8], eax
  6729                                  ; switch
  6730                                  ; RPN'ized expression: "rindx "
  6731                                  ; Expanded expression: "(@-8) *(4) "
  6732                                  ; Fused expression:    "*(4) (@-8)  "
  6733 00002A7F 668B46F8                	mov	eax, [bp-8]
  6734 00002A83 E98C00                  	jmp	L470
  6735                                  ; {
  6736                                  ; case
  6737                                  ; loc             <something> : int
  6738                                  ; RPN'ized expression: "2 -u (something471) "
  6739                                  ; Expanded expression: "-2 "
  6740                                  ; Expression value: -2
  6741                                  L472:
  6742                                  ; RPN'ized expression: "( pindx eliminarProcIndx ) "
  6743                                  ; Expanded expression: " (@8) *(4)  eliminarProcIndx ()4 "
  6744                                  ; Fused expression:    "( *(4) (@8) , eliminarProcIndx )4 "
  6745 00002A86 66FF7608                	push	dword [bp+8]
  6746 00002A8A 9A                      	db	0x9A
  6747                                  section .relot
  6748 0000009C [8B2A0000]              	dd	L473
  6749                                  section .text
  6750                                  L473:
  6751 00002A8B [9A270000]              	dd	_eliminarProcIndx
  6752 00002A8F 83ECFC                  	sub	sp, -4
  6753                                  ; return
  6754                                  ; RPN'ized expression: "0 "
  6755                                  ; Expanded expression: "0 "
  6756                                  ; Expression value: 0
  6757                                  ; Fused expression:    "0  "
  6758 00002A92 66B800000000            	mov	eax, 0
  6759 00002A98 E9AC00                  	jmp	L460
  6760                                  ; default
  6761                                  L474:
  6762                                  ; if
  6763                                  ; RPN'ized expression: "0 rindx <= rindx 14 < && "
  6764                                  ; Expanded expression: "0 (@-8) *(4) <= [sh&&->477] (@-8) *(4) 14 < &&[477] "
  6765                                  ; Fused expression:    "<= 0 *(@-8) [sh&&->477] < *(@-8) 14 &&[477]  "
  6766 00002A9B 66B800000000            	mov	eax, 0
  6767 00002AA1 663B46F8                	cmp	eax, [bp-8]
  6768 00002AA5 0F9EC0                  	setle	al
  6769 00002AA8 660FB6C0                	movzx	eax, al
  6770                                  ; JumpIfZero
  6771 00002AAC 6685C0                  	test	eax, eax
  6772 00002AAF 740F                    	je	L477
  6773 00002AB1 668B46F8                	mov	eax, [bp-8]
  6774 00002AB5 6683F80E                	cmp	eax, 14
  6775 00002AB9 0F9CC0                  	setl	al
  6776 00002ABC 660FB6C0                	movzx	eax, al
  6777                                  L477:
  6778                                  ; JumpIfZero
  6779 00002AC0 6685C0                  	test	eax, eax
  6780 00002AC3 744B                    	je	L475
  6781                                  ; {
  6782                                  ; RPN'ized expression: "( pindx descRecurso rindx + *u &u eliminar -> *u ) "
  6783                                  ; Expanded expression: " (@8) *(4)  descRecurso (@-8) *(4) 96 * + 92 + *(4) ()4 "
  6784                                  ; Fused expression:    "( *(4) (@8) , descRecurso push-ax * *(@-8) 96 + *sp ax + ax 92 *(4) ax )4 "
  6785 00002AC5 66FF7608                	push	dword [bp+8]
  6786                                  section .relod
  6787 000002A4 [CB2A0000]              	dd	L478
  6788                                  section .text
  6789 00002AC9 66B8                    	db	0x66, 0xB8
  6790                                  L478:
  6791 00002ACB [204F0100]              	dd	_descRecurso
  6792 00002ACF 6650                    	push	eax
  6793 00002AD1 668B46F8                	mov	eax, [bp-8]
  6794 00002AD5 666BC060                	imul	eax, eax, 96
  6795 00002AD9 6689C1                  	mov	ecx, eax
  6796 00002ADC 6658                    	pop	eax
  6797 00002ADE 6601C8                  	add	eax, ecx
  6798 00002AE1 6683C05C                	add	eax, 92
  6799 00002AE5 6689C3                  	mov	ebx, eax
  6800 00002AE8 6689DE                  	mov	esi, ebx
  6801 00002AEB 66C1CE04                	ror	esi, 4
  6802 00002AEF 8EDE                    	mov	ds, si
  6803 00002AF1 66C1EE1C                	shr	esi, 28
  6804 00002AF5 668B04                  	mov	eax, [si]
  6805 00002AF8 9A                      	db	0x9A
  6806                                  section .relot
  6807 000000A0 [F92A0000]              	dd	L479
  6808                                  section .text
  6809                                  L479:
  6810 00002AF9 [FD2A0000]              	dd	L480
  6811                                  L480:
  6812 00002AFD 89E6                    	mov	si, sp
  6813 00002AFF 36830410                	add	word [ss:si], L481 - L480
  6814 00002B03 66C1E00C                	shl	eax, 12
  6815 00002B07 C1C004                  	rol	ax, 4
  6816 00002B0A 6650                    	push	eax
  6817 00002B0C CB                      	retf
  6818                                  L481:
  6819 00002B0D 83ECFC                  	sub	sp, -4
  6820                                  ; }
  6821                                  L475:
  6822                                  ; }
  6823 00002B10 EB0B                    	jmp	L469
  6824                                  L470:
  6825 00002B12 6683F8FE                	cmp	eax, -2
  6826 00002B16 0F846CFF                	je	L472
  6827 00002B1A E97EFF                  	jmp	L474
  6828                                  L469:
  6829                                  ; }
  6830                                  L465:
  6831                                  ; RPN'ized expression: "err ( pindx terminarProcIndx ) = "
  6832                                  ; Expanded expression: "(@-4)  (@8) *(4)  terminarProcIndx ()4 =(4) "
  6833                                  ; Fused expression:    "( *(4) (@8) , terminarProcIndx )4 =(204) *(@-4) ax "
  6834 00002B1D 66FF7608                	push	dword [bp+8]
  6835 00002B21 9A                      	db	0x9A
  6836                                  section .relot
  6837 000000A4 [222B0000]              	dd	L482
  6838                                  section .text
  6839                                  L482:
  6840 00002B22 [B1240000]              	dd	_terminarProcIndx
  6841 00002B26 83ECFC                  	sub	sp, -4
  6842 00002B29 668946FC                	mov	[bp-4], eax
  6843                                  ; if
  6844                                  ; RPN'ized expression: "err 0 == "
  6845                                  ; Expanded expression: "(@-4) *(4) 0 == "
  6846                                  ; Fused expression:    "== *(@-4) 0 IF! "
  6847 00002B2D 668B46FC                	mov	eax, [bp-4]
  6848 00002B31 6683F800                	cmp	eax, 0
  6849 00002B35 750C                    	jne	L483
  6850                                  ; RPN'ized expression: "( pindx eliminarProcIndx ) "
  6851                                  ; Expanded expression: " (@8) *(4)  eliminarProcIndx ()4 "
  6852                                  ; Fused expression:    "( *(4) (@8) , eliminarProcIndx )4 "
  6853 00002B37 66FF7608                	push	dword [bp+8]
  6854 00002B3B 9A                      	db	0x9A
  6855                                  section .relot
  6856 000000A8 [3C2B0000]              	dd	L485
  6857                                  section .text
  6858                                  L485:
  6859 00002B3C [9A270000]              	dd	_eliminarProcIndx
  6860 00002B40 83ECFC                  	sub	sp, -4
  6861                                  L483:
  6862                                  ; return
  6863                                  ; RPN'ized expression: "err "
  6864                                  ; Expanded expression: "(@-4) *(4) "
  6865                                  ; Fused expression:    "*(4) (@-4)  "
  6866 00002B43 668B46FC                	mov	eax, [bp-4]
  6867                                  L460:
  6868 00002B47 66                      	db	0x66
  6869 00002B48 C9                      	leave
  6870 00002B49 CB                      	retf
  6871                                  L486:
  6872                                  
  6873                                  section .fxnsz
  6874 00000058 86010000                	dd	L486 - _matarProcIndx
  6875                                  
  6876                                  section .text
  6877                                  L175:
  6878 00002B4A 6655                    	push	ebp
  6879 00002B4C 660FB7EC                	movzx	ebp, sp
  6880                                  	;sub	sp,          0
  6881 00002B50 668B5604                	mov	edx, [bp+4]
  6882 00002B54 668B7608                	mov	esi, [bp+8]
  6883 00002B58 66C1CE04                	ror	esi, 4
  6884 00002B5C 8EDE                    	mov	ds, si
  6885 00002B5E 66C1EE1C                	shr	esi, 28
  6886 00002B62 668B4E0C                	mov	ecx, [bp+12]
  6887 00002B66 668B6E00                	mov	ebp, [bp]
  6888 00002B6A 66678D4103              	lea	eax, [ecx + 3]
  6889 00002B6F 6683E0FC                	and	eax, -4
  6890 00002B73 83E810                  	sub	ax, 4*4
  6891 00002B76 29C4                    	sub	sp, ax
  6892 00002B78 8CD0                    	mov	ax, ss
  6893 00002B7A 8EC0                    	mov	es, ax
  6894 00002B7C 89E7                    	mov	di, sp
  6895 00002B7E FC                      	cld
  6896 00002B7F F3A4                    	rep	movsb
  6897 00002B81 6658                    	pop	eax
  6898 00002B83 6650                    	push	eax
  6899 00002B85 6650                    	push	eax
  6900 00002B87 6652                    	push	edx
  6901 00002B89 CB                      	retf
  6902                                  
  6903                                  
  6904                                  	extern	_enHalt
  6905                                  	extern	_desencolarPC2c
  6906                                  	extern	_hayTic
  6907                                  	extern	_SS_Thread
  6908                                  	extern	_SP_Thread
  6909                                  	extern	_nivelActivacionSO1H
  6910                                  	extern	_setThreadStack
  6911                                  	extern	_SS_Tarea
  6912                                  	extern	_SP_Tarea
  6913                                  	extern	_dig
  6914                                  	extern	_pointer
  6915                                  	extern	_off
  6916                                  	extern	_posicionC2c
  6917                                  	extern	_k_buscarBloque
  6918                                  	extern	_encolarPC2c
  6919                                  	extern	_finThread
  6920                                  	extern	_strcpy
  6921                                  	extern	_inicializarPC2c
  6922                                  	extern	_eliminarPC2c
  6923                                  	extern	_k_devolverBloque
  6924                                  	extern	_apilarPC2c
  6925                                  
  6926                                  ; Syntax/declaration table/stack:
  6927                                  ; Bytes used: 15770/40960
  6928                                  
  6929                                  
  6930                                  ; Macro table:
  6931                                  ; Macro __SMALLER_C__ = `0x0100`
  6932                                  ; Macro __SMALLER_C_32__ = ``
  6933                                  ; Macro __HUGE__ = ``
  6934                                  ; Macro __SMALLER_C_SCHAR__ = ``
  6935                                  ; Bytes used: 74/5120
  6936                                  
  6937                                  
  6938                                  ; Identifier table:
  6939                                  ; Ident __floatsisf
  6940                                  ; Ident __floatunsisf
  6941                                  ; Ident __fixsfsi
  6942                                  ; Ident __fixunssfsi
  6943                                  ; Ident __addsf3
  6944                                  ; Ident __subsf3
  6945                                  ; Ident __negsf2
  6946                                  ; Ident __mulsf3
  6947                                  ; Ident __divsf3
  6948                                  ; Ident __lesf2
  6949                                  ; Ident __gesf2
  6950                                  ; Ident dig
  6951                                  ; Ident intptr_t
  6952                                  ; Ident uintptr_t
  6953                                  ; Ident intmax_t
  6954                                  ; Ident uintmax_t
  6955                                  ; Ident int8_t
  6956                                  ; Ident int_least8_t
  6957                                  ; Ident int_fast8_t
  6958                                  ; Ident uint8_t
  6959                                  ; Ident uint_least8_t
  6960                                  ; Ident uint_fast8_t
  6961                                  ; Ident int16_t
  6962                                  ; Ident int_least16_t
  6963                                  ; Ident int_fast16_t
  6964                                  ; Ident uint16_t
  6965                                  ; Ident uint_least16_t
  6966                                  ; Ident uint_fast16_t
  6967                                  ; Ident int32_t
  6968                                  ; Ident int_least32_t
  6969                                  ; Ident int_fast32_t
  6970                                  ; Ident uint32_t
  6971                                  ; Ident uint_least32_t
  6972                                  ; Ident uint_fast32_t
  6973                                  ; Ident <something>
  6974                                  ; Ident quot
  6975                                  ; Ident rem
  6976                                  ; Ident imaxdiv_t
  6977                                  ; Ident FALSE
  6978                                  ; Ident TRUE
  6979                                  ; Ident bool_t
  6980                                  ; Ident pointer_t
  6981                                  ; Ident funcion_t
  6982                                  ; Ident manejador_t
  6983                                  ; Ident rti_t
  6984                                  ; Ident isr_t
  6985                                  ; Ident handler_t
  6986                                  ; Ident retardarThread_t
  6987                                  ; Ident ptrTVI_t
  6988                                  ; Ident modoSO1_Bin
  6989                                  ; Ident modoSO1_Exe
  6990                                  ; Ident modoSO1_Bs
  6991                                  ; Ident modoSO1_t
  6992                                  ; Ident lo
  6993                                  ; Ident hi
  6994                                  ; Ident lh_t
  6995                                  ; Ident offset
  6996                                  ; Ident segment
  6997                                  ; Ident address_t
  6998                                  ; Ident ptr
  6999                                  ; Ident adr
  7000                                  ; Ident uPtrAdr_t
  7001                                  ; Ident pid_t
  7002                                  ; Ident tid_t
  7003                                  ; Ident uid_t
  7004                                  ; Ident gid_t
  7005                                  ; Ident pindx_t
  7006                                  ; Ident tindx_t
  7007                                  ; Ident df_t
  7008                                  ; Ident dfs_t
  7009                                  ; Ident rindx_t
  7010                                  ; Ident inportb
  7011                                  ; Ident port
  7012                                  ; Ident inport
  7013                                  ; Ident outport
  7014                                  ; Ident val
  7015                                  ; Ident outportb
  7016                                  ; Ident inportb_r
  7017                                  ; Ident outportb_r
  7018                                  ; Ident contadorTimer0
  7019                                  ; Ident size_t
  7020                                  ; Ident memset
  7021                                  ; Ident memcpy
  7022                                  ; Ident memmove
  7023                                  ; Ident memchr
  7024                                  ; Ident memcmp
  7025                                  ; Ident strcpy
  7026                                  ; Ident strncpy
  7027                                  ; Ident strxfrm
  7028                                  ; Ident strcat
  7029                                  ; Ident strncat
  7030                                  ; Ident strlen
  7031                                  ; Ident strchr
  7032                                  ; Ident strrchr
  7033                                  ; Ident strstr
  7034                                  ; Ident strspn
  7035                                  ; Ident strcspn
  7036                                  ; Ident strpbrk
  7037                                  ; Ident strtok
  7038                                  ; Ident strcmp
  7039                                  ; Ident strncmp
  7040                                  ; Ident strcoll
  7041                                  ; Ident strerror
  7042                                  ; Ident modoAp_t
  7043                                  ; Ident startBin
  7044                                  ; Ident modoSO1
  7045                                  ; Ident unidadBIOS
  7046                                  ; Ident CS_SO1H
  7047                                  ; Ident RO_SO1H
  7048                                  ; Ident DS_SO1H
  7049                                  ; Ident BSS_SO1H
  7050                                  ; Ident SS_SO1H
  7051                                  ; Ident SS_Kernel
  7052                                  ; Ident IMRInicial
  7053                                  ; Ident obtenerMapa
  7054                                  ; Ident _start
  7055                                  ; Ident __start__
  7056                                  ; Ident main
  7057                                  ; Ident finProceso
  7058                                  ; Ident finThread
  7059                                  ; Ident DS
  7060                                  ; Ident ES
  7061                                  ; Ident EDI
  7062                                  ; Ident ESI
  7063                                  ; Ident EBP
  7064                                  ; Ident ESP
  7065                                  ; Ident EBX
  7066                                  ; Ident EDX
  7067                                  ; Ident ECX
  7068                                  ; Ident EAX
  7069                                  ; Ident IP
  7070                                  ; Ident CS
  7071                                  ; Ident Flags
  7072                                  ; Ident tramaDWords_t
  7073                                  ; Ident DI
  7074                                  ; Ident rDI
  7075                                  ; Ident SI
  7076                                  ; Ident rSI
  7077                                  ; Ident BP
  7078                                  ; Ident rBP
  7079                                  ; Ident SP
  7080                                  ; Ident rSP
  7081                                  ; Ident BX
  7082                                  ; Ident rBX
  7083                                  ; Ident DX
  7084                                  ; Ident rDX
  7085                                  ; Ident CX
  7086                                  ; Ident rCX
  7087                                  ; Ident AX
  7088                                  ; Ident rAX
  7089                                  ; Ident tramaWords_t
  7090                                  ; Ident BL
  7091                                  ; Ident BH
  7092                                  ; Ident rB
  7093                                  ; Ident DL
  7094                                  ; Ident DH
  7095                                  ; Ident rD
  7096                                  ; Ident CL
  7097                                  ; Ident CH
  7098                                  ; Ident rC
  7099                                  ; Ident AL
  7100                                  ; Ident AH
  7101                                  ; Ident rA
  7102                                  ; Ident tramaBytes_t
  7103                                  ; Ident td
  7104                                  ; Ident tw
  7105                                  ; Ident tb
  7106                                  ; Ident trama_t
  7107                                  ; Ident tam
  7108                                  ; Ident sig
  7109                                  ; Ident ant
  7110                                  ; Ident aux
  7111                                  ; Ident relleno
  7112                                  ; Ident bloque_t
  7113                                  ; Ident ptrBloque_t
  7114                                  ; Ident cab
  7115                                  ; Ident dobleEnlace_t
  7116                                  ; Ident numElem
  7117                                  ; Ident primero
  7118                                  ; Ident cabecera
  7119                                  ; Ident e
  7120                                  ; Ident c2c_t
  7121                                  ; Ident posicionC2c
  7122                                  ; Ident i
  7123                                  ; Ident c2c
  7124                                  ; Ident eliminarC2c
  7125                                  ; Ident apilarC2c
  7126                                  ; Ident encolarC2c
  7127                                  ; Ident desencolarC2c
  7128                                  ; Ident inicializarC2c
  7129                                  ; Ident compartida
  7130                                  ; Ident ptrC2c_t
  7131                                  ; Ident posicionPC2c
  7132                                  ; Ident eliminarPC2c
  7133                                  ; Ident ptrC2c
  7134                                  ; Ident apilarPC2c
  7135                                  ; Ident encolarPC2c
  7136                                  ; Ident desencolarPC2c
  7137                                  ; Ident inicializarPC2c
  7138                                  ; Ident callBack_t
  7139                                  ; Ident arg
  7140                                  ; Ident num
  7141                                  ; Ident in
  7142                                  ; Ident out
  7143                                  ; Ident max
  7144                                  ; Ident callBack
  7145                                  ; Ident descCcb_t
  7146                                  ; Ident ccb_t
  7147                                  ; Ident inicCcb
  7148                                  ; Ident ccb
  7149                                  ; Ident encolarCcb
  7150                                  ; Ident cb
  7151                                  ; Ident desencolarCcb
  7152                                  ; Ident eliminarCcb
  7153                                  ; Ident eliminarSegCcb
  7154                                  ; Ident segmento
  7155                                  ; Ident vaciarCcb
  7156                                  ; Ident atenderCcb
  7157                                  ; Ident libre
  7158                                  ; Ident preparado
  7159                                  ; Ident ejecutandose
  7160                                  ; Ident bloqueado
  7161                                  ; Ident estado_t
  7162                                  ; Ident modoAp
  7163                                  ; Ident dfs
  7164                                  ; Ident pos
  7165                                  ; Ident dfa_t
  7166                                  ; Ident pid
  7167                                  ; Ident noStatus
  7168                                  ; Ident status
  7169                                  ; Ident ppindx
  7170                                  ; Ident hpindx
  7171                                  ; Ident c2cHijos
  7172                                  ; Ident c2cThreads
  7173                                  ; Ident CSProc
  7174                                  ; Ident tamCodigo
  7175                                  ; Ident desplBSS
  7176                                  ; Ident desplPila
  7177                                  ; Ident tamFichero
  7178                                  ; Ident programa
  7179                                  ; Ident comando
  7180                                  ; Ident nfa
  7181                                  ; Ident tfa
  7182                                  ; Ident uid
  7183                                  ; Ident gid
  7184                                  ; Ident descProceso_t
  7185                                  ; Ident tid
  7186                                  ; Ident estado
  7187                                  ; Ident esperandoPor
  7188                                  ; Ident trama
  7189                                  ; Ident ptindx
  7190                                  ; Ident htindx
  7191                                  ; Ident pindx
  7192                                  ; Ident SSThread
  7193                                  ; Ident SP0
  7194                                  ; Ident descThread_t
  7195                                  ; Ident flibre
  7196                                  ; Ident fRegular
  7197                                  ; Ident fedBloques
  7198                                  ; Ident fedCaracteres
  7199                                  ; Ident tuberia
  7200                                  ; Ident tipoFichero_t
  7201                                  ; Ident tipo
  7202                                  ; Ident nombre
  7203                                  ; Ident rindx
  7204                                  ; Ident menor
  7205                                  ; Ident shareMode
  7206                                  ; Ident contAp_L
  7207                                  ; Ident contAp_E
  7208                                  ; Ident descFichero_t
  7209                                  ; Ident rLibre
  7210                                  ; Ident rDCaracteres
  7211                                  ; Ident rDBloques
  7212                                  ; Ident rTuberia
  7213                                  ; Ident rGP
  7214                                  ; Ident rGM
  7215                                  ; Ident rSF
  7216                                  ; Ident rOtro
  7217                                  ; Ident tipoRecurso_t
  7218                                  ; Ident open_t
  7219                                  ; Ident modo
  7220                                  ; Ident release_t
  7221                                  ; Ident read_t
  7222                                  ; Ident dir
  7223                                  ; Ident nbytes
  7224                                  ; Ident aio_read_t
  7225                                  ; Ident write_t
  7226                                  ; Ident aio_write_t
  7227                                  ; Ident lseek_t
  7228                                  ; Ident whence
  7229                                  ; Ident fcntl_t
  7230                                  ; Ident cmd
  7231                                  ; Ident ioctl_t
  7232                                  ; Ident request
  7233                                  ; Ident eliminar_t
  7234                                  ; Ident tindx
  7235                                  ; Ident c2cFichRec
  7236                                  ; Ident numVI
  7237                                  ; Ident nVInt
  7238                                  ; Ident irq
  7239                                  ; Ident isr
  7240                                  ; Ident open
  7241                                  ; Ident release
  7242                                  ; Ident read
  7243                                  ; Ident aio_read
  7244                                  ; Ident write
  7245                                  ; Ident aio_write
  7246                                  ; Ident lseek
  7247                                  ; Ident fcntl
  7248                                  ; Ident ioctl
  7249                                  ; Ident eliminar
  7250                                  ; Ident descRecurso_t
  7251                                  ; Ident SP0_So1
  7252                                  ; Ident IMR
  7253                                  ; Ident ptrDebugWord
  7254                                  ; Ident info_t
  7255                                  ; Ident signatura
  7256                                  ; Ident bytesUltSector
  7257                                  ; Ident sectores
  7258                                  ; Ident numDirReub
  7259                                  ; Ident numParCabecera
  7260                                  ; Ident minAlloc
  7261                                  ; Ident maxAlloc
  7262                                  ; Ident SS0
  7263                                  ; Ident checkSum
  7264                                  ; Ident IP0
  7265                                  ; Ident CS0
  7266                                  ; Ident offTablaReub
  7267                                  ; Ident numOverlay
  7268                                  ; Ident cabecera_t
  7269                                  ; Ident Libres
  7270                                  ; Ident Ocupados
  7271                                  ; Ident e2DescProceso
  7272                                  ; Ident e2DescThread
  7273                                  ; Ident e2DescFichero
  7274                                  ; Ident e2DescRecurso
  7275                                  ; Ident e2Hijos
  7276                                  ; Ident e2Threads
  7277                                  ; Ident e2Preparados
  7278                                  ; Ident e2Urgentes
  7279                                  ; Ident e2POrdenados
  7280                                  ; Ident e2TDormidos
  7281                                  ; Ident e2FichRec
  7282                                  ; Ident e2PFR_t
  7283                                  ; Ident DPLibres
  7284                                  ; Ident DPOcupados
  7285                                  ; Ident DTLibres
  7286                                  ; Ident DTOcupados
  7287                                  ; Ident TPreparados
  7288                                  ; Ident TUrgentes
  7289                                  ; Ident POrdenados
  7290                                  ; Ident TDormidos
  7291                                  ; Ident DFLibres
  7292                                  ; Ident DFOcupados
  7293                                  ; Ident DRLibres
  7294                                  ; Ident DROcupados
  7295                                  ; Ident numColasPFR
  7296                                  ; Ident cPFR_t
  7297                                  ; Ident sigThread_t
  7298                                  ; Ident activarThread_t
  7299                                  ; Ident buscarNuevoThreadActual_t
  7300                                  ; Ident bloquearThreadActual_t
  7301                                  ; Ident ptrIndProcesoActual
  7302                                  ; Ident ptrIndThreadActual
  7303                                  ; Ident ptrTramaThread
  7304                                  ; Ident ptrActivarAlEpilogo
  7305                                  ; Ident ptrDescProceso
  7306                                  ; Ident tamDescProceso
  7307                                  ; Ident ptrDescThread
  7308                                  ; Ident tamDescThread
  7309                                  ; Ident ptrDescFichero
  7310                                  ; Ident ptrDescRecurso
  7311                                  ; Ident ptrC2cPFR
  7312                                  ; Ident ptrE2PFR
  7313                                  ; Ident ptrNivelActivacionSO1H
  7314                                  ; Ident ptrEnHalt
  7315                                  ; Ident ptrHayTic
  7316                                  ; Ident ptrCcbAlEpilogo
  7317                                  ; Ident ptrSS_Thread
  7318                                  ; Ident ptrSP_Thread
  7319                                  ; Ident ptrSS_Kernel
  7320                                  ; Ident ptrSP0_Kernel
  7321                                  ; Ident SP0_SO1H
  7322                                  ; Ident ptrContRodajas
  7323                                  ; Ident ptrContTicsRodaja
  7324                                  ; Ident ptrVIOrg
  7325                                  ; Ident sigThread
  7326                                  ; Ident activarThread
  7327                                  ; Ident buscarNuevoThreadActual
  7328                                  ; Ident bloquearThreadActual
  7329                                  ; Ident ptrListaLibres
  7330                                  ; Ident ptrTamBloqueMax
  7331                                  ; Ident descSO1H_t
  7332                                  ; Ident SS_Thread
  7333                                  ; Ident SP_Thread
  7334                                  ; Ident SS_Tarea
  7335                                  ; Ident SP_Tarea
  7336                                  ; Ident nivelActivacionSO1H
  7337                                  ; Ident nVIntActual
  7338                                  ; Ident enHalt
  7339                                  ; Ident activarAlEpilogo1
  7340                                  ; Ident hayTic
  7341                                  ; Ident setKernelStack
  7342                                  ; Ident setThreadStack
  7343                                  ; Ident reg_DL
  7344                                  ; Ident prepararDesbloqueadosUrgentes
  7345                                  ; Ident tamBloqueMax
  7346                                  ; Ident listaLibres
  7347                                  ; Ident k_buscarBloque
  7348                                  ; Ident k_devolverBloque
  7349                                  ; Ident rec_gm
  7350                                  ; Ident inicGM
  7351                                  ; Ident mostrarListaLibres
  7352                                  ; Ident link_gm_k
  7353                                  ; Ident descProcesoExt_t
  7354                                  ; Ident descThreadExt_t
  7355                                  ; Ident descProceso
  7356                                  ; Ident descThread
  7357                                  ; Ident descFichero
  7358                                  ; Ident descRecurso
  7359                                  ; Ident c2cPFR
  7360                                  ; Ident e2PFR
  7361                                  ; Ident descCcbAlEpilogo
  7362                                  ; Ident ccbAlEpilogo
  7363                                  ; Ident tramaThread
  7364                                  ; Ident tramaTarea
  7365                                  ; Ident indThreadActual
  7366                                  ; Ident indProcesoActual
  7367                                  ; Ident indThreadDeSuperficie
  7368                                  ; Ident contRodajas
  7369                                  ; Ident contTicsRodaja
  7370                                  ; Ident contadorTimer00
  7371                                  ; Ident contOcioso
  7372                                  ; Ident nuevoPid
  7373                                  ; Ident nuevoTid
  7374                                  ; Ident indice
  7375                                  ; Ident registrarEnPOrdenados
  7376                                  ; Ident crearThread
  7377                                  ; Ident funcion
  7378                                  ; Ident crearProceso
  7379                                  ; Ident tamFich
  7380                                  ; Ident inicProcesos
  7381                                  ; Ident resetPids
  7382                                  ; Ident resetTids
  7383                                  ; Ident terminarThreadIndx
  7384                                  ; Ident eliminarThreadIndx
  7385                                  ; Ident terminarProcIndx
  7386                                  ; Ident eliminarProcIndx
  7387                                  ; Ident matarThreadIndx
  7388                                  ; Ident matarProcIndx
  7389                                  ; Ident link_procs
  7390                                  ; Ident tipoOrdenador
  7391                                  ; Ident rebootLegacy
  7392                                  ; Ident tipoTeclado
  7393                                  ; Ident leerTeclaBIOS
  7394                                  ; Ident leerTeclaExtBIOS
  7395                                  ; Ident teclaListaBIOS
  7396                                  ; Ident leerTeclaListaBDA
  7397                                  ; Ident teclaListaBDA
  7398                                  ; Ident printCarBIOS
  7399                                  ; Ident car
  7400                                  ; Ident printCarPagBIOS
  7401                                  ; Ident pag
  7402                                  ; Ident printCarAtrPagBIOS
  7403                                  ; Ident atr
  7404                                  ; Ident printLnBIOS
  7405                                  ; Ident printStrBIOS
  7406                                  ; Ident str
  7407                                  ; Ident printStrHastaBIOS
  7408                                  ; Ident n
  7409                                  ; Ident lleno
  7410                                  ; Ident printDecBIOS
  7411                                  ; Ident l
  7412                                  ; Ident printLDecBIOS
  7413                                  ; Ident printIntBIOS
  7414                                  ; Ident printLIntBIOS
  7415                                  ; Ident printHexBIOS
  7416                                  ; Ident printLHexBIOS
  7417                                  ; Ident printBinBIOS
  7418                                  ; Ident printLBinBIOS
  7419                                  ; Ident printPtrBIOS
  7420                                  ; Ident printByteBIOS
  7421                                  ; Ident b
  7422                                  ; Ident printWordBIOS
  7423                                  ; Ident w
  7424                                  ; Ident printCadBIOS
  7425                                  ; Ident cad
  7426                                  ; Ident esperarTicsBIOS
  7427                                  ; Ident tics
  7428                                  ; Ident modoDeVideo
  7429                                  ; Ident establecerModoDeVideo
  7430                                  ; Ident paginaActiva
  7431                                  ; Ident establecerPaginaActiva
  7432                                  ; Ident numPagsVideo
  7433                                  ; Ident scrollPagBDA
  7434                                  ; Ident numLineas
  7435                                  ; Ident scrollPagBIOS
  7436                                  ; Ident scrollBIOS
  7437                                  ; Ident goToXYPag
  7438                                  ; Ident fila
  7439                                  ; Ident columna
  7440                                  ; Ident goToXYBIOS
  7441                                  ; Ident setCursorBIOS
  7442                                  ; Ident linea1
  7443                                  ; Ident linea2
  7444                                  ; Ident ocultaCursorBIOS
  7445                                  ; Ident readXYPagBIOS
  7446                                  ; Ident readXYBIOS
  7447                                  ; Ident memBIOS
  7448                                  ; Ident enviarBIOS
  7449                                  ; Ident recibirBIOS
  7450                                  ; Ident hayApmBIOS
  7451                                  ; Ident version
  7452                                  ; Ident connectApmBIOS
  7453                                  ; Ident disconnectApmBIOS
  7454                                  ; Ident cpuIdleBIOS
  7455                                  ; Ident cpuBusyBIOS
  7456                                  ; Ident printCarVideo
  7457                                  ; Ident printLnVideo
  7458                                  ; Ident printStrVideo
  7459                                  ; Ident printStrHastaVideo
  7460                                  ; Ident printDecVideo
  7461                                  ; Ident printLDecVideo
  7462                                  ; Ident printIntVideo
  7463                                  ; Ident printLIntVideo
  7464                                  ; Ident printHexVideo
  7465                                  ; Ident printLHexVideo
  7466                                  ; Ident printBinVideo
  7467                                  ; Ident printLBinVideo
  7468                                  ; Ident printPtrVideo
  7469                                  ; Ident printByteVideo
  7470                                  ; Ident printWordVideo
  7471                                  ; Ident printCadVideo
  7472                                  ; Ident _start__text
  7473                                  ; Ident _stop__text
  7474                                  ; Ident _start__rodata
  7475                                  ; Ident _stop__rodata
  7476                                  ; Ident _start__data
  7477                                  ; Ident _stop__data
  7478                                  ; Ident _start__bss
  7479                                  ; Ident _stop__bss
  7480                                  ; Ident _start_allcode__
  7481                                  ; Ident _stop_allcode__
  7482                                  ; Ident _start_alldata__
  7483                                  ; Ident _stop_alldata__
  7484                                  ; Ident mostrarSeccion
  7485                                  ; Ident start
  7486                                  ; Ident stop
  7487                                  ; Ident descripcion
  7488                                  ; Ident mostrarSecciones
  7489                                  ; Ident numPids
  7490                                  ; Ident numTids
  7491                                  ; Ident molino
  7492                                  ; Ident indMolino
  7493                                  ; Ident salvarThread
  7494                                  ; Ident salvarTareaInterrumpida
  7495                                  ; Ident ponerNumeroHex
  7496                                  ; Ident ponerNumero
  7497                                  ; Ident ponerArgs
  7498                                  ; Ident DSProc
  7499                                  ; Ident offDATADS
  7500                                  ; Ident offArgv
  7501                                  ; Ident devolverPila
  7502                                  ; Ident devolverParticion
  7503                                  ; Bytes used: 6133/16384
  7504                                  
  7505                                  ; Next label number: 487
  7506                                  ; Compilation succeeded.
