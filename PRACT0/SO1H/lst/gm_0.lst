     1                                  bits 16
     2                                  
     3                                  ; glb intptr_t : int
     4                                  ; glb uintptr_t : unsigned
     5                                  ; glb intmax_t : int
     6                                  ; glb uintmax_t : unsigned
     7                                  ; glb int8_t : signed char
     8                                  ; glb int_least8_t : signed char
     9                                  ; glb int_fast8_t : signed char
    10                                  ; glb uint8_t : unsigned char
    11                                  ; glb uint_least8_t : unsigned char
    12                                  ; glb uint_fast8_t : unsigned char
    13                                  ; glb int16_t : short
    14                                  ; glb int_least16_t : short
    15                                  ; glb int_fast16_t : short
    16                                  ; glb uint16_t : unsigned short
    17                                  ; glb uint_least16_t : unsigned short
    18                                  ; glb uint_fast16_t : unsigned short
    19                                  ; glb int32_t : int
    20                                  ; glb int_least32_t : int
    21                                  ; glb int_fast32_t : int
    22                                  ; glb uint32_t : unsigned
    23                                  ; glb uint_least32_t : unsigned
    24                                  ; glb uint_fast32_t : unsigned
    25                                  ; glb imaxdiv_t : struct <something>
    26                                  ; glb bool_t : int
    27                                  ; glb pointer_t : * unsigned char
    28                                  ; glb funcion_t : * (
    29                                  ; prm     <something> : * void
    30                                  ;     ) * void
    31                                  ; glb manejador_t : * (void) void
    32                                  ; glb rti_t : * (void) void
    33                                  ; glb isr_t : * (void) void
    34                                  ; glb handler_t : * (void) void
    35                                  ; glb retardarThread_t : * (void) int
    36                                  ; glb ptrTVI_t : * * (void) void
    37                                  ; glb modoSO1_t : int
    38                                  ; glb lh_t : struct <something>
    39                                  ; glb address_t : struct <something>
    40                                  ; glb uPtrAdr_t : union <something>
    41                                  ; glb pid_t : int
    42                                  ; glb tid_t : int
    43                                  ; glb uid_t : int
    44                                  ; glb gid_t : int
    45                                  ; glb pindx_t : int
    46                                  ; glb tindx_t : int
    47                                  ; glb df_t : int
    48                                  ; glb dfs_t : int
    49                                  ; glb rindx_t : int
    50                                  ; glb tipoOrdenador : (void) unsigned char
    51                                  ; glb rebootLegacy : (void) void
    52                                  ; glb tipoTeclado : (void) unsigned char
    53                                  ; glb leerTeclaBIOS : (void) unsigned short
    54                                  ; glb leerTeclaExtBIOS : (void) unsigned short
    55                                  ; glb teclaListaBIOS : (void) unsigned short
    56                                  ; glb leerTeclaListaBDA : (void) unsigned short
    57                                  ; glb teclaListaBDA : (void) unsigned short
    58                                  ; glb printCarBIOS : (
    59                                  ; prm     car : char
    60                                  ;     ) int
    61                                  ; glb printCarPagBIOS : (
    62                                  ; prm     car : char
    63                                  ; prm     pag : unsigned char
    64                                  ;     ) int
    65                                  ; glb printCarAtrPagBIOS : (
    66                                  ; prm     car : char
    67                                  ; prm     atr : unsigned char
    68                                  ; prm     pag : unsigned char
    69                                  ;     ) int
    70                                  ; glb printLnBIOS : (void) int
    71                                  ; glb printStrBIOS : (
    72                                  ; prm     str : * char
    73                                  ;     ) int
    74                                  ; glb printStrHastaBIOS : (
    75                                  ; prm     str : * char
    76                                  ; prm     n : unsigned short
    77                                  ; prm     lleno : int
    78                                  ;     ) int
    79                                  ; glb printDecBIOS : (
    80                                  ; prm     num : unsigned short
    81                                  ; prm     l : unsigned short
    82                                  ;     ) int
    83                                  ; glb printLDecBIOS : (
    84                                  ; prm     num : unsigned
    85                                  ; prm     l : unsigned short
    86                                  ;     ) int
    87                                  ; glb printIntBIOS : (
    88                                  ; prm     num : short
    89                                  ; prm     l : unsigned short
    90                                  ;     ) int
    91                                  ; glb printLIntBIOS : (
    92                                  ; prm     num : int
    93                                  ; prm     l : unsigned short
    94                                  ;     ) int
    95                                  ; glb printHexBIOS : (
    96                                  ; prm     num : unsigned short
    97                                  ; prm     l : unsigned short
    98                                  ;     ) int
    99                                  ; glb printLHexBIOS : (
   100                                  ; prm     num : unsigned
   101                                  ; prm     l : unsigned short
   102                                  ;     ) int
   103                                  ; glb printBinBIOS : (
   104                                  ; prm     num : unsigned short
   105                                  ; prm     l : unsigned short
   106                                  ;     ) int
   107                                  ; glb printLBinBIOS : (
   108                                  ; prm     num : unsigned
   109                                  ; prm     l : unsigned short
   110                                  ;     ) int
   111                                  ; glb printPtrBIOS : (
   112                                  ; prm     ptr : * unsigned char
   113                                  ;     ) int
   114                                  ; glb printByteBIOS : (
   115                                  ; prm     b : unsigned char
   116                                  ;     ) int
   117                                  ; glb printWordBIOS : (
   118                                  ; prm     w : unsigned short
   119                                  ;     ) int
   120                                  ; glb printCadBIOS : (
   121                                  ; prm     cad : * char
   122                                  ;     ) int
   123                                  ; glb esperarTicsBIOS : (
   124                                  ; prm     tics : unsigned short
   125                                  ;     ) void
   126                                  ; glb modoDeVideo : (void) unsigned char
   127                                  ; glb establecerModoDeVideo : (
   128                                  ; prm     modo : unsigned char
   129                                  ;     ) void
   130                                  ; glb paginaActiva : (void) unsigned char
   131                                  ; glb establecerPaginaActiva : (
   132                                  ; prm     num : unsigned char
   133                                  ;     ) void
   134                                  ; glb numPagsVideo : (void) unsigned char
   135                                  ; glb scrollPagBDA : (
   136                                  ; prm     numLineas : unsigned char
   137                                  ; prm     pag : unsigned char
   138                                  ;     ) void
   139                                  ; glb scrollPagBIOS : (
   140                                  ; prm     numLineas : unsigned char
   141                                  ; prm     pag : unsigned char
   142                                  ;     ) void
   143                                  ; glb scrollBIOS : (
   144                                  ; prm     numLineas : unsigned char
   145                                  ;     ) void
   146                                  ; glb goToXYPag : (
   147                                  ; prm     fila : unsigned char
   148                                  ; prm     columna : unsigned char
   149                                  ; prm     pag : unsigned char
   150                                  ;     ) void
   151                                  ; glb goToXYBIOS : (
   152                                  ; prm     fila : unsigned char
   153                                  ; prm     columna : unsigned char
   154                                  ;     ) void
   155                                  ; glb setCursorBIOS : (
   156                                  ; prm     linea1 : unsigned char
   157                                  ; prm     linea2 : unsigned char
   158                                  ;     ) void
   159                                  ; glb ocultaCursorBIOS : (void) void
   160                                  ; glb readXYPagBIOS : (
   161                                  ; prm     fila : * unsigned char
   162                                  ; prm     columna : * unsigned char
   163                                  ; prm     linea1 : * unsigned char
   164                                  ; prm     linea2 : * unsigned char
   165                                  ; prm     pag : unsigned char
   166                                  ;     ) void
   167                                  ; glb readXYBIOS : (
   168                                  ; prm     fila : * unsigned char
   169                                  ; prm     columna : * unsigned char
   170                                  ; prm     linea1 : * unsigned char
   171                                  ; prm     linea2 : * unsigned char
   172                                  ;     ) void
   173                                  ; glb memBIOS : (void) unsigned short
   174                                  ; glb enviarBIOS : (
   175                                  ; prm     car : char
   176                                  ;     ) void
   177                                  ; glb recibirBIOS : (void) char
   178                                  ; glb hayApmBIOS : (
   179                                  ; prm     version : * unsigned short
   180                                  ;     ) int
   181                                  ; glb connectApmBIOS : (void) int
   182                                  ; glb disconnectApmBIOS : (void) int
   183                                  ; glb cpuIdleBIOS : (void) void
   184                                  ; glb cpuBusyBIOS : (void) void
   185                                  ; glb printCarVideo : (
   186                                  ; prm     car : char
   187                                  ;     ) int
   188                                  ; glb printLnVideo : (void) int
   189                                  ; glb printStrVideo : (
   190                                  ; prm     str : * char
   191                                  ;     ) int
   192                                  ; glb printStrHastaVideo : (
   193                                  ; prm     str : * char
   194                                  ; prm     n : unsigned short
   195                                  ; prm     lleno : int
   196                                  ;     ) int
   197                                  ; glb printDecVideo : (
   198                                  ; prm     num : unsigned short
   199                                  ; prm     l : unsigned short
   200                                  ;     ) int
   201                                  ; glb printLDecVideo : (
   202                                  ; prm     num : unsigned
   203                                  ; prm     l : unsigned short
   204                                  ;     ) int
   205                                  ; glb printIntVideo : (
   206                                  ; prm     num : int
   207                                  ; prm     l : unsigned short
   208                                  ;     ) int
   209                                  ; glb printLIntVideo : (
   210                                  ; prm     num : int
   211                                  ; prm     l : unsigned short
   212                                  ;     ) int
   213                                  ; glb printHexVideo : (
   214                                  ; prm     num : unsigned short
   215                                  ; prm     l : unsigned short
   216                                  ;     ) int
   217                                  ; glb printLHexVideo : (
   218                                  ; prm     num : unsigned
   219                                  ; prm     l : unsigned short
   220                                  ;     ) int
   221                                  ; glb printBinVideo : (
   222                                  ; prm     num : unsigned short
   223                                  ; prm     l : unsigned short
   224                                  ;     ) int
   225                                  ; glb printLBinVideo : (
   226                                  ; prm     num : unsigned
   227                                  ; prm     l : unsigned short
   228                                  ;     ) int
   229                                  ; glb printPtrVideo : (
   230                                  ; prm     ptr : * unsigned char
   231                                  ;     ) int
   232                                  ; glb printByteVideo : (
   233                                  ; prm     b : unsigned char
   234                                  ;     ) int
   235                                  ; glb printWordVideo : (
   236                                  ; prm     w : unsigned short
   237                                  ;     ) int
   238                                  ; glb printCadVideo : (
   239                                  ; prm     cad : * char
   240                                  ;     ) int
   241                                  ; glb finProgDOS : (
   242                                  ; prm     error : int
   243                                  ;     ) void
   244                                  ; RPN'ized expression: "21 "
   245                                  ; Expanded expression: "21 "
   246                                  ; Expression value: 21
   247                                  ; RPN'ized expression: "13 "
   248                                  ; Expanded expression: "13 "
   249                                  ; Expression value: 13
   250                                  ; glb hayMSDOS : (void) int
   251                                  ; glb hayDOSBox : (void) int
   252                                  ; glb hayWindowsNT : (void) int
   253                                  ; glb segPSP : (void) unsigned short
   254                                  ; glb versionMSDOS : (void) unsigned short
   255                                  ; glb entornoMSDOS : (void) * unsigned char
   256                                  ; glb valorMSDOS : (
   257                                  ; prm     str : * char
   258                                  ;     ) * unsigned char
   259                                  ; glb argcMSDOS : (void) int
   260                                  ; glb getArgvMSDOS : (
   261                                  ; prm     n : unsigned short
   262                                  ; prm     str : * char
   263                                  ;     ) int
   264                                  ; glb openDOS : (
   265                                  ; prm     nombre : * unsigned char
   266                                  ; prm     modo : unsigned char
   267                                  ;     ) int
   268                                  ; glb extendedOpenDOS : (
   269                                  ; prm     nombre : * unsigned char
   270                                  ; prm     modo : unsigned short
   271                                  ; prm     atr : unsigned short
   272                                  ; prm     accion : * unsigned short
   273                                  ; prm     error : * unsigned short
   274                                  ;     ) int
   275                                  ; glb closeDOS : (
   276                                  ; prm     df : int
   277                                  ;     ) int
   278                                  ; glb commitFileDOS : (
   279                                  ; prm     df : int
   280                                  ;     ) int
   281                                  ; glb createDOS : (
   282                                  ; prm     nombre : * unsigned char
   283                                  ; prm     atributo : unsigned short
   284                                  ;     ) int
   285                                  ; glb readDOS : (
   286                                  ; prm     df : int
   287                                  ; prm     buf : * char
   288                                  ; prm     n : int
   289                                  ;     ) int
   290                                  ; glb writeDOS : (
   291                                  ; prm     df : int
   292                                  ; prm     buf : * char
   293                                  ; prm     n : int
   294                                  ;     ) int
   295                                  ; glb lseekDOS : (
   296                                  ; prm     df : int
   297                                  ; prm     pos : * unsigned
   298                                  ; prm     whence : int
   299                                  ;     ) int
   300                                  ; glb getdiskDOS : (void) int
   301                                  ; glb setdiskDOS : (
   302                                  ; prm     drive : int
   303                                  ;     ) int
   304                                  ; glb getcurdirDOS : (
   305                                  ; prm     drive : int
   306                                  ; prm     direc : * char
   307                                  ;     ) int
   308                                  ; glb chdirDOS : (
   309                                  ; prm     path : * char
   310                                  ;     ) int
   311                                  ; glb findfirstDOS : (
   312                                  ; prm     pathname : * char
   313                                  ; prm     ffblk : * struct ffblk
   314                                  ; prm     attrib : int
   315                                  ;     ) int
   316                                  ; glb findnextDOS : (
   317                                  ; prm     ffblk : * struct ffblk
   318                                  ;     ) int
   319                                  ; glb _start__text : char
   320                                  ; glb _stop__text : char
   321                                  ; glb _start__rodata : char
   322                                  ; glb _stop__rodata : char
   323                                  ; glb _start__data : char
   324                                  ; glb _stop__data : char
   325                                  ; glb _start__bss : char
   326                                  ; glb _stop__bss : char
   327                                  ; glb _start_allcode__ : char
   328                                  ; glb _stop_allcode__ : char
   329                                  ; glb _start_alldata__ : char
   330                                  ; glb _stop_alldata__ : char
   331                                  ; glb mostrarSeccion : (
   332                                  ; prm     start : unsigned
   333                                  ; prm     stop : unsigned
   334                                  ; prm     descripcion : * char
   335                                  ;     ) void
   336                                  ; glb mostrarSecciones : (void) void
   337                                  ; glb modoAp_t : unsigned short
   338                                  ; glb tramaDWords_t : struct <something>
   339                                  ; glb tramaWords_t : struct <something>
   340                                  ; RPN'ized expression: "2 "
   341                                  ; Expanded expression: "2 "
   342                                  ; Expression value: 2
   343                                  ; RPN'ized expression: "2 "
   344                                  ; Expanded expression: "2 "
   345                                  ; Expression value: 2
   346                                  ; RPN'ized expression: "2 "
   347                                  ; Expanded expression: "2 "
   348                                  ; Expression value: 2
   349                                  ; RPN'ized expression: "2 "
   350                                  ; Expanded expression: "2 "
   351                                  ; Expression value: 2
   352                                  ; glb tramaBytes_t : struct <something>
   353                                  ; glb trama_t : union <something>
   354                                  ; RPN'ized expression: "8 "
   355                                  ; Expanded expression: "8 "
   356                                  ; Expression value: 8
   357                                  ; glb bloque_t : struct <something>
   358                                  ; glb ptrBloque_t : * struct <something>
   359                                  ; glb dobleEnlace_t : struct <something>
   360                                  ; glb c2c_t : struct <something>
   361                                  ; glb posicionC2c : (
   362                                  ; prm     i : int
   363                                  ; prm     c2c : struct <something>
   364                                  ;     ) int
   365                                  ; glb eliminarC2c : (
   366                                  ; prm     i : int
   367                                  ; prm     c2c : struct <something>
   368                                  ;     ) void
   369                                  ; glb apilarC2c : (
   370                                  ; prm     i : int
   371                                  ; prm     c2c : struct <something>
   372                                  ;     ) void
   373                                  ; glb encolarC2c : (
   374                                  ; prm     i : int
   375                                  ; prm     c2c : struct <something>
   376                                  ;     ) void
   377                                  ; glb desencolarC2c : (
   378                                  ; prm     c2c : struct <something>
   379                                  ;     ) int
   380                                  ; glb inicializarC2c : (
   381                                  ; prm     c2c : * struct <something>
   382                                  ; prm     e : * struct <something>
   383                                  ; prm     cabecera : int
   384                                  ; prm     compartida : int
   385                                  ;     ) void
   386                                  ; glb ptrC2c_t : * struct <something>
   387                                  ; glb posicionPC2c : (
   388                                  ; prm     i : int
   389                                  ; prm     c2c : * struct <something>
   390                                  ;     ) int
   391                                  ; glb eliminarPC2c : (
   392                                  ; prm     i : int
   393                                  ; prm     ptrC2c : * struct <something>
   394                                  ;     ) void
   395                                  ; glb apilarPC2c : (
   396                                  ; prm     i : int
   397                                  ; prm     ptrC2c : * struct <something>
   398                                  ;     ) void
   399                                  ; glb encolarPC2c : (
   400                                  ; prm     i : int
   401                                  ; prm     ptrC2c : * struct <something>
   402                                  ;     ) void
   403                                  ; glb desencolarPC2c : (
   404                                  ; prm     ptrC2c : * struct <something>
   405                                  ;     ) int
   406                                  ; glb inicializarPC2c : (
   407                                  ; prm     ptrC2c : * struct <something>
   408                                  ; prm     e : * struct <something>
   409                                  ; prm     cabecera : int
   410                                  ; prm     compartida : int
   411                                  ;     ) void
   412                                  ; glb callBack_t : * (
   413                                  ; prm     arg : * void
   414                                  ;     ) int
   415                                  ; RPN'ized expression: "10 "
   416                                  ; Expanded expression: "10 "
   417                                  ; Expression value: 10
   418                                  ; glb descCcb_t : struct <something>
   419                                  ; glb ccb_t : * struct <something>
   420                                  ; glb inicCcb : (
   421                                  ; prm     ccb : * struct <something>
   422                                  ; prm     max : unsigned short
   423                                  ;     ) int
   424                                  ; glb encolarCcb : (
   425                                  ; prm     cb : * (
   426                                  ; prm         arg : * void
   427                                  ;         ) int
   428                                  ; prm     ccb : * struct <something>
   429                                  ;     ) int
   430                                  ; glb desencolarCcb : (
   431                                  ; prm     ccb : * struct <something>
   432                                  ;     ) * (
   433                                  ; prm     arg : * void
   434                                  ;     ) int
   435                                  ; glb eliminarCcb : (
   436                                  ; prm     cb : * (
   437                                  ; prm         arg : * void
   438                                  ;         ) int
   439                                  ; prm     ccb : * struct <something>
   440                                  ;     ) int
   441                                  ; glb eliminarSegCcb : (
   442                                  ; prm     segmento : unsigned short
   443                                  ; prm     ccb : * struct <something>
   444                                  ;     ) int
   445                                  ; glb vaciarCcb : (
   446                                  ; prm     ccb : * struct <something>
   447                                  ;     ) int
   448                                  ; glb atenderCcb : (
   449                                  ; prm     ccb : * struct <something>
   450                                  ;     ) int
   451                                  ; glb estado_t : int
   452                                  ; glb dfa_t : struct <something>
   453                                  ; RPN'ized expression: "12 "
   454                                  ; Expanded expression: "12 "
   455                                  ; Expression value: 12
   456                                  ; RPN'ized expression: "80 "
   457                                  ; Expanded expression: "80 "
   458                                  ; Expression value: 80
   459                                  ; RPN'ized expression: "10 "
   460                                  ; Expanded expression: "10 "
   461                                  ; Expression value: 10
   462                                  ; glb descProceso_t : struct <something>
   463                                  ; glb descThread_t : struct <something>
   464                                  ; glb tipoFichero_t : int
   465                                  ; RPN'ized expression: "9 "
   466                                  ; Expanded expression: "9 "
   467                                  ; Expression value: 9
   468                                  ; glb descFichero_t : struct <something>
   469                                  ; glb tipoRecurso_t : int
   470                                  ; glb open_t : * (
   471                                  ; prm     dfs : int
   472                                  ; prm     modo : unsigned short
   473                                  ;     ) int
   474                                  ; glb release_t : * (
   475                                  ; prm     dfs : int
   476                                  ;     ) int
   477                                  ; glb read_t : * (
   478                                  ; prm     dfs : int
   479                                  ; prm     dir : * unsigned char
   480                                  ; prm     nbytes : unsigned short
   481                                  ;     ) int
   482                                  ; glb aio_read_t : * (
   483                                  ; prm     dfs : int
   484                                  ; prm     dir : * unsigned char
   485                                  ; prm     nbytes : unsigned short
   486                                  ;     ) int
   487                                  ; glb write_t : * (
   488                                  ; prm     dfs : int
   489                                  ; prm     dir : * unsigned char
   490                                  ; prm     nbytes : unsigned short
   491                                  ;     ) int
   492                                  ; glb aio_write_t : * (
   493                                  ; prm     dfs : int
   494                                  ; prm     dir : * unsigned char
   495                                  ; prm     nbytes : unsigned short
   496                                  ;     ) int
   497                                  ; glb lseek_t : * (
   498                                  ; prm     dfs : int
   499                                  ; prm     pos : int
   500                                  ; prm     whence : unsigned short
   501                                  ;     ) int
   502                                  ; glb fcntl_t : * (
   503                                  ; prm     dfs : int
   504                                  ; prm     cmd : unsigned short
   505                                  ; prm     arg : unsigned short
   506                                  ;     ) int
   507                                  ; glb ioctl_t : * (
   508                                  ; prm     dfs : int
   509                                  ; prm     request : unsigned short
   510                                  ; prm     arg : unsigned short
   511                                  ;     ) int
   512                                  ; glb eliminar_t : * (
   513                                  ; prm     pindx : int
   514                                  ;     ) int
   515                                  ; RPN'ized expression: "12 "
   516                                  ; Expanded expression: "12 "
   517                                  ; Expression value: 12
   518                                  ; RPN'ized expression: "2 "
   519                                  ; Expanded expression: "2 "
   520                                  ; Expression value: 2
   521                                  ; RPN'ized expression: "2 "
   522                                  ; Expanded expression: "2 "
   523                                  ; Expression value: 2
   524                                  ; RPN'ized expression: "2 "
   525                                  ; Expanded expression: "2 "
   526                                  ; Expression value: 2
   527                                  ; glb descRecurso_t : struct <something>
   528                                  ; glb info_t : struct <something>
   529                                  ; glb cabecera_t : struct <something>
   530                                  ; RPN'ized expression: "16 1 + "
   531                                  ; Expanded expression: "17 "
   532                                  ; Expression value: 17
   533                                  ; RPN'ized expression: "16 2 + "
   534                                  ; Expanded expression: "18 "
   535                                  ; Expression value: 18
   536                                  ; RPN'ized expression: "2010 1 + "
   537                                  ; Expanded expression: "2011 "
   538                                  ; Expression value: 2011
   539                                  ; RPN'ized expression: "2010 2 + "
   540                                  ; Expanded expression: "2012 "
   541                                  ; Expression value: 2012
   542                                  ; RPN'ized expression: "20 1 + "
   543                                  ; Expanded expression: "21 "
   544                                  ; Expression value: 21
   545                                  ; RPN'ized expression: "20 2 + "
   546                                  ; Expanded expression: "22 "
   547                                  ; Expression value: 22
   548                                  ; RPN'ized expression: "14 1 + "
   549                                  ; Expanded expression: "15 "
   550                                  ; Expression value: 15
   551                                  ; RPN'ized expression: "14 2 + "
   552                                  ; Expanded expression: "16 "
   553                                  ; Expression value: 16
   554                                  ; RPN'ized expression: "16 16 + "
   555                                  ; Expanded expression: "32 "
   556                                  ; Expression value: 32
   557                                  ; RPN'ized expression: "2010 16 + "
   558                                  ; Expanded expression: "2026 "
   559                                  ; Expression value: 2026
   560                                  ; RPN'ized expression: "2010 1 + "
   561                                  ; Expanded expression: "2011 "
   562                                  ; Expression value: 2011
   563                                  ; RPN'ized expression: "2010 1 + "
   564                                  ; Expanded expression: "2011 "
   565                                  ; Expression value: 2011
   566                                  ; RPN'ized expression: "16 1 + "
   567                                  ; Expanded expression: "17 "
   568                                  ; Expression value: 17
   569                                  ; RPN'ized expression: "2010 1 + "
   570                                  ; Expanded expression: "2011 "
   571                                  ; Expression value: 2011
   572                                  ; RPN'ized expression: "20 14 + "
   573                                  ; Expanded expression: "34 "
   574                                  ; Expression value: 34
   575                                  ; glb e2PFR_t : struct <something>
   576                                  ; glb cPFR_t : int
   577                                  ; glb sigThread_t : * () int
   578                                  ; glb activarThread_t : * (
   579                                  ; prm     tindx : int
   580                                  ;     ) void
   581                                  ; glb buscarNuevoThreadActual_t : * (void) void
   582                                  ; glb bloquearThreadActual_t : * (
   583                                  ; prm     rindx : int
   584                                  ;     ) void
   585                                  ; glb descSO1H_t : struct <something>
   586                                  %define SP0_SO1H 0x8000
   587                                  %define SP0_Kernel  0xA000
   588                                  ; glb startBin : (void) void
   589                                  ; glb modoSO1 : (void) int
   590                                  ; glb unidadBIOS : (void) unsigned char
   591                                  ; glb CS_SO1H : unsigned short
   592                                  ; glb RO_SO1H : unsigned short
   593                                  ; glb DS_SO1H : unsigned short
   594                                  ; glb BSS_SO1H : unsigned short
   595                                  ; glb SS_SO1H : unsigned short
   596                                  ; glb SS_Kernel : unsigned short
   597                                  ; glb IMRInicial : unsigned short
   598                                  ; glb obtenerMapa : (void) void
   599                                  ; RPN'ized expression: "12 "
   600                                  ; Expanded expression: "12 "
   601                                  ; Expression value: 12
   602                                  ; RPN'ized expression: "80 "
   603                                  ; Expanded expression: "80 "
   604                                  ; Expression value: 80
   605                                  ; RPN'ized expression: "10 "
   606                                  ; Expanded expression: "10 "
   607                                  ; Expression value: 10
   608                                  ; glb descProcesoExt_t : struct <something>
   609                                  ; glb descThreadExt_t : struct <something>
   610                                  ; RPN'ized expression: "16 "
   611                                  ; Expanded expression: "16 "
   612                                  ; Expression value: 16
   613                                  ; glb descProceso : [16u] struct <something>
   614                                  ; RPN'ized expression: "2010 "
   615                                  ; Expanded expression: "2010 "
   616                                  ; Expression value: 2010
   617                                  ; glb descThread : [2010u] struct <something>
   618                                  ; RPN'ized expression: "20 "
   619                                  ; Expanded expression: "20 "
   620                                  ; Expression value: 20
   621                                  ; glb descFichero : [20u] struct <something>
   622                                  ; RPN'ized expression: "14 "
   623                                  ; Expanded expression: "14 "
   624                                  ; Expression value: 14
   625                                  ; glb descRecurso : [14u] struct <something>
   626                                  ; RPN'ized expression: "numColasPFR "
   627                                  ; Expanded expression: "12 "
   628                                  ; Expression value: 12
   629                                  ; glb c2cPFR : [12u] struct <something>
   630                                  ; glb e2PFR : struct <something>
   631                                  ; glb descCcbAlEpilogo : struct <something>
   632                                  ; glb ccbAlEpilogo : * struct <something>
   633                                  ; glb tramaThread : * union <something>
   634                                  ; glb tramaTarea : * union <something>
   635                                  ; glb indThreadActual : int
   636                                  ; glb indProcesoActual : int
   637                                  ; glb indThreadDeSuperficie : int
   638                                  ; glb contRodajas : unsigned
   639                                  ; glb contTicsRodaja : int
   640                                  ; glb contadorTimer00 : unsigned short
   641                                  ; glb contOcioso : int
   642                                  ; glb nuevoPid : (void) int
   643                                  ; glb nuevoTid : (void) int
   644                                  ; glb indice : (
   645                                  ; prm     tid : int
   646                                  ;     ) int
   647                                  ; glb sigThread : (void) int
   648                                  ; glb activarThread : (
   649                                  ; prm     tindx : int
   650                                  ;     ) int
   651                                  ; glb registrarEnPOrdenados : (
   652                                  ; prm     pindx : int
   653                                  ;     ) void
   654                                  ; glb crearThread : (
   655                                  ; prm     funcion : * (
   656                                  ; prm         <something> : * void
   657                                  ;         ) * void
   658                                  ; prm     SP0 : unsigned short
   659                                  ; prm     arg : * void
   660                                  ; prm     pindx : int
   661                                  ;     ) int
   662                                  ; glb crearProceso : (
   663                                  ; prm     segmento : unsigned short
   664                                  ; prm     tam : unsigned short
   665                                  ; prm     tamFich : unsigned
   666                                  ; prm     programa : * char
   667                                  ; prm     comando : * char
   668                                  ; prm     pindx : int
   669                                  ;     ) int
   670                                  ; glb inicProcesos : (void) void
   671                                  ; glb resetPids : (void) void
   672                                  ; glb resetTids : (void) void
   673                                  ; glb terminarThreadIndx : (
   674                                  ; prm     tindx : int
   675                                  ;     ) int
   676                                  ; glb eliminarThreadIndx : (
   677                                  ; prm     tindx : int
   678                                  ;     ) int
   679                                  ; glb terminarProcIndx : (
   680                                  ; prm     pindx : int
   681                                  ;     ) int
   682                                  ; glb eliminarProcIndx : (
   683                                  ; prm     pindx : int
   684                                  ;     ) int
   685                                  ; glb matarThreadIndx : (
   686                                  ; prm     tindx : int
   687                                  ;     ) int
   688                                  ; glb matarProcIndx : (
   689                                  ; prm     pindx : int
   690                                  ;     ) int
   691                                  ; glb link_procs : (void) void
   692                                  ; glb tamBloqueMax : unsigned short
   693                                  ; glb listaLibres : * struct <something>
   694                                  ; glb k_buscarBloque : (
   695                                  ; prm     tam : unsigned short
   696                                  ;     ) unsigned short
   697                                  ; glb k_devolverBloque : (
   698                                  ; prm     segmento : unsigned short
   699                                  ; prm     tam : unsigned short
   700                                  ;     ) int
   701                                  ; glb rec_gm : int
   702                                  ; glb inicGM : (void) void
   703                                  ; glb mostrarListaLibres : (void) void
   704                                  ; glb link_gm_k : (void) void
   705                                  ; glb inicGM : (void) void
   706                                  section .text
   707                                  	global	_inicGM
   708                                  _inicGM:
   709 00000000 6655                    	push	ebp
   710 00000002 660FB7EC                	movzx	ebp, sp
   711 00000006 83EC10                  	 sub	sp,         16
   712                                  ; loc     primerSegLibre : (@-4): unsigned short
   713                                  ; loc     sigSeg : (@-8): unsigned short
   714                                  ; loc     memDisponible : (@-12): unsigned short
   715                                  ; loc     ptrBloque : (@-16): * struct <something>
   716                                  ; RPN'ized expression: "primerSegLibre SS_Kernel 40960 15 + 16 / + = "
   717                                  ; Expanded expression: "(@-4) SS_Kernel *(2) 2560 + =(2) "
   718                                  ; Fused expression:    "SS_Kernel + *ax 2560 =(172) *(@-4) ax "
   719                                  section .relod
   720 00000000 [0B000000]              	dd	L3
   721                                  section .text
   722 00000009 66B8                    	db	0x66, 0xB8
   723                                  L3:
   724 0000000B [00000000]              	dd	_SS_Kernel
   725 0000000F 6689C3                  	mov	ebx, eax
   726 00000012 6689DE                  	mov	esi, ebx
   727 00000015 66C1CE04                	ror	esi, 4
   728 00000019 8EDE                    	mov	ds, si
   729 0000001B 66C1EE1C                	shr	esi, 28
   730 0000001F 8B04                    	mov	ax, [si]
   731 00000021 660FB7C0                	movzx	eax, ax
   732 00000025 6605000A0000            	add	eax, 2560
   733 0000002B 8946FC                  	mov	[bp-4], ax
   734 0000002E 660FB7C0                	movzx	eax, ax
   735                                  
   736                                  section .rodata
   737                                  L4:
   738 00000000 207072696D65725365-     	db	" primerSegLibre = "
   738 00000009 674C69627265203D20 
   739 00000012 00                      	times	1 db 0
   740                                  
   741                                  section .text
   742                                  ; RPN'ized expression: "( L4 printStrVideo ) "
   743                                  ; Expanded expression: " L4  printStrVideo ()4 "
   744                                  ; Fused expression:    "( L4 , printStrVideo )4 "
   745                                  section .relod
   746 00000004 [34000000]              	dd	L5
   747                                  section .text
   748 00000032 6668                    	db	0x66, 0x68
   749                                  L5:
   750 00000034 [00000000]              	dd	L4
   751 00000038 9A                      	db	0x9A
   752                                  section .relot
   753 00000000 [39000000]              	dd	L6
   754                                  section .text
   755                                  L6:
   756 00000039 [00000000]              	dd	_printStrVideo
   757 0000003D 83ECFC                  	sub	sp, -4
   758                                  ; RPN'ized expression: "( 4 , primerSegLibre printHexVideo ) "
   759                                  ; Expanded expression: " 4  (@-4) *(2)  printHexVideo ()8 "
   760                                  ; Fused expression:    "( 4 , *(2) (@-4) , printHexVideo )8 "
   761 00000040 666A04                  	push	dword 4
   762 00000043 8B46FC                  	mov	ax, [bp-4]
   763 00000046 660FB7C0                	movzx	eax, ax
   764 0000004A 6650                    	push	eax
   765 0000004C 9A                      	db	0x9A
   766                                  section .relot
   767 00000004 [4D000000]              	dd	L7
   768                                  section .text
   769                                  L7:
   770 0000004D [00000000]              	dd	_printHexVideo
   771 00000051 83ECF8                  	sub	sp, -8
   772                                  ; switch
   773                                  ; RPN'ized expression: "( modoSO1 ) "
   774                                  ; Expanded expression: " modoSO1 ()0 "
   775                                  ; Fused expression:    "( modoSO1 )0  "
   776 00000054 9A                      	db	0x9A
   777                                  section .relot
   778 00000008 [55000000]              	dd	L10
   779                                  section .text
   780                                  L10:
   781 00000055 [00000000]              	dd	_modoSO1
   782 00000059 EB65                    	jmp	L9
   783                                  ; {
   784                                  ; case
   785                                  ; RPN'ized expression: "modoSO1_Bin "
   786                                  ; Expanded expression: "0 "
   787                                  ; Expression value: 0
   788                                  L11:
   789                                  ; RPN'ized expression: "sigSeg ( memBIOS ) 1024 16 / * = "
   790                                  ; Expanded expression: "(@-8)  memBIOS ()0 64 * =(2) "
   791                                  ; Fused expression:    "( memBIOS )0 * ax 64 =(172) *(@-8) ax "
   792 0000005B 9A                      	db	0x9A
   793                                  section .relot
   794 0000000C [5C000000]              	dd	L12
   795                                  section .text
   796                                  L12:
   797 0000005C [00000000]              	dd	_memBIOS
   798 00000060 666BC040                	imul	eax, eax, 64
   799 00000064 8946F8                  	mov	[bp-8], ax
   800 00000067 660FB7C0                	movzx	eax, ax
   801                                  ; break
   802 0000006B EB61                    	jmp	L8
   803                                  ; case
   804                                  ; RPN'ized expression: "modoSO1_Exe "
   805                                  ; Expanded expression: "1 "
   806                                  ; Expression value: 1
   807                                  L13:
   808                                  ; loc         <something> : * unsigned short
   809                                  ; loc         <something> : unsigned
   810                                  ; loc         <something> : unsigned
   811                                  ; RPN'ized expression: "sigSeg ( segPSP ) (something15) 4 << 2 (something16) + (something14) *u = "
   812                                  ; Expanded expression: "(@-8)  segPSP ()0 4 << 2u + *(2) =(2) "
   813                                  ; Fused expression:    "( segPSP )0 << ax 4 + ax 2u =(170) *(@-8) *ax "
   814 0000006D 9A                      	db	0x9A
   815                                  section .relot
   816 00000010 [6E000000]              	dd	L17
   817                                  section .text
   818                                  L17:
   819 0000006E [00000000]              	dd	_segPSP
   820 00000072 66C1E004                	shl	eax, 4
   821 00000076 6683C002                	add	eax, 2
   822 0000007A 6689C3                  	mov	ebx, eax
   823 0000007D 6689DE                  	mov	esi, ebx
   824 00000080 66C1CE04                	ror	esi, 4
   825 00000084 8EDE                    	mov	ds, si
   826 00000086 66C1EE1C                	shr	esi, 28
   827 0000008A 8B04                    	mov	ax, [si]
   828 0000008C 660FB7C0                	movzx	eax, ax
   829 00000090 8946F8                  	mov	[bp-8], ax
   830 00000093 660FB7C0                	movzx	eax, ax
   831                                  ; break
   832 00000097 EB35                    	jmp	L8
   833                                  ; default
   834                                  L18:
   835                                  
   836                                  section .rodata
   837                                  L19:
   838 00000013 0A20696E6963474D28-     	db	10," inicGM() ERROR: modoSO1() = "
   838 0000001C 29204552524F523A20-
   838 00000025 6D6F646F534F312829-
   838 0000002E 203D20             
   839 00000031 00                      	times	1 db 0
   840                                  
   841                                  section .text
   842                                  ; RPN'ized expression: "( L19 printStrVideo ) "
   843                                  ; Expanded expression: " L19  printStrVideo ()4 "
   844                                  ; Fused expression:    "( L19 , printStrVideo )4 "
   845                                  section .relod
   846 00000008 [9B000000]              	dd	L20
   847                                  section .text
   848 00000099 6668                    	db	0x66, 0x68
   849                                  L20:
   850 0000009B [13000000]              	dd	L19
   851 0000009F 9A                      	db	0x9A
   852                                  section .relot
   853 00000014 [A0000000]              	dd	L21
   854                                  section .text
   855                                  L21:
   856 000000A0 [00000000]              	dd	_printStrVideo
   857 000000A4 83ECFC                  	sub	sp, -4
   858                                  ; RPN'ized expression: "( 4 , ( modoSO1 ) printHexVideo ) "
   859                                  ; Expanded expression: " 4   modoSO1 ()0  printHexVideo ()8 "
   860                                  ; Fused expression:    "( 4 , ( modoSO1 )0 , printHexVideo )8 "
   861 000000A7 666A04                  	push	dword 4
   862 000000AA 9A                      	db	0x9A
   863                                  section .relot
   864 00000018 [AB000000]              	dd	L22
   865                                  section .text
   866                                  L22:
   867 000000AB [00000000]              	dd	_modoSO1
   868 000000AF 6650                    	push	eax
   869 000000B1 9A                      	db	0x9A
   870                                  section .relot
   871 0000001C [B2000000]              	dd	L23
   872                                  section .text
   873                                  L23:
   874 000000B2 [00000000]              	dd	_printHexVideo
   875 000000B6 83ECF8                  	sub	sp, -8
   876                                  ; RPN'ized expression: "( leerTeclaBIOS ) "
   877                                  ; Expanded expression: " leerTeclaBIOS ()0 "
   878                                  ; Fused expression:    "( leerTeclaBIOS )0 "
   879 000000B9 9A                      	db	0x9A
   880                                  section .relot
   881 00000020 [BA000000]              	dd	L24
   882                                  section .text
   883                                  L24:
   884 000000BA [00000000]              	dd	_leerTeclaBIOS
   885                                  ; }
   886 000000BE EB0E                    	jmp	L8
   887                                  L9:
   888 000000C0 6683F800                	cmp	eax, 0
   889 000000C4 7495                    	je	L11
   890 000000C6 6683F801                	cmp	eax, 1
   891 000000CA 74A1                    	je	L13
   892 000000CC EBCB                    	jmp	L18
   893                                  L8:
   894                                  ; RPN'ized expression: "memDisponible sigSeg primerSegLibre - = "
   895                                  ; Expanded expression: "(@-12) (@-8) *(2) (@-4) *(2) - =(2) "
   896                                  ; Fused expression:    "- *(@-8) *(@-4) =(172) *(@-12) ax "
   897 000000CE 8B46F8                  	mov	ax, [bp-8]
   898 000000D1 660FB7C0                	movzx	eax, ax
   899 000000D5 660FB74EFC              	movzx	ecx, word [bp-4]
   900 000000DA 6629C8                  	sub	eax, ecx
   901 000000DD 8946F4                  	mov	[bp-12], ax
   902 000000E0 660FB7C0                	movzx	eax, ax
   903                                  
   904                                  section .rodata
   905                                  L25:
   906 00000032 20736967536567203D-     	db	" sigSeg = "
   906 0000003B 20                 
   907 0000003C 00                      	times	1 db 0
   908                                  
   909                                  section .text
   910                                  ; RPN'ized expression: "( L25 printStrVideo ) "
   911                                  ; Expanded expression: " L25  printStrVideo ()4 "
   912                                  ; Fused expression:    "( L25 , printStrVideo )4 "
   913                                  section .relod
   914 0000000C [E6000000]              	dd	L26
   915                                  section .text
   916 000000E4 6668                    	db	0x66, 0x68
   917                                  L26:
   918 000000E6 [32000000]              	dd	L25
   919 000000EA 9A                      	db	0x9A
   920                                  section .relot
   921 00000024 [EB000000]              	dd	L27
   922                                  section .text
   923                                  L27:
   924 000000EB [00000000]              	dd	_printStrVideo
   925 000000EF 83ECFC                  	sub	sp, -4
   926                                  ; RPN'ized expression: "( 4 , sigSeg printHexVideo ) "
   927                                  ; Expanded expression: " 4  (@-8) *(2)  printHexVideo ()8 "
   928                                  ; Fused expression:    "( 4 , *(2) (@-8) , printHexVideo )8 "
   929 000000F2 666A04                  	push	dword 4
   930 000000F5 8B46F8                  	mov	ax, [bp-8]
   931 000000F8 660FB7C0                	movzx	eax, ax
   932 000000FC 6650                    	push	eax
   933 000000FE 9A                      	db	0x9A
   934                                  section .relot
   935 00000028 [FF000000]              	dd	L28
   936                                  section .text
   937                                  L28:
   938 000000FF [00000000]              	dd	_printHexVideo
   939 00000103 83ECF8                  	sub	sp, -8
   940                                  
   941                                  section .rodata
   942                                  L29:
   943 0000003D 206D656D446973706F-     	db	" memDisponible = "
   943 00000046 6E69626C65203D20   
   944 0000004E 00                      	times	1 db 0
   945                                  
   946                                  section .text
   947                                  ; RPN'ized expression: "( L29 printStrVideo ) "
   948                                  ; Expanded expression: " L29  printStrVideo ()4 "
   949                                  ; Fused expression:    "( L29 , printStrVideo )4 "
   950                                  section .relod
   951 00000010 [08010000]              	dd	L30
   952                                  section .text
   953 00000106 6668                    	db	0x66, 0x68
   954                                  L30:
   955 00000108 [3D000000]              	dd	L29
   956 0000010C 9A                      	db	0x9A
   957                                  section .relot
   958 0000002C [0D010000]              	dd	L31
   959                                  section .text
   960                                  L31:
   961 0000010D [00000000]              	dd	_printStrVideo
   962 00000111 83ECFC                  	sub	sp, -4
   963                                  ; RPN'ized expression: "( 4 , memDisponible printHexVideo ) "
   964                                  ; Expanded expression: " 4  (@-12) *(2)  printHexVideo ()8 "
   965                                  ; Fused expression:    "( 4 , *(2) (@-12) , printHexVideo )8 "
   966 00000114 666A04                  	push	dword 4
   967 00000117 8B46F4                  	mov	ax, [bp-12]
   968 0000011A 660FB7C0                	movzx	eax, ax
   969 0000011E 6650                    	push	eax
   970 00000120 9A                      	db	0x9A
   971                                  section .relot
   972 00000030 [21010000]              	dd	L32
   973                                  section .text
   974                                  L32:
   975 00000121 [00000000]              	dd	_printHexVideo
   976 00000125 83ECF8                  	sub	sp, -8
   977                                  ; loc     <something> : * struct <something>
   978                                  ; loc     <something> : unsigned
   979                                  ; RPN'ized expression: "ptrBloque primerSegLibre (something34) 4 << (something33) = "
   980                                  ; Expanded expression: "(@-16) (@-4) *(2) 4 << =(4) "
   981                                  ; Fused expression:    "<< *(@-4) 4 =(204) *(@-16) ax "
   982 00000128 8B46FC                  	mov	ax, [bp-4]
   983 0000012B 660FB7C0                	movzx	eax, ax
   984 0000012F 66C1E004                	shl	eax, 4
   985 00000133 668946F0                	mov	[bp-16], eax
   986                                  ; RPN'ized expression: "ptrBloque tam -> *u memDisponible 1 - = "
   987                                  ; Expanded expression: "(@-16) *(4) 0 + (@-12) *(2) 1 - =(2) "
   988                                  ; Fused expression:    "+ *(@-16) 0 push-ax - *(@-12) 1 =(172) **sp ax "
   989 00000137 668B46F0                	mov	eax, [bp-16]
   990 0000013B 6650                    	push	eax
   991 0000013D 8B46F4                  	mov	ax, [bp-12]
   992 00000140 660FB7C0                	movzx	eax, ax
   993 00000144 6648                    	dec	eax
   994 00000146 665B                    	pop	ebx
   995 00000148 6689DE                  	mov	esi, ebx
   996 0000014B 66C1CE04                	ror	esi, 4
   997 0000014F 8EDE                    	mov	ds, si
   998 00000151 66C1EE1C                	shr	esi, 28
   999 00000155 8904                    	mov	[si], ax
  1000 00000157 660FB7C0                	movzx	eax, ax
  1001                                  ; loc     <something> : unsigned short
  1002                                  ; loc     <something> : unsigned
  1003                                  ; RPN'ized expression: "ptrBloque sig -> *u ptrBloque (something36) 4 >> (something35) ptrBloque tam -> *u + = "
  1004                                  ; Expanded expression: "(@-16) *(4) 2 + (@-16) *(4) 4 >>u unsigned short (@-16) *(4) 0 + *(2) + =(2) "
  1005                                  ; Fused expression:    "+ *(@-16) 2 push-ax >>u *(@-16) 4 unsigned short push-ax + *(@-16) 0 + *sp *ax =(172) **sp ax "
  1006 0000015B 668B46F0                	mov	eax, [bp-16]
  1007 0000015F 6683C002                	add	eax, 2
  1008 00000163 6650                    	push	eax
  1009 00000165 668B46F0                	mov	eax, [bp-16]
  1010 00000169 66C1E804                	shr	eax, 4
  1011 0000016D 660FB7C0                	movzx	eax, ax
  1012 00000171 6650                    	push	eax
  1013 00000173 668B46F0                	mov	eax, [bp-16]
  1014 00000177 6689C3                  	mov	ebx, eax
  1015 0000017A 6689DE                  	mov	esi, ebx
  1016 0000017D 66C1CE04                	ror	esi, 4
  1017 00000181 8EDE                    	mov	ds, si
  1018 00000183 66C1EE1C                	shr	esi, 28
  1019 00000187 660FB70C                	movzx	ecx, word [si]
  1020 0000018B 6658                    	pop	eax
  1021 0000018D 6601C8                  	add	eax, ecx
  1022 00000190 665B                    	pop	ebx
  1023 00000192 6689DE                  	mov	esi, ebx
  1024 00000195 66C1CE04                	ror	esi, 4
  1025 00000199 8EDE                    	mov	ds, si
  1026 0000019B 66C1EE1C                	shr	esi, 28
  1027 0000019F 8904                    	mov	[si], ax
  1028 000001A1 660FB7C0                	movzx	eax, ax
  1029                                  ; RPN'ized expression: "ptrBloque ant -> *u ptrBloque sig -> *u = "
  1030                                  ; Expanded expression: "(@-16) *(4) 4 + (@-16) *(4) 2 + *(2) =(2) "
  1031                                  ; Fused expression:    "+ *(@-16) 4 push-ax + *(@-16) 2 =(170) **sp *ax "
  1032 000001A5 668B46F0                	mov	eax, [bp-16]
  1033 000001A9 6683C004                	add	eax, 4
  1034 000001AD 6650                    	push	eax
  1035 000001AF 668B46F0                	mov	eax, [bp-16]
  1036 000001B3 6683C002                	add	eax, 2
  1037 000001B7 6689C3                  	mov	ebx, eax
  1038 000001BA 6689DE                  	mov	esi, ebx
  1039 000001BD 66C1CE04                	ror	esi, 4
  1040 000001C1 8EDE                    	mov	ds, si
  1041 000001C3 66C1EE1C                	shr	esi, 28
  1042 000001C7 8B04                    	mov	ax, [si]
  1043 000001C9 660FB7C0                	movzx	eax, ax
  1044 000001CD 665B                    	pop	ebx
  1045 000001CF 6689DE                  	mov	esi, ebx
  1046 000001D2 66C1CE04                	ror	esi, 4
  1047 000001D6 8EDE                    	mov	ds, si
  1048 000001D8 66C1EE1C                	shr	esi, 28
  1049 000001DC 8904                    	mov	[si], ax
  1050 000001DE 660FB7C0                	movzx	eax, ax
  1051                                  ; loc     <something> : * struct <something>
  1052                                  ; loc     <something> : unsigned
  1053                                  ; RPN'ized expression: "listaLibres ptrBloque sig -> *u (something38) 4 << (something37) = "
  1054                                  ; Expanded expression: "listaLibres (@-16) *(4) 2 + *(2) 4 << =(4) "
  1055                                  ; Fused expression:    "listaLibres push-ax + *(@-16) 2 << *ax 4 =(204) **sp ax "
  1056                                  section .relod
  1057 00000014 [E4010000]              	dd	L39
  1058                                  section .text
  1059 000001E2 66B8                    	db	0x66, 0xB8
  1060                                  L39:
  1061 000001E4 [00000000]              	dd	_listaLibres
  1062 000001E8 6650                    	push	eax
  1063 000001EA 668B46F0                	mov	eax, [bp-16]
  1064 000001EE 6683C002                	add	eax, 2
  1065 000001F2 6689C3                  	mov	ebx, eax
  1066 000001F5 6689DE                  	mov	esi, ebx
  1067 000001F8 66C1CE04                	ror	esi, 4
  1068 000001FC 8EDE                    	mov	ds, si
  1069 000001FE 66C1EE1C                	shr	esi, 28
  1070 00000202 8B04                    	mov	ax, [si]
  1071 00000204 660FB7C0                	movzx	eax, ax
  1072 00000208 66C1E004                	shl	eax, 4
  1073 0000020C 665B                    	pop	ebx
  1074 0000020E 6689DE                  	mov	esi, ebx
  1075 00000211 66C1CE04                	ror	esi, 4
  1076 00000215 8EDE                    	mov	ds, si
  1077 00000217 66C1EE1C                	shr	esi, 28
  1078 0000021B 668904                  	mov	[si], eax
  1079                                  ; RPN'ized expression: "listaLibres tam -> *u 1 = "
  1080                                  ; Expanded expression: "listaLibres *(4) 0 + 1 =(2) "
  1081                                  ; Fused expression:    "listaLibres + *ax 0 =(172) *ax 1 "
  1082                                  section .relod
  1083 00000018 [20020000]              	dd	L40
  1084                                  section .text
  1085 0000021E 66B8                    	db	0x66, 0xB8
  1086                                  L40:
  1087 00000220 [00000000]              	dd	_listaLibres
  1088 00000224 6689C3                  	mov	ebx, eax
  1089 00000227 6689DE                  	mov	esi, ebx
  1090 0000022A 66C1CE04                	ror	esi, 4
  1091 0000022E 8EDE                    	mov	ds, si
  1092 00000230 66C1EE1C                	shr	esi, 28
  1093 00000234 668B04                  	mov	eax, [si]
  1094 00000237 6689C3                  	mov	ebx, eax
  1095 0000023A 66B801000000            	mov	eax, 1
  1096 00000240 6689DE                  	mov	esi, ebx
  1097 00000243 66C1CE04                	ror	esi, 4
  1098 00000247 8EDE                    	mov	ds, si
  1099 00000249 66C1EE1C                	shr	esi, 28
  1100 0000024D 8904                    	mov	[si], ax
  1101 0000024F 660FB7C0                	movzx	eax, ax
  1102                                  ; loc     <something> : unsigned short
  1103                                  ; loc     <something> : unsigned
  1104                                  ; RPN'ized expression: "listaLibres sig -> *u ptrBloque (something42) 4 >> (something41) = "
  1105                                  ; Expanded expression: "listaLibres *(4) 2 + (@-16) *(4) 4 >>u unsigned short =(2) "
  1106                                  ; Fused expression:    "listaLibres + *ax 2 push-ax >>u *(@-16) 4 unsigned short =(172) **sp ax "
  1107                                  section .relod
  1108 0000001C [55020000]              	dd	L43
  1109                                  section .text
  1110 00000253 66B8                    	db	0x66, 0xB8
  1111                                  L43:
  1112 00000255 [00000000]              	dd	_listaLibres
  1113 00000259 6689C3                  	mov	ebx, eax
  1114 0000025C 6689DE                  	mov	esi, ebx
  1115 0000025F 66C1CE04                	ror	esi, 4
  1116 00000263 8EDE                    	mov	ds, si
  1117 00000265 66C1EE1C                	shr	esi, 28
  1118 00000269 668B04                  	mov	eax, [si]
  1119 0000026C 6683C002                	add	eax, 2
  1120 00000270 6650                    	push	eax
  1121 00000272 668B46F0                	mov	eax, [bp-16]
  1122 00000276 66C1E804                	shr	eax, 4
  1123 0000027A 660FB7C0                	movzx	eax, ax
  1124 0000027E 665B                    	pop	ebx
  1125 00000280 6689DE                  	mov	esi, ebx
  1126 00000283 66C1CE04                	ror	esi, 4
  1127 00000287 8EDE                    	mov	ds, si
  1128 00000289 66C1EE1C                	shr	esi, 28
  1129 0000028D 8904                    	mov	[si], ax
  1130 0000028F 660FB7C0                	movzx	eax, ax
  1131                                  ; RPN'ized expression: "listaLibres ant -> *u listaLibres sig -> *u = "
  1132                                  ; Expanded expression: "listaLibres *(4) 4 + listaLibres *(4) 2 + *(2) =(2) "
  1133                                  ; Fused expression:    "listaLibres + *ax 4 push-ax listaLibres + *ax 2 =(170) **sp *ax "
  1134                                  section .relod
  1135 00000020 [95020000]              	dd	L44
  1136                                  section .text
  1137 00000293 66B8                    	db	0x66, 0xB8
  1138                                  L44:
  1139 00000295 [00000000]              	dd	_listaLibres
  1140 00000299 6689C3                  	mov	ebx, eax
  1141 0000029C 6689DE                  	mov	esi, ebx
  1142 0000029F 66C1CE04                	ror	esi, 4
  1143 000002A3 8EDE                    	mov	ds, si
  1144 000002A5 66C1EE1C                	shr	esi, 28
  1145 000002A9 668B04                  	mov	eax, [si]
  1146 000002AC 6683C004                	add	eax, 4
  1147 000002B0 6650                    	push	eax
  1148                                  section .relod
  1149 00000024 [B4020000]              	dd	L45
  1150                                  section .text
  1151 000002B2 66B8                    	db	0x66, 0xB8
  1152                                  L45:
  1153 000002B4 [00000000]              	dd	_listaLibres
  1154 000002B8 6689C3                  	mov	ebx, eax
  1155 000002BB 6689DE                  	mov	esi, ebx
  1156 000002BE 66C1CE04                	ror	esi, 4
  1157 000002C2 8EDE                    	mov	ds, si
  1158 000002C4 66C1EE1C                	shr	esi, 28
  1159 000002C8 668B04                  	mov	eax, [si]
  1160 000002CB 6683C002                	add	eax, 2
  1161 000002CF 6689C3                  	mov	ebx, eax
  1162 000002D2 6689DE                  	mov	esi, ebx
  1163 000002D5 66C1CE04                	ror	esi, 4
  1164 000002D9 8EDE                    	mov	ds, si
  1165 000002DB 66C1EE1C                	shr	esi, 28
  1166 000002DF 8B04                    	mov	ax, [si]
  1167 000002E1 660FB7C0                	movzx	eax, ax
  1168 000002E5 665B                    	pop	ebx
  1169 000002E7 6689DE                  	mov	esi, ebx
  1170 000002EA 66C1CE04                	ror	esi, 4
  1171 000002EE 8EDE                    	mov	ds, si
  1172 000002F0 66C1EE1C                	shr	esi, 28
  1173 000002F4 8904                    	mov	[si], ax
  1174 000002F6 660FB7C0                	movzx	eax, ax
  1175                                  ; RPN'ized expression: "tamBloqueMax ptrBloque tam -> *u = "
  1176                                  ; Expanded expression: "tamBloqueMax (@-16) *(4) 0 + *(2) =(2) "
  1177                                  ; Fused expression:    "tamBloqueMax push-ax + *(@-16) 0 =(170) **sp *ax "
  1178                                  section .relod
  1179 00000028 [FC020000]              	dd	L46
  1180                                  section .text
  1181 000002FA 66B8                    	db	0x66, 0xB8
  1182                                  L46:
  1183 000002FC [00000000]              	dd	_tamBloqueMax
  1184 00000300 6650                    	push	eax
  1185 00000302 668B46F0                	mov	eax, [bp-16]
  1186 00000306 6689C3                  	mov	ebx, eax
  1187 00000309 6689DE                  	mov	esi, ebx
  1188 0000030C 66C1CE04                	ror	esi, 4
  1189 00000310 8EDE                    	mov	ds, si
  1190 00000312 66C1EE1C                	shr	esi, 28
  1191 00000316 8B04                    	mov	ax, [si]
  1192 00000318 660FB7C0                	movzx	eax, ax
  1193 0000031C 665B                    	pop	ebx
  1194 0000031E 6689DE                  	mov	esi, ebx
  1195 00000321 66C1CE04                	ror	esi, 4
  1196 00000325 8EDE                    	mov	ds, si
  1197 00000327 66C1EE1C                	shr	esi, 28
  1198 0000032B 8904                    	mov	[si], ax
  1199 0000032D 660FB7C0                	movzx	eax, ax
  1200                                  L1:
  1201 00000331 66                      	db	0x66
  1202 00000332 C9                      	leave
  1203 00000333 CB                      	retf
  1204                                  L47:
  1205                                  
  1206                                  section .fxnsz noalloc
  1207 00000000 34030000                	dd	L47 - _inicGM
  1208                                  
  1209                                  ; glb mostrarListaLibres : (void) void
  1210                                  section .text
  1211                                  	global	_mostrarListaLibres
  1212                                  _mostrarListaLibres:
  1213 00000334 6655                    	push	ebp
  1214 00000336 660FB7EC                	movzx	ebp, sp
  1215 0000033A 83EC0C                  	 sub	sp,         12
  1216                                  ; loc     ptrBloque : (@-4): * struct <something>
  1217                                  ; loc     i : (@-8): int
  1218                                  ; loc     j : (@-12): int
  1219                                  ; loc     <something> : * struct <something>
  1220                                  ; loc     <something> : unsigned
  1221                                  ; RPN'ized expression: "ptrBloque listaLibres sig -> *u (something51) 4 << (something50) = "
  1222                                  ; Expanded expression: "(@-4) listaLibres *(4) 2 + *(2) 4 << =(4) "
  1223                                  ; Fused expression:    "listaLibres + *ax 2 << *ax 4 =(204) *(@-4) ax "
  1224                                  section .relod
  1225 0000002C [3F030000]              	dd	L52
  1226                                  section .text
  1227 0000033D 66B8                    	db	0x66, 0xB8
  1228                                  L52:
  1229 0000033F [00000000]              	dd	_listaLibres
  1230 00000343 6689C3                  	mov	ebx, eax
  1231 00000346 6689DE                  	mov	esi, ebx
  1232 00000349 66C1CE04                	ror	esi, 4
  1233 0000034D 8EDE                    	mov	ds, si
  1234 0000034F 66C1EE1C                	shr	esi, 28
  1235 00000353 668B04                  	mov	eax, [si]
  1236 00000356 6683C002                	add	eax, 2
  1237 0000035A 6689C3                  	mov	ebx, eax
  1238 0000035D 6689DE                  	mov	esi, ebx
  1239 00000360 66C1CE04                	ror	esi, 4
  1240 00000364 8EDE                    	mov	ds, si
  1241 00000366 66C1EE1C                	shr	esi, 28
  1242 0000036A 8B04                    	mov	ax, [si]
  1243 0000036C 660FB7C0                	movzx	eax, ax
  1244 00000370 66C1E004                	shl	eax, 4
  1245 00000374 668946FC                	mov	[bp-4], eax
  1246                                  
  1247                                  section .rodata
  1248                                  L53:
  1249 0000004F 0A                      	db	10
  1250 00000050 2020696E6420202064-     	db	"  ind   dir    tam    sig    ant    aux            relleno          ",10
  1250 00000059 69722020202074616D-
  1250 00000062 202020207369672020-
  1250 0000006B 2020616E7420202020-
  1250 00000074 617578202020202020-
  1250 0000007D 20202020202072656C-
  1250 00000086 6C656E6F2020202020-
  1250 0000008F 20202020200A       
  1251 00000095 202D2D2D2D2D202D2D-     	db	" ----- ------ ------ ------ ------ ------ ------------------------- ",10
  1251 0000009E 2D2D2D2D202D2D2D2D-
  1251 000000A7 2D2D202D2D2D2D2D2D-
  1251 000000B0 202D2D2D2D2D2D202D-
  1251 000000B9 2D2D2D2D2D202D2D2D-
  1251 000000C2 2D2D2D2D2D2D2D2D2D-
  1251 000000CB 2D2D2D2D2D2D2D2D2D-
  1251 000000D4 2D2D2D2D200A       
  1252 000000DA 00                      	times	1 db 0
  1253                                  
  1254                                  section .text
  1255                                  ; RPN'ized expression: "( L53 printStrVideo ) "
  1256                                  ; Expanded expression: " L53  printStrVideo ()4 "
  1257                                  ; Fused expression:    "( L53 , printStrVideo )4 "
  1258                                  section .relod
  1259 00000030 [7A030000]              	dd	L54
  1260                                  section .text
  1261 00000378 6668                    	db	0x66, 0x68
  1262                                  L54:
  1263 0000037A [4F000000]              	dd	L53
  1264 0000037E 9A                      	db	0x9A
  1265                                  section .relot
  1266 00000034 [7F030000]              	dd	L55
  1267                                  section .text
  1268                                  L55:
  1269 0000037F [00000000]              	dd	_printStrVideo
  1270 00000383 83ECFC                  	sub	sp, -4
  1271                                  ; RPN'ized expression: "i 0 = "
  1272                                  ; Expanded expression: "(@-8) 0 =(4) "
  1273                                  ; Fused expression:    "=(204) *(@-8) 0 "
  1274 00000386 66B800000000            	mov	eax, 0
  1275 0000038C 668946F8                	mov	[bp-8], eax
  1276                                  ; do
  1277                                  L56:
  1278                                  ; {
  1279                                  ; RPN'ized expression: "( 4 , i printDecVideo ) "
  1280                                  ; Expanded expression: " 4  (@-8) *(4)  printDecVideo ()8 "
  1281                                  ; Fused expression:    "( 4 , *(4) (@-8) , printDecVideo )8 "
  1282 00000390 666A04                  	push	dword 4
  1283 00000393 66FF76F8                	push	dword [bp-8]
  1284 00000397 9A                      	db	0x9A
  1285                                  section .relot
  1286 00000038 [98030000]              	dd	L59
  1287                                  section .text
  1288                                  L59:
  1289 00000398 [00000000]              	dd	_printDecVideo
  1290 0000039C 83ECF8                  	sub	sp, -8
  1291                                  
  1292                                  section .rodata
  1293                                  L60:
  1294 000000DB 20202020                	db	"    "
  1295 000000DF 00                      	times	1 db 0
  1296                                  
  1297                                  section .text
  1298                                  ; RPN'ized expression: "( L60 printStrVideo ) "
  1299                                  ; Expanded expression: " L60  printStrVideo ()4 "
  1300                                  ; Fused expression:    "( L60 , printStrVideo )4 "
  1301                                  section .relod
  1302 00000034 [A1030000]              	dd	L61
  1303                                  section .text
  1304 0000039F 6668                    	db	0x66, 0x68
  1305                                  L61:
  1306 000003A1 [DB000000]              	dd	L60
  1307 000003A5 9A                      	db	0x9A
  1308                                  section .relot
  1309 0000003C [A6030000]              	dd	L62
  1310                                  section .text
  1311                                  L62:
  1312 000003A6 [00000000]              	dd	_printStrVideo
  1313 000003AA 83ECFC                  	sub	sp, -4
  1314                                  ; loc         <something> : unsigned short
  1315                                  ; loc         <something> : unsigned
  1316                                  ; RPN'ized expression: "( 4 , ptrBloque (something64) 4 >> (something63) printHexVideo ) "
  1317                                  ; Expanded expression: " 4  (@-4) *(4) 4 >>u unsigned short  printHexVideo ()8 "
  1318                                  ; Fused expression:    "( 4 , >>u *(@-4) 4 unsigned short , printHexVideo )8 "
  1319 000003AD 666A04                  	push	dword 4
  1320 000003B0 668B46FC                	mov	eax, [bp-4]
  1321 000003B4 66C1E804                	shr	eax, 4
  1322 000003B8 660FB7C0                	movzx	eax, ax
  1323 000003BC 6650                    	push	eax
  1324 000003BE 9A                      	db	0x9A
  1325                                  section .relot
  1326 00000040 [BF030000]              	dd	L65
  1327                                  section .text
  1328                                  L65:
  1329 000003BF [00000000]              	dd	_printHexVideo
  1330 000003C3 83ECF8                  	sub	sp, -8
  1331                                  
  1332                                  section .rodata
  1333                                  L66:
  1334 000000E0 202020                  	db	"   "
  1335 000000E3 00                      	times	1 db 0
  1336                                  
  1337                                  section .text
  1338                                  ; RPN'ized expression: "( L66 printStrVideo ) "
  1339                                  ; Expanded expression: " L66  printStrVideo ()4 "
  1340                                  ; Fused expression:    "( L66 , printStrVideo )4 "
  1341                                  section .relod
  1342 00000038 [C8030000]              	dd	L67
  1343                                  section .text
  1344 000003C6 6668                    	db	0x66, 0x68
  1345                                  L67:
  1346 000003C8 [E0000000]              	dd	L66
  1347 000003CC 9A                      	db	0x9A
  1348                                  section .relot
  1349 00000044 [CD030000]              	dd	L68
  1350                                  section .text
  1351                                  L68:
  1352 000003CD [00000000]              	dd	_printStrVideo
  1353 000003D1 83ECFC                  	sub	sp, -4
  1354                                  ; RPN'ized expression: "( 4 , ptrBloque tam -> *u printHexVideo ) "
  1355                                  ; Expanded expression: " 4  (@-4) *(4) 0 + *(2)  printHexVideo ()8 "
  1356                                  ; Fused expression:    "( 4 , + *(@-4) 0 *(2) ax , printHexVideo )8 "
  1357 000003D4 666A04                  	push	dword 4
  1358 000003D7 668B46FC                	mov	eax, [bp-4]
  1359 000003DB 6689C3                  	mov	ebx, eax
  1360 000003DE 6689DE                  	mov	esi, ebx
  1361 000003E1 66C1CE04                	ror	esi, 4
  1362 000003E5 8EDE                    	mov	ds, si
  1363 000003E7 66C1EE1C                	shr	esi, 28
  1364 000003EB 8B04                    	mov	ax, [si]
  1365 000003ED 660FB7C0                	movzx	eax, ax
  1366 000003F1 6650                    	push	eax
  1367 000003F3 9A                      	db	0x9A
  1368                                  section .relot
  1369 00000048 [F4030000]              	dd	L69
  1370                                  section .text
  1371                                  L69:
  1372 000003F4 [00000000]              	dd	_printHexVideo
  1373 000003F8 83ECF8                  	sub	sp, -8
  1374                                  
  1375                                  section .rodata
  1376                                  L70:
  1377 000000E4 202020                  	db	"   "
  1378 000000E7 00                      	times	1 db 0
  1379                                  
  1380                                  section .text
  1381                                  ; RPN'ized expression: "( L70 printStrVideo ) "
  1382                                  ; Expanded expression: " L70  printStrVideo ()4 "
  1383                                  ; Fused expression:    "( L70 , printStrVideo )4 "
  1384                                  section .relod
  1385 0000003C [FD030000]              	dd	L71
  1386                                  section .text
  1387 000003FB 6668                    	db	0x66, 0x68
  1388                                  L71:
  1389 000003FD [E4000000]              	dd	L70
  1390 00000401 9A                      	db	0x9A
  1391                                  section .relot
  1392 0000004C [02040000]              	dd	L72
  1393                                  section .text
  1394                                  L72:
  1395 00000402 [00000000]              	dd	_printStrVideo
  1396 00000406 83ECFC                  	sub	sp, -4
  1397                                  ; RPN'ized expression: "( 4 , ptrBloque sig -> *u printHexVideo ) "
  1398                                  ; Expanded expression: " 4  (@-4) *(4) 2 + *(2)  printHexVideo ()8 "
  1399                                  ; Fused expression:    "( 4 , + *(@-4) 2 *(2) ax , printHexVideo )8 "
  1400 00000409 666A04                  	push	dword 4
  1401 0000040C 668B46FC                	mov	eax, [bp-4]
  1402 00000410 6683C002                	add	eax, 2
  1403 00000414 6689C3                  	mov	ebx, eax
  1404 00000417 6689DE                  	mov	esi, ebx
  1405 0000041A 66C1CE04                	ror	esi, 4
  1406 0000041E 8EDE                    	mov	ds, si
  1407 00000420 66C1EE1C                	shr	esi, 28
  1408 00000424 8B04                    	mov	ax, [si]
  1409 00000426 660FB7C0                	movzx	eax, ax
  1410 0000042A 6650                    	push	eax
  1411 0000042C 9A                      	db	0x9A
  1412                                  section .relot
  1413 00000050 [2D040000]              	dd	L73
  1414                                  section .text
  1415                                  L73:
  1416 0000042D [00000000]              	dd	_printHexVideo
  1417 00000431 83ECF8                  	sub	sp, -8
  1418                                  
  1419                                  section .rodata
  1420                                  L74:
  1421 000000E8 202020                  	db	"   "
  1422 000000EB 00                      	times	1 db 0
  1423                                  
  1424                                  section .text
  1425                                  ; RPN'ized expression: "( L74 printStrVideo ) "
  1426                                  ; Expanded expression: " L74  printStrVideo ()4 "
  1427                                  ; Fused expression:    "( L74 , printStrVideo )4 "
  1428                                  section .relod
  1429 00000040 [36040000]              	dd	L75
  1430                                  section .text
  1431 00000434 6668                    	db	0x66, 0x68
  1432                                  L75:
  1433 00000436 [E8000000]              	dd	L74
  1434 0000043A 9A                      	db	0x9A
  1435                                  section .relot
  1436 00000054 [3B040000]              	dd	L76
  1437                                  section .text
  1438                                  L76:
  1439 0000043B [00000000]              	dd	_printStrVideo
  1440 0000043F 83ECFC                  	sub	sp, -4
  1441                                  ; RPN'ized expression: "( 4 , ptrBloque ant -> *u printHexVideo ) "
  1442                                  ; Expanded expression: " 4  (@-4) *(4) 4 + *(2)  printHexVideo ()8 "
  1443                                  ; Fused expression:    "( 4 , + *(@-4) 4 *(2) ax , printHexVideo )8 "
  1444 00000442 666A04                  	push	dword 4
  1445 00000445 668B46FC                	mov	eax, [bp-4]
  1446 00000449 6683C004                	add	eax, 4
  1447 0000044D 6689C3                  	mov	ebx, eax
  1448 00000450 6689DE                  	mov	esi, ebx
  1449 00000453 66C1CE04                	ror	esi, 4
  1450 00000457 8EDE                    	mov	ds, si
  1451 00000459 66C1EE1C                	shr	esi, 28
  1452 0000045D 8B04                    	mov	ax, [si]
  1453 0000045F 660FB7C0                	movzx	eax, ax
  1454 00000463 6650                    	push	eax
  1455 00000465 9A                      	db	0x9A
  1456                                  section .relot
  1457 00000058 [66040000]              	dd	L77
  1458                                  section .text
  1459                                  L77:
  1460 00000466 [00000000]              	dd	_printHexVideo
  1461 0000046A 83ECF8                  	sub	sp, -8
  1462                                  
  1463                                  section .rodata
  1464                                  L78:
  1465 000000EC 202020                  	db	"   "
  1466 000000EF 00                      	times	1 db 0
  1467                                  
  1468                                  section .text
  1469                                  ; RPN'ized expression: "( L78 printStrVideo ) "
  1470                                  ; Expanded expression: " L78  printStrVideo ()4 "
  1471                                  ; Fused expression:    "( L78 , printStrVideo )4 "
  1472                                  section .relod
  1473 00000044 [6F040000]              	dd	L79
  1474                                  section .text
  1475 0000046D 6668                    	db	0x66, 0x68
  1476                                  L79:
  1477 0000046F [EC000000]              	dd	L78
  1478 00000473 9A                      	db	0x9A
  1479                                  section .relot
  1480 0000005C [74040000]              	dd	L80
  1481                                  section .text
  1482                                  L80:
  1483 00000474 [00000000]              	dd	_printStrVideo
  1484 00000478 83ECFC                  	sub	sp, -4
  1485                                  ; RPN'ized expression: "( 4 , ptrBloque aux -> *u printHexVideo ) "
  1486                                  ; Expanded expression: " 4  (@-4) *(4) 6 + *(2)  printHexVideo ()8 "
  1487                                  ; Fused expression:    "( 4 , + *(@-4) 6 *(2) ax , printHexVideo )8 "
  1488 0000047B 666A04                  	push	dword 4
  1489 0000047E 668B46FC                	mov	eax, [bp-4]
  1490 00000482 6683C006                	add	eax, 6
  1491 00000486 6689C3                  	mov	ebx, eax
  1492 00000489 6689DE                  	mov	esi, ebx
  1493 0000048C 66C1CE04                	ror	esi, 4
  1494 00000490 8EDE                    	mov	ds, si
  1495 00000492 66C1EE1C                	shr	esi, 28
  1496 00000496 8B04                    	mov	ax, [si]
  1497 00000498 660FB7C0                	movzx	eax, ax
  1498 0000049C 6650                    	push	eax
  1499 0000049E 9A                      	db	0x9A
  1500                                  section .relot
  1501 00000060 [9F040000]              	dd	L81
  1502                                  section .text
  1503                                  L81:
  1504 0000049F [00000000]              	dd	_printHexVideo
  1505 000004A3 83ECF8                  	sub	sp, -8
  1506                                  
  1507                                  section .rodata
  1508                                  L82:
  1509 000000F0 202020                  	db	"   "
  1510 000000F3 00                      	times	1 db 0
  1511                                  
  1512                                  section .text
  1513                                  ; RPN'ized expression: "( L82 printStrVideo ) "
  1514                                  ; Expanded expression: " L82  printStrVideo ()4 "
  1515                                  ; Fused expression:    "( L82 , printStrVideo )4 "
  1516                                  section .relod
  1517 00000048 [A8040000]              	dd	L83
  1518                                  section .text
  1519 000004A6 6668                    	db	0x66, 0x68
  1520                                  L83:
  1521 000004A8 [F0000000]              	dd	L82
  1522 000004AC 9A                      	db	0x9A
  1523                                  section .relot
  1524 00000064 [AD040000]              	dd	L84
  1525                                  section .text
  1526                                  L84:
  1527 000004AD [00000000]              	dd	_printStrVideo
  1528 000004B1 83ECFC                  	sub	sp, -4
  1529                                  ; for
  1530                                  ; RPN'ized expression: "j 0 = "
  1531                                  ; Expanded expression: "(@-12) 0 =(4) "
  1532                                  ; Fused expression:    "=(204) *(@-12) 0 "
  1533 000004B4 66B800000000            	mov	eax, 0
  1534 000004BA 668946F4                	mov	[bp-12], eax
  1535                                  L85:
  1536                                  ; RPN'ized expression: "j 8 < "
  1537                                  ; Expanded expression: "(@-12) *(4) 8 < "
  1538                                  ; Fused expression:    "< *(@-12) 8 IF! "
  1539 000004BE 668B46F4                	mov	eax, [bp-12]
  1540 000004C2 6683F808                	cmp	eax, 8
  1541 000004C6 7D44                    	jge	L88
  1542                                  ; RPN'ized expression: "j ++p "
  1543                                  ; Expanded expression: "(@-12) ++p(4) "
  1544                                  ; {
  1545                                  ; RPN'ized expression: "( 2 , ptrBloque relleno -> *u j + *u printHexVideo ) "
  1546                                  ; Expanded expression: " 2  (@-4) *(4) 8 + (@-12) *(4) + *(1)  printHexVideo ()8 "
  1547                                  ; Fused expression:    "( 2 , + *(@-4) 8 + ax *(@-12) *(1) ax , printHexVideo )8 "
  1548 000004C8 666A02                  	push	dword 2
  1549 000004CB 668B46FC                	mov	eax, [bp-4]
  1550 000004CF 6683C008                	add	eax, 8
  1551 000004D3 660346F4                	add	eax, [bp-12]
  1552 000004D7 6689C3                  	mov	ebx, eax
  1553 000004DA 6689DE                  	mov	esi, ebx
  1554 000004DD 66C1CE04                	ror	esi, 4
  1555 000004E1 8EDE                    	mov	ds, si
  1556 000004E3 66C1EE1C                	shr	esi, 28
  1557 000004E7 8A04                    	mov	al, [si]
  1558 000004E9 660FB6C0                	movzx	eax, al
  1559 000004ED 6650                    	push	eax
  1560 000004EF 9A                      	db	0x9A
  1561                                  section .relot
  1562 00000068 [F0040000]              	dd	L89
  1563                                  section .text
  1564                                  L89:
  1565 000004F0 [00000000]              	dd	_printHexVideo
  1566 000004F4 83ECF8                  	sub	sp, -8
  1567                                  ; RPN'ized expression: "( 32 printCarVideo ) "
  1568                                  ; Expanded expression: " 32  printCarVideo ()4 "
  1569                                  ; Fused expression:    "( 32 , printCarVideo )4 "
  1570 000004F7 666A20                  	push	dword 32
  1571 000004FA 9A                      	db	0x9A
  1572                                  section .relot
  1573 0000006C [FB040000]              	dd	L90
  1574                                  section .text
  1575                                  L90:
  1576 000004FB [00000000]              	dd	_printCarVideo
  1577 000004FF 83ECFC                  	sub	sp, -4
  1578                                  ; }
  1579                                  L86:
  1580                                  ; Fused expression:    "++p(4) *(@-12) "
  1581 00000502 668B46F4                	mov	eax, [bp-12]
  1582 00000506 66FF46F4                	inc	dword [bp-12]
  1583 0000050A EBB2                    	jmp	L85
  1584                                  L88:
  1585                                  
  1586                                  section .rodata
  1587                                  L91:
  1588 000000F4 0A                      	db	10
  1589 000000F5 00                      	times	1 db 0
  1590                                  
  1591                                  section .text
  1592                                  ; RPN'ized expression: "( L91 printStrVideo ) "
  1593                                  ; Expanded expression: " L91  printStrVideo ()4 "
  1594                                  ; Fused expression:    "( L91 , printStrVideo )4 "
  1595                                  section .relod
  1596 0000004C [0E050000]              	dd	L92
  1597                                  section .text
  1598 0000050C 6668                    	db	0x66, 0x68
  1599                                  L92:
  1600 0000050E [F4000000]              	dd	L91
  1601 00000512 9A                      	db	0x9A
  1602                                  section .relot
  1603 00000070 [13050000]              	dd	L93
  1604                                  section .text
  1605                                  L93:
  1606 00000513 [00000000]              	dd	_printStrVideo
  1607 00000517 83ECFC                  	sub	sp, -4
  1608                                  ; loc         <something> : * struct <something>
  1609                                  ; loc         <something> : unsigned
  1610                                  ; RPN'ized expression: "ptrBloque ptrBloque sig -> *u (something95) 4 << (something94) = "
  1611                                  ; Expanded expression: "(@-4) (@-4) *(4) 2 + *(2) 4 << =(4) "
  1612                                  ; Fused expression:    "+ *(@-4) 2 << *ax 4 =(204) *(@-4) ax "
  1613 0000051A 668B46FC                	mov	eax, [bp-4]
  1614 0000051E 6683C002                	add	eax, 2
  1615 00000522 6689C3                  	mov	ebx, eax
  1616 00000525 6689DE                  	mov	esi, ebx
  1617 00000528 66C1CE04                	ror	esi, 4
  1618 0000052C 8EDE                    	mov	ds, si
  1619 0000052E 66C1EE1C                	shr	esi, 28
  1620 00000532 8B04                    	mov	ax, [si]
  1621 00000534 660FB7C0                	movzx	eax, ax
  1622 00000538 66C1E004                	shl	eax, 4
  1623 0000053C 668946FC                	mov	[bp-4], eax
  1624                                  ; RPN'ized expression: "i ++p "
  1625                                  ; Expanded expression: "(@-8) ++p(4) "
  1626                                  ; Fused expression:    "++p(4) *(@-8) "
  1627 00000540 668B46F8                	mov	eax, [bp-8]
  1628 00000544 66FF46F8                	inc	dword [bp-8]
  1629                                  ; }
  1630                                  ; while
  1631                                  ; loc     <something> : * struct <something>
  1632                                  ; loc     <something> : unsigned
  1633                                  ; RPN'ized expression: "ptrBloque listaLibres sig -> *u (something97) 4 << (something96) != "
  1634                                  ; Expanded expression: "(@-4) *(4) listaLibres *(4) 2 + *(2) 4 << != "
  1635                                  L57:
  1636                                  ; Fused expression:    "listaLibres + *ax 2 << *ax 4 != *(@-4) ax IF "
  1637                                  section .relod
  1638 00000050 [4A050000]              	dd	L98
  1639                                  section .text
  1640 00000548 66B8                    	db	0x66, 0xB8
  1641                                  L98:
  1642 0000054A [00000000]              	dd	_listaLibres
  1643 0000054E 6689C3                  	mov	ebx, eax
  1644 00000551 6689DE                  	mov	esi, ebx
  1645 00000554 66C1CE04                	ror	esi, 4
  1646 00000558 8EDE                    	mov	ds, si
  1647 0000055A 66C1EE1C                	shr	esi, 28
  1648 0000055E 668B04                  	mov	eax, [si]
  1649 00000561 6683C002                	add	eax, 2
  1650 00000565 6689C3                  	mov	ebx, eax
  1651 00000568 6689DE                  	mov	esi, ebx
  1652 0000056B 66C1CE04                	ror	esi, 4
  1653 0000056F 8EDE                    	mov	ds, si
  1654 00000571 66C1EE1C                	shr	esi, 28
  1655 00000575 8B04                    	mov	ax, [si]
  1656 00000577 660FB7C0                	movzx	eax, ax
  1657 0000057B 66C1E004                	shl	eax, 4
  1658 0000057F 6689C1                  	mov	ecx, eax
  1659 00000582 668B46FC                	mov	eax, [bp-4]
  1660 00000586 6639C8                  	cmp	eax, ecx
  1661 00000589 0F8503FE                	jne	L56
  1662                                  L58:
  1663                                  L48:
  1664 0000058D 66                      	db	0x66
  1665 0000058E C9                      	leave
  1666 0000058F CB                      	retf
  1667                                  L99:
  1668                                  
  1669                                  section .fxnsz
  1670 00000004 5C020000                	dd	L99 - _mostrarListaLibres
  1671                                  
  1672                                  
  1673                                  	extern	_SS_Kernel
  1674                                  	extern	_printStrVideo
  1675                                  	extern	_printHexVideo
  1676                                  	extern	_modoSO1
  1677                                  	extern	_memBIOS
  1678                                  	extern	_segPSP
  1679                                  	extern	_leerTeclaBIOS
  1680                                  	extern	_listaLibres
  1681                                  	extern	_tamBloqueMax
  1682                                  	extern	_printDecVideo
  1683                                  	extern	_printCarVideo
  1684                                  
  1685                                  ; Syntax/declaration table/stack:
  1686                                  ; Bytes used: 13835/40960
  1687                                  
  1688                                  
  1689                                  ; Macro table:
  1690                                  ; Macro __SMALLER_C__ = `0x0100`
  1691                                  ; Macro __SMALLER_C_32__ = ``
  1692                                  ; Macro __HUGE__ = ``
  1693                                  ; Macro __SMALLER_C_SCHAR__ = ``
  1694                                  ; Bytes used: 74/5120
  1695                                  
  1696                                  
  1697                                  ; Identifier table:
  1698                                  ; Ident __floatsisf
  1699                                  ; Ident __floatunsisf
  1700                                  ; Ident __fixsfsi
  1701                                  ; Ident __fixunssfsi
  1702                                  ; Ident __addsf3
  1703                                  ; Ident __subsf3
  1704                                  ; Ident __negsf2
  1705                                  ; Ident __mulsf3
  1706                                  ; Ident __divsf3
  1707                                  ; Ident __lesf2
  1708                                  ; Ident __gesf2
  1709                                  ; Ident intptr_t
  1710                                  ; Ident uintptr_t
  1711                                  ; Ident intmax_t
  1712                                  ; Ident uintmax_t
  1713                                  ; Ident int8_t
  1714                                  ; Ident int_least8_t
  1715                                  ; Ident int_fast8_t
  1716                                  ; Ident uint8_t
  1717                                  ; Ident uint_least8_t
  1718                                  ; Ident uint_fast8_t
  1719                                  ; Ident int16_t
  1720                                  ; Ident int_least16_t
  1721                                  ; Ident int_fast16_t
  1722                                  ; Ident uint16_t
  1723                                  ; Ident uint_least16_t
  1724                                  ; Ident uint_fast16_t
  1725                                  ; Ident int32_t
  1726                                  ; Ident int_least32_t
  1727                                  ; Ident int_fast32_t
  1728                                  ; Ident uint32_t
  1729                                  ; Ident uint_least32_t
  1730                                  ; Ident uint_fast32_t
  1731                                  ; Ident <something>
  1732                                  ; Ident quot
  1733                                  ; Ident rem
  1734                                  ; Ident imaxdiv_t
  1735                                  ; Ident FALSE
  1736                                  ; Ident TRUE
  1737                                  ; Ident bool_t
  1738                                  ; Ident pointer_t
  1739                                  ; Ident funcion_t
  1740                                  ; Ident manejador_t
  1741                                  ; Ident rti_t
  1742                                  ; Ident isr_t
  1743                                  ; Ident handler_t
  1744                                  ; Ident retardarThread_t
  1745                                  ; Ident ptrTVI_t
  1746                                  ; Ident modoSO1_Bin
  1747                                  ; Ident modoSO1_Exe
  1748                                  ; Ident modoSO1_Bs
  1749                                  ; Ident modoSO1_t
  1750                                  ; Ident lo
  1751                                  ; Ident hi
  1752                                  ; Ident lh_t
  1753                                  ; Ident offset
  1754                                  ; Ident segment
  1755                                  ; Ident address_t
  1756                                  ; Ident ptr
  1757                                  ; Ident adr
  1758                                  ; Ident uPtrAdr_t
  1759                                  ; Ident pid_t
  1760                                  ; Ident tid_t
  1761                                  ; Ident uid_t
  1762                                  ; Ident gid_t
  1763                                  ; Ident pindx_t
  1764                                  ; Ident tindx_t
  1765                                  ; Ident df_t
  1766                                  ; Ident dfs_t
  1767                                  ; Ident rindx_t
  1768                                  ; Ident tipoOrdenador
  1769                                  ; Ident rebootLegacy
  1770                                  ; Ident tipoTeclado
  1771                                  ; Ident leerTeclaBIOS
  1772                                  ; Ident leerTeclaExtBIOS
  1773                                  ; Ident teclaListaBIOS
  1774                                  ; Ident leerTeclaListaBDA
  1775                                  ; Ident teclaListaBDA
  1776                                  ; Ident printCarBIOS
  1777                                  ; Ident car
  1778                                  ; Ident printCarPagBIOS
  1779                                  ; Ident pag
  1780                                  ; Ident printCarAtrPagBIOS
  1781                                  ; Ident atr
  1782                                  ; Ident printLnBIOS
  1783                                  ; Ident printStrBIOS
  1784                                  ; Ident str
  1785                                  ; Ident printStrHastaBIOS
  1786                                  ; Ident n
  1787                                  ; Ident lleno
  1788                                  ; Ident printDecBIOS
  1789                                  ; Ident num
  1790                                  ; Ident l
  1791                                  ; Ident printLDecBIOS
  1792                                  ; Ident printIntBIOS
  1793                                  ; Ident printLIntBIOS
  1794                                  ; Ident printHexBIOS
  1795                                  ; Ident printLHexBIOS
  1796                                  ; Ident printBinBIOS
  1797                                  ; Ident printLBinBIOS
  1798                                  ; Ident printPtrBIOS
  1799                                  ; Ident printByteBIOS
  1800                                  ; Ident b
  1801                                  ; Ident printWordBIOS
  1802                                  ; Ident w
  1803                                  ; Ident printCadBIOS
  1804                                  ; Ident cad
  1805                                  ; Ident esperarTicsBIOS
  1806                                  ; Ident tics
  1807                                  ; Ident modoDeVideo
  1808                                  ; Ident establecerModoDeVideo
  1809                                  ; Ident modo
  1810                                  ; Ident paginaActiva
  1811                                  ; Ident establecerPaginaActiva
  1812                                  ; Ident numPagsVideo
  1813                                  ; Ident scrollPagBDA
  1814                                  ; Ident numLineas
  1815                                  ; Ident scrollPagBIOS
  1816                                  ; Ident scrollBIOS
  1817                                  ; Ident goToXYPag
  1818                                  ; Ident fila
  1819                                  ; Ident columna
  1820                                  ; Ident goToXYBIOS
  1821                                  ; Ident setCursorBIOS
  1822                                  ; Ident linea1
  1823                                  ; Ident linea2
  1824                                  ; Ident ocultaCursorBIOS
  1825                                  ; Ident readXYPagBIOS
  1826                                  ; Ident readXYBIOS
  1827                                  ; Ident memBIOS
  1828                                  ; Ident enviarBIOS
  1829                                  ; Ident recibirBIOS
  1830                                  ; Ident hayApmBIOS
  1831                                  ; Ident version
  1832                                  ; Ident connectApmBIOS
  1833                                  ; Ident disconnectApmBIOS
  1834                                  ; Ident cpuIdleBIOS
  1835                                  ; Ident cpuBusyBIOS
  1836                                  ; Ident printCarVideo
  1837                                  ; Ident printLnVideo
  1838                                  ; Ident printStrVideo
  1839                                  ; Ident printStrHastaVideo
  1840                                  ; Ident printDecVideo
  1841                                  ; Ident printLDecVideo
  1842                                  ; Ident printIntVideo
  1843                                  ; Ident printLIntVideo
  1844                                  ; Ident printHexVideo
  1845                                  ; Ident printLHexVideo
  1846                                  ; Ident printBinVideo
  1847                                  ; Ident printLBinVideo
  1848                                  ; Ident printPtrVideo
  1849                                  ; Ident printByteVideo
  1850                                  ; Ident printWordVideo
  1851                                  ; Ident printCadVideo
  1852                                  ; Ident finProgDOS
  1853                                  ; Ident error
  1854                                  ; Ident ffblk
  1855                                  ; Ident ff_reserved
  1856                                  ; Ident ff_attrib
  1857                                  ; Ident ff_ftime
  1858                                  ; Ident ff_fdate
  1859                                  ; Ident ff_fsize
  1860                                  ; Ident ff_name
  1861                                  ; Ident hayMSDOS
  1862                                  ; Ident hayDOSBox
  1863                                  ; Ident hayWindowsNT
  1864                                  ; Ident segPSP
  1865                                  ; Ident versionMSDOS
  1866                                  ; Ident entornoMSDOS
  1867                                  ; Ident valorMSDOS
  1868                                  ; Ident argcMSDOS
  1869                                  ; Ident getArgvMSDOS
  1870                                  ; Ident openDOS
  1871                                  ; Ident nombre
  1872                                  ; Ident extendedOpenDOS
  1873                                  ; Ident accion
  1874                                  ; Ident closeDOS
  1875                                  ; Ident df
  1876                                  ; Ident commitFileDOS
  1877                                  ; Ident createDOS
  1878                                  ; Ident atributo
  1879                                  ; Ident readDOS
  1880                                  ; Ident buf
  1881                                  ; Ident writeDOS
  1882                                  ; Ident lseekDOS
  1883                                  ; Ident pos
  1884                                  ; Ident whence
  1885                                  ; Ident getdiskDOS
  1886                                  ; Ident setdiskDOS
  1887                                  ; Ident drive
  1888                                  ; Ident getcurdirDOS
  1889                                  ; Ident direc
  1890                                  ; Ident chdirDOS
  1891                                  ; Ident path
  1892                                  ; Ident findfirstDOS
  1893                                  ; Ident pathname
  1894                                  ; Ident attrib
  1895                                  ; Ident findnextDOS
  1896                                  ; Ident _start__text
  1897                                  ; Ident _stop__text
  1898                                  ; Ident _start__rodata
  1899                                  ; Ident _stop__rodata
  1900                                  ; Ident _start__data
  1901                                  ; Ident _stop__data
  1902                                  ; Ident _start__bss
  1903                                  ; Ident _stop__bss
  1904                                  ; Ident _start_allcode__
  1905                                  ; Ident _stop_allcode__
  1906                                  ; Ident _start_alldata__
  1907                                  ; Ident _stop_alldata__
  1908                                  ; Ident mostrarSeccion
  1909                                  ; Ident start
  1910                                  ; Ident stop
  1911                                  ; Ident descripcion
  1912                                  ; Ident mostrarSecciones
  1913                                  ; Ident modoAp_t
  1914                                  ; Ident DS
  1915                                  ; Ident ES
  1916                                  ; Ident EDI
  1917                                  ; Ident ESI
  1918                                  ; Ident EBP
  1919                                  ; Ident ESP
  1920                                  ; Ident EBX
  1921                                  ; Ident EDX
  1922                                  ; Ident ECX
  1923                                  ; Ident EAX
  1924                                  ; Ident IP
  1925                                  ; Ident CS
  1926                                  ; Ident Flags
  1927                                  ; Ident tramaDWords_t
  1928                                  ; Ident DI
  1929                                  ; Ident rDI
  1930                                  ; Ident SI
  1931                                  ; Ident rSI
  1932                                  ; Ident BP
  1933                                  ; Ident rBP
  1934                                  ; Ident SP
  1935                                  ; Ident rSP
  1936                                  ; Ident BX
  1937                                  ; Ident rBX
  1938                                  ; Ident DX
  1939                                  ; Ident rDX
  1940                                  ; Ident CX
  1941                                  ; Ident rCX
  1942                                  ; Ident AX
  1943                                  ; Ident rAX
  1944                                  ; Ident tramaWords_t
  1945                                  ; Ident BL
  1946                                  ; Ident BH
  1947                                  ; Ident rB
  1948                                  ; Ident DL
  1949                                  ; Ident DH
  1950                                  ; Ident rD
  1951                                  ; Ident CL
  1952                                  ; Ident CH
  1953                                  ; Ident rC
  1954                                  ; Ident AL
  1955                                  ; Ident AH
  1956                                  ; Ident rA
  1957                                  ; Ident tramaBytes_t
  1958                                  ; Ident td
  1959                                  ; Ident tw
  1960                                  ; Ident tb
  1961                                  ; Ident trama_t
  1962                                  ; Ident tam
  1963                                  ; Ident sig
  1964                                  ; Ident ant
  1965                                  ; Ident aux
  1966                                  ; Ident relleno
  1967                                  ; Ident bloque_t
  1968                                  ; Ident ptrBloque_t
  1969                                  ; Ident cab
  1970                                  ; Ident dobleEnlace_t
  1971                                  ; Ident numElem
  1972                                  ; Ident primero
  1973                                  ; Ident cabecera
  1974                                  ; Ident e
  1975                                  ; Ident c2c_t
  1976                                  ; Ident posicionC2c
  1977                                  ; Ident i
  1978                                  ; Ident c2c
  1979                                  ; Ident eliminarC2c
  1980                                  ; Ident apilarC2c
  1981                                  ; Ident encolarC2c
  1982                                  ; Ident desencolarC2c
  1983                                  ; Ident inicializarC2c
  1984                                  ; Ident compartida
  1985                                  ; Ident ptrC2c_t
  1986                                  ; Ident posicionPC2c
  1987                                  ; Ident eliminarPC2c
  1988                                  ; Ident ptrC2c
  1989                                  ; Ident apilarPC2c
  1990                                  ; Ident encolarPC2c
  1991                                  ; Ident desencolarPC2c
  1992                                  ; Ident inicializarPC2c
  1993                                  ; Ident callBack_t
  1994                                  ; Ident arg
  1995                                  ; Ident in
  1996                                  ; Ident out
  1997                                  ; Ident max
  1998                                  ; Ident callBack
  1999                                  ; Ident descCcb_t
  2000                                  ; Ident ccb_t
  2001                                  ; Ident inicCcb
  2002                                  ; Ident ccb
  2003                                  ; Ident encolarCcb
  2004                                  ; Ident cb
  2005                                  ; Ident desencolarCcb
  2006                                  ; Ident eliminarCcb
  2007                                  ; Ident eliminarSegCcb
  2008                                  ; Ident segmento
  2009                                  ; Ident vaciarCcb
  2010                                  ; Ident atenderCcb
  2011                                  ; Ident libre
  2012                                  ; Ident preparado
  2013                                  ; Ident ejecutandose
  2014                                  ; Ident bloqueado
  2015                                  ; Ident estado_t
  2016                                  ; Ident modoAp
  2017                                  ; Ident dfs
  2018                                  ; Ident dfa_t
  2019                                  ; Ident pid
  2020                                  ; Ident noStatus
  2021                                  ; Ident status
  2022                                  ; Ident ppindx
  2023                                  ; Ident hpindx
  2024                                  ; Ident c2cHijos
  2025                                  ; Ident c2cThreads
  2026                                  ; Ident CSProc
  2027                                  ; Ident tamCodigo
  2028                                  ; Ident desplBSS
  2029                                  ; Ident desplPila
  2030                                  ; Ident tamFichero
  2031                                  ; Ident programa
  2032                                  ; Ident comando
  2033                                  ; Ident nfa
  2034                                  ; Ident tfa
  2035                                  ; Ident uid
  2036                                  ; Ident gid
  2037                                  ; Ident descProceso_t
  2038                                  ; Ident tid
  2039                                  ; Ident estado
  2040                                  ; Ident esperandoPor
  2041                                  ; Ident trama
  2042                                  ; Ident ptindx
  2043                                  ; Ident htindx
  2044                                  ; Ident pindx
  2045                                  ; Ident SSThread
  2046                                  ; Ident SP0
  2047                                  ; Ident descThread_t
  2048                                  ; Ident flibre
  2049                                  ; Ident fRegular
  2050                                  ; Ident fedBloques
  2051                                  ; Ident fedCaracteres
  2052                                  ; Ident tuberia
  2053                                  ; Ident tipoFichero_t
  2054                                  ; Ident tipo
  2055                                  ; Ident rindx
  2056                                  ; Ident menor
  2057                                  ; Ident shareMode
  2058                                  ; Ident contAp_L
  2059                                  ; Ident contAp_E
  2060                                  ; Ident descFichero_t
  2061                                  ; Ident rLibre
  2062                                  ; Ident rDCaracteres
  2063                                  ; Ident rDBloques
  2064                                  ; Ident rTuberia
  2065                                  ; Ident rGP
  2066                                  ; Ident rGM
  2067                                  ; Ident rSF
  2068                                  ; Ident rOtro
  2069                                  ; Ident tipoRecurso_t
  2070                                  ; Ident open_t
  2071                                  ; Ident release_t
  2072                                  ; Ident read_t
  2073                                  ; Ident dir
  2074                                  ; Ident nbytes
  2075                                  ; Ident aio_read_t
  2076                                  ; Ident write_t
  2077                                  ; Ident aio_write_t
  2078                                  ; Ident lseek_t
  2079                                  ; Ident fcntl_t
  2080                                  ; Ident cmd
  2081                                  ; Ident ioctl_t
  2082                                  ; Ident request
  2083                                  ; Ident eliminar_t
  2084                                  ; Ident tindx
  2085                                  ; Ident c2cFichRec
  2086                                  ; Ident numVI
  2087                                  ; Ident nVInt
  2088                                  ; Ident irq
  2089                                  ; Ident isr
  2090                                  ; Ident open
  2091                                  ; Ident release
  2092                                  ; Ident read
  2093                                  ; Ident aio_read
  2094                                  ; Ident write
  2095                                  ; Ident aio_write
  2096                                  ; Ident lseek
  2097                                  ; Ident fcntl
  2098                                  ; Ident ioctl
  2099                                  ; Ident eliminar
  2100                                  ; Ident descRecurso_t
  2101                                  ; Ident SP0_So1
  2102                                  ; Ident IMR
  2103                                  ; Ident modoSO1
  2104                                  ; Ident ptrDebugWord
  2105                                  ; Ident info_t
  2106                                  ; Ident signatura
  2107                                  ; Ident bytesUltSector
  2108                                  ; Ident sectores
  2109                                  ; Ident numDirReub
  2110                                  ; Ident numParCabecera
  2111                                  ; Ident minAlloc
  2112                                  ; Ident maxAlloc
  2113                                  ; Ident SS0
  2114                                  ; Ident checkSum
  2115                                  ; Ident IP0
  2116                                  ; Ident CS0
  2117                                  ; Ident offTablaReub
  2118                                  ; Ident numOverlay
  2119                                  ; Ident cabecera_t
  2120                                  ; Ident Libres
  2121                                  ; Ident Ocupados
  2122                                  ; Ident e2DescProceso
  2123                                  ; Ident e2DescThread
  2124                                  ; Ident e2DescFichero
  2125                                  ; Ident e2DescRecurso
  2126                                  ; Ident e2Hijos
  2127                                  ; Ident e2Threads
  2128                                  ; Ident e2Preparados
  2129                                  ; Ident e2Urgentes
  2130                                  ; Ident e2POrdenados
  2131                                  ; Ident e2TDormidos
  2132                                  ; Ident e2FichRec
  2133                                  ; Ident e2PFR_t
  2134                                  ; Ident DPLibres
  2135                                  ; Ident DPOcupados
  2136                                  ; Ident DTLibres
  2137                                  ; Ident DTOcupados
  2138                                  ; Ident TPreparados
  2139                                  ; Ident TUrgentes
  2140                                  ; Ident POrdenados
  2141                                  ; Ident TDormidos
  2142                                  ; Ident DFLibres
  2143                                  ; Ident DFOcupados
  2144                                  ; Ident DRLibres
  2145                                  ; Ident DROcupados
  2146                                  ; Ident numColasPFR
  2147                                  ; Ident cPFR_t
  2148                                  ; Ident sigThread_t
  2149                                  ; Ident activarThread_t
  2150                                  ; Ident buscarNuevoThreadActual_t
  2151                                  ; Ident bloquearThreadActual_t
  2152                                  ; Ident ptrIndProcesoActual
  2153                                  ; Ident ptrIndThreadActual
  2154                                  ; Ident ptrTramaThread
  2155                                  ; Ident ptrActivarAlEpilogo
  2156                                  ; Ident ptrDescProceso
  2157                                  ; Ident tamDescProceso
  2158                                  ; Ident ptrDescThread
  2159                                  ; Ident tamDescThread
  2160                                  ; Ident ptrDescFichero
  2161                                  ; Ident ptrDescRecurso
  2162                                  ; Ident ptrC2cPFR
  2163                                  ; Ident ptrE2PFR
  2164                                  ; Ident ptrNivelActivacionSO1H
  2165                                  ; Ident ptrEnHalt
  2166                                  ; Ident ptrHayTic
  2167                                  ; Ident ptrCcbAlEpilogo
  2168                                  ; Ident ptrSS_Thread
  2169                                  ; Ident ptrSP_Thread
  2170                                  ; Ident ptrSS_Kernel
  2171                                  ; Ident ptrSP0_Kernel
  2172                                  ; Ident SP0_SO1H
  2173                                  ; Ident ptrContRodajas
  2174                                  ; Ident ptrContTicsRodaja
  2175                                  ; Ident ptrVIOrg
  2176                                  ; Ident sigThread
  2177                                  ; Ident activarThread
  2178                                  ; Ident buscarNuevoThreadActual
  2179                                  ; Ident bloquearThreadActual
  2180                                  ; Ident ptrListaLibres
  2181                                  ; Ident ptrTamBloqueMax
  2182                                  ; Ident descSO1H_t
  2183                                  ; Ident startBin
  2184                                  ; Ident unidadBIOS
  2185                                  ; Ident CS_SO1H
  2186                                  ; Ident RO_SO1H
  2187                                  ; Ident DS_SO1H
  2188                                  ; Ident BSS_SO1H
  2189                                  ; Ident SS_SO1H
  2190                                  ; Ident SS_Kernel
  2191                                  ; Ident IMRInicial
  2192                                  ; Ident obtenerMapa
  2193                                  ; Ident descProcesoExt_t
  2194                                  ; Ident descThreadExt_t
  2195                                  ; Ident descProceso
  2196                                  ; Ident descThread
  2197                                  ; Ident descFichero
  2198                                  ; Ident descRecurso
  2199                                  ; Ident c2cPFR
  2200                                  ; Ident e2PFR
  2201                                  ; Ident descCcbAlEpilogo
  2202                                  ; Ident ccbAlEpilogo
  2203                                  ; Ident tramaThread
  2204                                  ; Ident tramaTarea
  2205                                  ; Ident indThreadActual
  2206                                  ; Ident indProcesoActual
  2207                                  ; Ident indThreadDeSuperficie
  2208                                  ; Ident contRodajas
  2209                                  ; Ident contTicsRodaja
  2210                                  ; Ident contadorTimer00
  2211                                  ; Ident contOcioso
  2212                                  ; Ident nuevoPid
  2213                                  ; Ident nuevoTid
  2214                                  ; Ident indice
  2215                                  ; Ident registrarEnPOrdenados
  2216                                  ; Ident crearThread
  2217                                  ; Ident funcion
  2218                                  ; Ident crearProceso
  2219                                  ; Ident tamFich
  2220                                  ; Ident inicProcesos
  2221                                  ; Ident resetPids
  2222                                  ; Ident resetTids
  2223                                  ; Ident terminarThreadIndx
  2224                                  ; Ident eliminarThreadIndx
  2225                                  ; Ident terminarProcIndx
  2226                                  ; Ident eliminarProcIndx
  2227                                  ; Ident matarThreadIndx
  2228                                  ; Ident matarProcIndx
  2229                                  ; Ident link_procs
  2230                                  ; Ident tamBloqueMax
  2231                                  ; Ident listaLibres
  2232                                  ; Ident k_buscarBloque
  2233                                  ; Ident k_devolverBloque
  2234                                  ; Ident rec_gm
  2235                                  ; Ident inicGM
  2236                                  ; Ident mostrarListaLibres
  2237                                  ; Ident link_gm_k
  2238                                  ; Bytes used: 5868/16384
  2239                                  
  2240                                  ; Next label number: 100
  2241                                  ; Compilation succeeded.
