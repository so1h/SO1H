     1                                  bits 16
     2                                  
     3                                  ; RPN'ized expression: "17 "
     4                                  ; Expanded expression: "17 "
     5                                  ; Expression value: 17
     6                                  ; glb dig : [17u] char
     7                                  ; glb intptr_t : int
     8                                  ; glb uintptr_t : unsigned
     9                                  ; glb intmax_t : int
    10                                  ; glb uintmax_t : unsigned
    11                                  ; glb int8_t : signed char
    12                                  ; glb int_least8_t : signed char
    13                                  ; glb int_fast8_t : signed char
    14                                  ; glb uint8_t : unsigned char
    15                                  ; glb uint_least8_t : unsigned char
    16                                  ; glb uint_fast8_t : unsigned char
    17                                  ; glb int16_t : short
    18                                  ; glb int_least16_t : short
    19                                  ; glb int_fast16_t : short
    20                                  ; glb uint16_t : unsigned short
    21                                  ; glb uint_least16_t : unsigned short
    22                                  ; glb uint_fast16_t : unsigned short
    23                                  ; glb int32_t : int
    24                                  ; glb int_least32_t : int
    25                                  ; glb int_fast32_t : int
    26                                  ; glb uint32_t : unsigned
    27                                  ; glb uint_least32_t : unsigned
    28                                  ; glb uint_fast32_t : unsigned
    29                                  ; glb imaxdiv_t : struct <something>
    30                                  ; glb bool_t : int
    31                                  ; glb pointer_t : * unsigned char
    32                                  ; glb funcion_t : * (
    33                                  ; prm     <something> : * void
    34                                  ;     ) * void
    35                                  ; glb manejador_t : * (void) void
    36                                  ; glb rti_t : * (void) void
    37                                  ; glb isr_t : * (void) void
    38                                  ; glb handler_t : * (void) void
    39                                  ; glb retardarThread_t : * (void) int
    40                                  ; glb ptrTVI_t : * * (void) void
    41                                  ; glb modoSO1_t : int
    42                                  ; glb lh_t : struct <something>
    43                                  ; glb address_t : struct <something>
    44                                  ; glb uPtrAdr_t : union <something>
    45                                  ; glb pid_t : int
    46                                  ; glb tid_t : int
    47                                  ; glb uid_t : int
    48                                  ; glb gid_t : int
    49                                  ; glb pindx_t : int
    50                                  ; glb tindx_t : int
    51                                  ; glb df_t : int
    52                                  ; glb dfs_t : int
    53                                  ; glb rindx_t : int
    54                                  ; glb inportb : (
    55                                  ; prm     port : unsigned short
    56                                  ;     ) unsigned char
    57                                  ; glb inport : (
    58                                  ; prm     port : unsigned short
    59                                  ;     ) unsigned short
    60                                  ; glb outport : (
    61                                  ; prm     port : unsigned short
    62                                  ; prm     val : unsigned short
    63                                  ;     ) void
    64                                  ; glb outportb : (
    65                                  ; prm     port : unsigned short
    66                                  ; prm     val : unsigned char
    67                                  ;     ) void
    68                                  ; glb inportb_r : (
    69                                  ; prm     port : unsigned char
    70                                  ;     ) unsigned char
    71                                  ; glb outportb_r : (
    72                                  ; prm     port : unsigned char
    73                                  ; prm     val : unsigned char
    74                                  ;     ) void
    75                                  ; glb contadorTimer0 : (void) unsigned short
    76                                  ; glb size_t : unsigned
    77                                  ; glb memset : (
    78                                  ; prm     <something> : * void
    79                                  ; prm     <something> : int
    80                                  ; prm     <something> : unsigned
    81                                  ;     ) * void
    82                                  ; glb memcpy : (
    83                                  ; prm     <something> : * void
    84                                  ; prm     <something> : * void
    85                                  ; prm     <something> : unsigned
    86                                  ;     ) * void
    87                                  ; glb memmove : (
    88                                  ; prm     <something> : * void
    89                                  ; prm     <something> : * void
    90                                  ; prm     <something> : unsigned
    91                                  ;     ) * void
    92                                  ; glb memchr : (
    93                                  ; prm     <something> : * char
    94                                  ; prm     <something> : int
    95                                  ; prm     <something> : unsigned
    96                                  ;     ) * char
    97                                  ; glb memcmp : (
    98                                  ; prm     <something> : * void
    99                                  ; prm     <something> : * void
   100                                  ; prm     <something> : unsigned
   101                                  ;     ) int
   102                                  ; glb strcpy : (
   103                                  ; prm     <something> : * char
   104                                  ; prm     <something> : * char
   105                                  ;     ) * char
   106                                  ; glb strncpy : (
   107                                  ; prm     <something> : * char
   108                                  ; prm     <something> : * char
   109                                  ; prm     <something> : unsigned
   110                                  ;     ) * char
   111                                  ; glb strxfrm : (
   112                                  ; prm     <something> : * char
   113                                  ; prm     <something> : * char
   114                                  ; prm     <something> : unsigned
   115                                  ;     ) unsigned
   116                                  ; glb strcat : (
   117                                  ; prm     <something> : * char
   118                                  ; prm     <something> : * char
   119                                  ;     ) * char
   120                                  ; glb strncat : (
   121                                  ; prm     <something> : * char
   122                                  ; prm     <something> : * char
   123                                  ; prm     <something> : unsigned
   124                                  ;     ) * char
   125                                  ; glb strlen : (
   126                                  ; prm     <something> : * char
   127                                  ;     ) unsigned
   128                                  ; glb strchr : (
   129                                  ; prm     <something> : * char
   130                                  ; prm     <something> : int
   131                                  ;     ) * char
   132                                  ; glb strrchr : (
   133                                  ; prm     <something> : * char
   134                                  ; prm     <something> : int
   135                                  ;     ) * char
   136                                  ; glb strstr : (
   137                                  ; prm     <something> : * char
   138                                  ; prm     <something> : * char
   139                                  ;     ) * char
   140                                  ; glb strspn : (
   141                                  ; prm     <something> : * char
   142                                  ; prm     <something> : * char
   143                                  ;     ) unsigned
   144                                  ; glb strcspn : (
   145                                  ; prm     <something> : * char
   146                                  ; prm     <something> : * char
   147                                  ;     ) unsigned
   148                                  ; glb strpbrk : (
   149                                  ; prm     <something> : * char
   150                                  ; prm     <something> : * char
   151                                  ;     ) * char
   152                                  ; glb strtok : (
   153                                  ; prm     <something> : * char
   154                                  ; prm     <something> : * char
   155                                  ;     ) * char
   156                                  ; glb strcmp : (
   157                                  ; prm     <something> : * char
   158                                  ; prm     <something> : * char
   159                                  ;     ) int
   160                                  ; glb strncmp : (
   161                                  ; prm     <something> : * char
   162                                  ; prm     <something> : * char
   163                                  ; prm     <something> : unsigned
   164                                  ;     ) int
   165                                  ; glb strcoll : (
   166                                  ; prm     <something> : * char
   167                                  ; prm     <something> : * char
   168                                  ;     ) int
   169                                  ; glb strerror : (
   170                                  ; prm     <something> : int
   171                                  ;     ) * char
   172                                  ; glb modoAp_t : unsigned short
   173                                  ; glb startBin : (void) void
   174                                  ; glb modoSO1 : (void) int
   175                                  ; glb unidadBIOS : (void) unsigned char
   176                                  ; glb CS_SO1H : unsigned short
   177                                  ; glb RO_SO1H : unsigned short
   178                                  ; glb DS_SO1H : unsigned short
   179                                  ; glb BSS_SO1H : unsigned short
   180                                  ; glb SS_SO1H : unsigned short
   181                                  ; glb SS_Kernel : unsigned short
   182                                  ; glb IMRInicial : unsigned short
   183                                  ; glb obtenerMapa : (void) void
   184                                  ; glb _start : (void) void
   185                                  ; glb __start__ : (void) void
   186                                  ; glb main : (void) void
   187                                  ; glb finProceso : (void) void
   188                                  ; glb finThread : (void) void
   189                                  ; glb tramaDWords_t : struct <something>
   190                                  ; glb tramaWords_t : struct <something>
   191                                  ; RPN'ized expression: "2 "
   192                                  ; Expanded expression: "2 "
   193                                  ; Expression value: 2
   194                                  ; RPN'ized expression: "2 "
   195                                  ; Expanded expression: "2 "
   196                                  ; Expression value: 2
   197                                  ; RPN'ized expression: "2 "
   198                                  ; Expanded expression: "2 "
   199                                  ; Expression value: 2
   200                                  ; RPN'ized expression: "2 "
   201                                  ; Expanded expression: "2 "
   202                                  ; Expression value: 2
   203                                  ; glb tramaBytes_t : struct <something>
   204                                  ; glb trama_t : union <something>
   205                                  ; RPN'ized expression: "8 "
   206                                  ; Expanded expression: "8 "
   207                                  ; Expression value: 8
   208                                  ; glb bloque_t : struct <something>
   209                                  ; glb ptrBloque_t : * struct <something>
   210                                  ; glb dobleEnlace_t : struct <something>
   211                                  ; glb c2c_t : struct <something>
   212                                  ; glb posicionC2c : (
   213                                  ; prm     i : int
   214                                  ; prm     c2c : struct <something>
   215                                  ;     ) int
   216                                  ; glb eliminarC2c : (
   217                                  ; prm     i : int
   218                                  ; prm     c2c : struct <something>
   219                                  ;     ) void
   220                                  ; glb apilarC2c : (
   221                                  ; prm     i : int
   222                                  ; prm     c2c : struct <something>
   223                                  ;     ) void
   224                                  ; glb encolarC2c : (
   225                                  ; prm     i : int
   226                                  ; prm     c2c : struct <something>
   227                                  ;     ) void
   228                                  ; glb desencolarC2c : (
   229                                  ; prm     c2c : struct <something>
   230                                  ;     ) int
   231                                  ; glb inicializarC2c : (
   232                                  ; prm     c2c : * struct <something>
   233                                  ; prm     e : * struct <something>
   234                                  ; prm     cabecera : int
   235                                  ; prm     compartida : int
   236                                  ;     ) void
   237                                  ; glb ptrC2c_t : * struct <something>
   238                                  ; glb posicionPC2c : (
   239                                  ; prm     i : int
   240                                  ; prm     c2c : * struct <something>
   241                                  ;     ) int
   242                                  ; glb eliminarPC2c : (
   243                                  ; prm     i : int
   244                                  ; prm     ptrC2c : * struct <something>
   245                                  ;     ) void
   246                                  ; glb apilarPC2c : (
   247                                  ; prm     i : int
   248                                  ; prm     ptrC2c : * struct <something>
   249                                  ;     ) void
   250                                  ; glb encolarPC2c : (
   251                                  ; prm     i : int
   252                                  ; prm     ptrC2c : * struct <something>
   253                                  ;     ) void
   254                                  ; glb desencolarPC2c : (
   255                                  ; prm     ptrC2c : * struct <something>
   256                                  ;     ) int
   257                                  ; glb inicializarPC2c : (
   258                                  ; prm     ptrC2c : * struct <something>
   259                                  ; prm     e : * struct <something>
   260                                  ; prm     cabecera : int
   261                                  ; prm     compartida : int
   262                                  ;     ) void
   263                                  ; glb callBack_t : * (
   264                                  ; prm     arg : * void
   265                                  ;     ) int
   266                                  ; RPN'ized expression: "10 "
   267                                  ; Expanded expression: "10 "
   268                                  ; Expression value: 10
   269                                  ; glb descCcb_t : struct <something>
   270                                  ; glb ccb_t : * struct <something>
   271                                  ; glb inicCcb : (
   272                                  ; prm     ccb : * struct <something>
   273                                  ; prm     max : unsigned short
   274                                  ;     ) int
   275                                  ; glb encolarCcb : (
   276                                  ; prm     cb : * (
   277                                  ; prm         arg : * void
   278                                  ;         ) int
   279                                  ; prm     ccb : * struct <something>
   280                                  ;     ) int
   281                                  ; glb desencolarCcb : (
   282                                  ; prm     ccb : * struct <something>
   283                                  ;     ) * (
   284                                  ; prm     arg : * void
   285                                  ;     ) int
   286                                  ; glb eliminarCcb : (
   287                                  ; prm     cb : * (
   288                                  ; prm         arg : * void
   289                                  ;         ) int
   290                                  ; prm     ccb : * struct <something>
   291                                  ;     ) int
   292                                  ; glb eliminarSegCcb : (
   293                                  ; prm     segmento : unsigned short
   294                                  ; prm     ccb : * struct <something>
   295                                  ;     ) int
   296                                  ; glb vaciarCcb : (
   297                                  ; prm     ccb : * struct <something>
   298                                  ;     ) int
   299                                  ; glb atenderCcb : (
   300                                  ; prm     ccb : * struct <something>
   301                                  ;     ) int
   302                                  ; glb estado_t : int
   303                                  ; glb dfa_t : struct <something>
   304                                  ; RPN'ized expression: "12 "
   305                                  ; Expanded expression: "12 "
   306                                  ; Expression value: 12
   307                                  ; RPN'ized expression: "80 "
   308                                  ; Expanded expression: "80 "
   309                                  ; Expression value: 80
   310                                  ; RPN'ized expression: "10 "
   311                                  ; Expanded expression: "10 "
   312                                  ; Expression value: 10
   313                                  ; glb descProceso_t : struct <something>
   314                                  ; glb descThread_t : struct <something>
   315                                  ; glb tipoFichero_t : int
   316                                  ; RPN'ized expression: "9 "
   317                                  ; Expanded expression: "9 "
   318                                  ; Expression value: 9
   319                                  ; glb descFichero_t : struct <something>
   320                                  ; glb tipoRecurso_t : int
   321                                  ; glb open_t : * (
   322                                  ; prm     dfs : int
   323                                  ; prm     modo : unsigned short
   324                                  ;     ) int
   325                                  ; glb release_t : * (
   326                                  ; prm     dfs : int
   327                                  ;     ) int
   328                                  ; glb read_t : * (
   329                                  ; prm     dfs : int
   330                                  ; prm     dir : * unsigned char
   331                                  ; prm     nbytes : unsigned short
   332                                  ;     ) int
   333                                  ; glb aio_read_t : * (
   334                                  ; prm     dfs : int
   335                                  ; prm     dir : * unsigned char
   336                                  ; prm     nbytes : unsigned short
   337                                  ;     ) int
   338                                  ; glb write_t : * (
   339                                  ; prm     dfs : int
   340                                  ; prm     dir : * unsigned char
   341                                  ; prm     nbytes : unsigned short
   342                                  ;     ) int
   343                                  ; glb aio_write_t : * (
   344                                  ; prm     dfs : int
   345                                  ; prm     dir : * unsigned char
   346                                  ; prm     nbytes : unsigned short
   347                                  ;     ) int
   348                                  ; glb lseek_t : * (
   349                                  ; prm     dfs : int
   350                                  ; prm     pos : int
   351                                  ; prm     whence : unsigned short
   352                                  ;     ) int
   353                                  ; glb fcntl_t : * (
   354                                  ; prm     dfs : int
   355                                  ; prm     cmd : unsigned short
   356                                  ; prm     arg : unsigned short
   357                                  ;     ) int
   358                                  ; glb ioctl_t : * (
   359                                  ; prm     dfs : int
   360                                  ; prm     request : unsigned short
   361                                  ; prm     arg : unsigned short
   362                                  ;     ) int
   363                                  ; glb eliminar_t : * (
   364                                  ; prm     pindx : int
   365                                  ;     ) int
   366                                  ; RPN'ized expression: "12 "
   367                                  ; Expanded expression: "12 "
   368                                  ; Expression value: 12
   369                                  ; RPN'ized expression: "2 "
   370                                  ; Expanded expression: "2 "
   371                                  ; Expression value: 2
   372                                  ; RPN'ized expression: "2 "
   373                                  ; Expanded expression: "2 "
   374                                  ; Expression value: 2
   375                                  ; RPN'ized expression: "2 "
   376                                  ; Expanded expression: "2 "
   377                                  ; Expression value: 2
   378                                  ; glb descRecurso_t : struct <something>
   379                                  ; glb info_t : struct <something>
   380                                  ; glb cabecera_t : struct <something>
   381                                  ; RPN'ized expression: "16 1 + "
   382                                  ; Expanded expression: "17 "
   383                                  ; Expression value: 17
   384                                  ; RPN'ized expression: "16 2 + "
   385                                  ; Expanded expression: "18 "
   386                                  ; Expression value: 18
   387                                  ; RPN'ized expression: "2010 1 + "
   388                                  ; Expanded expression: "2011 "
   389                                  ; Expression value: 2011
   390                                  ; RPN'ized expression: "2010 2 + "
   391                                  ; Expanded expression: "2012 "
   392                                  ; Expression value: 2012
   393                                  ; RPN'ized expression: "20 1 + "
   394                                  ; Expanded expression: "21 "
   395                                  ; Expression value: 21
   396                                  ; RPN'ized expression: "20 2 + "
   397                                  ; Expanded expression: "22 "
   398                                  ; Expression value: 22
   399                                  ; RPN'ized expression: "14 1 + "
   400                                  ; Expanded expression: "15 "
   401                                  ; Expression value: 15
   402                                  ; RPN'ized expression: "14 2 + "
   403                                  ; Expanded expression: "16 "
   404                                  ; Expression value: 16
   405                                  ; RPN'ized expression: "16 16 + "
   406                                  ; Expanded expression: "32 "
   407                                  ; Expression value: 32
   408                                  ; RPN'ized expression: "2010 16 + "
   409                                  ; Expanded expression: "2026 "
   410                                  ; Expression value: 2026
   411                                  ; RPN'ized expression: "2010 1 + "
   412                                  ; Expanded expression: "2011 "
   413                                  ; Expression value: 2011
   414                                  ; RPN'ized expression: "2010 1 + "
   415                                  ; Expanded expression: "2011 "
   416                                  ; Expression value: 2011
   417                                  ; RPN'ized expression: "16 1 + "
   418                                  ; Expanded expression: "17 "
   419                                  ; Expression value: 17
   420                                  ; RPN'ized expression: "2010 1 + "
   421                                  ; Expanded expression: "2011 "
   422                                  ; Expression value: 2011
   423                                  ; RPN'ized expression: "20 14 + "
   424                                  ; Expanded expression: "34 "
   425                                  ; Expression value: 34
   426                                  ; glb e2PFR_t : struct <something>
   427                                  ; glb cPFR_t : int
   428                                  ; glb sigThread_t : * () int
   429                                  ; glb activarThread_t : * (
   430                                  ; prm     tindx : int
   431                                  ;     ) void
   432                                  ; glb buscarNuevoThreadActual_t : * (void) void
   433                                  ; glb bloquearThreadActual_t : * (
   434                                  ; prm     rindx : int
   435                                  ;     ) void
   436                                  ; glb descSO1H_t : struct <something>
   437                                  ; glb SS_Thread : unsigned short
   438                                  ; glb SP_Thread : unsigned short
   439                                  ; glb SS_Tarea : unsigned short
   440                                  ; glb SP_Tarea : unsigned short
   441                                  ; glb nivelActivacionSO1H : int
   442                                  ; glb nVIntActual : int
   443                                  ; glb enHalt : int
   444                                  ; glb activarAlEpilogo1 : int
   445                                  ; glb hayTic : int
   446                                  ; glb setKernelStack : (void) void
   447                                  ; glb setThreadStack : (
   448                                  ; prm     SS_Thread : unsigned short
   449                                  ; prm     SP_Thread : unsigned short
   450                                  ;     ) void
   451                                  ; glb reg_DL : (void) unsigned
   452                                  ; glb prepararDesbloqueadosUrgentes : (void) void
   453                                  ; glb buscarNuevoThreadActual : (void) void
   454                                  ; glb bloquearThreadActual : (
   455                                  ; prm     rindx : int
   456                                  ;     ) void
   457                                  ; glb tamBloqueMax : unsigned short
   458                                  ; glb listaLibres : * struct <something>
   459                                  ; glb k_buscarBloque : (
   460                                  ; prm     tam : unsigned short
   461                                  ;     ) unsigned short
   462                                  ; glb k_devolverBloque : (
   463                                  ; prm     segmento : unsigned short
   464                                  ; prm     tam : unsigned short
   465                                  ;     ) int
   466                                  ; glb rec_gm : int
   467                                  ; glb inicGM : (void) void
   468                                  ; glb mostrarListaLibres : (void) void
   469                                  ; glb link_gm_k : (void) void
   470                                  ; RPN'ized expression: "12 "
   471                                  ; Expanded expression: "12 "
   472                                  ; Expression value: 12
   473                                  ; RPN'ized expression: "80 "
   474                                  ; Expanded expression: "80 "
   475                                  ; Expression value: 80
   476                                  ; RPN'ized expression: "10 "
   477                                  ; Expanded expression: "10 "
   478                                  ; Expression value: 10
   479                                  ; glb descProcesoExt_t : struct <something>
   480                                  ; glb descThreadExt_t : struct <something>
   481                                  ; RPN'ized expression: "16 "
   482                                  ; Expanded expression: "16 "
   483                                  ; Expression value: 16
   484                                  ; glb descProceso : [16u] struct <something>
   485                                  ; RPN'ized expression: "2010 "
   486                                  ; Expanded expression: "2010 "
   487                                  ; Expression value: 2010
   488                                  ; glb descThread : [2010u] struct <something>
   489                                  ; RPN'ized expression: "20 "
   490                                  ; Expanded expression: "20 "
   491                                  ; Expression value: 20
   492                                  ; glb descFichero : [20u] struct <something>
   493                                  ; RPN'ized expression: "14 "
   494                                  ; Expanded expression: "14 "
   495                                  ; Expression value: 14
   496                                  ; glb descRecurso : [14u] struct <something>
   497                                  ; RPN'ized expression: "numColasPFR "
   498                                  ; Expanded expression: "12 "
   499                                  ; Expression value: 12
   500                                  ; glb c2cPFR : [12u] struct <something>
   501                                  ; glb e2PFR : struct <something>
   502                                  ; glb descCcbAlEpilogo : struct <something>
   503                                  ; glb ccbAlEpilogo : * struct <something>
   504                                  ; glb tramaThread : * union <something>
   505                                  ; glb tramaTarea : * union <something>
   506                                  ; glb indThreadActual : int
   507                                  ; glb indProcesoActual : int
   508                                  ; glb indThreadDeSuperficie : int
   509                                  ; glb contRodajas : unsigned
   510                                  ; glb contTicsRodaja : int
   511                                  ; glb contadorTimer00 : unsigned short
   512                                  ; glb contOcioso : int
   513                                  ; glb nuevoPid : (void) int
   514                                  ; glb nuevoTid : (void) int
   515                                  ; glb indice : (
   516                                  ; prm     tid : int
   517                                  ;     ) int
   518                                  ; glb sigThread : (void) int
   519                                  ; glb activarThread : (
   520                                  ; prm     tindx : int
   521                                  ;     ) int
   522                                  ; glb registrarEnPOrdenados : (
   523                                  ; prm     pindx : int
   524                                  ;     ) void
   525                                  ; glb crearThread : (
   526                                  ; prm     funcion : * (
   527                                  ; prm         <something> : * void
   528                                  ;         ) * void
   529                                  ; prm     SP0 : unsigned short
   530                                  ; prm     arg : * void
   531                                  ; prm     pindx : int
   532                                  ;     ) int
   533                                  ; glb crearProceso : (
   534                                  ; prm     segmento : unsigned short
   535                                  ; prm     tam : unsigned short
   536                                  ; prm     tamFich : unsigned
   537                                  ; prm     programa : * char
   538                                  ; prm     comando : * char
   539                                  ; prm     pindx : int
   540                                  ;     ) int
   541                                  ; glb inicProcesos : (void) void
   542                                  ; glb resetPids : (void) void
   543                                  ; glb resetTids : (void) void
   544                                  ; glb terminarThreadIndx : (
   545                                  ; prm     tindx : int
   546                                  ;     ) int
   547                                  ; glb eliminarThreadIndx : (
   548                                  ; prm     tindx : int
   549                                  ;     ) int
   550                                  ; glb terminarProcIndx : (
   551                                  ; prm     pindx : int
   552                                  ;     ) int
   553                                  ; glb eliminarProcIndx : (
   554                                  ; prm     pindx : int
   555                                  ;     ) int
   556                                  ; glb matarThreadIndx : (
   557                                  ; prm     tindx : int
   558                                  ;     ) int
   559                                  ; glb matarProcIndx : (
   560                                  ; prm     pindx : int
   561                                  ;     ) int
   562                                  ; glb link_procs : (void) void
   563                                  ; glb tipoOrdenador : (void) unsigned char
   564                                  ; glb rebootLegacy : (void) void
   565                                  ; glb tipoTeclado : (void) unsigned char
   566                                  ; glb leerTeclaBIOS : (void) unsigned short
   567                                  ; glb leerTeclaExtBIOS : (void) unsigned short
   568                                  ; glb teclaListaBIOS : (void) unsigned short
   569                                  ; glb leerTeclaListaBDA : (void) unsigned short
   570                                  ; glb teclaListaBDA : (void) unsigned short
   571                                  ; glb printCarBIOS : (
   572                                  ; prm     car : char
   573                                  ;     ) int
   574                                  ; glb printCarPagBIOS : (
   575                                  ; prm     car : char
   576                                  ; prm     pag : unsigned char
   577                                  ;     ) int
   578                                  ; glb printCarAtrPagBIOS : (
   579                                  ; prm     car : char
   580                                  ; prm     atr : unsigned char
   581                                  ; prm     pag : unsigned char
   582                                  ;     ) int
   583                                  ; glb printLnBIOS : (void) int
   584                                  ; glb printStrBIOS : (
   585                                  ; prm     str : * char
   586                                  ;     ) int
   587                                  ; glb printStrHastaBIOS : (
   588                                  ; prm     str : * char
   589                                  ; prm     n : unsigned short
   590                                  ; prm     lleno : int
   591                                  ;     ) int
   592                                  ; glb printDecBIOS : (
   593                                  ; prm     num : unsigned short
   594                                  ; prm     l : unsigned short
   595                                  ;     ) int
   596                                  ; glb printLDecBIOS : (
   597                                  ; prm     num : unsigned
   598                                  ; prm     l : unsigned short
   599                                  ;     ) int
   600                                  ; glb printIntBIOS : (
   601                                  ; prm     num : short
   602                                  ; prm     l : unsigned short
   603                                  ;     ) int
   604                                  ; glb printLIntBIOS : (
   605                                  ; prm     num : int
   606                                  ; prm     l : unsigned short
   607                                  ;     ) int
   608                                  ; glb printHexBIOS : (
   609                                  ; prm     num : unsigned short
   610                                  ; prm     l : unsigned short
   611                                  ;     ) int
   612                                  ; glb printLHexBIOS : (
   613                                  ; prm     num : unsigned
   614                                  ; prm     l : unsigned short
   615                                  ;     ) int
   616                                  ; glb printBinBIOS : (
   617                                  ; prm     num : unsigned short
   618                                  ; prm     l : unsigned short
   619                                  ;     ) int
   620                                  ; glb printLBinBIOS : (
   621                                  ; prm     num : unsigned
   622                                  ; prm     l : unsigned short
   623                                  ;     ) int
   624                                  ; glb printPtrBIOS : (
   625                                  ; prm     ptr : * unsigned char
   626                                  ;     ) int
   627                                  ; glb printByteBIOS : (
   628                                  ; prm     b : unsigned char
   629                                  ;     ) int
   630                                  ; glb printWordBIOS : (
   631                                  ; prm     w : unsigned short
   632                                  ;     ) int
   633                                  ; glb printCadBIOS : (
   634                                  ; prm     cad : * char
   635                                  ;     ) int
   636                                  ; glb esperarTicsBIOS : (
   637                                  ; prm     tics : unsigned short
   638                                  ;     ) void
   639                                  ; glb modoDeVideo : (void) unsigned char
   640                                  ; glb establecerModoDeVideo : (
   641                                  ; prm     modo : unsigned char
   642                                  ;     ) void
   643                                  ; glb paginaActiva : (void) unsigned char
   644                                  ; glb establecerPaginaActiva : (
   645                                  ; prm     num : unsigned char
   646                                  ;     ) void
   647                                  ; glb numPagsVideo : (void) unsigned char
   648                                  ; glb scrollPagBDA : (
   649                                  ; prm     numLineas : unsigned char
   650                                  ; prm     pag : unsigned char
   651                                  ;     ) void
   652                                  ; glb scrollPagBIOS : (
   653                                  ; prm     numLineas : unsigned char
   654                                  ; prm     pag : unsigned char
   655                                  ;     ) void
   656                                  ; glb scrollBIOS : (
   657                                  ; prm     numLineas : unsigned char
   658                                  ;     ) void
   659                                  ; glb goToXYPag : (
   660                                  ; prm     fila : unsigned char
   661                                  ; prm     columna : unsigned char
   662                                  ; prm     pag : unsigned char
   663                                  ;     ) void
   664                                  ; glb goToXYBIOS : (
   665                                  ; prm     fila : unsigned char
   666                                  ; prm     columna : unsigned char
   667                                  ;     ) void
   668                                  ; glb setCursorBIOS : (
   669                                  ; prm     linea1 : unsigned char
   670                                  ; prm     linea2 : unsigned char
   671                                  ;     ) void
   672                                  ; glb ocultaCursorBIOS : (void) void
   673                                  ; glb readXYPagBIOS : (
   674                                  ; prm     fila : * unsigned char
   675                                  ; prm     columna : * unsigned char
   676                                  ; prm     linea1 : * unsigned char
   677                                  ; prm     linea2 : * unsigned char
   678                                  ; prm     pag : unsigned char
   679                                  ;     ) void
   680                                  ; glb readXYBIOS : (
   681                                  ; prm     fila : * unsigned char
   682                                  ; prm     columna : * unsigned char
   683                                  ; prm     linea1 : * unsigned char
   684                                  ; prm     linea2 : * unsigned char
   685                                  ;     ) void
   686                                  ; glb memBIOS : (void) unsigned short
   687                                  ; glb enviarBIOS : (
   688                                  ; prm     car : char
   689                                  ;     ) void
   690                                  ; glb recibirBIOS : (void) char
   691                                  ; glb hayApmBIOS : (
   692                                  ; prm     version : * unsigned short
   693                                  ;     ) int
   694                                  ; glb connectApmBIOS : (void) int
   695                                  ; glb disconnectApmBIOS : (void) int
   696                                  ; glb cpuIdleBIOS : (void) void
   697                                  ; glb cpuBusyBIOS : (void) void
   698                                  ; glb printCarVideo : (
   699                                  ; prm     car : char
   700                                  ;     ) int
   701                                  ; glb printLnVideo : (void) int
   702                                  ; glb printStrVideo : (
   703                                  ; prm     str : * char
   704                                  ;     ) int
   705                                  ; glb printStrHastaVideo : (
   706                                  ; prm     str : * char
   707                                  ; prm     n : unsigned short
   708                                  ; prm     lleno : int
   709                                  ;     ) int
   710                                  ; glb printDecVideo : (
   711                                  ; prm     num : unsigned short
   712                                  ; prm     l : unsigned short
   713                                  ;     ) int
   714                                  ; glb printLDecVideo : (
   715                                  ; prm     num : unsigned
   716                                  ; prm     l : unsigned short
   717                                  ;     ) int
   718                                  ; glb printIntVideo : (
   719                                  ; prm     num : int
   720                                  ; prm     l : unsigned short
   721                                  ;     ) int
   722                                  ; glb printLIntVideo : (
   723                                  ; prm     num : int
   724                                  ; prm     l : unsigned short
   725                                  ;     ) int
   726                                  ; glb printHexVideo : (
   727                                  ; prm     num : unsigned short
   728                                  ; prm     l : unsigned short
   729                                  ;     ) int
   730                                  ; glb printLHexVideo : (
   731                                  ; prm     num : unsigned
   732                                  ; prm     l : unsigned short
   733                                  ;     ) int
   734                                  ; glb printBinVideo : (
   735                                  ; prm     num : unsigned short
   736                                  ; prm     l : unsigned short
   737                                  ;     ) int
   738                                  ; glb printLBinVideo : (
   739                                  ; prm     num : unsigned
   740                                  ; prm     l : unsigned short
   741                                  ;     ) int
   742                                  ; glb printPtrVideo : (
   743                                  ; prm     ptr : * unsigned char
   744                                  ;     ) int
   745                                  ; glb printByteVideo : (
   746                                  ; prm     b : unsigned char
   747                                  ;     ) int
   748                                  ; glb printWordVideo : (
   749                                  ; prm     w : unsigned short
   750                                  ;     ) int
   751                                  ; glb printCadVideo : (
   752                                  ; prm     cad : * char
   753                                  ;     ) int
   754                                  ; glb _start__text : char
   755                                  ; glb _stop__text : char
   756                                  ; glb _start__rodata : char
   757                                  ; glb _stop__rodata : char
   758                                  ; glb _start__data : char
   759                                  ; glb _stop__data : char
   760                                  ; glb _start__bss : char
   761                                  ; glb _stop__bss : char
   762                                  ; glb _start_allcode__ : char
   763                                  ; glb _stop_allcode__ : char
   764                                  ; glb _start_alldata__ : char
   765                                  ; glb _stop_alldata__ : char
   766                                  ; glb mostrarSeccion : (
   767                                  ; prm     start : unsigned
   768                                  ; prm     stop : unsigned
   769                                  ; prm     descripcion : * char
   770                                  ;     ) void
   771                                  ; glb mostrarSecciones : (void) void
   772                                  %define SP0_SO1H 0x8000
   773                                  %define SP0_Kernel  0xA000
   774                                  ; RPN'ized expression: "4 "
   775                                  ; Expanded expression: "4 "
   776                                  ; Expression value: 4
   777                                  ; RPN'ized expression: "12 "
   778                                  ; Expanded expression: "12 "
   779                                  ; Expression value: 12
   780                                  ; glb strSo1h : [4u] [12u] char
   781                                  section .data
   782                                  	global	_strSo1h
   783                                  _strSo1h:
   784                                  ; =
   785 00000000 534F31482E42494E        	db	"SO1H.BIN"
   786 00000008 00<rept>                	times	4 db 0
   787 0000000C 534F31482E455845        	db	"SO1H.EXE"
   788 00000014 00<rept>                	times	4 db 0
   789 00000018 534F31482E534C58        	db	"SO1H.SLX"
   790 00000020 00<rept>                	times	4 db 0
   791 00000024 00<rept>                	times	12 db 0
   792                                  
   793                                  ; RPN'ized expression: "80 "
   794                                  ; Expanded expression: "80 "
   795                                  ; Expression value: 80
   796                                  ; glb comandoSo1a : [80u] char
   797                                  section .data
   798                                  	global	_comandoSo1a
   799                                  _comandoSo1a:
   800                                  ; =
   801 00000030 626F6F742064652064-     	db	"boot de disquete"
   801 00000039 69737175657465     
   802 00000040 00<rept>                	times	64 db 0
   803                                  
   804                                  ; RPN'ized expression: "80 "
   805                                  ; Expanded expression: "80 "
   806                                  ; Expression value: 80
   807                                  ; glb comandoSo1b : [80u] char
   808                                  section .data
   809                                  	global	_comandoSo1b
   810                                  _comandoSo1b:
   811                                  ; =
   812 00000080 534F31482028646573-     	db	"SO1H (desde MSDOS)"
   812 00000089 6465204D53444F5329 
   813 00000092 00<rept>                	times	62 db 0
   814                                  
   815                                  ; glb inicProcesos : (void) void
   816                                  section .text
   817                                  	global	_inicProcesos
   818                                  _inicProcesos:
   819 00000000 6655                    	push	ebp
   820 00000002 660FB7EC                	movzx	ebp, sp
   821 00000006 83EC04                  	 sub	sp,          4
   822                                  ; loc     i : (@-4): int
   823                                  ; loc     <something> : * struct <something>
   824                                  ; RPN'ized expression: "ccbAlEpilogo descCcbAlEpilogo &u (something3) = "
   825                                  ; Expanded expression: "ccbAlEpilogo descCcbAlEpilogo =(4) "
   826                                  ; Fused expression:    "ccbAlEpilogo push-ax descCcbAlEpilogo =(204) **sp ax "
   827                                  section .relod
   828 00000000 [0B000000]              	dd	L4
   829                                  section .text
   830 00000009 66B8                    	db	0x66, 0xB8
   831                                  L4:
   832 0000000B [00000000]              	dd	_ccbAlEpilogo
   833 0000000F 6650                    	push	eax
   834                                  section .relod
   835 00000004 [13000000]              	dd	L5
   836                                  section .text
   837 00000011 66B8                    	db	0x66, 0xB8
   838                                  L5:
   839 00000013 [00000000]              	dd	_descCcbAlEpilogo
   840 00000017 665B                    	pop	ebx
   841 00000019 6689DE                  	mov	esi, ebx
   842 0000001C 66C1CE04                	ror	esi, 4
   843 00000020 8EDE                    	mov	ds, si
   844 00000022 66C1EE1C                	shr	esi, 28
   845 00000026 668904                  	mov	[si], eax
   846                                  ; loc     <something> : * struct <something>
   847                                  ; loc     <something> : * struct <something>
   848                                  ; RPN'ized expression: "( FALSE , 16 , e2PFR &u e2DescProceso -> *u &u Libres -> *u &u (something7) , c2cPFR DPLibres + *u &u (something6) inicializarPC2c ) "
   849                                  ; Expanded expression: " 0  16  e2PFR 0 + 0 +  c2cPFR 0 +  inicializarPC2c ()16 "
   850                                  ; Fused expression:    "( 0 , 16 , e2PFR + ax 0 + ax 0 , c2cPFR + ax 0 , inicializarPC2c )16 "
   851 00000029 666A00                  	push	dword 0
   852 0000002C 666A10                  	push	dword 16
   853                                  section .relod
   854 00000008 [31000000]              	dd	L8
   855                                  section .text
   856 0000002F 66B8                    	db	0x66, 0xB8
   857                                  L8:
   858 00000031 [00000000]              	dd	_e2PFR
   859 00000035 6650                    	push	eax
   860                                  section .relod
   861 0000000C [39000000]              	dd	L9
   862                                  section .text
   863 00000037 66B8                    	db	0x66, 0xB8
   864                                  L9:
   865 00000039 [00000000]              	dd	_c2cPFR
   866 0000003D 6650                    	push	eax
   867 0000003F 9A                      	db	0x9A
   868                                  section .relot
   869 00000000 [40000000]              	dd	L10
   870                                  section .text
   871                                  L10:
   872 00000040 [00000000]              	dd	_inicializarPC2c
   873 00000044 83ECF0                  	sub	sp, -16
   874                                  ; loc     <something> : * struct <something>
   875                                  ; loc     <something> : * struct <something>
   876                                  ; RPN'ized expression: "( TRUE , 16 1 + , e2PFR &u e2DescProceso -> *u &u Ocupados -> *u &u (something12) , c2cPFR DPOcupados + *u &u (something11) inicializarPC2c ) "
   877                                  ; Expanded expression: " 1  17  e2PFR 0 + 0 +  c2cPFR 16 +  inicializarPC2c ()16 "
   878                                  ; Fused expression:    "( 1 , 17 , e2PFR + ax 0 + ax 0 , c2cPFR + ax 16 , inicializarPC2c )16 "
   879 00000047 666A01                  	push	dword 1
   880 0000004A 666A11                  	push	dword 17
   881                                  section .relod
   882 00000010 [4F000000]              	dd	L13
   883                                  section .text
   884 0000004D 66B8                    	db	0x66, 0xB8
   885                                  L13:
   886 0000004F [00000000]              	dd	_e2PFR
   887 00000053 6650                    	push	eax
   888                                  section .relod
   889 00000014 [57000000]              	dd	L14
   890                                  section .text
   891 00000055 66B8                    	db	0x66, 0xB8
   892                                  L14:
   893 00000057 [00000000]              	dd	_c2cPFR
   894 0000005B 6683C010                	add	eax, 16
   895 0000005F 6650                    	push	eax
   896 00000061 9A                      	db	0x9A
   897                                  section .relot
   898 00000004 [62000000]              	dd	L15
   899                                  section .text
   900                                  L15:
   901 00000062 [00000000]              	dd	_inicializarPC2c
   902 00000066 83ECF0                  	sub	sp, -16
   903                                  ; loc     <something> : * struct <something>
   904                                  ; loc     <something> : * struct <something>
   905                                  ; RPN'ized expression: "( FALSE , 2010 , e2PFR &u e2DescThread -> *u &u Libres -> *u &u (something17) , c2cPFR DTLibres + *u &u (something16) inicializarPC2c ) "
   906                                  ; Expanded expression: " 0  2010  e2PFR 216 + 0 +  c2cPFR 32 +  inicializarPC2c ()16 "
   907                                  ; Fused expression:    "( 0 , 2010 , e2PFR + ax 216 + ax 0 , c2cPFR + ax 32 , inicializarPC2c )16 "
   908 00000069 666A00                  	push	dword 0
   909 0000006C 6668DA070000            	push	dword 2010
   910                                  section .relod
   911 00000018 [74000000]              	dd	L18
   912                                  section .text
   913 00000072 66B8                    	db	0x66, 0xB8
   914                                  L18:
   915 00000074 [00000000]              	dd	_e2PFR
   916 00000078 6605D8000000            	add	eax, 216
   917 0000007E 6650                    	push	eax
   918                                  section .relod
   919 0000001C [82000000]              	dd	L19
   920                                  section .text
   921 00000080 66B8                    	db	0x66, 0xB8
   922                                  L19:
   923 00000082 [00000000]              	dd	_c2cPFR
   924 00000086 6683C020                	add	eax, 32
   925 0000008A 6650                    	push	eax
   926 0000008C 9A                      	db	0x9A
   927                                  section .relot
   928 00000008 [8D000000]              	dd	L20
   929                                  section .text
   930                                  L20:
   931 0000008D [00000000]              	dd	_inicializarPC2c
   932 00000091 83ECF0                  	sub	sp, -16
   933                                  ; loc     <something> : * struct <something>
   934                                  ; loc     <something> : * struct <something>
   935                                  ; RPN'ized expression: "( TRUE , 2010 1 + , e2PFR &u e2DescThread -> *u &u Ocupados -> *u &u (something22) , c2cPFR DTOcupados + *u &u (something21) inicializarPC2c ) "
   936                                  ; Expanded expression: " 1  2011  e2PFR 216 + 0 +  c2cPFR 48 +  inicializarPC2c ()16 "
   937                                  ; Fused expression:    "( 1 , 2011 , e2PFR + ax 216 + ax 0 , c2cPFR + ax 48 , inicializarPC2c )16 "
   938 00000094 666A01                  	push	dword 1
   939 00000097 6668DB070000            	push	dword 2011
   940                                  section .relod
   941 00000020 [9F000000]              	dd	L23
   942                                  section .text
   943 0000009D 66B8                    	db	0x66, 0xB8
   944                                  L23:
   945 0000009F [00000000]              	dd	_e2PFR
   946 000000A3 6605D8000000            	add	eax, 216
   947 000000A9 6650                    	push	eax
   948                                  section .relod
   949 00000024 [AD000000]              	dd	L24
   950                                  section .text
   951 000000AB 66B8                    	db	0x66, 0xB8
   952                                  L24:
   953 000000AD [00000000]              	dd	_c2cPFR
   954 000000B1 6683C030                	add	eax, 48
   955 000000B5 6650                    	push	eax
   956 000000B7 9A                      	db	0x9A
   957                                  section .relot
   958 0000000C [B8000000]              	dd	L25
   959                                  section .text
   960                                  L25:
   961 000000B8 [00000000]              	dd	_inicializarPC2c
   962 000000BC 83ECF0                  	sub	sp, -16
   963                                  ; loc     <something> : * struct <something>
   964                                  ; loc     <something> : * struct <something>
   965                                  ; RPN'ized expression: "( FALSE , 2010 , e2PFR &u e2Preparados -> *u &u (something27) , c2cPFR TPreparados + *u &u (something26) inicializarPC2c ) "
   966                                  ; Expanded expression: " 0  2010  e2PFR 49512 +  c2cPFR 64 +  inicializarPC2c ()16 "
   967                                  ; Fused expression:    "( 0 , 2010 , e2PFR + ax 49512 , c2cPFR + ax 64 , inicializarPC2c )16 "
   968 000000BF 666A00                  	push	dword 0
   969 000000C2 6668DA070000            	push	dword 2010
   970                                  section .relod
   971 00000028 [CA000000]              	dd	L28
   972                                  section .text
   973 000000C8 66B8                    	db	0x66, 0xB8
   974                                  L28:
   975 000000CA [00000000]              	dd	_e2PFR
   976 000000CE 660568C10000            	add	eax, 49512
   977 000000D4 6650                    	push	eax
   978                                  section .relod
   979 0000002C [D8000000]              	dd	L29
   980                                  section .text
   981 000000D6 66B8                    	db	0x66, 0xB8
   982                                  L29:
   983 000000D8 [00000000]              	dd	_c2cPFR
   984 000000DC 6683C040                	add	eax, 64
   985 000000E0 6650                    	push	eax
   986 000000E2 9A                      	db	0x9A
   987                                  section .relot
   988 00000010 [E3000000]              	dd	L30
   989                                  section .text
   990                                  L30:
   991 000000E3 [00000000]              	dd	_inicializarPC2c
   992 000000E7 83ECF0                  	sub	sp, -16
   993                                  ; loc     <something> : * struct <something>
   994                                  ; loc     <something> : * struct <something>
   995                                  ; RPN'ized expression: "( FALSE , 2010 , e2PFR &u e2Urgentes -> *u &u (something32) , c2cPFR TUrgentes + *u &u (something31) inicializarPC2c ) "
   996                                  ; Expanded expression: " 0  2010  e2PFR 73644 +  c2cPFR 80 +  inicializarPC2c ()16 "
   997                                  ; Fused expression:    "( 0 , 2010 , e2PFR + ax 73644 , c2cPFR + ax 80 , inicializarPC2c )16 "
   998 000000EA 666A00                  	push	dword 0
   999 000000ED 6668DA070000            	push	dword 2010
  1000                                  section .relod
  1001 00000030 [F5000000]              	dd	L33
  1002                                  section .text
  1003 000000F3 66B8                    	db	0x66, 0xB8
  1004                                  L33:
  1005 000000F5 [00000000]              	dd	_e2PFR
  1006 000000F9 6605AC1F0100            	add	eax, 73644
  1007 000000FF 6650                    	push	eax
  1008                                  section .relod
  1009 00000034 [03010000]              	dd	L34
  1010                                  section .text
  1011 00000101 66B8                    	db	0x66, 0xB8
  1012                                  L34:
  1013 00000103 [00000000]              	dd	_c2cPFR
  1014 00000107 6683C050                	add	eax, 80
  1015 0000010B 6650                    	push	eax
  1016 0000010D 9A                      	db	0x9A
  1017                                  section .relot
  1018 00000014 [0E010000]              	dd	L35
  1019                                  section .text
  1020                                  L35:
  1021 0000010E [00000000]              	dd	_inicializarPC2c
  1022 00000112 83ECF0                  	sub	sp, -16
  1023                                  ; loc     <something> : * struct <something>
  1024                                  ; loc     <something> : * struct <something>
  1025                                  ; RPN'ized expression: "( FALSE , 16 , e2PFR &u e2POrdenados -> *u &u (something37) , c2cPFR POrdenados + *u &u (something36) inicializarPC2c ) "
  1026                                  ; Expanded expression: " 0  16  e2PFR 97776 +  c2cPFR 96 +  inicializarPC2c ()16 "
  1027                                  ; Fused expression:    "( 0 , 16 , e2PFR + ax 97776 , c2cPFR + ax 96 , inicializarPC2c )16 "
  1028 00000115 666A00                  	push	dword 0
  1029 00000118 666A10                  	push	dword 16
  1030                                  section .relod
  1031 00000038 [1D010000]              	dd	L38
  1032                                  section .text
  1033 0000011B 66B8                    	db	0x66, 0xB8
  1034                                  L38:
  1035 0000011D [00000000]              	dd	_e2PFR
  1036 00000121 6605F07D0100            	add	eax, 97776
  1037 00000127 6650                    	push	eax
  1038                                  section .relod
  1039 0000003C [2B010000]              	dd	L39
  1040                                  section .text
  1041 00000129 66B8                    	db	0x66, 0xB8
  1042                                  L39:
  1043 0000012B [00000000]              	dd	_c2cPFR
  1044 0000012F 6683C060                	add	eax, 96
  1045 00000133 6650                    	push	eax
  1046 00000135 9A                      	db	0x9A
  1047                                  section .relot
  1048 00000018 [36010000]              	dd	L40
  1049                                  section .text
  1050                                  L40:
  1051 00000136 [00000000]              	dd	_inicializarPC2c
  1052 0000013A 83ECF0                  	sub	sp, -16
  1053                                  ; loc     <something> : * struct <something>
  1054                                  ; loc     <something> : * struct <something>
  1055                                  ; RPN'ized expression: "( FALSE , 2010 , e2PFR &u e2TDormidos -> *u &u (something42) , c2cPFR TDormidos + *u &u (something41) inicializarPC2c ) "
  1056                                  ; Expanded expression: " 0  2010  e2PFR 97980 +  c2cPFR 112 +  inicializarPC2c ()16 "
  1057                                  ; Fused expression:    "( 0 , 2010 , e2PFR + ax 97980 , c2cPFR + ax 112 , inicializarPC2c )16 "
  1058 0000013D 666A00                  	push	dword 0
  1059 00000140 6668DA070000            	push	dword 2010
  1060                                  section .relod
  1061 00000040 [48010000]              	dd	L43
  1062                                  section .text
  1063 00000146 66B8                    	db	0x66, 0xB8
  1064                                  L43:
  1065 00000148 [00000000]              	dd	_e2PFR
  1066 0000014C 6605BC7E0100            	add	eax, 97980
  1067 00000152 6650                    	push	eax
  1068                                  section .relod
  1069 00000044 [56010000]              	dd	L44
  1070                                  section .text
  1071 00000154 66B8                    	db	0x66, 0xB8
  1072                                  L44:
  1073 00000156 [00000000]              	dd	_c2cPFR
  1074 0000015A 6683C070                	add	eax, 112
  1075 0000015E 6650                    	push	eax
  1076 00000160 9A                      	db	0x9A
  1077                                  section .relot
  1078 0000001C [61010000]              	dd	L45
  1079                                  section .text
  1080                                  L45:
  1081 00000161 [00000000]              	dd	_inicializarPC2c
  1082 00000165 83ECF0                  	sub	sp, -16
  1083                                  ; RPN'ized expression: "descProceso 0 + *u &u pid -> *u ( nuevoPid ) = "
  1084                                  ; Expanded expression: "descProceso 0 + 0 +  nuevoPid ()0 =(4) "
  1085                                  ; Fused expression:    "descProceso + ax 0 + ax 0 push-ax ( nuevoPid )0 =(204) **sp ax "
  1086                                  section .relod
  1087 00000048 [6A010000]              	dd	L46
  1088                                  section .text
  1089 00000168 66B8                    	db	0x66, 0xB8
  1090                                  L46:
  1091 0000016A [00000000]              	dd	_descProceso
  1092 0000016E 6650                    	push	eax
  1093 00000170 9A                      	db	0x9A
  1094                                  section .relot
  1095 00000020 [71010000]              	dd	L47
  1096                                  section .text
  1097                                  L47:
  1098 00000171 [00000000]              	dd	_nuevoPid
  1099 00000175 665B                    	pop	ebx
  1100 00000177 6689DE                  	mov	esi, ebx
  1101 0000017A 66C1CE04                	ror	esi, 4
  1102 0000017E 8EDE                    	mov	ds, si
  1103 00000180 66C1EE1C                	shr	esi, 28
  1104 00000184 668904                  	mov	[si], eax
  1105                                  ; RPN'ized expression: "descProceso 0 + *u &u uid -> *u 0 = "
  1106                                  ; Expanded expression: "descProceso 0 + 284 + 0 =(4) "
  1107                                  ; Fused expression:    "descProceso + ax 0 + ax 284 =(204) *ax 0 "
  1108                                  section .relod
  1109 0000004C [89010000]              	dd	L48
  1110                                  section .text
  1111 00000187 66B8                    	db	0x66, 0xB8
  1112                                  L48:
  1113 00000189 [00000000]              	dd	_descProceso
  1114 0000018D 66051C010000            	add	eax, 284
  1115 00000193 6689C3                  	mov	ebx, eax
  1116 00000196 66B800000000            	mov	eax, 0
  1117 0000019C 6689DE                  	mov	esi, ebx
  1118 0000019F 66C1CE04                	ror	esi, 4
  1119 000001A3 8EDE                    	mov	ds, si
  1120 000001A5 66C1EE1C                	shr	esi, 28
  1121 000001A9 668904                  	mov	[si], eax
  1122                                  ; RPN'ized expression: "descProceso 0 + *u &u gid -> *u 0 = "
  1123                                  ; Expanded expression: "descProceso 0 + 288 + 0 =(4) "
  1124                                  ; Fused expression:    "descProceso + ax 0 + ax 288 =(204) *ax 0 "
  1125                                  section .relod
  1126 00000050 [AE010000]              	dd	L49
  1127                                  section .text
  1128 000001AC 66B8                    	db	0x66, 0xB8
  1129                                  L49:
  1130 000001AE [00000000]              	dd	_descProceso
  1131 000001B2 660520010000            	add	eax, 288
  1132 000001B8 6689C3                  	mov	ebx, eax
  1133 000001BB 66B800000000            	mov	eax, 0
  1134 000001C1 6689DE                  	mov	esi, ebx
  1135 000001C4 66C1CE04                	ror	esi, 4
  1136 000001C8 8EDE                    	mov	ds, si
  1137 000001CA 66C1EE1C                	shr	esi, 28
  1138 000001CE 668904                  	mov	[si], eax
  1139                                  ; RPN'ized expression: "descProceso 0 + *u &u noStatus -> *u TRUE = "
  1140                                  ; Expanded expression: "descProceso 0 + 4 + 1 =(4) "
  1141                                  ; Fused expression:    "descProceso + ax 0 + ax 4 =(204) *ax 1 "
  1142                                  section .relod
  1143 00000054 [D3010000]              	dd	L50
  1144                                  section .text
  1145 000001D1 66B8                    	db	0x66, 0xB8
  1146                                  L50:
  1147 000001D3 [00000000]              	dd	_descProceso
  1148 000001D7 6683C004                	add	eax, 4
  1149 000001DB 6689C3                  	mov	ebx, eax
  1150 000001DE 66B801000000            	mov	eax, 1
  1151 000001E4 6689DE                  	mov	esi, ebx
  1152 000001E7 66C1CE04                	ror	esi, 4
  1153 000001EB 8EDE                    	mov	ds, si
  1154 000001ED 66C1EE1C                	shr	esi, 28
  1155 000001F1 668904                  	mov	[si], eax
  1156                                  ; RPN'ized expression: "descProceso 0 + *u &u ppindx -> *u 1 -u = "
  1157                                  ; Expanded expression: "descProceso 0 + 12 + -1 =(4) "
  1158                                  ; Fused expression:    "descProceso + ax 0 + ax 12 =(204) *ax -1 "
  1159                                  section .relod
  1160 00000058 [F6010000]              	dd	L51
  1161                                  section .text
  1162 000001F4 66B8                    	db	0x66, 0xB8
  1163                                  L51:
  1164 000001F6 [00000000]              	dd	_descProceso
  1165 000001FA 6683C00C                	add	eax, 12
  1166 000001FE 6689C3                  	mov	ebx, eax
  1167 00000201 66B8FFFFFFFF            	mov	eax, -1
  1168 00000207 6689DE                  	mov	esi, ebx
  1169 0000020A 66C1CE04                	ror	esi, 4
  1170 0000020E 8EDE                    	mov	ds, si
  1171 00000210 66C1EE1C                	shr	esi, 28
  1172 00000214 668904                  	mov	[si], eax
  1173                                  ; RPN'ized expression: "descProceso 0 + *u &u hpindx -> *u 1 -u = "
  1174                                  ; Expanded expression: "descProceso 0 + 16 + -1 =(4) "
  1175                                  ; Fused expression:    "descProceso + ax 0 + ax 16 =(204) *ax -1 "
  1176                                  section .relod
  1177 0000005C [19020000]              	dd	L52
  1178                                  section .text
  1179 00000217 66B8                    	db	0x66, 0xB8
  1180                                  L52:
  1181 00000219 [00000000]              	dd	_descProceso
  1182 0000021D 6683C010                	add	eax, 16
  1183 00000221 6689C3                  	mov	ebx, eax
  1184 00000224 66B8FFFFFFFF            	mov	eax, -1
  1185 0000022A 6689DE                  	mov	esi, ebx
  1186 0000022D 66C1CE04                	ror	esi, 4
  1187 00000231 8EDE                    	mov	ds, si
  1188 00000233 66C1EE1C                	shr	esi, 28
  1189 00000237 668904                  	mov	[si], eax
  1190                                  ; loc     <something> : * struct <something>
  1191                                  ; loc     <something> : * struct <something>
  1192                                  ; RPN'ized expression: "( FALSE , 16 0 + , e2PFR &u e2Hijos -> *u &u (something54) , descProceso 0 + *u &u c2cHijos -> *u &u (something53) inicializarPC2c ) "
  1193                                  ; Expanded expression: " 0  16  e2PFR 24816 +  descProceso 0 + 20 +  inicializarPC2c ()16 "
  1194                                  ; Fused expression:    "( 0 , 16 , e2PFR + ax 24816 , descProceso + ax 0 + ax 20 , inicializarPC2c )16 "
  1195 0000023A 666A00                  	push	dword 0
  1196 0000023D 666A10                  	push	dword 16
  1197                                  section .relod
  1198 00000060 [42020000]              	dd	L55
  1199                                  section .text
  1200 00000240 66B8                    	db	0x66, 0xB8
  1201                                  L55:
  1202 00000242 [00000000]              	dd	_e2PFR
  1203 00000246 6605F0600000            	add	eax, 24816
  1204 0000024C 6650                    	push	eax
  1205                                  section .relod
  1206 00000064 [50020000]              	dd	L56
  1207                                  section .text
  1208 0000024E 66B8                    	db	0x66, 0xB8
  1209                                  L56:
  1210 00000250 [00000000]              	dd	_descProceso
  1211 00000254 6683C014                	add	eax, 20
  1212 00000258 6650                    	push	eax
  1213 0000025A 9A                      	db	0x9A
  1214                                  section .relot
  1215 00000024 [5B020000]              	dd	L57
  1216                                  section .text
  1217                                  L57:
  1218 0000025B [00000000]              	dd	_inicializarPC2c
  1219 0000025F 83ECF0                  	sub	sp, -16
  1220                                  ; loc     <something> : * struct <something>
  1221                                  ; loc     <something> : * struct <something>
  1222                                  ; RPN'ized expression: "( FALSE , 2010 0 + , e2PFR &u e2Threads -> *u &u (something59) , descProceso 0 + *u &u c2cThreads -> *u &u (something58) inicializarPC2c ) "
  1223                                  ; Expanded expression: " 0  2010  e2PFR 25200 +  descProceso 0 + 36 +  inicializarPC2c ()16 "
  1224                                  ; Fused expression:    "( 0 , 2010 , e2PFR + ax 25200 , descProceso + ax 0 + ax 36 , inicializarPC2c )16 "
  1225 00000262 666A00                  	push	dword 0
  1226 00000265 6668DA070000            	push	dword 2010
  1227                                  section .relod
  1228 00000068 [6D020000]              	dd	L60
  1229                                  section .text
  1230 0000026B 66B8                    	db	0x66, 0xB8
  1231                                  L60:
  1232 0000026D [00000000]              	dd	_e2PFR
  1233 00000271 660570620000            	add	eax, 25200
  1234 00000277 6650                    	push	eax
  1235                                  section .relod
  1236 0000006C [7B020000]              	dd	L61
  1237                                  section .text
  1238 00000279 66B8                    	db	0x66, 0xB8
  1239                                  L61:
  1240 0000027B [00000000]              	dd	_descProceso
  1241 0000027F 6683C024                	add	eax, 36
  1242 00000283 6650                    	push	eax
  1243 00000285 9A                      	db	0x9A
  1244                                  section .relot
  1245 00000028 [86020000]              	dd	L62
  1246                                  section .text
  1247                                  L62:
  1248 00000286 [00000000]              	dd	_inicializarPC2c
  1249 0000028A 83ECF0                  	sub	sp, -16
  1250                                  ; RPN'ized expression: "descProceso 0 + *u &u CSProc -> *u CS_SO1H = "
  1251                                  ; Expanded expression: "descProceso 0 + 52 + CS_SO1H *(2) =(2) "
  1252                                  ; Fused expression:    "descProceso + ax 0 + ax 52 push-ax CS_SO1H =(170) **sp *ax "
  1253                                  section .relod
  1254 00000070 [8F020000]              	dd	L63
  1255                                  section .text
  1256 0000028D 66B8                    	db	0x66, 0xB8
  1257                                  L63:
  1258 0000028F [00000000]              	dd	_descProceso
  1259 00000293 6683C034                	add	eax, 52
  1260 00000297 6650                    	push	eax
  1261                                  section .relod
  1262 00000074 [9B020000]              	dd	L64
  1263                                  section .text
  1264 00000299 66B8                    	db	0x66, 0xB8
  1265                                  L64:
  1266 0000029B [00000000]              	dd	_CS_SO1H
  1267 0000029F 6689C3                  	mov	ebx, eax
  1268 000002A2 6689DE                  	mov	esi, ebx
  1269 000002A5 66C1CE04                	ror	esi, 4
  1270 000002A9 8EDE                    	mov	ds, si
  1271 000002AB 66C1EE1C                	shr	esi, 28
  1272 000002AF 8B04                    	mov	ax, [si]
  1273 000002B1 660FB7C0                	movzx	eax, ax
  1274 000002B5 665B                    	pop	ebx
  1275 000002B7 6689DE                  	mov	esi, ebx
  1276 000002BA 66C1CE04                	ror	esi, 4
  1277 000002BE 8EDE                    	mov	ds, si
  1278 000002C0 66C1EE1C                	shr	esi, 28
  1279 000002C4 8904                    	mov	[si], ax
  1280 000002C6 660FB7C0                	movzx	eax, ax
  1281                                  ; RPN'ized expression: "descProceso 0 + *u &u tam -> *u SS_SO1H CS_SO1H - = "
  1282                                  ; Expanded expression: "descProceso 0 + 60 + SS_SO1H *(2) CS_SO1H *(2) - =(2) "
  1283                                  ; Fused expression:    "descProceso + ax 0 + ax 60 push-ax SS_SO1H push-ax CS_SO1H - **sp *ax =(172) **sp ax "
  1284                                  section .relod
  1285 00000078 [CC020000]              	dd	L65
  1286                                  section .text
  1287 000002CA 66B8                    	db	0x66, 0xB8
  1288                                  L65:
  1289 000002CC [00000000]              	dd	_descProceso
  1290 000002D0 6683C03C                	add	eax, 60
  1291 000002D4 6650                    	push	eax
  1292                                  section .relod
  1293 0000007C [D8020000]              	dd	L66
  1294                                  section .text
  1295 000002D6 66B8                    	db	0x66, 0xB8
  1296                                  L66:
  1297 000002D8 [00000000]              	dd	_SS_SO1H
  1298 000002DC 6650                    	push	eax
  1299                                  section .relod
  1300 00000080 [E0020000]              	dd	L67
  1301                                  section .text
  1302 000002DE 66B8                    	db	0x66, 0xB8
  1303                                  L67:
  1304 000002E0 [00000000]              	dd	_CS_SO1H
  1305 000002E4 6689C3                  	mov	ebx, eax
  1306 000002E7 6689DE                  	mov	esi, ebx
  1307 000002EA 66C1CE04                	ror	esi, 4
  1308 000002EE 8EDE                    	mov	ds, si
  1309 000002F0 66C1EE1C                	shr	esi, 28
  1310 000002F4 660FB70C                	movzx	ecx, word [si]
  1311 000002F8 665B                    	pop	ebx
  1312 000002FA 6689DE                  	mov	esi, ebx
  1313 000002FD 66C1CE04                	ror	esi, 4
  1314 00000301 8EDE                    	mov	ds, si
  1315 00000303 66C1EE1C                	shr	esi, 28
  1316 00000307 8B04                    	mov	ax, [si]
  1317 00000309 660FB7C0                	movzx	eax, ax
  1318 0000030D 6629C8                  	sub	eax, ecx
  1319 00000310 665B                    	pop	ebx
  1320 00000312 6689DE                  	mov	esi, ebx
  1321 00000315 66C1CE04                	ror	esi, 4
  1322 00000319 8EDE                    	mov	ds, si
  1323 0000031B 66C1EE1C                	shr	esi, 28
  1324 0000031F 8904                    	mov	[si], ax
  1325 00000321 660FB7C0                	movzx	eax, ax
  1326                                  ; loc     <something> : struct <something>
  1327                                  ; RPN'ized expression: "descProceso 0 + *u &u tamCodigo -> *u _stop__text &u _start__text &u - <something68> sizeof + = "
  1328                                  ; Expanded expression: "descProceso 0 + 54 + _stop__text _start__text - 32u + =(2) "
  1329                                  ; Fused expression:    "descProceso + ax 0 + ax 54 push-ax _stop__text push-ax _start__text - *sp ax + ax 32u =(172) **sp ax "
  1330                                  section .relod
  1331 00000084 [27030000]              	dd	L69
  1332                                  section .text
  1333 00000325 66B8                    	db	0x66, 0xB8
  1334                                  L69:
  1335 00000327 [00000000]              	dd	_descProceso
  1336 0000032B 6683C036                	add	eax, 54
  1337 0000032F 6650                    	push	eax
  1338                                  section .relod
  1339 00000088 [33030000]              	dd	L70
  1340                                  section .text
  1341 00000331 66B8                    	db	0x66, 0xB8
  1342                                  L70:
  1343 00000333 [00000000]              	dd	__stop__text
  1344 00000337 6650                    	push	eax
  1345                                  section .relod
  1346 0000008C [3B030000]              	dd	L71
  1347                                  section .text
  1348 00000339 66B8                    	db	0x66, 0xB8
  1349                                  L71:
  1350 0000033B [00000000]              	dd	__start__text
  1351 0000033F 6689C1                  	mov	ecx, eax
  1352 00000342 6658                    	pop	eax
  1353 00000344 6629C8                  	sub	eax, ecx
  1354 00000347 6683C020                	add	eax, 32
  1355 0000034B 665B                    	pop	ebx
  1356 0000034D 6689DE                  	mov	esi, ebx
  1357 00000350 66C1CE04                	ror	esi, 4
  1358 00000354 8EDE                    	mov	ds, si
  1359 00000356 66C1EE1C                	shr	esi, 28
  1360 0000035A 8904                    	mov	[si], ax
  1361 0000035C 660FB7C0                	movzx	eax, ax
  1362                                  ; loc     <something> : unsigned
  1363                                  ; RPN'ized expression: "descProceso 0 + *u &u desplBSS -> *u _start__bss &u _start__data &u (something72) 4294967280u & - = "
  1364                                  ; Expanded expression: "descProceso 0 + 56 + _start__bss _start__data 4294967280u & - =(2) "
  1365                                  ; Fused expression:    "descProceso + ax 0 + ax 56 push-ax _start__bss push-ax _start__data & ax 4294967280u - *sp ax =(172) **sp ax "
  1366                                  section .relod
  1367 00000090 [62030000]              	dd	L73
  1368                                  section .text
  1369 00000360 66B8                    	db	0x66, 0xB8
  1370                                  L73:
  1371 00000362 [00000000]              	dd	_descProceso
  1372 00000366 6683C038                	add	eax, 56
  1373 0000036A 6650                    	push	eax
  1374                                  section .relod
  1375 00000094 [6E030000]              	dd	L74
  1376                                  section .text
  1377 0000036C 66B8                    	db	0x66, 0xB8
  1378                                  L74:
  1379 0000036E [00000000]              	dd	__start__bss
  1380 00000372 6650                    	push	eax
  1381                                  section .relod
  1382 00000098 [76030000]              	dd	L75
  1383                                  section .text
  1384 00000374 66B8                    	db	0x66, 0xB8
  1385                                  L75:
  1386 00000376 [00000000]              	dd	__start__data
  1387 0000037A 6683E0F0                	and	eax, -16
  1388 0000037E 6689C1                  	mov	ecx, eax
  1389 00000381 6658                    	pop	eax
  1390 00000383 6629C8                  	sub	eax, ecx
  1391 00000386 665B                    	pop	ebx
  1392 00000388 6689DE                  	mov	esi, ebx
  1393 0000038B 66C1CE04                	ror	esi, 4
  1394 0000038F 8EDE                    	mov	ds, si
  1395 00000391 66C1EE1C                	shr	esi, 28
  1396 00000395 8904                    	mov	[si], ax
  1397 00000397 660FB7C0                	movzx	eax, ax
  1398                                  ; loc     <something> : unsigned
  1399                                  ; RPN'ized expression: "descProceso 0 + *u &u desplPila -> *u _stop__bss &u _start__data &u (something76) 4294967280u & - = "
  1400                                  ; Expanded expression: "descProceso 0 + 58 + _stop__bss _start__data 4294967280u & - =(2) "
  1401                                  ; Fused expression:    "descProceso + ax 0 + ax 58 push-ax _stop__bss push-ax _start__data & ax 4294967280u - *sp ax =(172) **sp ax "
  1402                                  section .relod
  1403 0000009C [9D030000]              	dd	L77
  1404                                  section .text
  1405 0000039B 66B8                    	db	0x66, 0xB8
  1406                                  L77:
  1407 0000039D [00000000]              	dd	_descProceso
  1408 000003A1 6683C03A                	add	eax, 58
  1409 000003A5 6650                    	push	eax
  1410                                  section .relod
  1411 000000A0 [A9030000]              	dd	L78
  1412                                  section .text
  1413 000003A7 66B8                    	db	0x66, 0xB8
  1414                                  L78:
  1415 000003A9 [00000000]              	dd	__stop__bss
  1416 000003AD 6650                    	push	eax
  1417                                  section .relod
  1418 000000A4 [B1030000]              	dd	L79
  1419                                  section .text
  1420 000003AF 66B8                    	db	0x66, 0xB8
  1421                                  L79:
  1422 000003B1 [00000000]              	dd	__start__data
  1423 000003B5 6683E0F0                	and	eax, -16
  1424 000003B9 6689C1                  	mov	ecx, eax
  1425 000003BC 6658                    	pop	eax
  1426 000003BE 6629C8                  	sub	eax, ecx
  1427 000003C1 665B                    	pop	ebx
  1428 000003C3 6689DE                  	mov	esi, ebx
  1429 000003C6 66C1CE04                	ror	esi, 4
  1430 000003CA 8EDE                    	mov	ds, si
  1431 000003CC 66C1EE1C                	shr	esi, 28
  1432 000003D0 8904                    	mov	[si], ax
  1433 000003D2 660FB7C0                	movzx	eax, ax
  1434                                  ; loc     <something> : struct <something>
  1435                                  ; RPN'ized expression: "descProceso 0 + *u &u tamFichero -> *u _stop__data &u _start__text &u - <something80> sizeof + = "
  1436                                  ; Expanded expression: "descProceso 0 + 64 + _stop__data _start__text - 32u + =(4) "
  1437                                  ; Fused expression:    "descProceso + ax 0 + ax 64 push-ax _stop__data push-ax _start__text - *sp ax + ax 32u =(204) **sp ax "
  1438                                  section .relod
  1439 000000A8 [D8030000]              	dd	L81
  1440                                  section .text
  1441 000003D6 66B8                    	db	0x66, 0xB8
  1442                                  L81:
  1443 000003D8 [00000000]              	dd	_descProceso
  1444 000003DC 6683C040                	add	eax, 64
  1445 000003E0 6650                    	push	eax
  1446                                  section .relod
  1447 000000AC [E4030000]              	dd	L82
  1448                                  section .text
  1449 000003E2 66B8                    	db	0x66, 0xB8
  1450                                  L82:
  1451 000003E4 [00000000]              	dd	__stop__data
  1452 000003E8 6650                    	push	eax
  1453                                  section .relod
  1454 000000B0 [EC030000]              	dd	L83
  1455                                  section .text
  1456 000003EA 66B8                    	db	0x66, 0xB8
  1457                                  L83:
  1458 000003EC [00000000]              	dd	__start__text
  1459 000003F0 6689C1                  	mov	ecx, eax
  1460 000003F3 6658                    	pop	eax
  1461 000003F5 6629C8                  	sub	eax, ecx
  1462 000003F8 6683C020                	add	eax, 32
  1463 000003FC 665B                    	pop	ebx
  1464 000003FE 6689DE                  	mov	esi, ebx
  1465 00000401 66C1CE04                	ror	esi, 4
  1466 00000405 8EDE                    	mov	ds, si
  1467 00000407 66C1EE1C                	shr	esi, 28
  1468 0000040B 668904                  	mov	[si], eax
  1469                                  ; loc     <something> : * struct <something>
  1470                                  ; RPN'ized expression: "( c2cPFR DPOcupados + *u &u (something84) , 0 apilarPC2c ) "
  1471                                  ; Expanded expression: " c2cPFR 16 +  0  apilarPC2c ()8 "
  1472                                  ; Fused expression:    "( c2cPFR + ax 16 , 0 , apilarPC2c )8 "
  1473                                  section .relod
  1474 000000B4 [10040000]              	dd	L85
  1475                                  section .text
  1476 0000040E 66B8                    	db	0x66, 0xB8
  1477                                  L85:
  1478 00000410 [00000000]              	dd	_c2cPFR
  1479 00000414 6683C010                	add	eax, 16
  1480 00000418 6650                    	push	eax
  1481 0000041A 666A00                  	push	dword 0
  1482 0000041D 9A                      	db	0x9A
  1483                                  section .relot
  1484 0000002C [1E040000]              	dd	L86
  1485                                  section .text
  1486                                  L86:
  1487 0000041E [00000000]              	dd	_apilarPC2c
  1488 00000422 83ECF8                  	sub	sp, -8
  1489                                  ; loc     <something> : * struct <something>
  1490                                  ; RPN'ized expression: "( c2cPFR POrdenados + *u &u (something87) , 0 apilarPC2c ) "
  1491                                  ; Expanded expression: " c2cPFR 96 +  0  apilarPC2c ()8 "
  1492                                  ; Fused expression:    "( c2cPFR + ax 96 , 0 , apilarPC2c )8 "
  1493                                  section .relod
  1494 000000B8 [27040000]              	dd	L88
  1495                                  section .text
  1496 00000425 66B8                    	db	0x66, 0xB8
  1497                                  L88:
  1498 00000427 [00000000]              	dd	_c2cPFR
  1499 0000042B 6683C060                	add	eax, 96
  1500 0000042F 6650                    	push	eax
  1501 00000431 666A00                  	push	dword 0
  1502 00000434 9A                      	db	0x9A
  1503                                  section .relot
  1504 00000030 [35040000]              	dd	L89
  1505                                  section .text
  1506                                  L89:
  1507 00000435 [00000000]              	dd	_apilarPC2c
  1508 00000439 83ECF8                  	sub	sp, -8
  1509                                  ; RPN'ized expression: "descThread 0 + *u &u SSThread -> *u SS_SO1H = "
  1510                                  ; Expanded expression: "descThread 0 + 36 + SS_SO1H *(2) =(2) "
  1511                                  ; Fused expression:    "descThread + ax 0 + ax 36 push-ax SS_SO1H =(170) **sp *ax "
  1512                                  section .relod
  1513 000000BC [3E040000]              	dd	L90
  1514                                  section .text
  1515 0000043C 66B8                    	db	0x66, 0xB8
  1516                                  L90:
  1517 0000043E [00000000]              	dd	_descThread
  1518 00000442 6683C024                	add	eax, 36
  1519 00000446 6650                    	push	eax
  1520                                  section .relod
  1521 000000C0 [4A040000]              	dd	L91
  1522                                  section .text
  1523 00000448 66B8                    	db	0x66, 0xB8
  1524                                  L91:
  1525 0000044A [00000000]              	dd	_SS_SO1H
  1526 0000044E 6689C3                  	mov	ebx, eax
  1527 00000451 6689DE                  	mov	esi, ebx
  1528 00000454 66C1CE04                	ror	esi, 4
  1529 00000458 8EDE                    	mov	ds, si
  1530 0000045A 66C1EE1C                	shr	esi, 28
  1531 0000045E 8B04                    	mov	ax, [si]
  1532 00000460 660FB7C0                	movzx	eax, ax
  1533 00000464 665B                    	pop	ebx
  1534 00000466 6689DE                  	mov	esi, ebx
  1535 00000469 66C1CE04                	ror	esi, 4
  1536 0000046D 8EDE                    	mov	ds, si
  1537 0000046F 66C1EE1C                	shr	esi, 28
  1538 00000473 8904                    	mov	[si], ax
  1539 00000475 660FB7C0                	movzx	eax, ax
  1540                                  ; loc     <something> : * unsigned short
  1541                                  ; loc     <something> : struct <something>
  1542                                  ; RPN'ized expression: "descThread 0 + *u &u SP0 -> *u _start__text &u <something93> sizeof - 75 + (something92) *u = "
  1543                                  ; Expanded expression: "descThread 0 + 38 + _start__text 32u - 75 + *(2) =(2) "
  1544                                  ; Fused expression:    "descThread + ax 0 + ax 38 push-ax _start__text - ax 32u + ax 75 =(170) **sp *ax "
  1545                                  section .relod
  1546 000000C4 [7B040000]              	dd	L94
  1547                                  section .text
  1548 00000479 66B8                    	db	0x66, 0xB8
  1549                                  L94:
  1550 0000047B [00000000]              	dd	_descThread
  1551 0000047F 6683C026                	add	eax, 38
  1552 00000483 6650                    	push	eax
  1553                                  section .relod
  1554 000000C8 [87040000]              	dd	L95
  1555                                  section .text
  1556 00000485 66B8                    	db	0x66, 0xB8
  1557                                  L95:
  1558 00000487 [00000000]              	dd	__start__text
  1559 0000048B 6683E820                	sub	eax, 32
  1560 0000048F 6683C04B                	add	eax, 75
  1561 00000493 6689C3                  	mov	ebx, eax
  1562 00000496 6689DE                  	mov	esi, ebx
  1563 00000499 66C1CE04                	ror	esi, 4
  1564 0000049D 8EDE                    	mov	ds, si
  1565 0000049F 66C1EE1C                	shr	esi, 28
  1566 000004A3 8B04                    	mov	ax, [si]
  1567 000004A5 660FB7C0                	movzx	eax, ax
  1568 000004A9 665B                    	pop	ebx
  1569 000004AB 6689DE                  	mov	esi, ebx
  1570 000004AE 66C1CE04                	ror	esi, 4
  1571 000004B2 8EDE                    	mov	ds, si
  1572 000004B4 66C1EE1C                	shr	esi, 28
  1573 000004B8 8904                    	mov	[si], ax
  1574 000004BA 660FB7C0                	movzx	eax, ax
  1575                                  ; RPN'ized expression: "descThread 0 + *u &u tid -> *u ( nuevoTid ) = "
  1576                                  ; Expanded expression: "descThread 0 + 0 +  nuevoTid ()0 =(4) "
  1577                                  ; Fused expression:    "descThread + ax 0 + ax 0 push-ax ( nuevoTid )0 =(204) **sp ax "
  1578                                  section .relod
  1579 000000CC [C0040000]              	dd	L96
  1580                                  section .text
  1581 000004BE 66B8                    	db	0x66, 0xB8
  1582                                  L96:
  1583 000004C0 [00000000]              	dd	_descThread
  1584 000004C4 6650                    	push	eax
  1585 000004C6 9A                      	db	0x9A
  1586                                  section .relot
  1587 00000034 [C7040000]              	dd	L97
  1588                                  section .text
  1589                                  L97:
  1590 000004C7 [00000000]              	dd	_nuevoTid
  1591 000004CB 665B                    	pop	ebx
  1592 000004CD 6689DE                  	mov	esi, ebx
  1593 000004D0 66C1CE04                	ror	esi, 4
  1594 000004D4 8EDE                    	mov	ds, si
  1595 000004D6 66C1EE1C                	shr	esi, 28
  1596 000004DA 668904                  	mov	[si], eax
  1597                                  ; RPN'ized expression: "descThread 0 + *u &u estado -> *u ejecutandose = "
  1598                                  ; Expanded expression: "descThread 0 + 4 + 2 =(4) "
  1599                                  ; Fused expression:    "descThread + ax 0 + ax 4 =(204) *ax 2 "
  1600                                  section .relod
  1601 000000D0 [DF040000]              	dd	L98
  1602                                  section .text
  1603 000004DD 66B8                    	db	0x66, 0xB8
  1604                                  L98:
  1605 000004DF [00000000]              	dd	_descThread
  1606 000004E3 6683C004                	add	eax, 4
  1607 000004E7 6689C3                  	mov	ebx, eax
  1608 000004EA 66B802000000            	mov	eax, 2
  1609 000004F0 6689DE                  	mov	esi, ebx
  1610 000004F3 66C1CE04                	ror	esi, 4
  1611 000004F7 8EDE                    	mov	ds, si
  1612 000004F9 66C1EE1C                	shr	esi, 28
  1613 000004FD 668904                  	mov	[si], eax
  1614                                  ; RPN'ized expression: "descThread 0 + *u &u noStatus -> *u TRUE = "
  1615                                  ; Expanded expression: "descThread 0 + 16 + 1 =(4) "
  1616                                  ; Fused expression:    "descThread + ax 0 + ax 16 =(204) *ax 1 "
  1617                                  section .relod
  1618 000000D4 [02050000]              	dd	L99
  1619                                  section .text
  1620 00000500 66B8                    	db	0x66, 0xB8
  1621                                  L99:
  1622 00000502 [00000000]              	dd	_descThread
  1623 00000506 6683C010                	add	eax, 16
  1624 0000050A 6689C3                  	mov	ebx, eax
  1625 0000050D 66B801000000            	mov	eax, 1
  1626 00000513 6689DE                  	mov	esi, ebx
  1627 00000516 66C1CE04                	ror	esi, 4
  1628 0000051A 8EDE                    	mov	ds, si
  1629 0000051C 66C1EE1C                	shr	esi, 28
  1630 00000520 668904                  	mov	[si], eax
  1631                                  ; RPN'ized expression: "descThread 0 + *u &u ptindx -> *u 1 -u = "
  1632                                  ; Expanded expression: "descThread 0 + 24 + -1 =(4) "
  1633                                  ; Fused expression:    "descThread + ax 0 + ax 24 =(204) *ax -1 "
  1634                                  section .relod
  1635 000000D8 [25050000]              	dd	L100
  1636                                  section .text
  1637 00000523 66B8                    	db	0x66, 0xB8
  1638                                  L100:
  1639 00000525 [00000000]              	dd	_descThread
  1640 00000529 6683C018                	add	eax, 24
  1641 0000052D 6689C3                  	mov	ebx, eax
  1642 00000530 66B8FFFFFFFF            	mov	eax, -1
  1643 00000536 6689DE                  	mov	esi, ebx
  1644 00000539 66C1CE04                	ror	esi, 4
  1645 0000053D 8EDE                    	mov	ds, si
  1646 0000053F 66C1EE1C                	shr	esi, 28
  1647 00000543 668904                  	mov	[si], eax
  1648                                  ; RPN'ized expression: "descThread 0 + *u &u htindx -> *u 1 -u = "
  1649                                  ; Expanded expression: "descThread 0 + 28 + -1 =(4) "
  1650                                  ; Fused expression:    "descThread + ax 0 + ax 28 =(204) *ax -1 "
  1651                                  section .relod
  1652 000000DC [48050000]              	dd	L101
  1653                                  section .text
  1654 00000546 66B8                    	db	0x66, 0xB8
  1655                                  L101:
  1656 00000548 [00000000]              	dd	_descThread
  1657 0000054C 6683C01C                	add	eax, 28
  1658 00000550 6689C3                  	mov	ebx, eax
  1659 00000553 66B8FFFFFFFF            	mov	eax, -1
  1660 00000559 6689DE                  	mov	esi, ebx
  1661 0000055C 66C1CE04                	ror	esi, 4
  1662 00000560 8EDE                    	mov	ds, si
  1663 00000562 66C1EE1C                	shr	esi, 28
  1664 00000566 668904                  	mov	[si], eax
  1665                                  ; RPN'ized expression: "descThread 0 + *u &u pindx -> *u 0 = "
  1666                                  ; Expanded expression: "descThread 0 + 32 + 0 =(4) "
  1667                                  ; Fused expression:    "descThread + ax 0 + ax 32 =(204) *ax 0 "
  1668                                  section .relod
  1669 000000E0 [6B050000]              	dd	L102
  1670                                  section .text
  1671 00000569 66B8                    	db	0x66, 0xB8
  1672                                  L102:
  1673 0000056B [00000000]              	dd	_descThread
  1674 0000056F 6683C020                	add	eax, 32
  1675 00000573 6689C3                  	mov	ebx, eax
  1676 00000576 66B800000000            	mov	eax, 0
  1677 0000057C 6689DE                  	mov	esi, ebx
  1678 0000057F 66C1CE04                	ror	esi, 4
  1679 00000583 8EDE                    	mov	ds, si
  1680 00000585 66C1EE1C                	shr	esi, 28
  1681 00000589 668904                  	mov	[si], eax
  1682                                  ; loc     <something> : * struct <something>
  1683                                  ; RPN'ized expression: "( c2cPFR DTOcupados + *u &u (something103) , 0 apilarPC2c ) "
  1684                                  ; Expanded expression: " c2cPFR 48 +  0  apilarPC2c ()8 "
  1685                                  ; Fused expression:    "( c2cPFR + ax 48 , 0 , apilarPC2c )8 "
  1686                                  section .relod
  1687 000000E4 [8E050000]              	dd	L104
  1688                                  section .text
  1689 0000058C 66B8                    	db	0x66, 0xB8
  1690                                  L104:
  1691 0000058E [00000000]              	dd	_c2cPFR
  1692 00000592 6683C030                	add	eax, 48
  1693 00000596 6650                    	push	eax
  1694 00000598 666A00                  	push	dword 0
  1695 0000059B 9A                      	db	0x9A
  1696                                  section .relot
  1697 00000038 [9C050000]              	dd	L105
  1698                                  section .text
  1699                                  L105:
  1700 0000059C [00000000]              	dd	_apilarPC2c
  1701 000005A0 83ECF8                  	sub	sp, -8
  1702                                  ; loc     <something> : * struct <something>
  1703                                  ; RPN'ized expression: "( descProceso 0 + *u &u c2cThreads -> *u &u (something106) , 0 apilarPC2c ) "
  1704                                  ; Expanded expression: " descProceso 0 + 36 +  0  apilarPC2c ()8 "
  1705                                  ; Fused expression:    "( descProceso + ax 0 + ax 36 , 0 , apilarPC2c )8 "
  1706                                  section .relod
  1707 000000E8 [A5050000]              	dd	L107
  1708                                  section .text
  1709 000005A3 66B8                    	db	0x66, 0xB8
  1710                                  L107:
  1711 000005A5 [00000000]              	dd	_descProceso
  1712 000005A9 6683C024                	add	eax, 36
  1713 000005AD 6650                    	push	eax
  1714 000005AF 666A00                  	push	dword 0
  1715 000005B2 9A                      	db	0x9A
  1716                                  section .relot
  1717 0000003C [B3050000]              	dd	L108
  1718                                  section .text
  1719                                  L108:
  1720 000005B3 [00000000]              	dd	_apilarPC2c
  1721 000005B7 83ECF8                  	sub	sp, -8
  1722                                  ; loc     <something> : * unsigned short
  1723                                  ; loc     <something> : struct <something>
  1724                                  ; RPN'ized expression: "SS_Kernel SS_SO1H _start__text &u <something110> sizeof - 75 + (something109) *u 15 + 16 / + = "
  1725                                  ; Expanded expression: "SS_Kernel SS_SO1H *(2) _start__text 32u - 75 + *(2) 15 + 16 / + =(2) "
  1726                                  ; Fused expression:    "SS_Kernel push-ax SS_SO1H push-ax _start__text - ax 32u + ax 75 + *ax 15 / ax 16 + **sp ax =(172) **sp ax "
  1727                                  section .relod
  1728 000000EC [BC050000]              	dd	L111
  1729                                  section .text
  1730 000005BA 66B8                    	db	0x66, 0xB8
  1731                                  L111:
  1732 000005BC [00000000]              	dd	_SS_Kernel
  1733 000005C0 6650                    	push	eax
  1734                                  section .relod
  1735 000000F0 [C4050000]              	dd	L112
  1736                                  section .text
  1737 000005C2 66B8                    	db	0x66, 0xB8
  1738                                  L112:
  1739 000005C4 [00000000]              	dd	_SS_SO1H
  1740 000005C8 6650                    	push	eax
  1741                                  section .relod
  1742 000000F4 [CC050000]              	dd	L113
  1743                                  section .text
  1744 000005CA 66B8                    	db	0x66, 0xB8
  1745                                  L113:
  1746 000005CC [00000000]              	dd	__start__text
  1747 000005D0 6683E820                	sub	eax, 32
  1748 000005D4 6683C04B                	add	eax, 75
  1749 000005D8 6689C3                  	mov	ebx, eax
  1750 000005DB 6689DE                  	mov	esi, ebx
  1751 000005DE 66C1CE04                	ror	esi, 4
  1752 000005E2 8EDE                    	mov	ds, si
  1753 000005E4 66C1EE1C                	shr	esi, 28
  1754 000005E8 8B04                    	mov	ax, [si]
  1755 000005EA 660FB7C0                	movzx	eax, ax
  1756 000005EE 6683C00F                	add	eax, 15
  1757 000005F2 6699                    	cdq
  1758 000005F4 66B910000000            	mov	ecx, 16
  1759 000005FA 66F7F9                  	idiv	ecx
  1760 000005FD 6689C1                  	mov	ecx, eax
  1761 00000600 665B                    	pop	ebx
  1762 00000602 6689DE                  	mov	esi, ebx
  1763 00000605 66C1CE04                	ror	esi, 4
  1764 00000609 8EDE                    	mov	ds, si
  1765 0000060B 66C1EE1C                	shr	esi, 28
  1766 0000060F 8B04                    	mov	ax, [si]
  1767 00000611 660FB7C0                	movzx	eax, ax
  1768 00000615 6601C8                  	add	eax, ecx
  1769 00000618 665B                    	pop	ebx
  1770 0000061A 6689DE                  	mov	esi, ebx
  1771 0000061D 66C1CE04                	ror	esi, 4
  1772 00000621 8EDE                    	mov	ds, si
  1773 00000623 66C1EE1C                	shr	esi, 28
  1774 00000627 8904                    	mov	[si], ax
  1775 00000629 660FB7C0                	movzx	eax, ax
  1776                                  ; for
  1777                                  ; RPN'ized expression: "i 16 1 - = "
  1778                                  ; Expanded expression: "(@-4) 15 =(4) "
  1779                                  ; Fused expression:    "=(204) *(@-4) 15 "
  1780 0000062D 66B80F000000            	mov	eax, 15
  1781 00000633 668946FC                	mov	[bp-4], eax
  1782                                  L114:
  1783                                  ; RPN'ized expression: "i 0 > "
  1784                                  ; Expanded expression: "(@-4) *(4) 0 > "
  1785                                  ; Fused expression:    "> *(@-4) 0 IF! "
  1786 00000637 668B46FC                	mov	eax, [bp-4]
  1787 0000063B 6683F800                	cmp	eax, 0
  1788 0000063F 0F8ED102                	jle	L117
  1789                                  ; RPN'ized expression: "i --p "
  1790                                  ; Expanded expression: "(@-4) --p(4) "
  1791                                  ; {
  1792                                  ; RPN'ized expression: "descProceso i + *u &u pid -> *u 1 -u = "
  1793                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 0 + -1 =(4) "
  1794                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 0 =(204) *ax -1 "
  1795                                  section .relod
  1796 000000F8 [45060000]              	dd	L118
  1797                                  section .text
  1798 00000643 66B8                    	db	0x66, 0xB8
  1799                                  L118:
  1800 00000645 [00000000]              	dd	_descProceso
  1801 00000649 6650                    	push	eax
  1802 0000064B 668B46FC                	mov	eax, [bp-4]
  1803 0000064F 6669C024010000          	imul	eax, eax, 292
  1804 00000656 6689C1                  	mov	ecx, eax
  1805 00000659 6658                    	pop	eax
  1806 0000065B 6601C8                  	add	eax, ecx
  1807 0000065E 6689C3                  	mov	ebx, eax
  1808 00000661 66B8FFFFFFFF            	mov	eax, -1
  1809 00000667 6689DE                  	mov	esi, ebx
  1810 0000066A 66C1CE04                	ror	esi, 4
  1811 0000066E 8EDE                    	mov	ds, si
  1812 00000670 66C1EE1C                	shr	esi, 28
  1813 00000674 668904                  	mov	[si], eax
  1814                                  ; RPN'ized expression: "descProceso i + *u &u uid -> *u 1 -u = "
  1815                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 284 + -1 =(4) "
  1816                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 284 =(204) *ax -1 "
  1817                                  section .relod
  1818 000000FC [79060000]              	dd	L119
  1819                                  section .text
  1820 00000677 66B8                    	db	0x66, 0xB8
  1821                                  L119:
  1822 00000679 [00000000]              	dd	_descProceso
  1823 0000067D 6650                    	push	eax
  1824 0000067F 668B46FC                	mov	eax, [bp-4]
  1825 00000683 6669C024010000          	imul	eax, eax, 292
  1826 0000068A 6689C1                  	mov	ecx, eax
  1827 0000068D 6658                    	pop	eax
  1828 0000068F 6601C8                  	add	eax, ecx
  1829 00000692 66051C010000            	add	eax, 284
  1830 00000698 6689C3                  	mov	ebx, eax
  1831 0000069B 66B8FFFFFFFF            	mov	eax, -1
  1832 000006A1 6689DE                  	mov	esi, ebx
  1833 000006A4 66C1CE04                	ror	esi, 4
  1834 000006A8 8EDE                    	mov	ds, si
  1835 000006AA 66C1EE1C                	shr	esi, 28
  1836 000006AE 668904                  	mov	[si], eax
  1837                                  ; RPN'ized expression: "descProceso i + *u &u gid -> *u 1 -u = "
  1838                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 288 + -1 =(4) "
  1839                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 288 =(204) *ax -1 "
  1840                                  section .relod
  1841 00000100 [B3060000]              	dd	L120
  1842                                  section .text
  1843 000006B1 66B8                    	db	0x66, 0xB8
  1844                                  L120:
  1845 000006B3 [00000000]              	dd	_descProceso
  1846 000006B7 6650                    	push	eax
  1847 000006B9 668B46FC                	mov	eax, [bp-4]
  1848 000006BD 6669C024010000          	imul	eax, eax, 292
  1849 000006C4 6689C1                  	mov	ecx, eax
  1850 000006C7 6658                    	pop	eax
  1851 000006C9 6601C8                  	add	eax, ecx
  1852 000006CC 660520010000            	add	eax, 288
  1853 000006D2 6689C3                  	mov	ebx, eax
  1854 000006D5 66B8FFFFFFFF            	mov	eax, -1
  1855 000006DB 6689DE                  	mov	esi, ebx
  1856 000006DE 66C1CE04                	ror	esi, 4
  1857 000006E2 8EDE                    	mov	ds, si
  1858 000006E4 66C1EE1C                	shr	esi, 28
  1859 000006E8 668904                  	mov	[si], eax
  1860                                  ; RPN'ized expression: "descProceso i + *u &u ppindx -> *u 1 -u = "
  1861                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 12 + -1 =(4) "
  1862                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 12 =(204) *ax -1 "
  1863                                  section .relod
  1864 00000104 [ED060000]              	dd	L121
  1865                                  section .text
  1866 000006EB 66B8                    	db	0x66, 0xB8
  1867                                  L121:
  1868 000006ED [00000000]              	dd	_descProceso
  1869 000006F1 6650                    	push	eax
  1870 000006F3 668B46FC                	mov	eax, [bp-4]
  1871 000006F7 6669C024010000          	imul	eax, eax, 292
  1872 000006FE 6689C1                  	mov	ecx, eax
  1873 00000701 6658                    	pop	eax
  1874 00000703 6601C8                  	add	eax, ecx
  1875 00000706 6683C00C                	add	eax, 12
  1876 0000070A 6689C3                  	mov	ebx, eax
  1877 0000070D 66B8FFFFFFFF            	mov	eax, -1
  1878 00000713 6689DE                  	mov	esi, ebx
  1879 00000716 66C1CE04                	ror	esi, 4
  1880 0000071A 8EDE                    	mov	ds, si
  1881 0000071C 66C1EE1C                	shr	esi, 28
  1882 00000720 668904                  	mov	[si], eax
  1883                                  ; RPN'ized expression: "descProceso i + *u &u hpindx -> *u 1 -u = "
  1884                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 16 + -1 =(4) "
  1885                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 16 =(204) *ax -1 "
  1886                                  section .relod
  1887 00000108 [25070000]              	dd	L122
  1888                                  section .text
  1889 00000723 66B8                    	db	0x66, 0xB8
  1890                                  L122:
  1891 00000725 [00000000]              	dd	_descProceso
  1892 00000729 6650                    	push	eax
  1893 0000072B 668B46FC                	mov	eax, [bp-4]
  1894 0000072F 6669C024010000          	imul	eax, eax, 292
  1895 00000736 6689C1                  	mov	ecx, eax
  1896 00000739 6658                    	pop	eax
  1897 0000073B 6601C8                  	add	eax, ecx
  1898 0000073E 6683C010                	add	eax, 16
  1899 00000742 6689C3                  	mov	ebx, eax
  1900 00000745 66B8FFFFFFFF            	mov	eax, -1
  1901 0000074B 6689DE                  	mov	esi, ebx
  1902 0000074E 66C1CE04                	ror	esi, 4
  1903 00000752 8EDE                    	mov	ds, si
  1904 00000754 66C1EE1C                	shr	esi, 28
  1905 00000758 668904                  	mov	[si], eax
  1906                                  ; RPN'ized expression: "descProceso i + *u &u CSProc -> *u 0 = "
  1907                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 52 + 0 =(2) "
  1908                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 52 =(172) *ax 0 "
  1909                                  section .relod
  1910 0000010C [5D070000]              	dd	L123
  1911                                  section .text
  1912 0000075B 66B8                    	db	0x66, 0xB8
  1913                                  L123:
  1914 0000075D [00000000]              	dd	_descProceso
  1915 00000761 6650                    	push	eax
  1916 00000763 668B46FC                	mov	eax, [bp-4]
  1917 00000767 6669C024010000          	imul	eax, eax, 292
  1918 0000076E 6689C1                  	mov	ecx, eax
  1919 00000771 6658                    	pop	eax
  1920 00000773 6601C8                  	add	eax, ecx
  1921 00000776 6683C034                	add	eax, 52
  1922 0000077A 6689C3                  	mov	ebx, eax
  1923 0000077D 66B800000000            	mov	eax, 0
  1924 00000783 6689DE                  	mov	esi, ebx
  1925 00000786 66C1CE04                	ror	esi, 4
  1926 0000078A 8EDE                    	mov	ds, si
  1927 0000078C 66C1EE1C                	shr	esi, 28
  1928 00000790 8904                    	mov	[si], ax
  1929 00000792 660FB7C0                	movzx	eax, ax
  1930                                  ; RPN'ized expression: "descProceso i + *u &u tam -> *u 0 = "
  1931                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 60 + 0 =(2) "
  1932                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 60 =(172) *ax 0 "
  1933                                  section .relod
  1934 00000110 [98070000]              	dd	L124
  1935                                  section .text
  1936 00000796 66B8                    	db	0x66, 0xB8
  1937                                  L124:
  1938 00000798 [00000000]              	dd	_descProceso
  1939 0000079C 6650                    	push	eax
  1940 0000079E 668B46FC                	mov	eax, [bp-4]
  1941 000007A2 6669C024010000          	imul	eax, eax, 292
  1942 000007A9 6689C1                  	mov	ecx, eax
  1943 000007AC 6658                    	pop	eax
  1944 000007AE 6601C8                  	add	eax, ecx
  1945 000007B1 6683C03C                	add	eax, 60
  1946 000007B5 6689C3                  	mov	ebx, eax
  1947 000007B8 66B800000000            	mov	eax, 0
  1948 000007BE 6689DE                  	mov	esi, ebx
  1949 000007C1 66C1CE04                	ror	esi, 4
  1950 000007C5 8EDE                    	mov	ds, si
  1951 000007C7 66C1EE1C                	shr	esi, 28
  1952 000007CB 8904                    	mov	[si], ax
  1953 000007CD 660FB7C0                	movzx	eax, ax
  1954                                  ; RPN'ized expression: "descProceso i + *u &u tamCodigo -> *u 0 = "
  1955                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 54 + 0 =(2) "
  1956                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 54 =(172) *ax 0 "
  1957                                  section .relod
  1958 00000114 [D3070000]              	dd	L125
  1959                                  section .text
  1960 000007D1 66B8                    	db	0x66, 0xB8
  1961                                  L125:
  1962 000007D3 [00000000]              	dd	_descProceso
  1963 000007D7 6650                    	push	eax
  1964 000007D9 668B46FC                	mov	eax, [bp-4]
  1965 000007DD 6669C024010000          	imul	eax, eax, 292
  1966 000007E4 6689C1                  	mov	ecx, eax
  1967 000007E7 6658                    	pop	eax
  1968 000007E9 6601C8                  	add	eax, ecx
  1969 000007EC 6683C036                	add	eax, 54
  1970 000007F0 6689C3                  	mov	ebx, eax
  1971 000007F3 66B800000000            	mov	eax, 0
  1972 000007F9 6689DE                  	mov	esi, ebx
  1973 000007FC 66C1CE04                	ror	esi, 4
  1974 00000800 8EDE                    	mov	ds, si
  1975 00000802 66C1EE1C                	shr	esi, 28
  1976 00000806 8904                    	mov	[si], ax
  1977 00000808 660FB7C0                	movzx	eax, ax
  1978                                  ; RPN'ized expression: "descProceso i + *u &u desplBSS -> *u 0 = "
  1979                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 56 + 0 =(2) "
  1980                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 56 =(172) *ax 0 "
  1981                                  section .relod
  1982 00000118 [0E080000]              	dd	L126
  1983                                  section .text
  1984 0000080C 66B8                    	db	0x66, 0xB8
  1985                                  L126:
  1986 0000080E [00000000]              	dd	_descProceso
  1987 00000812 6650                    	push	eax
  1988 00000814 668B46FC                	mov	eax, [bp-4]
  1989 00000818 6669C024010000          	imul	eax, eax, 292
  1990 0000081F 6689C1                  	mov	ecx, eax
  1991 00000822 6658                    	pop	eax
  1992 00000824 6601C8                  	add	eax, ecx
  1993 00000827 6683C038                	add	eax, 56
  1994 0000082B 6689C3                  	mov	ebx, eax
  1995 0000082E 66B800000000            	mov	eax, 0
  1996 00000834 6689DE                  	mov	esi, ebx
  1997 00000837 66C1CE04                	ror	esi, 4
  1998 0000083B 8EDE                    	mov	ds, si
  1999 0000083D 66C1EE1C                	shr	esi, 28
  2000 00000841 8904                    	mov	[si], ax
  2001 00000843 660FB7C0                	movzx	eax, ax
  2002                                  ; RPN'ized expression: "descProceso i + *u &u desplPila -> *u 0 = "
  2003                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 58 + 0 =(2) "
  2004                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 58 =(172) *ax 0 "
  2005                                  section .relod
  2006 0000011C [49080000]              	dd	L127
  2007                                  section .text
  2008 00000847 66B8                    	db	0x66, 0xB8
  2009                                  L127:
  2010 00000849 [00000000]              	dd	_descProceso
  2011 0000084D 6650                    	push	eax
  2012 0000084F 668B46FC                	mov	eax, [bp-4]
  2013 00000853 6669C024010000          	imul	eax, eax, 292
  2014 0000085A 6689C1                  	mov	ecx, eax
  2015 0000085D 6658                    	pop	eax
  2016 0000085F 6601C8                  	add	eax, ecx
  2017 00000862 6683C03A                	add	eax, 58
  2018 00000866 6689C3                  	mov	ebx, eax
  2019 00000869 66B800000000            	mov	eax, 0
  2020 0000086F 6689DE                  	mov	esi, ebx
  2021 00000872 66C1CE04                	ror	esi, 4
  2022 00000876 8EDE                    	mov	ds, si
  2023 00000878 66C1EE1C                	shr	esi, 28
  2024 0000087C 8904                    	mov	[si], ax
  2025 0000087E 660FB7C0                	movzx	eax, ax
  2026                                  ; RPN'ized expression: "descProceso i + *u &u tamFichero -> *u 0 = "
  2027                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 64 + 0 =(4) "
  2028                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 64 =(204) *ax 0 "
  2029                                  section .relod
  2030 00000120 [84080000]              	dd	L128
  2031                                  section .text
  2032 00000882 66B8                    	db	0x66, 0xB8
  2033                                  L128:
  2034 00000884 [00000000]              	dd	_descProceso
  2035 00000888 6650                    	push	eax
  2036 0000088A 668B46FC                	mov	eax, [bp-4]
  2037 0000088E 6669C024010000          	imul	eax, eax, 292
  2038 00000895 6689C1                  	mov	ecx, eax
  2039 00000898 6658                    	pop	eax
  2040 0000089A 6601C8                  	add	eax, ecx
  2041 0000089D 6683C040                	add	eax, 64
  2042 000008A1 6689C3                  	mov	ebx, eax
  2043 000008A4 66B800000000            	mov	eax, 0
  2044 000008AA 6689DE                  	mov	esi, ebx
  2045 000008AD 66C1CE04                	ror	esi, 4
  2046 000008B1 8EDE                    	mov	ds, si
  2047 000008B3 66C1EE1C                	shr	esi, 28
  2048 000008B7 668904                  	mov	[si], eax
  2049                                  ; loc         <something> : char
  2050                                  ; RPN'ized expression: "descProceso i + *u &u programa -> *u 0 + *u 0 (something129) = "
  2051                                  ; Expanded expression: "descProceso (@-4) *(4) 292 * + 68 + 0 =(-1) "
  2052                                  ; Fused expression:    "descProceso push-ax * *(@-4) 292 + *sp ax + ax 68 =(124) *ax 0 "
  2053                                  section .relod
  2054 00000124 [BC080000]              	dd	L130
  2055                                  section .text
  2056 000008BA 66B8                    	db	0x66, 0xB8
  2057                                  L130:
  2058 000008BC [00000000]              	dd	_descProceso
  2059 000008C0 6650                    	push	eax
  2060 000008C2 668B46FC                	mov	eax, [bp-4]
  2061 000008C6 6669C024010000          	imul	eax, eax, 292
  2062 000008CD 6689C1                  	mov	ecx, eax
  2063 000008D0 6658                    	pop	eax
  2064 000008D2 6601C8                  	add	eax, ecx
  2065 000008D5 6683C044                	add	eax, 68
  2066 000008D9 6689C3                  	mov	ebx, eax
  2067 000008DC 66B800000000            	mov	eax, 0
  2068 000008E2 6689DE                  	mov	esi, ebx
  2069 000008E5 66C1CE04                	ror	esi, 4
  2070 000008E9 8EDE                    	mov	ds, si
  2071 000008EB 66C1EE1C                	shr	esi, 28
  2072 000008EF 8804                    	mov	[si], al
  2073 000008F1 660FBEC0                	movsx	eax, al
  2074                                  ; loc         <something> : * struct <something>
  2075                                  ; RPN'ized expression: "( c2cPFR DPLibres + *u &u (something131) , i apilarPC2c ) "
  2076                                  ; Expanded expression: " c2cPFR 0 +  (@-4) *(4)  apilarPC2c ()8 "
  2077                                  ; Fused expression:    "( c2cPFR + ax 0 , *(4) (@-4) , apilarPC2c )8 "
  2078                                  section .relod
  2079 00000128 [F7080000]              	dd	L132
  2080                                  section .text
  2081 000008F5 66B8                    	db	0x66, 0xB8
  2082                                  L132:
  2083 000008F7 [00000000]              	dd	_c2cPFR
  2084 000008FB 6650                    	push	eax
  2085 000008FD 66FF76FC                	push	dword [bp-4]
  2086 00000901 9A                      	db	0x9A
  2087                                  section .relot
  2088 00000040 [02090000]              	dd	L133
  2089                                  section .text
  2090                                  L133:
  2091 00000902 [00000000]              	dd	_apilarPC2c
  2092 00000906 83ECF8                  	sub	sp, -8
  2093                                  ; }
  2094                                  L115:
  2095                                  ; Fused expression:    "--p(4) *(@-4) "
  2096 00000909 668B46FC                	mov	eax, [bp-4]
  2097 0000090D 66FF4EFC                	dec	dword [bp-4]
  2098 00000911 E923FD                  	jmp	L114
  2099                                  L117:
  2100                                  ; for
  2101                                  ; RPN'ized expression: "i 2010 1 - = "
  2102                                  ; Expanded expression: "(@-4) 2009 =(4) "
  2103                                  ; Fused expression:    "=(204) *(@-4) 2009 "
  2104 00000914 66B8D9070000            	mov	eax, 2009
  2105 0000091A 668946FC                	mov	[bp-4], eax
  2106                                  L134:
  2107                                  ; RPN'ized expression: "i 0 > "
  2108                                  ; Expanded expression: "(@-4) *(4) 0 > "
  2109                                  ; Fused expression:    "> *(@-4) 0 IF! "
  2110 0000091E 668B46FC                	mov	eax, [bp-4]
  2111 00000922 6683F800                	cmp	eax, 0
  2112 00000926 0F8E2E01                	jle	L137
  2113                                  ; RPN'ized expression: "i --p "
  2114                                  ; Expanded expression: "(@-4) --p(4) "
  2115                                  ; {
  2116                                  ; RPN'ized expression: "descThread i + *u &u tid -> *u 1 -u = "
  2117                                  ; Expanded expression: "descThread (@-4) *(4) 40 * + 0 + -1 =(4) "
  2118                                  ; Fused expression:    "descThread push-ax * *(@-4) 40 + *sp ax + ax 0 =(204) *ax -1 "
  2119                                  section .relod
  2120 0000012C [2C090000]              	dd	L138
  2121                                  section .text
  2122 0000092A 66B8                    	db	0x66, 0xB8
  2123                                  L138:
  2124 0000092C [00000000]              	dd	_descThread
  2125 00000930 6650                    	push	eax
  2126 00000932 668B46FC                	mov	eax, [bp-4]
  2127 00000936 666BC028                	imul	eax, eax, 40
  2128 0000093A 6689C1                  	mov	ecx, eax
  2129 0000093D 6658                    	pop	eax
  2130 0000093F 6601C8                  	add	eax, ecx
  2131 00000942 6689C3                  	mov	ebx, eax
  2132 00000945 66B8FFFFFFFF            	mov	eax, -1
  2133 0000094B 6689DE                  	mov	esi, ebx
  2134 0000094E 66C1CE04                	ror	esi, 4
  2135 00000952 8EDE                    	mov	ds, si
  2136 00000954 66C1EE1C                	shr	esi, 28
  2137 00000958 668904                  	mov	[si], eax
  2138                                  ; RPN'ized expression: "descThread i + *u &u estado -> *u libre = "
  2139                                  ; Expanded expression: "descThread (@-4) *(4) 40 * + 4 + 0 =(4) "
  2140                                  ; Fused expression:    "descThread push-ax * *(@-4) 40 + *sp ax + ax 4 =(204) *ax 0 "
  2141                                  section .relod
  2142 00000130 [5D090000]              	dd	L139
  2143                                  section .text
  2144 0000095B 66B8                    	db	0x66, 0xB8
  2145                                  L139:
  2146 0000095D [00000000]              	dd	_descThread
  2147 00000961 6650                    	push	eax
  2148 00000963 668B46FC                	mov	eax, [bp-4]
  2149 00000967 666BC028                	imul	eax, eax, 40
  2150 0000096B 6689C1                  	mov	ecx, eax
  2151 0000096E 6658                    	pop	eax
  2152 00000970 6601C8                  	add	eax, ecx
  2153 00000973 6683C004                	add	eax, 4
  2154 00000977 6689C3                  	mov	ebx, eax
  2155 0000097A 66B800000000            	mov	eax, 0
  2156 00000980 6689DE                  	mov	esi, ebx
  2157 00000983 66C1CE04                	ror	esi, 4
  2158 00000987 8EDE                    	mov	ds, si
  2159 00000989 66C1EE1C                	shr	esi, 28
  2160 0000098D 668904                  	mov	[si], eax
  2161                                  ; RPN'ized expression: "descThread i + *u &u pindx -> *u 1 -u = "
  2162                                  ; Expanded expression: "descThread (@-4) *(4) 40 * + 32 + -1 =(4) "
  2163                                  ; Fused expression:    "descThread push-ax * *(@-4) 40 + *sp ax + ax 32 =(204) *ax -1 "
  2164                                  section .relod
  2165 00000134 [92090000]              	dd	L140
  2166                                  section .text
  2167 00000990 66B8                    	db	0x66, 0xB8
  2168                                  L140:
  2169 00000992 [00000000]              	dd	_descThread
  2170 00000996 6650                    	push	eax
  2171 00000998 668B46FC                	mov	eax, [bp-4]
  2172 0000099C 666BC028                	imul	eax, eax, 40
  2173 000009A0 6689C1                  	mov	ecx, eax
  2174 000009A3 6658                    	pop	eax
  2175 000009A5 6601C8                  	add	eax, ecx
  2176 000009A8 6683C020                	add	eax, 32
  2177 000009AC 6689C3                  	mov	ebx, eax
  2178 000009AF 66B8FFFFFFFF            	mov	eax, -1
  2179 000009B5 6689DE                  	mov	esi, ebx
  2180 000009B8 66C1CE04                	ror	esi, 4
  2181 000009BC 8EDE                    	mov	ds, si
  2182 000009BE 66C1EE1C                	shr	esi, 28
  2183 000009C2 668904                  	mov	[si], eax
  2184                                  ; RPN'ized expression: "descThread i + *u &u SSThread -> *u 0 = "
  2185                                  ; Expanded expression: "descThread (@-4) *(4) 40 * + 36 + 0 =(2) "
  2186                                  ; Fused expression:    "descThread push-ax * *(@-4) 40 + *sp ax + ax 36 =(172) *ax 0 "
  2187                                  section .relod
  2188 00000138 [C7090000]              	dd	L141
  2189                                  section .text
  2190 000009C5 66B8                    	db	0x66, 0xB8
  2191                                  L141:
  2192 000009C7 [00000000]              	dd	_descThread
  2193 000009CB 6650                    	push	eax
  2194 000009CD 668B46FC                	mov	eax, [bp-4]
  2195 000009D1 666BC028                	imul	eax, eax, 40
  2196 000009D5 6689C1                  	mov	ecx, eax
  2197 000009D8 6658                    	pop	eax
  2198 000009DA 6601C8                  	add	eax, ecx
  2199 000009DD 6683C024                	add	eax, 36
  2200 000009E1 6689C3                  	mov	ebx, eax
  2201 000009E4 66B800000000            	mov	eax, 0
  2202 000009EA 6689DE                  	mov	esi, ebx
  2203 000009ED 66C1CE04                	ror	esi, 4
  2204 000009F1 8EDE                    	mov	ds, si
  2205 000009F3 66C1EE1C                	shr	esi, 28
  2206 000009F7 8904                    	mov	[si], ax
  2207 000009F9 660FB7C0                	movzx	eax, ax
  2208                                  ; RPN'ized expression: "descThread i + *u &u SP0 -> *u 0 = "
  2209                                  ; Expanded expression: "descThread (@-4) *(4) 40 * + 38 + 0 =(2) "
  2210                                  ; Fused expression:    "descThread push-ax * *(@-4) 40 + *sp ax + ax 38 =(172) *ax 0 "
  2211                                  section .relod
  2212 0000013C [FF090000]              	dd	L142
  2213                                  section .text
  2214 000009FD 66B8                    	db	0x66, 0xB8
  2215                                  L142:
  2216 000009FF [00000000]              	dd	_descThread
  2217 00000A03 6650                    	push	eax
  2218 00000A05 668B46FC                	mov	eax, [bp-4]
  2219 00000A09 666BC028                	imul	eax, eax, 40
  2220 00000A0D 6689C1                  	mov	ecx, eax
  2221 00000A10 6658                    	pop	eax
  2222 00000A12 6601C8                  	add	eax, ecx
  2223 00000A15 6683C026                	add	eax, 38
  2224 00000A19 6689C3                  	mov	ebx, eax
  2225 00000A1C 66B800000000            	mov	eax, 0
  2226 00000A22 6689DE                  	mov	esi, ebx
  2227 00000A25 66C1CE04                	ror	esi, 4
  2228 00000A29 8EDE                    	mov	ds, si
  2229 00000A2B 66C1EE1C                	shr	esi, 28
  2230 00000A2F 8904                    	mov	[si], ax
  2231 00000A31 660FB7C0                	movzx	eax, ax
  2232                                  ; loc         <something> : * struct <something>
  2233                                  ; RPN'ized expression: "( c2cPFR DTLibres + *u &u (something143) , i apilarPC2c ) "
  2234                                  ; Expanded expression: " c2cPFR 32 +  (@-4) *(4)  apilarPC2c ()8 "
  2235                                  ; Fused expression:    "( c2cPFR + ax 32 , *(4) (@-4) , apilarPC2c )8 "
  2236                                  section .relod
  2237 00000140 [370A0000]              	dd	L144
  2238                                  section .text
  2239 00000A35 66B8                    	db	0x66, 0xB8
  2240                                  L144:
  2241 00000A37 [00000000]              	dd	_c2cPFR
  2242 00000A3B 6683C020                	add	eax, 32
  2243 00000A3F 6650                    	push	eax
  2244 00000A41 66FF76FC                	push	dword [bp-4]
  2245 00000A45 9A                      	db	0x9A
  2246                                  section .relot
  2247 00000044 [460A0000]              	dd	L145
  2248                                  section .text
  2249                                  L145:
  2250 00000A46 [00000000]              	dd	_apilarPC2c
  2251 00000A4A 83ECF8                  	sub	sp, -8
  2252                                  ; }
  2253                                  L135:
  2254                                  ; Fused expression:    "--p(4) *(@-4) "
  2255 00000A4D 668B46FC                	mov	eax, [bp-4]
  2256 00000A51 66FF4EFC                	dec	dword [bp-4]
  2257 00000A55 E9C6FE                  	jmp	L134
  2258                                  L137:
  2259                                  ; RPN'ized expression: "descProceso 0 + *u &u nfa -> *u 0 = "
  2260                                  ; Expanded expression: "descProceso 0 + 160 + 0 =(2) "
  2261                                  ; Fused expression:    "descProceso + ax 0 + ax 160 =(172) *ax 0 "
  2262                                  section .relod
  2263 00000144 [5A0A0000]              	dd	L146
  2264                                  section .text
  2265 00000A58 66B8                    	db	0x66, 0xB8
  2266                                  L146:
  2267 00000A5A [00000000]              	dd	_descProceso
  2268 00000A5E 6605A0000000            	add	eax, 160
  2269 00000A64 6689C3                  	mov	ebx, eax
  2270 00000A67 66B800000000            	mov	eax, 0
  2271 00000A6D 6689DE                  	mov	esi, ebx
  2272 00000A70 66C1CE04                	ror	esi, 4
  2273 00000A74 8EDE                    	mov	ds, si
  2274 00000A76 66C1EE1C                	shr	esi, 28
  2275 00000A7A 8904                    	mov	[si], ax
  2276 00000A7C 660FB7C0                	movzx	eax, ax
  2277                                  ; for
  2278                                  ; RPN'ized expression: "i 0 = "
  2279                                  ; Expanded expression: "(@-4) 0 =(4) "
  2280                                  ; Fused expression:    "=(204) *(@-4) 0 "
  2281 00000A80 66B800000000            	mov	eax, 0
  2282 00000A86 668946FC                	mov	[bp-4], eax
  2283                                  L147:
  2284                                  ; RPN'ized expression: "i 10 < "
  2285                                  ; Expanded expression: "(@-4) *(4) 10 < "
  2286                                  ; Fused expression:    "< *(@-4) 10 IF! "
  2287 00000A8A 668B46FC                	mov	eax, [bp-4]
  2288 00000A8E 6683F80A                	cmp	eax, 10
  2289 00000A92 0F8DBB00                	jge	L150
  2290                                  ; RPN'ized expression: "i ++p "
  2291                                  ; Expanded expression: "(@-4) ++p(4) "
  2292                                  ; {
  2293                                  ; RPN'ized expression: "descProceso 0 + *u &u tfa -> *u i + *u &u dfs -> *u 1 -u = "
  2294                                  ; Expanded expression: "descProceso 0 + 164 + (@-4) *(4) 12 * + 4 + -1 =(4) "
  2295                                  ; Fused expression:    "descProceso + ax 0 + ax 164 push-ax * *(@-4) 12 + *sp ax + ax 4 =(204) *ax -1 "
  2296                                  section .relod
  2297 00000148 [980A0000]              	dd	L151
  2298                                  section .text
  2299 00000A96 66B8                    	db	0x66, 0xB8
  2300                                  L151:
  2301 00000A98 [00000000]              	dd	_descProceso
  2302 00000A9C 6605A4000000            	add	eax, 164
  2303 00000AA2 6650                    	push	eax
  2304 00000AA4 668B46FC                	mov	eax, [bp-4]
  2305 00000AA8 666BC00C                	imul	eax, eax, 12
  2306 00000AAC 6689C1                  	mov	ecx, eax
  2307 00000AAF 6658                    	pop	eax
  2308 00000AB1 6601C8                  	add	eax, ecx
  2309 00000AB4 6683C004                	add	eax, 4
  2310 00000AB8 6689C3                  	mov	ebx, eax
  2311 00000ABB 66B8FFFFFFFF            	mov	eax, -1
  2312 00000AC1 6689DE                  	mov	esi, ebx
  2313 00000AC4 66C1CE04                	ror	esi, 4
  2314 00000AC8 8EDE                    	mov	ds, si
  2315 00000ACA 66C1EE1C                	shr	esi, 28
  2316 00000ACE 668904                  	mov	[si], eax
  2317                                  ; RPN'ized expression: "descProceso 0 + *u &u tfa -> *u i + *u &u pos -> *u 0 = "
  2318                                  ; Expanded expression: "descProceso 0 + 164 + (@-4) *(4) 12 * + 8 + 0 =(4) "
  2319                                  ; Fused expression:    "descProceso + ax 0 + ax 164 push-ax * *(@-4) 12 + *sp ax + ax 8 =(204) *ax 0 "
  2320                                  section .relod
  2321 0000014C [D30A0000]              	dd	L152
  2322                                  section .text
  2323 00000AD1 66B8                    	db	0x66, 0xB8
  2324                                  L152:
  2325 00000AD3 [00000000]              	dd	_descProceso
  2326 00000AD7 6605A4000000            	add	eax, 164
  2327 00000ADD 6650                    	push	eax
  2328 00000ADF 668B46FC                	mov	eax, [bp-4]
  2329 00000AE3 666BC00C                	imul	eax, eax, 12
  2330 00000AE7 6689C1                  	mov	ecx, eax
  2331 00000AEA 6658                    	pop	eax
  2332 00000AEC 6601C8                  	add	eax, ecx
  2333 00000AEF 6683C008                	add	eax, 8
  2334 00000AF3 6689C3                  	mov	ebx, eax
  2335 00000AF6 66B800000000            	mov	eax, 0
  2336 00000AFC 6689DE                  	mov	esi, ebx
  2337 00000AFF 66C1CE04                	ror	esi, 4
  2338 00000B03 8EDE                    	mov	ds, si
  2339 00000B05 66C1EE1C                	shr	esi, 28
  2340 00000B09 668904                  	mov	[si], eax
  2341                                  ; RPN'ized expression: "descProceso 0 + *u &u tfa -> *u i + *u &u modoAp -> *u 1 = "
  2342                                  ; Expanded expression: "descProceso 0 + 164 + (@-4) *(4) 12 * + 0 + 1 =(2) "
  2343                                  ; Fused expression:    "descProceso + ax 0 + ax 164 push-ax * *(@-4) 12 + *sp ax + ax 0 =(172) *ax 1 "
  2344                                  section .relod
  2345 00000150 [0E0B0000]              	dd	L153
  2346                                  section .text
  2347 00000B0C 66B8                    	db	0x66, 0xB8
  2348                                  L153:
  2349 00000B0E [00000000]              	dd	_descProceso
  2350 00000B12 6605A4000000            	add	eax, 164
  2351 00000B18 6650                    	push	eax
  2352 00000B1A 668B46FC                	mov	eax, [bp-4]
  2353 00000B1E 666BC00C                	imul	eax, eax, 12
  2354 00000B22 6689C1                  	mov	ecx, eax
  2355 00000B25 6658                    	pop	eax
  2356 00000B27 6601C8                  	add	eax, ecx
  2357 00000B2A 6689C3                  	mov	ebx, eax
  2358 00000B2D 66B801000000            	mov	eax, 1
  2359 00000B33 6689DE                  	mov	esi, ebx
  2360 00000B36 66C1CE04                	ror	esi, 4
  2361 00000B3A 8EDE                    	mov	ds, si
  2362 00000B3C 66C1EE1C                	shr	esi, 28
  2363 00000B40 8904                    	mov	[si], ax
  2364 00000B42 660FB7C0                	movzx	eax, ax
  2365                                  ; }
  2366                                  L148:
  2367                                  ; Fused expression:    "++p(4) *(@-4) "
  2368 00000B46 668B46FC                	mov	eax, [bp-4]
  2369 00000B4A 66FF46FC                	inc	dword [bp-4]
  2370 00000B4E E939FF                  	jmp	L147
  2371                                  L150:
  2372                                  ; for
  2373                                  ; RPN'ized expression: "i 0 = "
  2374                                  ; Expanded expression: "(@-4) 0 =(4) "
  2375                                  ; Fused expression:    "=(204) *(@-4) 0 "
  2376 00000B51 66B800000000            	mov	eax, 0
  2377 00000B57 668946FC                	mov	[bp-4], eax
  2378                                  L154:
  2379                                  ; RPN'ized expression: "i 20 < "
  2380                                  ; Expanded expression: "(@-4) *(4) 20 < "
  2381                                  ; Fused expression:    "< *(@-4) 20 IF! "
  2382 00000B5B 668B46FC                	mov	eax, [bp-4]
  2383 00000B5F 6683F814                	cmp	eax, 20
  2384 00000B63 7D3B                    	jge	L157
  2385                                  ; RPN'ized expression: "i ++p "
  2386                                  ; Expanded expression: "(@-4) ++p(4) "
  2387                                  ; RPN'ized expression: "descFichero i + *u &u tipo -> *u flibre = "
  2388                                  ; Expanded expression: "descFichero (@-4) *(4) 36 * + 0 + 0 =(4) "
  2389                                  ; Fused expression:    "descFichero push-ax * *(@-4) 36 + *sp ax + ax 0 =(204) *ax 0 "
  2390                                  section .relod
  2391 00000154 [670B0000]              	dd	L158
  2392                                  section .text
  2393 00000B65 66B8                    	db	0x66, 0xB8
  2394                                  L158:
  2395 00000B67 [00000000]              	dd	_descFichero
  2396 00000B6B 6650                    	push	eax
  2397 00000B6D 668B46FC                	mov	eax, [bp-4]
  2398 00000B71 666BC024                	imul	eax, eax, 36
  2399 00000B75 6689C1                  	mov	ecx, eax
  2400 00000B78 6658                    	pop	eax
  2401 00000B7A 6601C8                  	add	eax, ecx
  2402 00000B7D 6689C3                  	mov	ebx, eax
  2403 00000B80 66B800000000            	mov	eax, 0
  2404 00000B86 6689DE                  	mov	esi, ebx
  2405 00000B89 66C1CE04                	ror	esi, 4
  2406 00000B8D 8EDE                    	mov	ds, si
  2407 00000B8F 66C1EE1C                	shr	esi, 28
  2408 00000B93 668904                  	mov	[si], eax
  2409                                  L155:
  2410                                  ; Fused expression:    "++p(4) *(@-4) "
  2411 00000B96 668B46FC                	mov	eax, [bp-4]
  2412 00000B9A 66FF46FC                	inc	dword [bp-4]
  2413 00000B9E EBBB                    	jmp	L154
  2414                                  L157:
  2415                                  ; switch
  2416                                  ; RPN'ized expression: "( modoSO1 ) "
  2417                                  ; Expanded expression: " modoSO1 ()0 "
  2418                                  ; Fused expression:    "( modoSO1 )0  "
  2419 00000BA0 9A                      	db	0x9A
  2420                                  section .relot
  2421 00000048 [A10B0000]              	dd	L161
  2422                                  section .text
  2423                                  L161:
  2424 00000BA1 [00000000]              	dd	_modoSO1
  2425 00000BA5 EB3A                    	jmp	L160
  2426                                  ; {
  2427                                  ; case
  2428                                  ; RPN'ized expression: "modoSO1_Bin "
  2429                                  ; Expanded expression: "0 "
  2430                                  ; Expression value: 0
  2431                                  L162:
  2432                                  ; RPN'ized expression: "( comandoSo1a , descProceso 0 + *u &u comando -> *u strcpy ) "
  2433                                  ; Expanded expression: " comandoSo1a  descProceso 0 + 80 +  strcpy ()8 "
  2434                                  ; Fused expression:    "( comandoSo1a , descProceso + ax 0 + ax 80 , strcpy )8 "
  2435                                  section .relod
  2436 00000158 [A90B0000]              	dd	L163
  2437                                  section .text
  2438 00000BA7 6668                    	db	0x66, 0x68
  2439                                  L163:
  2440 00000BA9 [30000000]              	dd	_comandoSo1a
  2441                                  section .relod
  2442 0000015C [AF0B0000]              	dd	L164
  2443                                  section .text
  2444 00000BAD 66B8                    	db	0x66, 0xB8
  2445                                  L164:
  2446 00000BAF [00000000]              	dd	_descProceso
  2447 00000BB3 6683C050                	add	eax, 80
  2448 00000BB7 6650                    	push	eax
  2449 00000BB9 9A                      	db	0x9A
  2450                                  section .relot
  2451 0000004C [BA0B0000]              	dd	L165
  2452                                  section .text
  2453                                  L165:
  2454 00000BBA [00000000]              	dd	_strcpy
  2455 00000BBE 83ECF8                  	sub	sp, -8
  2456                                  ; break
  2457 00000BC1 EB2C                    	jmp	L159
  2458                                  ; case
  2459                                  ; RPN'ized expression: "modoSO1_Exe "
  2460                                  ; Expanded expression: "1 "
  2461                                  ; Expression value: 1
  2462                                  L166:
  2463                                  ; RPN'ized expression: "( comandoSo1b , descProceso 0 + *u &u comando -> *u strcpy ) "
  2464                                  ; Expanded expression: " comandoSo1b  descProceso 0 + 80 +  strcpy ()8 "
  2465                                  ; Fused expression:    "( comandoSo1b , descProceso + ax 0 + ax 80 , strcpy )8 "
  2466                                  section .relod
  2467 00000160 [C50B0000]              	dd	L167
  2468                                  section .text
  2469 00000BC3 6668                    	db	0x66, 0x68
  2470                                  L167:
  2471 00000BC5 [80000000]              	dd	_comandoSo1b
  2472                                  section .relod
  2473 00000164 [CB0B0000]              	dd	L168
  2474                                  section .text
  2475 00000BC9 66B8                    	db	0x66, 0xB8
  2476                                  L168:
  2477 00000BCB [00000000]              	dd	_descProceso
  2478 00000BCF 6683C050                	add	eax, 80
  2479 00000BD3 6650                    	push	eax
  2480 00000BD5 9A                      	db	0x9A
  2481                                  section .relot
  2482 00000050 [D60B0000]              	dd	L169
  2483                                  section .text
  2484                                  L169:
  2485 00000BD6 [00000000]              	dd	_strcpy
  2486 00000BDA 83ECF8                  	sub	sp, -8
  2487                                  ; break
  2488 00000BDD EB10                    	jmp	L159
  2489                                  ; default
  2490                                  L170:
  2491                                  ; }
  2492 00000BDF EB0E                    	jmp	L159
  2493                                  L160:
  2494 00000BE1 6683F800                	cmp	eax, 0
  2495 00000BE5 74C0                    	je	L162
  2496 00000BE7 6683F801                	cmp	eax, 1
  2497 00000BEB 74D6                    	je	L166
  2498 00000BED EBF0                    	jmp	L170
  2499                                  L159:
  2500                                  ; RPN'ized expression: "( strSo1h ( modoSO1 ) 1 - + *u , descProceso 0 + *u &u programa -> *u strcpy ) "
  2501                                  ; Expanded expression: " strSo1h  modoSO1 ()0 1 - 12 * +  descProceso 0 + 68 +  strcpy ()8 "
  2502                                  ; Fused expression:    "( strSo1h push-ax ( modoSO1 )0 - ax 1 * ax 12 + *sp ax , descProceso + ax 0 + ax 68 , strcpy )8 "
  2503                                  section .relod
  2504 00000168 [F10B0000]              	dd	L171
  2505                                  section .text
  2506 00000BEF 66B8                    	db	0x66, 0xB8
  2507                                  L171:
  2508 00000BF1 [00000000]              	dd	_strSo1h
  2509 00000BF5 6650                    	push	eax
  2510 00000BF7 9A                      	db	0x9A
  2511                                  section .relot
  2512 00000054 [F80B0000]              	dd	L172
  2513                                  section .text
  2514                                  L172:
  2515 00000BF8 [00000000]              	dd	_modoSO1
  2516 00000BFC 6648                    	dec	eax
  2517 00000BFE 666BC00C                	imul	eax, eax, 12
  2518 00000C02 6689C1                  	mov	ecx, eax
  2519 00000C05 6658                    	pop	eax
  2520 00000C07 6601C8                  	add	eax, ecx
  2521 00000C0A 6650                    	push	eax
  2522                                  section .relod
  2523 0000016C [0E0C0000]              	dd	L173
  2524                                  section .text
  2525 00000C0C 66B8                    	db	0x66, 0xB8
  2526                                  L173:
  2527 00000C0E [00000000]              	dd	_descProceso
  2528 00000C12 6683C044                	add	eax, 68
  2529 00000C16 6650                    	push	eax
  2530 00000C18 9A                      	db	0x9A
  2531                                  section .relot
  2532 00000058 [190C0000]              	dd	L174
  2533                                  section .text
  2534                                  L174:
  2535 00000C19 [00000000]              	dd	_strcpy
  2536 00000C1D 83ECF8                  	sub	sp, -8
  2537                                  ; RPN'ized expression: "indProcesoActual 0 = "
  2538                                  ; Expanded expression: "indProcesoActual 0 =(4) "
  2539                                  ; Fused expression:    "indProcesoActual =(204) *ax 0 "
  2540                                  section .relod
  2541 00000170 [220C0000]              	dd	L175
  2542                                  section .text
  2543 00000C20 66B8                    	db	0x66, 0xB8
  2544                                  L175:
  2545 00000C22 [00000000]              	dd	_indProcesoActual
  2546 00000C26 6689C3                  	mov	ebx, eax
  2547 00000C29 66B800000000            	mov	eax, 0
  2548 00000C2F 6689DE                  	mov	esi, ebx
  2549 00000C32 66C1CE04                	ror	esi, 4
  2550 00000C36 8EDE                    	mov	ds, si
  2551 00000C38 66C1EE1C                	shr	esi, 28
  2552 00000C3C 668904                  	mov	[si], eax
  2553                                  ; RPN'ized expression: "indThreadActual 0 = "
  2554                                  ; Expanded expression: "indThreadActual 0 =(4) "
  2555                                  ; Fused expression:    "indThreadActual =(204) *ax 0 "
  2556                                  section .relod
  2557 00000174 [410C0000]              	dd	L176
  2558                                  section .text
  2559 00000C3F 66B8                    	db	0x66, 0xB8
  2560                                  L176:
  2561 00000C41 [00000000]              	dd	_indThreadActual
  2562 00000C45 6689C3                  	mov	ebx, eax
  2563 00000C48 66B800000000            	mov	eax, 0
  2564 00000C4E 6689DE                  	mov	esi, ebx
  2565 00000C51 66C1CE04                	ror	esi, 4
  2566 00000C55 8EDE                    	mov	ds, si
  2567 00000C57 66C1EE1C                	shr	esi, 28
  2568 00000C5B 668904                  	mov	[si], eax
  2569                                  ; RPN'ized expression: "indThreadDeSuperficie 0 = "
  2570                                  ; Expanded expression: "indThreadDeSuperficie 0 =(4) "
  2571                                  ; Fused expression:    "indThreadDeSuperficie =(204) *ax 0 "
  2572                                  section .relod
  2573 00000178 [600C0000]              	dd	L177
  2574                                  section .text
  2575 00000C5E 66B8                    	db	0x66, 0xB8
  2576                                  L177:
  2577 00000C60 [00000000]              	dd	_indThreadDeSuperficie
  2578 00000C64 6689C3                  	mov	ebx, eax
  2579 00000C67 66B800000000            	mov	eax, 0
  2580 00000C6D 6689DE                  	mov	esi, ebx
  2581 00000C70 66C1CE04                	ror	esi, 4
  2582 00000C74 8EDE                    	mov	ds, si
  2583 00000C76 66C1EE1C                	shr	esi, 28
  2584 00000C7A 668904                  	mov	[si], eax
  2585                                  ; RPN'ized expression: "nivelActivacionSO1H 0 = "
  2586                                  ; Expanded expression: "nivelActivacionSO1H 0 =(4) "
  2587                                  ; Fused expression:    "nivelActivacionSO1H =(204) *ax 0 "
  2588                                  section .relod
  2589 0000017C [7F0C0000]              	dd	L178
  2590                                  section .text
  2591 00000C7D 66B8                    	db	0x66, 0xB8
  2592                                  L178:
  2593 00000C7F [00000000]              	dd	_nivelActivacionSO1H
  2594 00000C83 6689C3                  	mov	ebx, eax
  2595 00000C86 66B800000000            	mov	eax, 0
  2596 00000C8C 6689DE                  	mov	esi, ebx
  2597 00000C8F 66C1CE04                	ror	esi, 4
  2598 00000C93 8EDE                    	mov	ds, si
  2599 00000C95 66C1EE1C                	shr	esi, 28
  2600 00000C99 668904                  	mov	[si], eax
  2601                                  L1:
  2602 00000C9C 66                      	db	0x66
  2603 00000C9D C9                      	leave
  2604 00000C9E CB                      	retf
  2605                                  L179:
  2606                                  
  2607                                  section .fxnsz noalloc
  2608 00000000 9F0C0000                	dd	L179 - _inicProcesos
  2609                                  
  2610                                  
  2611                                  	extern	_ccbAlEpilogo
  2612                                  	extern	_descCcbAlEpilogo
  2613                                  	extern	_e2PFR
  2614                                  	extern	_c2cPFR
  2615                                  	extern	_inicializarPC2c
  2616                                  	extern	_descProceso
  2617                                  	extern	_nuevoPid
  2618                                  	extern	_CS_SO1H
  2619                                  	extern	_SS_SO1H
  2620                                  	extern	__stop__text
  2621                                  	extern	__start__text
  2622                                  	extern	__start__bss
  2623                                  	extern	__start__data
  2624                                  	extern	__stop__bss
  2625                                  	extern	__stop__data
  2626                                  	extern	_apilarPC2c
  2627                                  	extern	_descThread
  2628                                  	extern	_nuevoTid
  2629                                  	extern	_SS_Kernel
  2630                                  	extern	_descFichero
  2631                                  	extern	_modoSO1
  2632                                  	extern	_strcpy
  2633                                  	extern	_indProcesoActual
  2634                                  	extern	_indThreadActual
  2635                                  	extern	_indThreadDeSuperficie
  2636                                  	extern	_nivelActivacionSO1H
  2637                                  
  2638                                  ; Syntax/declaration table/stack:
  2639                                  ; Bytes used: 14680/40960
  2640                                  
  2641                                  
  2642                                  ; Macro table:
  2643                                  ; Macro __SMALLER_C__ = `0x0100`
  2644                                  ; Macro __SMALLER_C_32__ = ``
  2645                                  ; Macro __HUGE__ = ``
  2646                                  ; Macro __SMALLER_C_SCHAR__ = ``
  2647                                  ; Bytes used: 74/5120
  2648                                  
  2649                                  
  2650                                  ; Identifier table:
  2651                                  ; Ident __floatsisf
  2652                                  ; Ident __floatunsisf
  2653                                  ; Ident __fixsfsi
  2654                                  ; Ident __fixunssfsi
  2655                                  ; Ident __addsf3
  2656                                  ; Ident __subsf3
  2657                                  ; Ident __negsf2
  2658                                  ; Ident __mulsf3
  2659                                  ; Ident __divsf3
  2660                                  ; Ident __lesf2
  2661                                  ; Ident __gesf2
  2662                                  ; Ident dig
  2663                                  ; Ident intptr_t
  2664                                  ; Ident uintptr_t
  2665                                  ; Ident intmax_t
  2666                                  ; Ident uintmax_t
  2667                                  ; Ident int8_t
  2668                                  ; Ident int_least8_t
  2669                                  ; Ident int_fast8_t
  2670                                  ; Ident uint8_t
  2671                                  ; Ident uint_least8_t
  2672                                  ; Ident uint_fast8_t
  2673                                  ; Ident int16_t
  2674                                  ; Ident int_least16_t
  2675                                  ; Ident int_fast16_t
  2676                                  ; Ident uint16_t
  2677                                  ; Ident uint_least16_t
  2678                                  ; Ident uint_fast16_t
  2679                                  ; Ident int32_t
  2680                                  ; Ident int_least32_t
  2681                                  ; Ident int_fast32_t
  2682                                  ; Ident uint32_t
  2683                                  ; Ident uint_least32_t
  2684                                  ; Ident uint_fast32_t
  2685                                  ; Ident <something>
  2686                                  ; Ident quot
  2687                                  ; Ident rem
  2688                                  ; Ident imaxdiv_t
  2689                                  ; Ident FALSE
  2690                                  ; Ident TRUE
  2691                                  ; Ident bool_t
  2692                                  ; Ident pointer_t
  2693                                  ; Ident funcion_t
  2694                                  ; Ident manejador_t
  2695                                  ; Ident rti_t
  2696                                  ; Ident isr_t
  2697                                  ; Ident handler_t
  2698                                  ; Ident retardarThread_t
  2699                                  ; Ident ptrTVI_t
  2700                                  ; Ident modoSO1_Bin
  2701                                  ; Ident modoSO1_Exe
  2702                                  ; Ident modoSO1_Bs
  2703                                  ; Ident modoSO1_t
  2704                                  ; Ident lo
  2705                                  ; Ident hi
  2706                                  ; Ident lh_t
  2707                                  ; Ident offset
  2708                                  ; Ident segment
  2709                                  ; Ident address_t
  2710                                  ; Ident ptr
  2711                                  ; Ident adr
  2712                                  ; Ident uPtrAdr_t
  2713                                  ; Ident pid_t
  2714                                  ; Ident tid_t
  2715                                  ; Ident uid_t
  2716                                  ; Ident gid_t
  2717                                  ; Ident pindx_t
  2718                                  ; Ident tindx_t
  2719                                  ; Ident df_t
  2720                                  ; Ident dfs_t
  2721                                  ; Ident rindx_t
  2722                                  ; Ident inportb
  2723                                  ; Ident port
  2724                                  ; Ident inport
  2725                                  ; Ident outport
  2726                                  ; Ident val
  2727                                  ; Ident outportb
  2728                                  ; Ident inportb_r
  2729                                  ; Ident outportb_r
  2730                                  ; Ident contadorTimer0
  2731                                  ; Ident size_t
  2732                                  ; Ident memset
  2733                                  ; Ident memcpy
  2734                                  ; Ident memmove
  2735                                  ; Ident memchr
  2736                                  ; Ident memcmp
  2737                                  ; Ident strcpy
  2738                                  ; Ident strncpy
  2739                                  ; Ident strxfrm
  2740                                  ; Ident strcat
  2741                                  ; Ident strncat
  2742                                  ; Ident strlen
  2743                                  ; Ident strchr
  2744                                  ; Ident strrchr
  2745                                  ; Ident strstr
  2746                                  ; Ident strspn
  2747                                  ; Ident strcspn
  2748                                  ; Ident strpbrk
  2749                                  ; Ident strtok
  2750                                  ; Ident strcmp
  2751                                  ; Ident strncmp
  2752                                  ; Ident strcoll
  2753                                  ; Ident strerror
  2754                                  ; Ident modoAp_t
  2755                                  ; Ident startBin
  2756                                  ; Ident modoSO1
  2757                                  ; Ident unidadBIOS
  2758                                  ; Ident CS_SO1H
  2759                                  ; Ident RO_SO1H
  2760                                  ; Ident DS_SO1H
  2761                                  ; Ident BSS_SO1H
  2762                                  ; Ident SS_SO1H
  2763                                  ; Ident SS_Kernel
  2764                                  ; Ident IMRInicial
  2765                                  ; Ident obtenerMapa
  2766                                  ; Ident _start
  2767                                  ; Ident __start__
  2768                                  ; Ident main
  2769                                  ; Ident finProceso
  2770                                  ; Ident finThread
  2771                                  ; Ident DS
  2772                                  ; Ident ES
  2773                                  ; Ident EDI
  2774                                  ; Ident ESI
  2775                                  ; Ident EBP
  2776                                  ; Ident ESP
  2777                                  ; Ident EBX
  2778                                  ; Ident EDX
  2779                                  ; Ident ECX
  2780                                  ; Ident EAX
  2781                                  ; Ident IP
  2782                                  ; Ident CS
  2783                                  ; Ident Flags
  2784                                  ; Ident tramaDWords_t
  2785                                  ; Ident DI
  2786                                  ; Ident rDI
  2787                                  ; Ident SI
  2788                                  ; Ident rSI
  2789                                  ; Ident BP
  2790                                  ; Ident rBP
  2791                                  ; Ident SP
  2792                                  ; Ident rSP
  2793                                  ; Ident BX
  2794                                  ; Ident rBX
  2795                                  ; Ident DX
  2796                                  ; Ident rDX
  2797                                  ; Ident CX
  2798                                  ; Ident rCX
  2799                                  ; Ident AX
  2800                                  ; Ident rAX
  2801                                  ; Ident tramaWords_t
  2802                                  ; Ident BL
  2803                                  ; Ident BH
  2804                                  ; Ident rB
  2805                                  ; Ident DL
  2806                                  ; Ident DH
  2807                                  ; Ident rD
  2808                                  ; Ident CL
  2809                                  ; Ident CH
  2810                                  ; Ident rC
  2811                                  ; Ident AL
  2812                                  ; Ident AH
  2813                                  ; Ident rA
  2814                                  ; Ident tramaBytes_t
  2815                                  ; Ident td
  2816                                  ; Ident tw
  2817                                  ; Ident tb
  2818                                  ; Ident trama_t
  2819                                  ; Ident tam
  2820                                  ; Ident sig
  2821                                  ; Ident ant
  2822                                  ; Ident aux
  2823                                  ; Ident relleno
  2824                                  ; Ident bloque_t
  2825                                  ; Ident ptrBloque_t
  2826                                  ; Ident cab
  2827                                  ; Ident dobleEnlace_t
  2828                                  ; Ident numElem
  2829                                  ; Ident primero
  2830                                  ; Ident cabecera
  2831                                  ; Ident e
  2832                                  ; Ident c2c_t
  2833                                  ; Ident posicionC2c
  2834                                  ; Ident i
  2835                                  ; Ident c2c
  2836                                  ; Ident eliminarC2c
  2837                                  ; Ident apilarC2c
  2838                                  ; Ident encolarC2c
  2839                                  ; Ident desencolarC2c
  2840                                  ; Ident inicializarC2c
  2841                                  ; Ident compartida
  2842                                  ; Ident ptrC2c_t
  2843                                  ; Ident posicionPC2c
  2844                                  ; Ident eliminarPC2c
  2845                                  ; Ident ptrC2c
  2846                                  ; Ident apilarPC2c
  2847                                  ; Ident encolarPC2c
  2848                                  ; Ident desencolarPC2c
  2849                                  ; Ident inicializarPC2c
  2850                                  ; Ident callBack_t
  2851                                  ; Ident arg
  2852                                  ; Ident num
  2853                                  ; Ident in
  2854                                  ; Ident out
  2855                                  ; Ident max
  2856                                  ; Ident callBack
  2857                                  ; Ident descCcb_t
  2858                                  ; Ident ccb_t
  2859                                  ; Ident inicCcb
  2860                                  ; Ident ccb
  2861                                  ; Ident encolarCcb
  2862                                  ; Ident cb
  2863                                  ; Ident desencolarCcb
  2864                                  ; Ident eliminarCcb
  2865                                  ; Ident eliminarSegCcb
  2866                                  ; Ident segmento
  2867                                  ; Ident vaciarCcb
  2868                                  ; Ident atenderCcb
  2869                                  ; Ident libre
  2870                                  ; Ident preparado
  2871                                  ; Ident ejecutandose
  2872                                  ; Ident bloqueado
  2873                                  ; Ident estado_t
  2874                                  ; Ident modoAp
  2875                                  ; Ident dfs
  2876                                  ; Ident pos
  2877                                  ; Ident dfa_t
  2878                                  ; Ident pid
  2879                                  ; Ident noStatus
  2880                                  ; Ident status
  2881                                  ; Ident ppindx
  2882                                  ; Ident hpindx
  2883                                  ; Ident c2cHijos
  2884                                  ; Ident c2cThreads
  2885                                  ; Ident CSProc
  2886                                  ; Ident tamCodigo
  2887                                  ; Ident desplBSS
  2888                                  ; Ident desplPila
  2889                                  ; Ident tamFichero
  2890                                  ; Ident programa
  2891                                  ; Ident comando
  2892                                  ; Ident nfa
  2893                                  ; Ident tfa
  2894                                  ; Ident uid
  2895                                  ; Ident gid
  2896                                  ; Ident descProceso_t
  2897                                  ; Ident tid
  2898                                  ; Ident estado
  2899                                  ; Ident esperandoPor
  2900                                  ; Ident trama
  2901                                  ; Ident ptindx
  2902                                  ; Ident htindx
  2903                                  ; Ident pindx
  2904                                  ; Ident SSThread
  2905                                  ; Ident SP0
  2906                                  ; Ident descThread_t
  2907                                  ; Ident flibre
  2908                                  ; Ident fRegular
  2909                                  ; Ident fedBloques
  2910                                  ; Ident fedCaracteres
  2911                                  ; Ident tuberia
  2912                                  ; Ident tipoFichero_t
  2913                                  ; Ident tipo
  2914                                  ; Ident nombre
  2915                                  ; Ident rindx
  2916                                  ; Ident menor
  2917                                  ; Ident shareMode
  2918                                  ; Ident contAp_L
  2919                                  ; Ident contAp_E
  2920                                  ; Ident descFichero_t
  2921                                  ; Ident rLibre
  2922                                  ; Ident rDCaracteres
  2923                                  ; Ident rDBloques
  2924                                  ; Ident rTuberia
  2925                                  ; Ident rGP
  2926                                  ; Ident rGM
  2927                                  ; Ident rSF
  2928                                  ; Ident rOtro
  2929                                  ; Ident tipoRecurso_t
  2930                                  ; Ident open_t
  2931                                  ; Ident modo
  2932                                  ; Ident release_t
  2933                                  ; Ident read_t
  2934                                  ; Ident dir
  2935                                  ; Ident nbytes
  2936                                  ; Ident aio_read_t
  2937                                  ; Ident write_t
  2938                                  ; Ident aio_write_t
  2939                                  ; Ident lseek_t
  2940                                  ; Ident whence
  2941                                  ; Ident fcntl_t
  2942                                  ; Ident cmd
  2943                                  ; Ident ioctl_t
  2944                                  ; Ident request
  2945                                  ; Ident eliminar_t
  2946                                  ; Ident tindx
  2947                                  ; Ident c2cFichRec
  2948                                  ; Ident numVI
  2949                                  ; Ident nVInt
  2950                                  ; Ident irq
  2951                                  ; Ident isr
  2952                                  ; Ident open
  2953                                  ; Ident release
  2954                                  ; Ident read
  2955                                  ; Ident aio_read
  2956                                  ; Ident write
  2957                                  ; Ident aio_write
  2958                                  ; Ident lseek
  2959                                  ; Ident fcntl
  2960                                  ; Ident ioctl
  2961                                  ; Ident eliminar
  2962                                  ; Ident descRecurso_t
  2963                                  ; Ident SP0_So1
  2964                                  ; Ident IMR
  2965                                  ; Ident ptrDebugWord
  2966                                  ; Ident info_t
  2967                                  ; Ident signatura
  2968                                  ; Ident bytesUltSector
  2969                                  ; Ident sectores
  2970                                  ; Ident numDirReub
  2971                                  ; Ident numParCabecera
  2972                                  ; Ident minAlloc
  2973                                  ; Ident maxAlloc
  2974                                  ; Ident SS0
  2975                                  ; Ident checkSum
  2976                                  ; Ident IP0
  2977                                  ; Ident CS0
  2978                                  ; Ident offTablaReub
  2979                                  ; Ident numOverlay
  2980                                  ; Ident cabecera_t
  2981                                  ; Ident Libres
  2982                                  ; Ident Ocupados
  2983                                  ; Ident e2DescProceso
  2984                                  ; Ident e2DescThread
  2985                                  ; Ident e2DescFichero
  2986                                  ; Ident e2DescRecurso
  2987                                  ; Ident e2Hijos
  2988                                  ; Ident e2Threads
  2989                                  ; Ident e2Preparados
  2990                                  ; Ident e2Urgentes
  2991                                  ; Ident e2POrdenados
  2992                                  ; Ident e2TDormidos
  2993                                  ; Ident e2FichRec
  2994                                  ; Ident e2PFR_t
  2995                                  ; Ident DPLibres
  2996                                  ; Ident DPOcupados
  2997                                  ; Ident DTLibres
  2998                                  ; Ident DTOcupados
  2999                                  ; Ident TPreparados
  3000                                  ; Ident TUrgentes
  3001                                  ; Ident POrdenados
  3002                                  ; Ident TDormidos
  3003                                  ; Ident DFLibres
  3004                                  ; Ident DFOcupados
  3005                                  ; Ident DRLibres
  3006                                  ; Ident DROcupados
  3007                                  ; Ident numColasPFR
  3008                                  ; Ident cPFR_t
  3009                                  ; Ident sigThread_t
  3010                                  ; Ident activarThread_t
  3011                                  ; Ident buscarNuevoThreadActual_t
  3012                                  ; Ident bloquearThreadActual_t
  3013                                  ; Ident ptrIndProcesoActual
  3014                                  ; Ident ptrIndThreadActual
  3015                                  ; Ident ptrTramaThread
  3016                                  ; Ident ptrActivarAlEpilogo
  3017                                  ; Ident ptrDescProceso
  3018                                  ; Ident tamDescProceso
  3019                                  ; Ident ptrDescThread
  3020                                  ; Ident tamDescThread
  3021                                  ; Ident ptrDescFichero
  3022                                  ; Ident ptrDescRecurso
  3023                                  ; Ident ptrC2cPFR
  3024                                  ; Ident ptrE2PFR
  3025                                  ; Ident ptrNivelActivacionSO1H
  3026                                  ; Ident ptrEnHalt
  3027                                  ; Ident ptrHayTic
  3028                                  ; Ident ptrCcbAlEpilogo
  3029                                  ; Ident ptrSS_Thread
  3030                                  ; Ident ptrSP_Thread
  3031                                  ; Ident ptrSS_Kernel
  3032                                  ; Ident ptrSP0_Kernel
  3033                                  ; Ident SP0_SO1H
  3034                                  ; Ident ptrContRodajas
  3035                                  ; Ident ptrContTicsRodaja
  3036                                  ; Ident ptrVIOrg
  3037                                  ; Ident sigThread
  3038                                  ; Ident activarThread
  3039                                  ; Ident buscarNuevoThreadActual
  3040                                  ; Ident bloquearThreadActual
  3041                                  ; Ident ptrListaLibres
  3042                                  ; Ident ptrTamBloqueMax
  3043                                  ; Ident descSO1H_t
  3044                                  ; Ident SS_Thread
  3045                                  ; Ident SP_Thread
  3046                                  ; Ident SS_Tarea
  3047                                  ; Ident SP_Tarea
  3048                                  ; Ident nivelActivacionSO1H
  3049                                  ; Ident nVIntActual
  3050                                  ; Ident enHalt
  3051                                  ; Ident activarAlEpilogo1
  3052                                  ; Ident hayTic
  3053                                  ; Ident setKernelStack
  3054                                  ; Ident setThreadStack
  3055                                  ; Ident reg_DL
  3056                                  ; Ident prepararDesbloqueadosUrgentes
  3057                                  ; Ident tamBloqueMax
  3058                                  ; Ident listaLibres
  3059                                  ; Ident k_buscarBloque
  3060                                  ; Ident k_devolverBloque
  3061                                  ; Ident rec_gm
  3062                                  ; Ident inicGM
  3063                                  ; Ident mostrarListaLibres
  3064                                  ; Ident link_gm_k
  3065                                  ; Ident descProcesoExt_t
  3066                                  ; Ident descThreadExt_t
  3067                                  ; Ident descProceso
  3068                                  ; Ident descThread
  3069                                  ; Ident descFichero
  3070                                  ; Ident descRecurso
  3071                                  ; Ident c2cPFR
  3072                                  ; Ident e2PFR
  3073                                  ; Ident descCcbAlEpilogo
  3074                                  ; Ident ccbAlEpilogo
  3075                                  ; Ident tramaThread
  3076                                  ; Ident tramaTarea
  3077                                  ; Ident indThreadActual
  3078                                  ; Ident indProcesoActual
  3079                                  ; Ident indThreadDeSuperficie
  3080                                  ; Ident contRodajas
  3081                                  ; Ident contTicsRodaja
  3082                                  ; Ident contadorTimer00
  3083                                  ; Ident contOcioso
  3084                                  ; Ident nuevoPid
  3085                                  ; Ident nuevoTid
  3086                                  ; Ident indice
  3087                                  ; Ident registrarEnPOrdenados
  3088                                  ; Ident crearThread
  3089                                  ; Ident funcion
  3090                                  ; Ident crearProceso
  3091                                  ; Ident tamFich
  3092                                  ; Ident inicProcesos
  3093                                  ; Ident resetPids
  3094                                  ; Ident resetTids
  3095                                  ; Ident terminarThreadIndx
  3096                                  ; Ident eliminarThreadIndx
  3097                                  ; Ident terminarProcIndx
  3098                                  ; Ident eliminarProcIndx
  3099                                  ; Ident matarThreadIndx
  3100                                  ; Ident matarProcIndx
  3101                                  ; Ident link_procs
  3102                                  ; Ident tipoOrdenador
  3103                                  ; Ident rebootLegacy
  3104                                  ; Ident tipoTeclado
  3105                                  ; Ident leerTeclaBIOS
  3106                                  ; Ident leerTeclaExtBIOS
  3107                                  ; Ident teclaListaBIOS
  3108                                  ; Ident leerTeclaListaBDA
  3109                                  ; Ident teclaListaBDA
  3110                                  ; Ident printCarBIOS
  3111                                  ; Ident car
  3112                                  ; Ident printCarPagBIOS
  3113                                  ; Ident pag
  3114                                  ; Ident printCarAtrPagBIOS
  3115                                  ; Ident atr
  3116                                  ; Ident printLnBIOS
  3117                                  ; Ident printStrBIOS
  3118                                  ; Ident str
  3119                                  ; Ident printStrHastaBIOS
  3120                                  ; Ident n
  3121                                  ; Ident lleno
  3122                                  ; Ident printDecBIOS
  3123                                  ; Ident l
  3124                                  ; Ident printLDecBIOS
  3125                                  ; Ident printIntBIOS
  3126                                  ; Ident printLIntBIOS
  3127                                  ; Ident printHexBIOS
  3128                                  ; Ident printLHexBIOS
  3129                                  ; Ident printBinBIOS
  3130                                  ; Ident printLBinBIOS
  3131                                  ; Ident printPtrBIOS
  3132                                  ; Ident printByteBIOS
  3133                                  ; Ident b
  3134                                  ; Ident printWordBIOS
  3135                                  ; Ident w
  3136                                  ; Ident printCadBIOS
  3137                                  ; Ident cad
  3138                                  ; Ident esperarTicsBIOS
  3139                                  ; Ident tics
  3140                                  ; Ident modoDeVideo
  3141                                  ; Ident establecerModoDeVideo
  3142                                  ; Ident paginaActiva
  3143                                  ; Ident establecerPaginaActiva
  3144                                  ; Ident numPagsVideo
  3145                                  ; Ident scrollPagBDA
  3146                                  ; Ident numLineas
  3147                                  ; Ident scrollPagBIOS
  3148                                  ; Ident scrollBIOS
  3149                                  ; Ident goToXYPag
  3150                                  ; Ident fila
  3151                                  ; Ident columna
  3152                                  ; Ident goToXYBIOS
  3153                                  ; Ident setCursorBIOS
  3154                                  ; Ident linea1
  3155                                  ; Ident linea2
  3156                                  ; Ident ocultaCursorBIOS
  3157                                  ; Ident readXYPagBIOS
  3158                                  ; Ident readXYBIOS
  3159                                  ; Ident memBIOS
  3160                                  ; Ident enviarBIOS
  3161                                  ; Ident recibirBIOS
  3162                                  ; Ident hayApmBIOS
  3163                                  ; Ident version
  3164                                  ; Ident connectApmBIOS
  3165                                  ; Ident disconnectApmBIOS
  3166                                  ; Ident cpuIdleBIOS
  3167                                  ; Ident cpuBusyBIOS
  3168                                  ; Ident printCarVideo
  3169                                  ; Ident printLnVideo
  3170                                  ; Ident printStrVideo
  3171                                  ; Ident printStrHastaVideo
  3172                                  ; Ident printDecVideo
  3173                                  ; Ident printLDecVideo
  3174                                  ; Ident printIntVideo
  3175                                  ; Ident printLIntVideo
  3176                                  ; Ident printHexVideo
  3177                                  ; Ident printLHexVideo
  3178                                  ; Ident printBinVideo
  3179                                  ; Ident printLBinVideo
  3180                                  ; Ident printPtrVideo
  3181                                  ; Ident printByteVideo
  3182                                  ; Ident printWordVideo
  3183                                  ; Ident printCadVideo
  3184                                  ; Ident _start__text
  3185                                  ; Ident _stop__text
  3186                                  ; Ident _start__rodata
  3187                                  ; Ident _stop__rodata
  3188                                  ; Ident _start__data
  3189                                  ; Ident _stop__data
  3190                                  ; Ident _start__bss
  3191                                  ; Ident _stop__bss
  3192                                  ; Ident _start_allcode__
  3193                                  ; Ident _stop_allcode__
  3194                                  ; Ident _start_alldata__
  3195                                  ; Ident _stop_alldata__
  3196                                  ; Ident mostrarSeccion
  3197                                  ; Ident start
  3198                                  ; Ident stop
  3199                                  ; Ident descripcion
  3200                                  ; Ident mostrarSecciones
  3201                                  ; Ident strSo1h
  3202                                  ; Ident comandoSo1a
  3203                                  ; Ident comandoSo1b
  3204                                  ; Bytes used: 5991/16384
  3205                                  
  3206                                  ; Next label number: 180
  3207                                  ; Compilation succeeded.
