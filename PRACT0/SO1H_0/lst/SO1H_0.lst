     1                                  bits 16
     2                                  
     3                                  ; glb intptr_t : int
     4                                  ; glb uintptr_t : unsigned
     5                                  ; glb intmax_t : int
     6                                  ; glb uintmax_t : unsigned
     7                                  ; glb int8_t : signed char
     8                                  ; glb int_least8_t : signed char
     9                                  ; glb int_fast8_t : signed char
    10                                  ; glb uint8_t : unsigned char
    11                                  ; glb uint_least8_t : unsigned char
    12                                  ; glb uint_fast8_t : unsigned char
    13                                  ; glb int16_t : short
    14                                  ; glb int_least16_t : short
    15                                  ; glb int_fast16_t : short
    16                                  ; glb uint16_t : unsigned short
    17                                  ; glb uint_least16_t : unsigned short
    18                                  ; glb uint_fast16_t : unsigned short
    19                                  ; glb int32_t : int
    20                                  ; glb int_least32_t : int
    21                                  ; glb int_fast32_t : int
    22                                  ; glb uint32_t : unsigned
    23                                  ; glb uint_least32_t : unsigned
    24                                  ; glb uint_fast32_t : unsigned
    25                                  ; glb imaxdiv_t : struct <something>
    26                                  ; glb bool_t : int
    27                                  ; glb pointer_t : * unsigned char
    28                                  ; glb funcion_t : * (
    29                                  ; prm     <something> : * void
    30                                  ;     ) * void
    31                                  ; glb manejador_t : * (void) void
    32                                  ; glb rti_t : * (void) void
    33                                  ; glb isr_t : * (void) void
    34                                  ; glb handler_t : * (void) void
    35                                  ; glb retardarThread_t : * (void) int
    36                                  ; glb ptrTVI_t : * * (void) void
    37                                  ; glb modoSO1_t : int
    38                                  ; glb lh_t : struct <something>
    39                                  ; glb address_t : struct <something>
    40                                  ; glb uPtrAdr_t : union <something>
    41                                  ; glb pid_t : int
    42                                  ; glb tid_t : int
    43                                  ; glb uid_t : int
    44                                  ; glb gid_t : int
    45                                  ; glb pindx_t : int
    46                                  ; glb tindx_t : int
    47                                  ; glb df_t : int
    48                                  ; glb dfs_t : int
    49                                  ; glb rindx_t : int
    50                                  ; glb modoAp_t : unsigned short
    51                                  ; glb tramaDWords_t : struct <something>
    52                                  ; glb tramaWords_t : struct <something>
    53                                  ; RPN'ized expression: "2 "
    54                                  ; Expanded expression: "2 "
    55                                  ; Expression value: 2
    56                                  ; RPN'ized expression: "2 "
    57                                  ; Expanded expression: "2 "
    58                                  ; Expression value: 2
    59                                  ; RPN'ized expression: "2 "
    60                                  ; Expanded expression: "2 "
    61                                  ; Expression value: 2
    62                                  ; RPN'ized expression: "2 "
    63                                  ; Expanded expression: "2 "
    64                                  ; Expression value: 2
    65                                  ; glb tramaBytes_t : struct <something>
    66                                  ; glb trama_t : union <something>
    67                                  ; RPN'ized expression: "8 "
    68                                  ; Expanded expression: "8 "
    69                                  ; Expression value: 8
    70                                  ; glb bloque_t : struct <something>
    71                                  ; glb ptrBloque_t : * struct <something>
    72                                  ; glb dobleEnlace_t : struct <something>
    73                                  ; glb c2c_t : struct <something>
    74                                  ; glb posicionC2c : (
    75                                  ; prm     i : int
    76                                  ; prm     c2c : struct <something>
    77                                  ;     ) int
    78                                  ; glb eliminarC2c : (
    79                                  ; prm     i : int
    80                                  ; prm     c2c : struct <something>
    81                                  ;     ) void
    82                                  ; glb apilarC2c : (
    83                                  ; prm     i : int
    84                                  ; prm     c2c : struct <something>
    85                                  ;     ) void
    86                                  ; glb encolarC2c : (
    87                                  ; prm     i : int
    88                                  ; prm     c2c : struct <something>
    89                                  ;     ) void
    90                                  ; glb desencolarC2c : (
    91                                  ; prm     c2c : struct <something>
    92                                  ;     ) int
    93                                  ; glb inicializarC2c : (
    94                                  ; prm     c2c : * struct <something>
    95                                  ; prm     e : * struct <something>
    96                                  ; prm     cabecera : int
    97                                  ; prm     compartida : int
    98                                  ;     ) void
    99                                  ; glb ptrC2c_t : * struct <something>
   100                                  ; glb posicionPC2c : (
   101                                  ; prm     i : int
   102                                  ; prm     c2c : * struct <something>
   103                                  ;     ) int
   104                                  ; glb eliminarPC2c : (
   105                                  ; prm     i : int
   106                                  ; prm     ptrC2c : * struct <something>
   107                                  ;     ) void
   108                                  ; glb apilarPC2c : (
   109                                  ; prm     i : int
   110                                  ; prm     ptrC2c : * struct <something>
   111                                  ;     ) void
   112                                  ; glb encolarPC2c : (
   113                                  ; prm     i : int
   114                                  ; prm     ptrC2c : * struct <something>
   115                                  ;     ) void
   116                                  ; glb desencolarPC2c : (
   117                                  ; prm     ptrC2c : * struct <something>
   118                                  ;     ) int
   119                                  ; glb inicializarPC2c : (
   120                                  ; prm     ptrC2c : * struct <something>
   121                                  ; prm     e : * struct <something>
   122                                  ; prm     cabecera : int
   123                                  ; prm     compartida : int
   124                                  ;     ) void
   125                                  ; glb callBack_t : * (
   126                                  ; prm     arg : * void
   127                                  ;     ) int
   128                                  ; RPN'ized expression: "10 "
   129                                  ; Expanded expression: "10 "
   130                                  ; Expression value: 10
   131                                  ; glb descCcb_t : struct <something>
   132                                  ; glb ccb_t : * struct <something>
   133                                  ; glb inicCcb : (
   134                                  ; prm     ccb : * struct <something>
   135                                  ; prm     max : unsigned short
   136                                  ;     ) int
   137                                  ; glb encolarCcb : (
   138                                  ; prm     cb : * (
   139                                  ; prm         arg : * void
   140                                  ;         ) int
   141                                  ; prm     ccb : * struct <something>
   142                                  ;     ) int
   143                                  ; glb desencolarCcb : (
   144                                  ; prm     ccb : * struct <something>
   145                                  ;     ) * (
   146                                  ; prm     arg : * void
   147                                  ;     ) int
   148                                  ; glb eliminarCcb : (
   149                                  ; prm     cb : * (
   150                                  ; prm         arg : * void
   151                                  ;         ) int
   152                                  ; prm     ccb : * struct <something>
   153                                  ;     ) int
   154                                  ; glb eliminarSegCcb : (
   155                                  ; prm     segmento : unsigned short
   156                                  ; prm     ccb : * struct <something>
   157                                  ;     ) int
   158                                  ; glb vaciarCcb : (
   159                                  ; prm     ccb : * struct <something>
   160                                  ;     ) int
   161                                  ; glb atenderCcb : (
   162                                  ; prm     ccb : * struct <something>
   163                                  ;     ) int
   164                                  ; glb estado_t : int
   165                                  ; glb dfa_t : struct <something>
   166                                  ; RPN'ized expression: "12 "
   167                                  ; Expanded expression: "12 "
   168                                  ; Expression value: 12
   169                                  ; RPN'ized expression: "80 "
   170                                  ; Expanded expression: "80 "
   171                                  ; Expression value: 80
   172                                  ; RPN'ized expression: "10 "
   173                                  ; Expanded expression: "10 "
   174                                  ; Expression value: 10
   175                                  ; glb descProceso_t : struct <something>
   176                                  ; glb descThread_t : struct <something>
   177                                  ; glb tipoFichero_t : int
   178                                  ; RPN'ized expression: "9 "
   179                                  ; Expanded expression: "9 "
   180                                  ; Expression value: 9
   181                                  ; glb descFichero_t : struct <something>
   182                                  ; glb tipoRecurso_t : int
   183                                  ; glb open_t : * (
   184                                  ; prm     dfs : int
   185                                  ; prm     modo : unsigned short
   186                                  ;     ) int
   187                                  ; glb release_t : * (
   188                                  ; prm     dfs : int
   189                                  ;     ) int
   190                                  ; glb read_t : * (
   191                                  ; prm     dfs : int
   192                                  ; prm     dir : * unsigned char
   193                                  ; prm     nbytes : unsigned short
   194                                  ;     ) int
   195                                  ; glb aio_read_t : * (
   196                                  ; prm     dfs : int
   197                                  ; prm     dir : * unsigned char
   198                                  ; prm     nbytes : unsigned short
   199                                  ;     ) int
   200                                  ; glb write_t : * (
   201                                  ; prm     dfs : int
   202                                  ; prm     dir : * unsigned char
   203                                  ; prm     nbytes : unsigned short
   204                                  ;     ) int
   205                                  ; glb aio_write_t : * (
   206                                  ; prm     dfs : int
   207                                  ; prm     dir : * unsigned char
   208                                  ; prm     nbytes : unsigned short
   209                                  ;     ) int
   210                                  ; glb lseek_t : * (
   211                                  ; prm     dfs : int
   212                                  ; prm     pos : int
   213                                  ; prm     whence : unsigned short
   214                                  ;     ) int
   215                                  ; glb fcntl_t : * (
   216                                  ; prm     dfs : int
   217                                  ; prm     cmd : unsigned short
   218                                  ; prm     arg : unsigned short
   219                                  ;     ) int
   220                                  ; glb ioctl_t : * (
   221                                  ; prm     dfs : int
   222                                  ; prm     request : unsigned short
   223                                  ; prm     arg : unsigned short
   224                                  ;     ) int
   225                                  ; glb eliminar_t : * (
   226                                  ; prm     pindx : int
   227                                  ;     ) int
   228                                  ; RPN'ized expression: "12 "
   229                                  ; Expanded expression: "12 "
   230                                  ; Expression value: 12
   231                                  ; RPN'ized expression: "2 "
   232                                  ; Expanded expression: "2 "
   233                                  ; Expression value: 2
   234                                  ; RPN'ized expression: "2 "
   235                                  ; Expanded expression: "2 "
   236                                  ; Expression value: 2
   237                                  ; RPN'ized expression: "2 "
   238                                  ; Expanded expression: "2 "
   239                                  ; Expression value: 2
   240                                  ; glb descRecurso_t : struct <something>
   241                                  ; glb info_t : struct <something>
   242                                  ; glb cabecera_t : struct <something>
   243                                  ; RPN'ized expression: "16 1 + "
   244                                  ; Expanded expression: "17 "
   245                                  ; Expression value: 17
   246                                  ; RPN'ized expression: "16 2 + "
   247                                  ; Expanded expression: "18 "
   248                                  ; Expression value: 18
   249                                  ; RPN'ized expression: "2010 1 + "
   250                                  ; Expanded expression: "2011 "
   251                                  ; Expression value: 2011
   252                                  ; RPN'ized expression: "2010 2 + "
   253                                  ; Expanded expression: "2012 "
   254                                  ; Expression value: 2012
   255                                  ; RPN'ized expression: "20 1 + "
   256                                  ; Expanded expression: "21 "
   257                                  ; Expression value: 21
   258                                  ; RPN'ized expression: "20 2 + "
   259                                  ; Expanded expression: "22 "
   260                                  ; Expression value: 22
   261                                  ; RPN'ized expression: "14 1 + "
   262                                  ; Expanded expression: "15 "
   263                                  ; Expression value: 15
   264                                  ; RPN'ized expression: "14 2 + "
   265                                  ; Expanded expression: "16 "
   266                                  ; Expression value: 16
   267                                  ; RPN'ized expression: "16 16 + "
   268                                  ; Expanded expression: "32 "
   269                                  ; Expression value: 32
   270                                  ; RPN'ized expression: "2010 16 + "
   271                                  ; Expanded expression: "2026 "
   272                                  ; Expression value: 2026
   273                                  ; RPN'ized expression: "2010 1 + "
   274                                  ; Expanded expression: "2011 "
   275                                  ; Expression value: 2011
   276                                  ; RPN'ized expression: "2010 1 + "
   277                                  ; Expanded expression: "2011 "
   278                                  ; Expression value: 2011
   279                                  ; RPN'ized expression: "16 1 + "
   280                                  ; Expanded expression: "17 "
   281                                  ; Expression value: 17
   282                                  ; RPN'ized expression: "2010 1 + "
   283                                  ; Expanded expression: "2011 "
   284                                  ; Expression value: 2011
   285                                  ; RPN'ized expression: "20 14 + "
   286                                  ; Expanded expression: "34 "
   287                                  ; Expression value: 34
   288                                  ; glb e2PFR_t : struct <something>
   289                                  ; glb cPFR_t : int
   290                                  ; glb sigThread_t : * () int
   291                                  ; glb activarThread_t : * (
   292                                  ; prm     tindx : int
   293                                  ;     ) void
   294                                  ; glb buscarNuevoThreadActual_t : * (void) void
   295                                  ; glb bloquearThreadActual_t : * (
   296                                  ; prm     rindx : int
   297                                  ;     ) void
   298                                  ; glb descSO1H_t : struct <something>
   299                                  ; glb tipoOrdenador : (void) unsigned char
   300                                  ; glb rebootLegacy : (void) void
   301                                  ; glb tipoTeclado : (void) unsigned char
   302                                  ; glb leerTeclaBIOS : (void) unsigned short
   303                                  ; glb leerTeclaExtBIOS : (void) unsigned short
   304                                  ; glb teclaListaBIOS : (void) unsigned short
   305                                  ; glb leerTeclaListaBDA : (void) unsigned short
   306                                  ; glb teclaListaBDA : (void) unsigned short
   307                                  ; glb printCarBIOS : (
   308                                  ; prm     car : char
   309                                  ;     ) int
   310                                  ; glb printCarPagBIOS : (
   311                                  ; prm     car : char
   312                                  ; prm     pag : unsigned char
   313                                  ;     ) int
   314                                  ; glb printCarAtrPagBIOS : (
   315                                  ; prm     car : char
   316                                  ; prm     atr : unsigned char
   317                                  ; prm     pag : unsigned char
   318                                  ;     ) int
   319                                  ; glb printLnBIOS : (void) int
   320                                  ; glb printStrBIOS : (
   321                                  ; prm     str : * char
   322                                  ;     ) int
   323                                  ; glb printStrHastaBIOS : (
   324                                  ; prm     str : * char
   325                                  ; prm     n : unsigned short
   326                                  ; prm     lleno : int
   327                                  ;     ) int
   328                                  ; glb printDecBIOS : (
   329                                  ; prm     num : unsigned short
   330                                  ; prm     l : unsigned short
   331                                  ;     ) int
   332                                  ; glb printLDecBIOS : (
   333                                  ; prm     num : unsigned
   334                                  ; prm     l : unsigned short
   335                                  ;     ) int
   336                                  ; glb printIntBIOS : (
   337                                  ; prm     num : short
   338                                  ; prm     l : unsigned short
   339                                  ;     ) int
   340                                  ; glb printLIntBIOS : (
   341                                  ; prm     num : int
   342                                  ; prm     l : unsigned short
   343                                  ;     ) int
   344                                  ; glb printHexBIOS : (
   345                                  ; prm     num : unsigned short
   346                                  ; prm     l : unsigned short
   347                                  ;     ) int
   348                                  ; glb printLHexBIOS : (
   349                                  ; prm     num : unsigned
   350                                  ; prm     l : unsigned short
   351                                  ;     ) int
   352                                  ; glb printBinBIOS : (
   353                                  ; prm     num : unsigned short
   354                                  ; prm     l : unsigned short
   355                                  ;     ) int
   356                                  ; glb printLBinBIOS : (
   357                                  ; prm     num : unsigned
   358                                  ; prm     l : unsigned short
   359                                  ;     ) int
   360                                  ; glb printPtrBIOS : (
   361                                  ; prm     ptr : * unsigned char
   362                                  ;     ) int
   363                                  ; glb printByteBIOS : (
   364                                  ; prm     b : unsigned char
   365                                  ;     ) int
   366                                  ; glb printWordBIOS : (
   367                                  ; prm     w : unsigned short
   368                                  ;     ) int
   369                                  ; glb printCadBIOS : (
   370                                  ; prm     cad : * char
   371                                  ;     ) int
   372                                  ; glb esperarTicsBIOS : (
   373                                  ; prm     tics : unsigned short
   374                                  ;     ) void
   375                                  ; glb modoDeVideo : (void) unsigned char
   376                                  ; glb establecerModoDeVideo : (
   377                                  ; prm     modo : unsigned char
   378                                  ;     ) void
   379                                  ; glb paginaActiva : (void) unsigned char
   380                                  ; glb establecerPaginaActiva : (
   381                                  ; prm     num : unsigned char
   382                                  ;     ) void
   383                                  ; glb numPagsVideo : (void) unsigned char
   384                                  ; glb scrollPagBDA : (
   385                                  ; prm     numLineas : unsigned char
   386                                  ; prm     pag : unsigned char
   387                                  ;     ) void
   388                                  ; glb scrollPagBIOS : (
   389                                  ; prm     numLineas : unsigned char
   390                                  ; prm     pag : unsigned char
   391                                  ;     ) void
   392                                  ; glb scrollBIOS : (
   393                                  ; prm     numLineas : unsigned char
   394                                  ;     ) void
   395                                  ; glb goToXYPag : (
   396                                  ; prm     fila : unsigned char
   397                                  ; prm     columna : unsigned char
   398                                  ; prm     pag : unsigned char
   399                                  ;     ) void
   400                                  ; glb goToXYBIOS : (
   401                                  ; prm     fila : unsigned char
   402                                  ; prm     columna : unsigned char
   403                                  ;     ) void
   404                                  ; glb setCursorBIOS : (
   405                                  ; prm     linea1 : unsigned char
   406                                  ; prm     linea2 : unsigned char
   407                                  ;     ) void
   408                                  ; glb ocultaCursorBIOS : (void) void
   409                                  ; glb readXYPagBIOS : (
   410                                  ; prm     fila : * unsigned char
   411                                  ; prm     columna : * unsigned char
   412                                  ; prm     linea1 : * unsigned char
   413                                  ; prm     linea2 : * unsigned char
   414                                  ; prm     pag : unsigned char
   415                                  ;     ) void
   416                                  ; glb readXYBIOS : (
   417                                  ; prm     fila : * unsigned char
   418                                  ; prm     columna : * unsigned char
   419                                  ; prm     linea1 : * unsigned char
   420                                  ; prm     linea2 : * unsigned char
   421                                  ;     ) void
   422                                  ; glb memBIOS : (void) unsigned short
   423                                  ; glb enviarBIOS : (
   424                                  ; prm     car : char
   425                                  ;     ) void
   426                                  ; glb recibirBIOS : (void) char
   427                                  ; glb hayApmBIOS : (
   428                                  ; prm     version : * unsigned short
   429                                  ;     ) int
   430                                  ; glb connectApmBIOS : (void) int
   431                                  ; glb disconnectApmBIOS : (void) int
   432                                  ; glb cpuIdleBIOS : (void) void
   433                                  ; glb cpuBusyBIOS : (void) void
   434                                  ; glb salvarPantallaInicial : (void) void
   435                                  ; glb restaurarPantallaInicial : (void) void
   436                                  ; glb puntoDeParada : (void) void
   437                                  ; glb assert : (
   438                                  ; prm     condicion : int
   439                                  ; prm     str : * char
   440                                  ;     ) void
   441                                  ; glb valorFlags : (void) unsigned short
   442                                  ; glb mostrarFlags : (void) void
   443                                  ; glb debug_parar : int
   444                                  ; glb pos_t : struct <something>
   445                                  ; RPN'ized expression: "50 "
   446                                  ; Expanded expression: "50 "
   447                                  ; Expression value: 50
   448                                  ; RPN'ized expression: "80 "
   449                                  ; Expanded expression: "80 "
   450                                  ; Expression value: 80
   451                                  ; glb pantalla_t : union <something>
   452                                  ; glb tamPantalla : (
   453                                  ; prm     numFilas : unsigned char
   454                                  ;     ) unsigned short
   455                                  ; glb pantallazo : (
   456                                  ; prm     pantalla : * union <something>
   457                                  ; prm     numFilas : unsigned short
   458                                  ; prm     car : char
   459                                  ; prm     atr : char
   460                                  ; prm     esqSupDeF : unsigned char
   461                                  ; prm     esqSupDeC : unsigned char
   462                                  ; prm     esqInfIzF : unsigned char
   463                                  ; prm     esqInfIzC : unsigned char
   464                                  ;     ) void
   465                                  ; glb borrarPantalla : (
   466                                  ; prm     pantalla : * union <something>
   467                                  ; prm     numFilas : unsigned short
   468                                  ;     ) void
   469                                  ; glb borrarCPantalla : (
   470                                  ; prm     pantalla : * union <something>
   471                                  ; prm     numFilas : unsigned short
   472                                  ;     ) void
   473                                  ; glb copiarPantalla : (
   474                                  ; prm     p1 : * union <something>
   475                                  ; prm     p2 : * union <something>
   476                                  ; prm     numFilas : unsigned short
   477                                  ;     ) void
   478                                  ; glb copiarCPantalla : (
   479                                  ; prm     p1 : * union <something>
   480                                  ; prm     p2 : * union <something>
   481                                  ; prm     numFilas : unsigned short
   482                                  ;     ) void
   483                                  ; glb scrollPantalla : (
   484                                  ; prm     pantalla : * union <something>
   485                                  ; prm     numFilas : unsigned short
   486                                  ;     ) void
   487                                  ; glb scrollCPantalla : (
   488                                  ; prm     pantalla : * union <something>
   489                                  ; prm     numFilas : unsigned short
   490                                  ;     ) void
   491                                  ; glb cursorF : unsigned char
   492                                  ; glb cursorC : unsigned char
   493                                  ; glb lineaOriginal1 : unsigned char
   494                                  ; glb lineaOriginal2 : unsigned char
   495                                  ; glb inicMemVideo : (void) void
   496                                  ; glb finMemVideo : (void) int
   497                                  ; glb goToXYVideo : (
   498                                  ; prm     F : unsigned char
   499                                  ; prm     C : unsigned char
   500                                  ;     ) void
   501                                  ; glb printCarVideo : (
   502                                  ; prm     car : char
   503                                  ;     ) int
   504                                  ; RPN'ized expression: "4 "
   505                                  ; Expanded expression: "4 "
   506                                  ; Expression value: 4
   507                                  ; RPN'ized expression: "7 "
   508                                  ; Expanded expression: "7 "
   509                                  ; Expression value: 7
   510                                  ; RPN'ized expression: "10 "
   511                                  ; Expanded expression: "10 "
   512                                  ; Expression value: 10
   513                                  ; RPN'ized expression: "48 "
   514                                  ; Expanded expression: "48 "
   515                                  ; Expression value: 48
   516                                  ; glb tipoAdaptador_t : int
   517                                  ; RPN'ized expression: "8 "
   518                                  ; Expanded expression: "8 "
   519                                  ; Expression value: 8
   520                                  ; RPN'ized expression: "14 "
   521                                  ; Expanded expression: "14 "
   522                                  ; Expression value: 14
   523                                  ; glb fontSize_t : int
   524                                  ; glb numFilas : unsigned char
   525                                  ; glb numColumnas : unsigned char
   526                                  ; glb ptrPant : * union <something>
   527                                  ; glb tipoAdaptador : int
   528                                  ; glb redimensionable : int
   529                                  ; glb fontSize : unsigned char
   530                                  ; glb visibilidad : unsigned char
   531                                  ; glb inicBiosCrt : (void) void
   532                                  ; glb finBiosCrt : (void) void
   533                                  ; glb getFontSize : (void) int
   534                                  ; glb getFilas : (void) unsigned char
   535                                  ; glb comprobarAdaptador : (
   536                                  ; prm     tipoAdaptador : int
   537                                  ;     ) int
   538                                  ; glb tipoDeAdaptador : (void) int
   539                                  ; glb setCursorVisibilidad : (
   540                                  ; prm     valorDeVisibilidad : int
   541                                  ;     ) unsigned char
   542                                  ; glb setFontSize : (
   543                                  ; prm     size : int
   544                                  ;     ) void
   545                                  ; glb set25x80 : (void) void
   546                                  ; glb redimensionar : (
   547                                  ; prm     nFilas : unsigned char
   548                                  ; prm     nCols : unsigned char
   549                                  ;     ) void
   550                                  ; glb printCarVideo : (
   551                                  ; prm     car : char
   552                                  ;     ) int
   553                                  ; glb printLnVideo : (void) int
   554                                  ; glb printStrVideo : (
   555                                  ; prm     str : * char
   556                                  ;     ) int
   557                                  ; glb printStrHastaVideo : (
   558                                  ; prm     str : * char
   559                                  ; prm     n : unsigned short
   560                                  ; prm     lleno : int
   561                                  ;     ) int
   562                                  ; glb printDecVideo : (
   563                                  ; prm     num : unsigned short
   564                                  ; prm     l : unsigned short
   565                                  ;     ) int
   566                                  ; glb printLDecVideo : (
   567                                  ; prm     num : unsigned
   568                                  ; prm     l : unsigned short
   569                                  ;     ) int
   570                                  ; glb printIntVideo : (
   571                                  ; prm     num : int
   572                                  ; prm     l : unsigned short
   573                                  ;     ) int
   574                                  ; glb printLIntVideo : (
   575                                  ; prm     num : int
   576                                  ; prm     l : unsigned short
   577                                  ;     ) int
   578                                  ; glb printHexVideo : (
   579                                  ; prm     num : unsigned short
   580                                  ; prm     l : unsigned short
   581                                  ;     ) int
   582                                  ; glb printLHexVideo : (
   583                                  ; prm     num : unsigned
   584                                  ; prm     l : unsigned short
   585                                  ;     ) int
   586                                  ; glb printBinVideo : (
   587                                  ; prm     num : unsigned short
   588                                  ; prm     l : unsigned short
   589                                  ;     ) int
   590                                  ; glb printLBinVideo : (
   591                                  ; prm     num : unsigned
   592                                  ; prm     l : unsigned short
   593                                  ;     ) int
   594                                  ; glb printPtrVideo : (
   595                                  ; prm     ptr : * unsigned char
   596                                  ;     ) int
   597                                  ; glb printByteVideo : (
   598                                  ; prm     b : unsigned char
   599                                  ;     ) int
   600                                  ; glb printWordVideo : (
   601                                  ; prm     w : unsigned short
   602                                  ;     ) int
   603                                  ; glb printCadVideo : (
   604                                  ; prm     cad : * char
   605                                  ;     ) int
   606                                  ; glb _start__text : char
   607                                  ; glb _stop__text : char
   608                                  ; glb _start__rodata : char
   609                                  ; glb _stop__rodata : char
   610                                  ; glb _start__data : char
   611                                  ; glb _stop__data : char
   612                                  ; glb _start__bss : char
   613                                  ; glb _stop__bss : char
   614                                  ; glb _start_allcode__ : char
   615                                  ; glb _stop_allcode__ : char
   616                                  ; glb _start_alldata__ : char
   617                                  ; glb _stop_alldata__ : char
   618                                  ; glb mostrarSeccion : (
   619                                  ; prm     start : unsigned
   620                                  ; prm     stop : unsigned
   621                                  ; prm     descripcion : * char
   622                                  ;     ) void
   623                                  ; glb mostrarSecciones : (void) void
   624                                  ; glb puntoDeParadaSO1 : (void) void
   625                                  ; glb leerScancodeListo : (void) unsigned char
   626                                  ; glb leerScancode : (void) unsigned char
   627                                  ; glb mirarLoQueHay : (
   628                                  ; prm     loQueHay : * unsigned short
   629                                  ;     ) void
   630                                  ; glb mostrarLoQueHay : (
   631                                  ; prm     loQueHay : unsigned short
   632                                  ;     ) void
   633                                  ; glb tirarS0 : (
   634                                  ; prm     loQueHay : unsigned short
   635                                  ;     ) void
   636                                  ; RPN'ized expression: "16 "
   637                                  ; Expanded expression: "16 "
   638                                  ; Expression value: 16
   639                                  ; glb nombreDF_t : [16u] char
   640                                  ; RPN'ized expression: "40 "
   641                                  ; Expanded expression: "40 "
   642                                  ; Expression value: 40
   643                                  ; glb comandoDF_t : [40u] char
   644                                  ; glb tipoDF_t : int
   645                                  ; glb entradaDF_t : struct <something>
   646                                  ; glb dirInicial : unsigned
   647                                  ; glb dirCargaFichero : unsigned
   648                                  ; glb dirFinal : unsigned
   649                                  ; glb reubicacion_t : struct <something>
   650                                  ; glb reubicacion : * struct <something>
   651                                  ; glb numER : unsigned
   652                                  ; glb inicKernel : (void) void
   653                                  ; glb size_t : unsigned
   654                                  ; glb memset : (
   655                                  ; prm     <something> : * void
   656                                  ; prm     <something> : int
   657                                  ; prm     <something> : unsigned
   658                                  ;     ) * void
   659                                  ; glb memcpy : (
   660                                  ; prm     <something> : * void
   661                                  ; prm     <something> : * void
   662                                  ; prm     <something> : unsigned
   663                                  ;     ) * void
   664                                  ; glb memmove : (
   665                                  ; prm     <something> : * void
   666                                  ; prm     <something> : * void
   667                                  ; prm     <something> : unsigned
   668                                  ;     ) * void
   669                                  ; glb memchr : (
   670                                  ; prm     <something> : * char
   671                                  ; prm     <something> : int
   672                                  ; prm     <something> : unsigned
   673                                  ;     ) * char
   674                                  ; glb memcmp : (
   675                                  ; prm     <something> : * void
   676                                  ; prm     <something> : * void
   677                                  ; prm     <something> : unsigned
   678                                  ;     ) int
   679                                  ; glb strcpy : (
   680                                  ; prm     <something> : * char
   681                                  ; prm     <something> : * char
   682                                  ;     ) * char
   683                                  ; glb strncpy : (
   684                                  ; prm     <something> : * char
   685                                  ; prm     <something> : * char
   686                                  ; prm     <something> : unsigned
   687                                  ;     ) * char
   688                                  ; glb strxfrm : (
   689                                  ; prm     <something> : * char
   690                                  ; prm     <something> : * char
   691                                  ; prm     <something> : unsigned
   692                                  ;     ) unsigned
   693                                  ; glb strcat : (
   694                                  ; prm     <something> : * char
   695                                  ; prm     <something> : * char
   696                                  ;     ) * char
   697                                  ; glb strncat : (
   698                                  ; prm     <something> : * char
   699                                  ; prm     <something> : * char
   700                                  ; prm     <something> : unsigned
   701                                  ;     ) * char
   702                                  ; glb strlen : (
   703                                  ; prm     <something> : * char
   704                                  ;     ) unsigned
   705                                  ; glb strchr : (
   706                                  ; prm     <something> : * char
   707                                  ; prm     <something> : int
   708                                  ;     ) * char
   709                                  ; glb strrchr : (
   710                                  ; prm     <something> : * char
   711                                  ; prm     <something> : int
   712                                  ;     ) * char
   713                                  ; glb strstr : (
   714                                  ; prm     <something> : * char
   715                                  ; prm     <something> : * char
   716                                  ;     ) * char
   717                                  ; glb strspn : (
   718                                  ; prm     <something> : * char
   719                                  ; prm     <something> : * char
   720                                  ;     ) unsigned
   721                                  ; glb strcspn : (
   722                                  ; prm     <something> : * char
   723                                  ; prm     <something> : * char
   724                                  ;     ) unsigned
   725                                  ; glb strpbrk : (
   726                                  ; prm     <something> : * char
   727                                  ; prm     <something> : * char
   728                                  ;     ) * char
   729                                  ; glb strtok : (
   730                                  ; prm     <something> : * char
   731                                  ; prm     <something> : * char
   732                                  ;     ) * char
   733                                  ; glb strcmp : (
   734                                  ; prm     <something> : * char
   735                                  ; prm     <something> : * char
   736                                  ;     ) int
   737                                  ; glb strncmp : (
   738                                  ; prm     <something> : * char
   739                                  ; prm     <something> : * char
   740                                  ; prm     <something> : unsigned
   741                                  ;     ) int
   742                                  ; glb strcoll : (
   743                                  ; prm     <something> : * char
   744                                  ; prm     <something> : * char
   745                                  ;     ) int
   746                                  ; glb strerror : (
   747                                  ; prm     <something> : int
   748                                  ;     ) * char
   749                                  ; glb dirInicial : unsigned
   750                                  section .bss
   751                                  	alignb 4
   752                                  	global	_dirInicial
   753                                  _dirInicial:
   754 00000000 <res 00000004>          	resb	4
   755                                  
   756                                  ; glb dirCargaFichero : unsigned
   757                                  section .bss
   758                                  	alignb 4
   759                                  	global	_dirCargaFichero
   760                                  _dirCargaFichero:
   761 00000004 <res 00000004>          	resb	4
   762                                  
   763                                  ; glb dirFinal : unsigned
   764                                  section .bss
   765                                  	alignb 4
   766                                  	global	_dirFinal
   767                                  _dirFinal:
   768 00000008 <res 00000004>          	resb	4
   769                                  
   770                                  ; glb numEDF : unsigned
   771                                  section .bss
   772                                  	alignb 4
   773                                  	global	_numEDF
   774                                  _numEDF:
   775 0000000C <res 00000004>          	resb	4
   776                                  
   777                                  ; glb numER : unsigned
   778                                  section .bss
   779                                  	alignb 4
   780                                  	global	_numER
   781                                  _numER:
   782 00000010 <res 00000004>          	resb	4
   783                                  
   784                                  ; RPN'ized expression: "8 "
   785                                  ; Expanded expression: "8 "
   786                                  ; Expression value: 8
   787                                  ; glb TR : [8u] struct <something>
   788                                  section .bss
   789                                  	alignb 4
   790                                  	global	_TR
   791                                  _TR:
   792 00000014 <res 000002C0>          	resb	704
   793                                  
   794                                  ; glb reubicacion : * struct <something>
   795                                  section .data
   796                                  	align 4
   797                                  	global	_reubicacion
   798                                  _reubicacion:
   799                                  ; =
   800                                  ; RPN'ized expression: "TR &u "
   801                                  ; Expanded expression: "TR "
   802                                  section .relod
   803 00000000 [00000000]              	dd	L1
   804                                  section .data
   805                                  L1:
   806 00000000 [14000000]              	dd	_TR
   807                                  
   808                                  ; glb main : (void) int
   809                                  section .text
   810                                  	global	_main
   811                                  _main:
   812 00000000 6655                    	push	ebp
   813 00000002 660FB7EC                	movzx	ebp, sp
   814 00000006 83EC10                  	 sub	sp,         16
   815                                  ; loc     loQueHay : (@-4): unsigned short
   816 00000009 FA                      cli
   817                                  ; if
   818                                  ; RPN'ized expression: "( modoSO1 ) modoSO1_Exe == "
   819                                  ; Expanded expression: " modoSO1 ()0 1 == "
   820                                  ; Fused expression:    "( modoSO1 )0 == ax 1 IF! "
   821 0000000A 9A                      	db	0x9A
   822                                  section .relot
   823 00000000 [0B000000]              	dd	L6
   824                                  section .text
   825                                  L6:
   826 0000000B [00000000]              	dd	_modoSO1
   827 0000000F 6683F801                	cmp	eax, 1
   828 00000013 7507                    	jne	L4
   829                                  ; RPN'ized expression: "( salvarPantallaInicial ) "
   830                                  ; Expanded expression: " salvarPantallaInicial ()0 "
   831                                  ; Fused expression:    "( salvarPantallaInicial )0 "
   832 00000015 9A                      	db	0x9A
   833                                  section .relot
   834 00000004 [16000000]              	dd	L7
   835                                  section .text
   836                                  L7:
   837 00000016 [00000000]              	dd	_salvarPantallaInicial
   838 0000001A EB16                    	jmp	L5
   839                                  L4:
   840                                  ; else
   841                                  ; if
   842                                  ; RPN'ized expression: "( modoSO1 ) modoSO1_Bin == "
   843                                  ; Expanded expression: " modoSO1 ()0 0 == "
   844                                  ; Fused expression:    "( modoSO1 )0 == ax 0 IF! "
   845 0000001C 9A                      	db	0x9A
   846                                  section .relot
   847 00000008 [1D000000]              	dd	L10
   848                                  section .text
   849                                  L10:
   850 0000001D [00000000]              	dd	_modoSO1
   851 00000021 6683F800                	cmp	eax, 0
   852 00000025 750B                    	jne	L8
   853                                  ; RPN'ized expression: "( 0 scrollBIOS ) "
   854                                  ; Expanded expression: " 0  scrollBIOS ()4 "
   855                                  ; Fused expression:    "( 0 , scrollBIOS )4 "
   856 00000027 666A00                  	push	dword 0
   857 0000002A 9A                      	db	0x9A
   858                                  section .relot
   859 0000000C [2B000000]              	dd	L11
   860                                  section .text
   861                                  L11:
   862 0000002B [00000000]              	dd	_scrollBIOS
   863 0000002F 83ECFC                  	sub	sp, -4
   864                                  L8:
   865                                  L5:
   866                                  ; RPN'ized expression: "( inicMemVideo ) "
   867                                  ; Expanded expression: " inicMemVideo ()0 "
   868                                  ; Fused expression:    "( inicMemVideo )0 "
   869 00000032 9A                      	db	0x9A
   870                                  section .relot
   871 00000010 [33000000]              	dd	L12
   872                                  section .text
   873                                  L12:
   874 00000033 [00000000]              	dd	_inicMemVideo
   875                                  ; RPN'ized expression: "( ocultaCursorBIOS ) "
   876                                  ; Expanded expression: " ocultaCursorBIOS ()0 "
   877                                  ; Fused expression:    "( ocultaCursorBIOS )0 "
   878 00000037 9A                      	db	0x9A
   879                                  section .relot
   880 00000014 [38000000]              	dd	L13
   881                                  section .text
   882                                  L13:
   883 00000038 [00000000]              	dd	_ocultaCursorBIOS
   884                                  ; loc     <something> : * unsigned short
   885                                  ; RPN'ized expression: "( loQueHay &u (something14) mirarLoQueHay ) "
   886                                  ; Expanded expression: " (@-4)  mirarLoQueHay ()4 "
   887                                  ; Fused expression:    "( (@-4) , mirarLoQueHay )4 "
   888 0000003C 6631C0                  	xor	eax, eax
   889 0000003F 8CD0                    	mov	ax, ss
   890 00000041 66C1E004                	shl	eax, 4
   891 00000045 66678D4405FC            	lea	eax, [ebp+eax-4]
   892 0000004B 6650                    	push	eax
   893 0000004D 9A                      	db	0x9A
   894                                  section .relot
   895 00000018 [4E000000]              	dd	L15
   896                                  section .text
   897                                  L15:
   898 0000004E [00000000]              	dd	_mirarLoQueHay
   899 00000052 83ECFC                  	sub	sp, -4
   900                                  ; RPN'ized expression: "( loQueHay mostrarLoQueHay ) "
   901                                  ; Expanded expression: " (@-4) *(2)  mostrarLoQueHay ()4 "
   902                                  ; Fused expression:    "( *(2) (@-4) , mostrarLoQueHay )4 "
   903 00000055 8B46FC                  	mov	ax, [bp-4]
   904 00000058 660FB7C0                	movzx	eax, ax
   905 0000005C 6650                    	push	eax
   906 0000005E 9A                      	db	0x9A
   907                                  section .relot
   908 0000001C [5F000000]              	dd	L16
   909                                  section .text
   910                                  L16:
   911 0000005F [00000000]              	dd	_mostrarLoQueHay
   912 00000063 83ECFC                  	sub	sp, -4
   913                                  ; switch
   914                                  ; RPN'ized expression: "( modoSO1 ) "
   915                                  ; Expanded expression: " modoSO1 ()0 "
   916                                  ; Fused expression:    "( modoSO1 )0  "
   917 00000066 9A                      	db	0x9A
   918                                  section .relot
   919 00000020 [67000000]              	dd	L19
   920                                  section .text
   921                                  L19:
   922 00000067 [00000000]              	dd	_modoSO1
   923 0000006B EB40                    	jmp	L18
   924                                  ; {
   925                                  ; case
   926                                  ; RPN'ized expression: "modoSO1_Bin "
   927                                  ; Expanded expression: "0 "
   928                                  ; Expression value: 0
   929                                  L20:
   930                                  ; case
   931                                  ; RPN'ized expression: "modoSO1_Exe "
   932                                  ; Expanded expression: "1 "
   933                                  ; Expression value: 1
   934                                  L21:
   935                                  ; RPN'ized expression: "( mostrarFlags ) "
   936                                  ; Expanded expression: " mostrarFlags ()0 "
   937                                  ; Fused expression:    "( mostrarFlags )0 "
   938 0000006D 9A                      	db	0x9A
   939                                  section .relot
   940 00000024 [6E000000]              	dd	L22
   941                                  section .text
   942                                  L22:
   943 0000006E [00000000]              	dd	_mostrarFlags
   944                                  
   945                                  section .rodata
   946                                  L23:
   947 00000000 3D3E20534F31482076-     	db	"=> SO1H v 0.1.2 "
   947 00000009 20302E312E3220     
   948 00000010 00                      	times	1 db 0
   949                                  
   950                                  section .text
   951                                  ; RPN'ized expression: "( L23 printStrVideo ) "
   952                                  ; Expanded expression: " L23  printStrVideo ()4 "
   953                                  ; Fused expression:    "( L23 , printStrVideo )4 "
   954                                  section .relod
   955 00000004 [74000000]              	dd	L24
   956                                  section .text
   957 00000072 6668                    	db	0x66, 0x68
   958                                  L24:
   959 00000074 [00000000]              	dd	L23
   960 00000078 9A                      	db	0x9A
   961                                  section .relot
   962 00000028 [79000000]              	dd	L25
   963                                  section .text
   964                                  L25:
   965 00000079 [00000000]              	dd	_printStrVideo
   966 0000007D 83ECFC                  	sub	sp, -4
   967                                  ; RPN'ized expression: "( printLnVideo ) "
   968                                  ; Expanded expression: " printLnVideo ()0 "
   969                                  ; Fused expression:    "( printLnVideo )0 "
   970 00000080 9A                      	db	0x9A
   971                                  section .relot
   972 0000002C [81000000]              	dd	L26
   973                                  section .text
   974                                  L26:
   975 00000081 [00000000]              	dd	_printLnVideo
   976                                  
   977                                  section .rodata
   978                                  L27:
   979 00000011 070A204552524F523A-     	db	7,10," ERROR: ints. no inhibidas"
   979 0000001A 20696E74732E206E6F-
   979 00000023 20696E686962696461-
   979 0000002C 73                 
   980 0000002D 00                      	times	1 db 0
   981                                  
   982                                  section .text
   983                                  ; RPN'ized expression: "( L27 , ( valorFlags ) 512 & 0 == assert ) "
   984                                  ; Expanded expression: " L27   valorFlags ()0 512 & 0 ==  assert ()8 "
   985                                  ; Fused expression:    "( L27 , ( valorFlags )0 & ax 512 == ax 0 , assert )8 "
   986                                  section .relod
   987 00000008 [87000000]              	dd	L28
   988                                  section .text
   989 00000085 6668                    	db	0x66, 0x68
   990                                  L28:
   991 00000087 [11000000]              	dd	L27
   992 0000008B 9A                      	db	0x9A
   993                                  section .relot
   994 00000030 [8C000000]              	dd	L29
   995                                  section .text
   996                                  L29:
   997 0000008C [00000000]              	dd	_valorFlags
   998 00000090 662500020000            	and	eax, 512
   999 00000096 6683F800                	cmp	eax, 0
  1000 0000009A 0F94C0                  	sete	al
  1001 0000009D 660FB6C0                	movzx	eax, al
  1002 000000A1 6650                    	push	eax
  1003 000000A3 9A                      	db	0x9A
  1004                                  section .relot
  1005 00000034 [A4000000]              	dd	L30
  1006                                  section .text
  1007                                  L30:
  1008 000000A4 [00000000]              	dd	_assert
  1009 000000A8 83ECF8                  	sub	sp, -8
  1010                                  ; }
  1011 000000AB EB0C                    	jmp	L17
  1012                                  L18:
  1013 000000AD 6683F800                	cmp	eax, 0
  1014 000000B1 74BA                    	je	L20
  1015 000000B3 6683F801                	cmp	eax, 1
  1016 000000B7 74B4                    	je	L21
  1017                                  L17:
  1018                                  ; RPN'ized expression: "( leerScancode ) "
  1019                                  ; Expanded expression: " leerScancode ()0 "
  1020                                  ; Fused expression:    "( leerScancode )0 "
  1021 000000B9 9A                      	db	0x9A
  1022                                  section .relot
  1023 00000038 [BA000000]              	dd	L31
  1024                                  section .text
  1025                                  L31:
  1026 000000BA [00000000]              	dd	_leerScancode
  1027                                  ; RPN'ized expression: "( leerScancode ) "
  1028                                  ; Expanded expression: " leerScancode ()0 "
  1029                                  ; Fused expression:    "( leerScancode )0 "
  1030 000000BE 9A                      	db	0x9A
  1031                                  section .relot
  1032 0000003C [BF000000]              	dd	L32
  1033                                  section .text
  1034                                  L32:
  1035 000000BF [00000000]              	dd	_leerScancode
  1036                                  ; loc     <something> : unsigned
  1037                                  ; loc     <something> : unsigned
  1038                                  ; loc     <something> : struct <something>
  1039                                  ; RPN'ized expression: "dirInicial ( CSInicial ) (something34) 4 << (something33) <something35> sizeof + = "
  1040                                  ; Expanded expression: "dirInicial  CSInicial ()0 4 << 32u + =(4) "
  1041                                  ; Fused expression:    "dirInicial push-ax ( CSInicial )0 << ax 4 + ax 32u =(204) **sp ax "
  1042                                  section .relod
  1043 0000000C [C5000000]              	dd	L36
  1044                                  section .text
  1045 000000C3 66B8                    	db	0x66, 0xB8
  1046                                  L36:
  1047 000000C5 [00000000]              	dd	_dirInicial
  1048 000000C9 6650                    	push	eax
  1049 000000CB 9A                      	db	0x9A
  1050                                  section .relot
  1051 00000040 [CC000000]              	dd	L37
  1052                                  section .text
  1053                                  L37:
  1054 000000CC [00000000]              	dd	_CSInicial
  1055 000000D0 66C1E004                	shl	eax, 4
  1056 000000D4 6683C020                	add	eax, 32
  1057 000000D8 665B                    	pop	ebx
  1058 000000DA 6689DE                  	mov	esi, ebx
  1059 000000DD 66C1CE04                	ror	esi, 4
  1060 000000E1 8EDE                    	mov	ds, si
  1061 000000E3 66C1EE1C                	shr	esi, 28
  1062 000000E7 668904                  	mov	[si], eax
  1063                                  ; loc     ptrDirf : (@-8): * struct <something>
  1064                                  ; loc     <something> : unsigned
  1065                                  ; loc     <something> : int
  1066                                  ; loc     <something> : int
  1067                                  ; loc     <something> : unsigned
  1068                                  ; loc     <something> : unsigned
  1069                                  ; RPN'ized expression: "ptrDirf dirInicial _start__bss &u (something39) _start__text &u (something40) - (something38) + 15 (something41) + 4294967280u (something42) & = "
  1070                                  ; Expanded expression: "(@-8) dirInicial *(4) _start__bss _start__text - + 15u + 4294967280u & =(4) "
  1071                                  ; Fused expression:    "dirInicial push-ax _start__bss push-ax _start__text - *sp ax + **sp ax + ax 15u & ax 4294967280u =(204) *(@-8) ax "
  1072                                  section .relod
  1073 00000010 [EC000000]              	dd	L43
  1074                                  section .text
  1075 000000EA 66B8                    	db	0x66, 0xB8
  1076                                  L43:
  1077 000000EC [00000000]              	dd	_dirInicial
  1078 000000F0 6650                    	push	eax
  1079                                  section .relod
  1080 00000014 [F4000000]              	dd	L44
  1081                                  section .text
  1082 000000F2 66B8                    	db	0x66, 0xB8
  1083                                  L44:
  1084 000000F4 [00000000]              	dd	__start__bss
  1085 000000F8 6650                    	push	eax
  1086                                  section .relod
  1087 00000018 [FC000000]              	dd	L45
  1088                                  section .text
  1089 000000FA 66B8                    	db	0x66, 0xB8
  1090                                  L45:
  1091 000000FC [00000000]              	dd	__start__text
  1092 00000100 6689C1                  	mov	ecx, eax
  1093 00000103 6658                    	pop	eax
  1094 00000105 6629C8                  	sub	eax, ecx
  1095 00000108 6689C1                  	mov	ecx, eax
  1096 0000010B 665B                    	pop	ebx
  1097 0000010D 6689DE                  	mov	esi, ebx
  1098 00000110 66C1CE04                	ror	esi, 4
  1099 00000114 8EDE                    	mov	ds, si
  1100 00000116 66C1EE1C                	shr	esi, 28
  1101 0000011A 668B04                  	mov	eax, [si]
  1102 0000011D 6601C8                  	add	eax, ecx
  1103 00000120 6683C00F                	add	eax, 15
  1104 00000124 6683E0F0                	and	eax, -16
  1105 00000128 668946F8                	mov	[bp-8], eax
  1106                                  ; loc     <something> : struct <something>
  1107                                  ; RPN'ized expression: "numEDF ptrDirf 1 + *u &u tam -> *u <something46> sizeof / = "
  1108                                  ; Expanded expression: "numEDF (@-8) *(4) 80 + 60 + *(4) 80u /u =(4) "
  1109                                  ; Fused expression:    "numEDF push-ax + *(@-8) 80 + ax 60 /u *ax 80u =(204) **sp ax "
  1110                                  section .relod
  1111 0000001C [2E010000]              	dd	L47
  1112                                  section .text
  1113 0000012C 66B8                    	db	0x66, 0xB8
  1114                                  L47:
  1115 0000012E [0C000000]              	dd	_numEDF
  1116 00000132 6650                    	push	eax
  1117 00000134 668B46F8                	mov	eax, [bp-8]
  1118 00000138 6683C050                	add	eax, 80
  1119 0000013C 6683C03C                	add	eax, 60
  1120 00000140 6689C3                  	mov	ebx, eax
  1121 00000143 6689DE                  	mov	esi, ebx
  1122 00000146 66C1CE04                	ror	esi, 4
  1123 0000014A 8EDE                    	mov	ds, si
  1124 0000014C 66C1EE1C                	shr	esi, 28
  1125 00000150 668B04                  	mov	eax, [si]
  1126 00000153 66BA00000000            	mov	edx, 0
  1127 00000159 66B950000000            	mov	ecx, 80
  1128 0000015F 66F7F1                  	div	ecx
  1129 00000162 665B                    	pop	ebx
  1130 00000164 6689DE                  	mov	esi, ebx
  1131 00000167 66C1CE04                	ror	esi, 4
  1132 0000016B 8EDE                    	mov	ds, si
  1133 0000016D 66C1EE1C                	shr	esi, 28
  1134 00000171 668904                  	mov	[si], eax
  1135                                  
  1136                                  section .rodata
  1137                                  L48:
  1138 0000002E 070A204552524F523A-     	db	7,10," ERROR: SO1HIMG (numEDF > maxEDF)"
  1138 00000037 20534F3148494D4720-
  1138 00000040 286E756D454446203E-
  1138 00000049 206D617845444629   
  1139 00000051 00                      	times	1 db 0
  1140                                  
  1141                                  section .text
  1142                                  ; RPN'ized expression: "( L48 , numEDF 8 2 + <= assert ) "
  1143                                  ; Expanded expression: " L48  numEDF *(4) 10 <=u  assert ()8 "
  1144                                  ; Fused expression:    "( L48 , numEDF <=u *ax 10 , assert )8 "
  1145                                  section .relod
  1146 00000020 [76010000]              	dd	L49
  1147                                  section .text
  1148 00000174 6668                    	db	0x66, 0x68
  1149                                  L49:
  1150 00000176 [2E000000]              	dd	L48
  1151                                  section .relod
  1152 00000024 [7C010000]              	dd	L50
  1153                                  section .text
  1154 0000017A 66B8                    	db	0x66, 0xB8
  1155                                  L50:
  1156 0000017C [0C000000]              	dd	_numEDF
  1157 00000180 6689C3                  	mov	ebx, eax
  1158 00000183 6689DE                  	mov	esi, ebx
  1159 00000186 66C1CE04                	ror	esi, 4
  1160 0000018A 8EDE                    	mov	ds, si
  1161 0000018C 66C1EE1C                	shr	esi, 28
  1162 00000190 668B04                  	mov	eax, [si]
  1163 00000193 6683F80A                	cmp	eax, 10
  1164 00000197 0F96C0                  	setbe	al
  1165 0000019A 660FB6C0                	movzx	eax, al
  1166 0000019E 6650                    	push	eax
  1167 000001A0 9A                      	db	0x9A
  1168                                  section .relot
  1169 00000044 [A1010000]              	dd	L51
  1170                                  section .text
  1171                                  L51:
  1172 000001A1 [00000000]              	dd	_assert
  1173 000001A5 83ECF8                  	sub	sp, -8
  1174                                  
  1175                                  section .rodata
  1176                                  L52:
  1177 00000052 0A204353496E696369-     	db	10," CSInicial = "
  1177 0000005B 616C203D20         
  1178 00000060 00                      	times	1 db 0
  1179                                  
  1180                                  section .text
  1181                                  ; RPN'ized expression: "( L52 printStrVideo ) "
  1182                                  ; Expanded expression: " L52  printStrVideo ()4 "
  1183                                  ; Fused expression:    "( L52 , printStrVideo )4 "
  1184                                  section .relod
  1185 00000028 [AA010000]              	dd	L53
  1186                                  section .text
  1187 000001A8 6668                    	db	0x66, 0x68
  1188                                  L53:
  1189 000001AA [52000000]              	dd	L52
  1190 000001AE 9A                      	db	0x9A
  1191                                  section .relot
  1192 00000048 [AF010000]              	dd	L54
  1193                                  section .text
  1194                                  L54:
  1195 000001AF [00000000]              	dd	_printStrVideo
  1196 000001B3 83ECFC                  	sub	sp, -4
  1197                                  ; RPN'ized expression: "( 4 , ( CSInicial ) printHexVideo ) "
  1198                                  ; Expanded expression: " 4   CSInicial ()0  printHexVideo ()8 "
  1199                                  ; Fused expression:    "( 4 , ( CSInicial )0 , printHexVideo )8 "
  1200 000001B6 666A04                  	push	dword 4
  1201 000001B9 9A                      	db	0x9A
  1202                                  section .relot
  1203 0000004C [BA010000]              	dd	L55
  1204                                  section .text
  1205                                  L55:
  1206 000001BA [00000000]              	dd	_CSInicial
  1207 000001BE 6650                    	push	eax
  1208 000001C0 9A                      	db	0x9A
  1209                                  section .relot
  1210 00000050 [C1010000]              	dd	L56
  1211                                  section .text
  1212                                  L56:
  1213 000001C1 [00000000]              	dd	_printHexVideo
  1214 000001C5 83ECF8                  	sub	sp, -8
  1215                                  
  1216                                  section .rodata
  1217                                  L57:
  1218 00000061 20646972496E696369-     	db	" dirInicial = "
  1218 0000006A 616C203D20         
  1219 0000006F 00                      	times	1 db 0
  1220                                  
  1221                                  section .text
  1222                                  ; RPN'ized expression: "( L57 printStrVideo ) "
  1223                                  ; Expanded expression: " L57  printStrVideo ()4 "
  1224                                  ; Fused expression:    "( L57 , printStrVideo )4 "
  1225                                  section .relod
  1226 0000002C [CA010000]              	dd	L58
  1227                                  section .text
  1228 000001C8 6668                    	db	0x66, 0x68
  1229                                  L58:
  1230 000001CA [61000000]              	dd	L57
  1231 000001CE 9A                      	db	0x9A
  1232                                  section .relot
  1233 00000054 [CF010000]              	dd	L59
  1234                                  section .text
  1235                                  L59:
  1236 000001CF [00000000]              	dd	_printStrVideo
  1237 000001D3 83ECFC                  	sub	sp, -4
  1238                                  ; RPN'ized expression: "( 8 , dirInicial printLHexVideo ) "
  1239                                  ; Expanded expression: " 8  dirInicial *(4)  printLHexVideo ()8 "
  1240                                  ; Fused expression:    "( 8 , dirInicial *(4) ax , printLHexVideo )8 "
  1241 000001D6 666A08                  	push	dword 8
  1242                                  section .relod
  1243 00000030 [DB010000]              	dd	L60
  1244                                  section .text
  1245 000001D9 66B8                    	db	0x66, 0xB8
  1246                                  L60:
  1247 000001DB [00000000]              	dd	_dirInicial
  1248 000001DF 6689C3                  	mov	ebx, eax
  1249 000001E2 6689DE                  	mov	esi, ebx
  1250 000001E5 66C1CE04                	ror	esi, 4
  1251 000001E9 8EDE                    	mov	ds, si
  1252 000001EB 66C1EE1C                	shr	esi, 28
  1253 000001EF 66FF34                  	push	dword [si]
  1254 000001F2 9A                      	db	0x9A
  1255                                  section .relot
  1256 00000058 [F3010000]              	dd	L61
  1257                                  section .text
  1258                                  L61:
  1259 000001F3 [00000000]              	dd	_printLHexVideo
  1260 000001F7 83ECF8                  	sub	sp, -8
  1261                                  
  1262                                  section .rodata
  1263                                  L62:
  1264 00000070 207074724469726620-     	db	" ptrDirf = "
  1264 00000079 3D20               
  1265 0000007B 00                      	times	1 db 0
  1266                                  
  1267                                  section .text
  1268                                  ; RPN'ized expression: "( L62 printStrVideo ) "
  1269                                  ; Expanded expression: " L62  printStrVideo ()4 "
  1270                                  ; Fused expression:    "( L62 , printStrVideo )4 "
  1271                                  section .relod
  1272 00000034 [FC010000]              	dd	L63
  1273                                  section .text
  1274 000001FA 6668                    	db	0x66, 0x68
  1275                                  L63:
  1276 000001FC [70000000]              	dd	L62
  1277 00000200 9A                      	db	0x9A
  1278                                  section .relot
  1279 0000005C [01020000]              	dd	L64
  1280                                  section .text
  1281                                  L64:
  1282 00000201 [00000000]              	dd	_printStrVideo
  1283 00000205 83ECFC                  	sub	sp, -4
  1284                                  ; loc     <something> : unsigned
  1285                                  ; RPN'ized expression: "( 8 , ptrDirf (something65) printLHexVideo ) "
  1286                                  ; Expanded expression: " 8  (@-8) *(4)  printLHexVideo ()8 "
  1287                                  ; Fused expression:    "( 8 , *(4) (@-8) , printLHexVideo )8 "
  1288 00000208 666A08                  	push	dword 8
  1289 0000020B 66FF76F8                	push	dword [bp-8]
  1290 0000020F 9A                      	db	0x9A
  1291                                  section .relot
  1292 00000060 [10020000]              	dd	L66
  1293                                  section .text
  1294                                  L66:
  1295 00000210 [00000000]              	dd	_printLHexVideo
  1296 00000214 83ECF8                  	sub	sp, -8
  1297                                  
  1298                                  section .rodata
  1299                                  L67:
  1300 0000007C 206E756D454446203D-     	db	" numEDF = "
  1300 00000085 20                 
  1301 00000086 00                      	times	1 db 0
  1302                                  
  1303                                  section .text
  1304                                  ; RPN'ized expression: "( L67 printStrVideo ) "
  1305                                  ; Expanded expression: " L67  printStrVideo ()4 "
  1306                                  ; Fused expression:    "( L67 , printStrVideo )4 "
  1307                                  section .relod
  1308 00000038 [19020000]              	dd	L68
  1309                                  section .text
  1310 00000217 6668                    	db	0x66, 0x68
  1311                                  L68:
  1312 00000219 [7C000000]              	dd	L67
  1313 0000021D 9A                      	db	0x9A
  1314                                  section .relot
  1315 00000064 [1E020000]              	dd	L69
  1316                                  section .text
  1317                                  L69:
  1318 0000021E [00000000]              	dd	_printStrVideo
  1319 00000222 83ECFC                  	sub	sp, -4
  1320                                  ; loc     <something> : unsigned
  1321                                  ; RPN'ized expression: "( 1 , numEDF (something70) printLDecVideo ) "
  1322                                  ; Expanded expression: " 1  numEDF *(4)  printLDecVideo ()8 "
  1323                                  ; Fused expression:    "( 1 , numEDF *(4) ax , printLDecVideo )8 "
  1324 00000225 666A01                  	push	dword 1
  1325                                  section .relod
  1326 0000003C [2A020000]              	dd	L71
  1327                                  section .text
  1328 00000228 66B8                    	db	0x66, 0xB8
  1329                                  L71:
  1330 0000022A [0C000000]              	dd	_numEDF
  1331 0000022E 6689C3                  	mov	ebx, eax
  1332 00000231 6689DE                  	mov	esi, ebx
  1333 00000234 66C1CE04                	ror	esi, 4
  1334 00000238 8EDE                    	mov	ds, si
  1335 0000023A 66C1EE1C                	shr	esi, 28
  1336 0000023E 66FF34                  	push	dword [si]
  1337 00000241 9A                      	db	0x9A
  1338                                  section .relot
  1339 00000068 [42020000]              	dd	L72
  1340                                  section .text
  1341                                  L72:
  1342 00000242 [00000000]              	dd	_printLDecVideo
  1343 00000246 83ECF8                  	sub	sp, -8
  1344                                  
  1345                                  section .rodata
  1346                                  L73:
  1347 00000087 0A0A20646972663A20      	db	10,10," dirf: "
  1348 00000090 00                      	times	1 db 0
  1349                                  
  1350                                  section .text
  1351                                  ; RPN'ized expression: "( L73 printStrVideo ) "
  1352                                  ; Expanded expression: " L73  printStrVideo ()4 "
  1353                                  ; Fused expression:    "( L73 , printStrVideo )4 "
  1354                                  section .relod
  1355 00000040 [4B020000]              	dd	L74
  1356                                  section .text
  1357 00000249 6668                    	db	0x66, 0x68
  1358                                  L74:
  1359 0000024B [87000000]              	dd	L73
  1360 0000024F 9A                      	db	0x9A
  1361                                  section .relot
  1362 0000006C [50020000]              	dd	L75
  1363                                  section .text
  1364                                  L75:
  1365 00000250 [00000000]              	dd	_printStrVideo
  1366 00000254 83ECFC                  	sub	sp, -4
  1367                                  
  1368                                  section .rodata
  1369                                  L76:
  1370 00000091 0A                      	db	10
  1371 00000092 0A                      	db	10
  1372 00000093 20696E642020202020-     	db	" ind        nombre               comando        pos   tam  start  SS  SP0  t ",10
  1372 0000009C 2020206E6F6D627265-
  1372 000000A5 202020202020202020-
  1372 000000AE 202020202020636F6D-
  1372 000000B7 616E646F2020202020-
  1372 000000C0 202020706F73202020-
  1372 000000C9 74616D202073746172-
  1372 000000D2 742020535320205350-
  1372 000000DB 30202074200A       
  1373 000000E1 202D2D2D202D2D2D2D-     	db	" --- -------------------- -------------------- ----- ----- ----- ---- ---- - ",10
  1373 000000EA 2D2D2D2D2D2D2D2D2D-
  1373 000000F3 2D2D2D2D2D2D2D202D-
  1373 000000FC 2D2D2D2D2D2D2D2D2D-
  1373 00000105 2D2D2D2D2D2D2D2D2D-
  1373 0000010E 2D202D2D2D2D2D202D-
  1373 00000117 2D2D2D2D202D2D2D2D-
  1373 00000120 2D202D2D2D2D202D2D-
  1373 00000129 2D2D202D200A       
  1374 0000012F 00                      	times	1 db 0
  1375                                  
  1376                                  section .text
  1377                                  ; RPN'ized expression: "( L76 printStrVideo ) "
  1378                                  ; Expanded expression: " L76  printStrVideo ()4 "
  1379                                  ; Fused expression:    "( L76 , printStrVideo )4 "
  1380                                  section .relod
  1381 00000044 [59020000]              	dd	L77
  1382                                  section .text
  1383 00000257 6668                    	db	0x66, 0x68
  1384                                  L77:
  1385 00000259 [91000000]              	dd	L76
  1386 0000025D 9A                      	db	0x9A
  1387                                  section .relot
  1388 00000070 [5E020000]              	dd	L78
  1389                                  section .text
  1390                                  L78:
  1391 0000025E [00000000]              	dd	_printStrVideo
  1392 00000262 83ECFC                  	sub	sp, -4
  1393                                  ; for
  1394                                  ; loc     i : (@-12): int
  1395                                  ; RPN'ized expression: "i 0 = "
  1396                                  ; Expanded expression: "(@-12) 0 =(4) "
  1397                                  ; Fused expression:    "=(204) *(@-12) 0 "
  1398 00000265 66B800000000            	mov	eax, 0
  1399 0000026B 668946F4                	mov	[bp-12], eax
  1400                                  L79:
  1401                                  ; RPN'ized expression: "i numEDF < "
  1402                                  ; Expanded expression: "(@-12) *(4) numEDF *(4) <u "
  1403                                  ; Fused expression:    "numEDF <u *(@-12) *ax IF! "
  1404                                  section .relod
  1405 00000048 [71020000]              	dd	L83
  1406                                  section .text
  1407 0000026F 66B8                    	db	0x66, 0xB8
  1408                                  L83:
  1409 00000271 [0C000000]              	dd	_numEDF
  1410 00000275 6689C3                  	mov	ebx, eax
  1411 00000278 6689DE                  	mov	esi, ebx
  1412 0000027B 66C1CE04                	ror	esi, 4
  1413 0000027F 8EDE                    	mov	ds, si
  1414 00000281 66C1EE1C                	shr	esi, 28
  1415 00000285 668B0C                  	mov	ecx, [si]
  1416 00000288 668B46F4                	mov	eax, [bp-12]
  1417 0000028C 6639C8                  	cmp	eax, ecx
  1418 0000028F 0F830B02                	jae	L82
  1419                                  ; RPN'ized expression: "i ++p "
  1420                                  ; Expanded expression: "(@-12) ++p(4) "
  1421                                  ; {
  1422                                  ; RPN'ized expression: "( 4 , i printDecVideo ) "
  1423                                  ; Expanded expression: " 4  (@-12) *(4)  printDecVideo ()8 "
  1424                                  ; Fused expression:    "( 4 , *(4) (@-12) , printDecVideo )8 "
  1425 00000293 666A04                  	push	dword 4
  1426 00000296 66FF76F4                	push	dword [bp-12]
  1427 0000029A 9A                      	db	0x9A
  1428                                  section .relot
  1429 00000074 [9B020000]              	dd	L84
  1430                                  section .text
  1431                                  L84:
  1432 0000029B [00000000]              	dd	_printDecVideo
  1433 0000029F 83ECF8                  	sub	sp, -8
  1434                                  
  1435                                  section .rodata
  1436                                  L85:
  1437 00000130 20                      	db	" "
  1438 00000131 00                      	times	1 db 0
  1439                                  
  1440                                  section .text
  1441                                  ; RPN'ized expression: "( L85 printStrVideo ) "
  1442                                  ; Expanded expression: " L85  printStrVideo ()4 "
  1443                                  ; Fused expression:    "( L85 , printStrVideo )4 "
  1444                                  section .relod
  1445 0000004C [A4020000]              	dd	L86
  1446                                  section .text
  1447 000002A2 6668                    	db	0x66, 0x68
  1448                                  L86:
  1449 000002A4 [30010000]              	dd	L85
  1450 000002A8 9A                      	db	0x9A
  1451                                  section .relot
  1452 00000078 [A9020000]              	dd	L87
  1453                                  section .text
  1454                                  L87:
  1455 000002A9 [00000000]              	dd	_printStrVideo
  1456 000002AD 83ECFC                  	sub	sp, -4
  1457                                  ; RPN'ized expression: "( TRUE , 20 , ptrDirf i + *u &u nombre -> *u printStrHastaVideo ) "
  1458                                  ; Expanded expression: " 1  20  (@-8) *(4) (@-12) *(4) 80 * + 0 +  printStrHastaVideo ()12 "
  1459                                  ; Fused expression:    "( 1 , 20 , * *(@-12) 80 + *(@-8) ax + ax 0 , printStrHastaVideo )12 "
  1460 000002B0 666A01                  	push	dword 1
  1461 000002B3 666A14                  	push	dword 20
  1462 000002B6 668B46F4                	mov	eax, [bp-12]
  1463 000002BA 666BC050                	imul	eax, eax, 80
  1464 000002BE 6689C1                  	mov	ecx, eax
  1465 000002C1 668B46F8                	mov	eax, [bp-8]
  1466 000002C5 6601C8                  	add	eax, ecx
  1467 000002C8 6650                    	push	eax
  1468 000002CA 9A                      	db	0x9A
  1469                                  section .relot
  1470 0000007C [CB020000]              	dd	L88
  1471                                  section .text
  1472                                  L88:
  1473 000002CB [00000000]              	dd	_printStrHastaVideo
  1474 000002CF 83ECF4                  	sub	sp, -12
  1475                                  
  1476                                  section .rodata
  1477                                  L89:
  1478 00000132 20                      	db	" "
  1479 00000133 00                      	times	1 db 0
  1480                                  
  1481                                  section .text
  1482                                  ; RPN'ized expression: "( L89 printStrVideo ) "
  1483                                  ; Expanded expression: " L89  printStrVideo ()4 "
  1484                                  ; Fused expression:    "( L89 , printStrVideo )4 "
  1485                                  section .relod
  1486 00000050 [D4020000]              	dd	L90
  1487                                  section .text
  1488 000002D2 6668                    	db	0x66, 0x68
  1489                                  L90:
  1490 000002D4 [32010000]              	dd	L89
  1491 000002D8 9A                      	db	0x9A
  1492                                  section .relot
  1493 00000080 [D9020000]              	dd	L91
  1494                                  section .text
  1495                                  L91:
  1496 000002D9 [00000000]              	dd	_printStrVideo
  1497 000002DD 83ECFC                  	sub	sp, -4
  1498                                  ; RPN'ized expression: "( TRUE , 20 , ptrDirf i + *u &u comando -> *u printStrHastaVideo ) "
  1499                                  ; Expanded expression: " 1  20  (@-8) *(4) (@-12) *(4) 80 * + 16 +  printStrHastaVideo ()12 "
  1500                                  ; Fused expression:    "( 1 , 20 , * *(@-12) 80 + *(@-8) ax + ax 16 , printStrHastaVideo )12 "
  1501 000002E0 666A01                  	push	dword 1
  1502 000002E3 666A14                  	push	dword 20
  1503 000002E6 668B46F4                	mov	eax, [bp-12]
  1504 000002EA 666BC050                	imul	eax, eax, 80
  1505 000002EE 6689C1                  	mov	ecx, eax
  1506 000002F1 668B46F8                	mov	eax, [bp-8]
  1507 000002F5 6601C8                  	add	eax, ecx
  1508 000002F8 6683C010                	add	eax, 16
  1509 000002FC 6650                    	push	eax
  1510 000002FE 9A                      	db	0x9A
  1511                                  section .relot
  1512 00000084 [FF020000]              	dd	L92
  1513                                  section .text
  1514                                  L92:
  1515 000002FF [00000000]              	dd	_printStrHastaVideo
  1516 00000303 83ECF4                  	sub	sp, -12
  1517                                  
  1518                                  section .rodata
  1519                                  L93:
  1520 00000134 20                      	db	" "
  1521 00000135 00                      	times	1 db 0
  1522                                  
  1523                                  section .text
  1524                                  ; RPN'ized expression: "( L93 printStrVideo ) "
  1525                                  ; Expanded expression: " L93  printStrVideo ()4 "
  1526                                  ; Fused expression:    "( L93 , printStrVideo )4 "
  1527                                  section .relod
  1528 00000054 [08030000]              	dd	L94
  1529                                  section .text
  1530 00000306 6668                    	db	0x66, 0x68
  1531                                  L94:
  1532 00000308 [34010000]              	dd	L93
  1533 0000030C 9A                      	db	0x9A
  1534                                  section .relot
  1535 00000088 [0D030000]              	dd	L95
  1536                                  section .text
  1537                                  L95:
  1538 0000030D [00000000]              	dd	_printStrVideo
  1539 00000311 83ECFC                  	sub	sp, -4
  1540                                  ; RPN'ized expression: "( 5 , ptrDirf i + *u &u pos -> *u printLHexVideo ) "
  1541                                  ; Expanded expression: " 5  (@-8) *(4) (@-12) *(4) 80 * + 56 + *(4)  printLHexVideo ()8 "
  1542                                  ; Fused expression:    "( 5 , * *(@-12) 80 + *(@-8) ax + ax 56 *(4) ax , printLHexVideo )8 "
  1543 00000314 666A05                  	push	dword 5
  1544 00000317 668B46F4                	mov	eax, [bp-12]
  1545 0000031B 666BC050                	imul	eax, eax, 80
  1546 0000031F 6689C1                  	mov	ecx, eax
  1547 00000322 668B46F8                	mov	eax, [bp-8]
  1548 00000326 6601C8                  	add	eax, ecx
  1549 00000329 6683C038                	add	eax, 56
  1550 0000032D 6689C3                  	mov	ebx, eax
  1551 00000330 6689DE                  	mov	esi, ebx
  1552 00000333 66C1CE04                	ror	esi, 4
  1553 00000337 8EDE                    	mov	ds, si
  1554 00000339 66C1EE1C                	shr	esi, 28
  1555 0000033D 66FF34                  	push	dword [si]
  1556 00000340 9A                      	db	0x9A
  1557                                  section .relot
  1558 0000008C [41030000]              	dd	L96
  1559                                  section .text
  1560                                  L96:
  1561 00000341 [00000000]              	dd	_printLHexVideo
  1562 00000345 83ECF8                  	sub	sp, -8
  1563                                  ; RPN'ized expression: "( 6 , ptrDirf i + *u &u tam -> *u printLDecVideo ) "
  1564                                  ; Expanded expression: " 6  (@-8) *(4) (@-12) *(4) 80 * + 60 + *(4)  printLDecVideo ()8 "
  1565                                  ; Fused expression:    "( 6 , * *(@-12) 80 + *(@-8) ax + ax 60 *(4) ax , printLDecVideo )8 "
  1566 00000348 666A06                  	push	dword 6
  1567 0000034B 668B46F4                	mov	eax, [bp-12]
  1568 0000034F 666BC050                	imul	eax, eax, 80
  1569 00000353 6689C1                  	mov	ecx, eax
  1570 00000356 668B46F8                	mov	eax, [bp-8]
  1571 0000035A 6601C8                  	add	eax, ecx
  1572 0000035D 6683C03C                	add	eax, 60
  1573 00000361 6689C3                  	mov	ebx, eax
  1574 00000364 6689DE                  	mov	esi, ebx
  1575 00000367 66C1CE04                	ror	esi, 4
  1576 0000036B 8EDE                    	mov	ds, si
  1577 0000036D 66C1EE1C                	shr	esi, 28
  1578 00000371 66FF34                  	push	dword [si]
  1579 00000374 9A                      	db	0x9A
  1580                                  section .relot
  1581 00000090 [75030000]              	dd	L97
  1582                                  section .text
  1583                                  L97:
  1584 00000375 [00000000]              	dd	_printLDecVideo
  1585 00000379 83ECF8                  	sub	sp, -8
  1586                                  
  1587                                  section .rodata
  1588                                  L98:
  1589 00000136 20                      	db	" "
  1590 00000137 00                      	times	1 db 0
  1591                                  
  1592                                  section .text
  1593                                  ; RPN'ized expression: "( L98 printStrVideo ) "
  1594                                  ; Expanded expression: " L98  printStrVideo ()4 "
  1595                                  ; Fused expression:    "( L98 , printStrVideo )4 "
  1596                                  section .relod
  1597 00000058 [7E030000]              	dd	L99
  1598                                  section .text
  1599 0000037C 6668                    	db	0x66, 0x68
  1600                                  L99:
  1601 0000037E [36010000]              	dd	L98
  1602 00000382 9A                      	db	0x9A
  1603                                  section .relot
  1604 00000094 [83030000]              	dd	L100
  1605                                  section .text
  1606                                  L100:
  1607 00000383 [00000000]              	dd	_printStrVideo
  1608 00000387 83ECFC                  	sub	sp, -4
  1609                                  ; RPN'ized expression: "( 5 , ptrDirf i + *u &u start -> *u printLHexVideo ) "
  1610                                  ; Expanded expression: " 5  (@-8) *(4) (@-12) *(4) 80 * + 64 + *(4)  printLHexVideo ()8 "
  1611                                  ; Fused expression:    "( 5 , * *(@-12) 80 + *(@-8) ax + ax 64 *(4) ax , printLHexVideo )8 "
  1612 0000038A 666A05                  	push	dword 5
  1613 0000038D 668B46F4                	mov	eax, [bp-12]
  1614 00000391 666BC050                	imul	eax, eax, 80
  1615 00000395 6689C1                  	mov	ecx, eax
  1616 00000398 668B46F8                	mov	eax, [bp-8]
  1617 0000039C 6601C8                  	add	eax, ecx
  1618 0000039F 6683C040                	add	eax, 64
  1619 000003A3 6689C3                  	mov	ebx, eax
  1620 000003A6 6689DE                  	mov	esi, ebx
  1621 000003A9 66C1CE04                	ror	esi, 4
  1622 000003AD 8EDE                    	mov	ds, si
  1623 000003AF 66C1EE1C                	shr	esi, 28
  1624 000003B3 66FF34                  	push	dword [si]
  1625 000003B6 9A                      	db	0x9A
  1626                                  section .relot
  1627 00000098 [B7030000]              	dd	L101
  1628                                  section .text
  1629                                  L101:
  1630 000003B7 [00000000]              	dd	_printLHexVideo
  1631 000003BB 83ECF8                  	sub	sp, -8
  1632                                  
  1633                                  section .rodata
  1634                                  L102:
  1635 00000138 20                      	db	" "
  1636 00000139 00                      	times	1 db 0
  1637                                  
  1638                                  section .text
  1639                                  ; RPN'ized expression: "( L102 printStrVideo ) "
  1640                                  ; Expanded expression: " L102  printStrVideo ()4 "
  1641                                  ; Fused expression:    "( L102 , printStrVideo )4 "
  1642                                  section .relod
  1643 0000005C [C0030000]              	dd	L103
  1644                                  section .text
  1645 000003BE 6668                    	db	0x66, 0x68
  1646                                  L103:
  1647 000003C0 [38010000]              	dd	L102
  1648 000003C4 9A                      	db	0x9A
  1649                                  section .relot
  1650 0000009C [C5030000]              	dd	L104
  1651                                  section .text
  1652                                  L104:
  1653 000003C5 [00000000]              	dd	_printStrVideo
  1654 000003C9 83ECFC                  	sub	sp, -4
  1655                                  ; RPN'ized expression: "( 4 , ptrDirf i + *u &u SS -> *u printHexVideo ) "
  1656                                  ; Expanded expression: " 4  (@-8) *(4) (@-12) *(4) 80 * + 72 + *(2)  printHexVideo ()8 "
  1657                                  ; Fused expression:    "( 4 , * *(@-12) 80 + *(@-8) ax + ax 72 *(2) ax , printHexVideo )8 "
  1658 000003CC 666A04                  	push	dword 4
  1659 000003CF 668B46F4                	mov	eax, [bp-12]
  1660 000003D3 666BC050                	imul	eax, eax, 80
  1661 000003D7 6689C1                  	mov	ecx, eax
  1662 000003DA 668B46F8                	mov	eax, [bp-8]
  1663 000003DE 6601C8                  	add	eax, ecx
  1664 000003E1 6683C048                	add	eax, 72
  1665 000003E5 6689C3                  	mov	ebx, eax
  1666 000003E8 6689DE                  	mov	esi, ebx
  1667 000003EB 66C1CE04                	ror	esi, 4
  1668 000003EF 8EDE                    	mov	ds, si
  1669 000003F1 66C1EE1C                	shr	esi, 28
  1670 000003F5 8B04                    	mov	ax, [si]
  1671 000003F7 660FB7C0                	movzx	eax, ax
  1672 000003FB 6650                    	push	eax
  1673 000003FD 9A                      	db	0x9A
  1674                                  section .relot
  1675 000000A0 [FE030000]              	dd	L105
  1676                                  section .text
  1677                                  L105:
  1678 000003FE [00000000]              	dd	_printHexVideo
  1679 00000402 83ECF8                  	sub	sp, -8
  1680                                  
  1681                                  section .rodata
  1682                                  L106:
  1683 0000013A 20                      	db	" "
  1684 0000013B 00                      	times	1 db 0
  1685                                  
  1686                                  section .text
  1687                                  ; RPN'ized expression: "( L106 printStrVideo ) "
  1688                                  ; Expanded expression: " L106  printStrVideo ()4 "
  1689                                  ; Fused expression:    "( L106 , printStrVideo )4 "
  1690                                  section .relod
  1691 00000060 [07040000]              	dd	L107
  1692                                  section .text
  1693 00000405 6668                    	db	0x66, 0x68
  1694                                  L107:
  1695 00000407 [3A010000]              	dd	L106
  1696 0000040B 9A                      	db	0x9A
  1697                                  section .relot
  1698 000000A4 [0C040000]              	dd	L108
  1699                                  section .text
  1700                                  L108:
  1701 0000040C [00000000]              	dd	_printStrVideo
  1702 00000410 83ECFC                  	sub	sp, -4
  1703                                  ; RPN'ized expression: "( 4 , ptrDirf i + *u &u SP0 -> *u printHexVideo ) "
  1704                                  ; Expanded expression: " 4  (@-8) *(4) (@-12) *(4) 80 * + 74 + *(2)  printHexVideo ()8 "
  1705                                  ; Fused expression:    "( 4 , * *(@-12) 80 + *(@-8) ax + ax 74 *(2) ax , printHexVideo )8 "
  1706 00000413 666A04                  	push	dword 4
  1707 00000416 668B46F4                	mov	eax, [bp-12]
  1708 0000041A 666BC050                	imul	eax, eax, 80
  1709 0000041E 6689C1                  	mov	ecx, eax
  1710 00000421 668B46F8                	mov	eax, [bp-8]
  1711 00000425 6601C8                  	add	eax, ecx
  1712 00000428 6683C04A                	add	eax, 74
  1713 0000042C 6689C3                  	mov	ebx, eax
  1714 0000042F 6689DE                  	mov	esi, ebx
  1715 00000432 66C1CE04                	ror	esi, 4
  1716 00000436 8EDE                    	mov	ds, si
  1717 00000438 66C1EE1C                	shr	esi, 28
  1718 0000043C 8B04                    	mov	ax, [si]
  1719 0000043E 660FB7C0                	movzx	eax, ax
  1720 00000442 6650                    	push	eax
  1721 00000444 9A                      	db	0x9A
  1722                                  section .relot
  1723 000000A8 [45040000]              	dd	L109
  1724                                  section .text
  1725                                  L109:
  1726 00000445 [00000000]              	dd	_printHexVideo
  1727 00000449 83ECF8                  	sub	sp, -8
  1728                                  
  1729                                  section .rodata
  1730                                  L110:
  1731 0000013C 20                      	db	" "
  1732 0000013D 00                      	times	1 db 0
  1733                                  
  1734                                  section .text
  1735                                  ; RPN'ized expression: "( L110 printStrVideo ) "
  1736                                  ; Expanded expression: " L110  printStrVideo ()4 "
  1737                                  ; Fused expression:    "( L110 , printStrVideo )4 "
  1738                                  section .relod
  1739 00000064 [4E040000]              	dd	L111
  1740                                  section .text
  1741 0000044C 6668                    	db	0x66, 0x68
  1742                                  L111:
  1743 0000044E [3C010000]              	dd	L110
  1744 00000452 9A                      	db	0x9A
  1745                                  section .relot
  1746 000000AC [53040000]              	dd	L112
  1747                                  section .text
  1748                                  L112:
  1749 00000453 [00000000]              	dd	_printStrVideo
  1750 00000457 83ECFC                  	sub	sp, -4
  1751                                  ; RPN'ized expression: "( 1 , ptrDirf i + *u &u tipo -> *u printDecVideo ) "
  1752                                  ; Expanded expression: " 1  (@-8) *(4) (@-12) *(4) 80 * + 76 + *(4)  printDecVideo ()8 "
  1753                                  ; Fused expression:    "( 1 , * *(@-12) 80 + *(@-8) ax + ax 76 *(4) ax , printDecVideo )8 "
  1754 0000045A 666A01                  	push	dword 1
  1755 0000045D 668B46F4                	mov	eax, [bp-12]
  1756 00000461 666BC050                	imul	eax, eax, 80
  1757 00000465 6689C1                  	mov	ecx, eax
  1758 00000468 668B46F8                	mov	eax, [bp-8]
  1759 0000046C 6601C8                  	add	eax, ecx
  1760 0000046F 6683C04C                	add	eax, 76
  1761 00000473 6689C3                  	mov	ebx, eax
  1762 00000476 6689DE                  	mov	esi, ebx
  1763 00000479 66C1CE04                	ror	esi, 4
  1764 0000047D 8EDE                    	mov	ds, si
  1765 0000047F 66C1EE1C                	shr	esi, 28
  1766 00000483 66FF34                  	push	dword [si]
  1767 00000486 9A                      	db	0x9A
  1768                                  section .relot
  1769 000000B0 [87040000]              	dd	L113
  1770                                  section .text
  1771                                  L113:
  1772 00000487 [00000000]              	dd	_printDecVideo
  1773 0000048B 83ECF8                  	sub	sp, -8
  1774                                  ; RPN'ized expression: "( printLnVideo ) "
  1775                                  ; Expanded expression: " printLnVideo ()0 "
  1776                                  ; Fused expression:    "( printLnVideo )0 "
  1777 0000048E 9A                      	db	0x9A
  1778                                  section .relot
  1779 000000B4 [8F040000]              	dd	L114
  1780                                  section .text
  1781                                  L114:
  1782 0000048F [00000000]              	dd	_printLnVideo
  1783                                  ; }
  1784                                  L80:
  1785                                  ; Fused expression:    "++p(4) *(@-12) "
  1786 00000493 668B46F4                	mov	eax, [bp-12]
  1787 00000497 66FF46F4                	inc	dword [bp-12]
  1788 0000049B E9D1FD                  	jmp	L79
  1789                                  L82:
  1790                                  ; loc     dirReub : (@-12): unsigned
  1791                                  ; RPN'ized expression: "dirReub dirInicial = "
  1792                                  ; Expanded expression: "(@-12) dirInicial *(4) =(4) "
  1793                                  ; Fused expression:    "dirInicial =(204) *(@-12) *ax "
  1794                                  section .relod
  1795 00000068 [A0040000]              	dd	L115
  1796                                  section .text
  1797 0000049E 66B8                    	db	0x66, 0xB8
  1798                                  L115:
  1799 000004A0 [00000000]              	dd	_dirInicial
  1800 000004A4 6689C3                  	mov	ebx, eax
  1801 000004A7 6689DE                  	mov	esi, ebx
  1802 000004AA 66C1CE04                	ror	esi, 4
  1803 000004AE 8EDE                    	mov	ds, si
  1804 000004B0 66C1EE1C                	shr	esi, 28
  1805 000004B4 668B04                  	mov	eax, [si]
  1806 000004B7 668946F4                	mov	[bp-12], eax
  1807                                  ; if
  1808                                  ; RPN'ized expression: "( modoSO1 ) modoSO1_Exe != "
  1809                                  ; Expanded expression: " modoSO1 ()0 1 != "
  1810                                  ; Fused expression:    "( modoSO1 )0 != ax 1 IF! "
  1811 000004BB 9A                      	db	0x9A
  1812                                  section .relot
  1813 000000B8 [BC040000]              	dd	L118
  1814                                  section .text
  1815                                  L118:
  1816 000004BC [00000000]              	dd	_modoSO1
  1817 000004C0 6683F801                	cmp	eax, 1
  1818 000004C4 7435                    	je	L116
  1819                                  ; RPN'ized expression: "dirCargaFichero dirInicial = "
  1820                                  ; Expanded expression: "dirCargaFichero dirInicial *(4) =(4) "
  1821                                  ; Fused expression:    "dirCargaFichero push-ax dirInicial =(204) **sp *ax "
  1822                                  section .relod
  1823 0000006C [C8040000]              	dd	L119
  1824                                  section .text
  1825 000004C6 66B8                    	db	0x66, 0xB8
  1826                                  L119:
  1827 000004C8 [04000000]              	dd	_dirCargaFichero
  1828 000004CC 6650                    	push	eax
  1829                                  section .relod
  1830 00000070 [D0040000]              	dd	L120
  1831                                  section .text
  1832 000004CE 66B8                    	db	0x66, 0xB8
  1833                                  L120:
  1834 000004D0 [00000000]              	dd	_dirInicial
  1835 000004D4 6689C3                  	mov	ebx, eax
  1836 000004D7 6689DE                  	mov	esi, ebx
  1837 000004DA 66C1CE04                	ror	esi, 4
  1838 000004DE 8EDE                    	mov	ds, si
  1839 000004E0 66C1EE1C                	shr	esi, 28
  1840 000004E4 668B04                  	mov	eax, [si]
  1841 000004E7 665B                    	pop	ebx
  1842 000004E9 6689DE                  	mov	esi, ebx
  1843 000004EC 66C1CE04                	ror	esi, 4
  1844 000004F0 8EDE                    	mov	ds, si
  1845 000004F2 66C1EE1C                	shr	esi, 28
  1846 000004F6 668904                  	mov	[si], eax
  1847 000004F9 EB37                    	jmp	L117
  1848                                  L116:
  1849                                  ; else
  1850                                  ; loc     <something> : struct <something>
  1851                                  ; RPN'ized expression: "dirCargaFichero dirInicial <something121> sizeof - = "
  1852                                  ; Expanded expression: "dirCargaFichero dirInicial *(4) 32u - =(4) "
  1853                                  ; Fused expression:    "dirCargaFichero push-ax dirInicial - *ax 32u =(204) **sp ax "
  1854                                  section .relod
  1855 00000074 [FD040000]              	dd	L122
  1856                                  section .text
  1857 000004FB 66B8                    	db	0x66, 0xB8
  1858                                  L122:
  1859 000004FD [04000000]              	dd	_dirCargaFichero
  1860 00000501 6650                    	push	eax
  1861                                  section .relod
  1862 00000078 [05050000]              	dd	L123
  1863                                  section .text
  1864 00000503 66B8                    	db	0x66, 0xB8
  1865                                  L123:
  1866 00000505 [00000000]              	dd	_dirInicial
  1867 00000509 6689C3                  	mov	ebx, eax
  1868 0000050C 6689DE                  	mov	esi, ebx
  1869 0000050F 66C1CE04                	ror	esi, 4
  1870 00000513 8EDE                    	mov	ds, si
  1871 00000515 66C1EE1C                	shr	esi, 28
  1872 00000519 668B04                  	mov	eax, [si]
  1873 0000051C 6683E820                	sub	eax, 32
  1874 00000520 665B                    	pop	ebx
  1875 00000522 6689DE                  	mov	esi, ebx
  1876 00000525 66C1CE04                	ror	esi, 4
  1877 00000529 8EDE                    	mov	ds, si
  1878 0000052B 66C1EE1C                	shr	esi, 28
  1879 0000052F 668904                  	mov	[si], eax
  1880                                  L117:
  1881                                  ; for
  1882                                  ; loc     i : (@-16): int
  1883                                  ; RPN'ized expression: "i 2 = "
  1884                                  ; Expanded expression: "(@-16) 2 =(4) "
  1885                                  ; Fused expression:    "=(204) *(@-16) 2 "
  1886 00000532 66B802000000            	mov	eax, 2
  1887 00000538 668946F0                	mov	[bp-16], eax
  1888                                  L124:
  1889                                  ; RPN'ized expression: "i numEDF < "
  1890                                  ; Expanded expression: "(@-16) *(4) numEDF *(4) <u "
  1891                                  ; Fused expression:    "numEDF <u *(@-16) *ax IF! "
  1892                                  section .relod
  1893 0000007C [3E050000]              	dd	L128
  1894                                  section .text
  1895 0000053C 66B8                    	db	0x66, 0xB8
  1896                                  L128:
  1897 0000053E [0C000000]              	dd	_numEDF
  1898 00000542 6689C3                  	mov	ebx, eax
  1899 00000545 6689DE                  	mov	esi, ebx
  1900 00000548 66C1CE04                	ror	esi, 4
  1901 0000054C 8EDE                    	mov	ds, si
  1902 0000054E 66C1EE1C                	shr	esi, 28
  1903 00000552 668B0C                  	mov	ecx, [si]
  1904 00000555 668B46F0                	mov	eax, [bp-16]
  1905 00000559 6639C8                  	cmp	eax, ecx
  1906 0000055C 0F839F02                	jae	L127
  1907                                  ; RPN'ized expression: "i ++p "
  1908                                  ; Expanded expression: "(@-16) ++p(4) "
  1909                                  ; {
  1910                                  
  1911                                  section .rodata
  1912                                  L129:
  1913 0000013E 0A2072657562696361-     	db	10," reubicando i = "
  1913 00000147 6E646F2069203D20   
  1914 0000014F 00                      	times	1 db 0
  1915                                  
  1916                                  section .text
  1917                                  ; RPN'ized expression: "( L129 printStrVideo ) "
  1918                                  ; Expanded expression: " L129  printStrVideo ()4 "
  1919                                  ; Fused expression:    "( L129 , printStrVideo )4 "
  1920                                  section .relod
  1921 00000080 [62050000]              	dd	L130
  1922                                  section .text
  1923 00000560 6668                    	db	0x66, 0x68
  1924                                  L130:
  1925 00000562 [3E010000]              	dd	L129
  1926 00000566 9A                      	db	0x9A
  1927                                  section .relot
  1928 000000BC [67050000]              	dd	L131
  1929                                  section .text
  1930                                  L131:
  1931 00000567 [00000000]              	dd	_printStrVideo
  1932 0000056B 83ECFC                  	sub	sp, -4
  1933                                  ; RPN'ized expression: "( 1 , i printLIntVideo ) "
  1934                                  ; Expanded expression: " 1  (@-16) *(4)  printLIntVideo ()8 "
  1935                                  ; Fused expression:    "( 1 , *(4) (@-16) , printLIntVideo )8 "
  1936 0000056E 666A01                  	push	dword 1
  1937 00000571 66FF76F0                	push	dword [bp-16]
  1938 00000575 9A                      	db	0x9A
  1939                                  section .relot
  1940 000000C0 [76050000]              	dd	L132
  1941                                  section .text
  1942                                  L132:
  1943 00000576 [00000000]              	dd	_printLIntVideo
  1944 0000057A 83ECF8                  	sub	sp, -8
  1945                                  
  1946                                  section .rodata
  1947                                  L133:
  1948 00000150 206E6F6D627265203D-     	db	" nombre = "
  1948 00000159 20                 
  1949 0000015A 00                      	times	1 db 0
  1950                                  
  1951                                  section .text
  1952                                  ; RPN'ized expression: "( L133 printStrVideo ) "
  1953                                  ; Expanded expression: " L133  printStrVideo ()4 "
  1954                                  ; Fused expression:    "( L133 , printStrVideo )4 "
  1955                                  section .relod
  1956 00000084 [7F050000]              	dd	L134
  1957                                  section .text
  1958 0000057D 6668                    	db	0x66, 0x68
  1959                                  L134:
  1960 0000057F [50010000]              	dd	L133
  1961 00000583 9A                      	db	0x9A
  1962                                  section .relot
  1963 000000C4 [84050000]              	dd	L135
  1964                                  section .text
  1965                                  L135:
  1966 00000584 [00000000]              	dd	_printStrVideo
  1967 00000588 83ECFC                  	sub	sp, -4
  1968                                  ; RPN'ized expression: "( ptrDirf i + *u &u nombre -> *u printStrVideo ) "
  1969                                  ; Expanded expression: " (@-8) *(4) (@-16) *(4) 80 * + 0 +  printStrVideo ()4 "
  1970                                  ; Fused expression:    "( * *(@-16) 80 + *(@-8) ax + ax 0 , printStrVideo )4 "
  1971 0000058B 668B46F0                	mov	eax, [bp-16]
  1972 0000058F 666BC050                	imul	eax, eax, 80
  1973 00000593 6689C1                  	mov	ecx, eax
  1974 00000596 668B46F8                	mov	eax, [bp-8]
  1975 0000059A 6601C8                  	add	eax, ecx
  1976 0000059D 6650                    	push	eax
  1977 0000059F 9A                      	db	0x9A
  1978                                  section .relot
  1979 000000C8 [A0050000]              	dd	L136
  1980                                  section .text
  1981                                  L136:
  1982 000005A0 [00000000]              	dd	_printStrVideo
  1983 000005A4 83ECFC                  	sub	sp, -4
  1984                                  ; loc         <something> : struct <something>
  1985                                  ; RPN'ized expression: "( <something137> sizeof , ptrDirf i + *u &u , reubicacion i 2 - + *u &u entradaDF -> *u &u memcpy ) "
  1986                                  ; Expanded expression: " 80u  (@-8) *(4) (@-16) *(4) 80 * +  reubicacion *(4) (@-16) *(4) 2 - 88 * + 0 +  memcpy ()12 "
  1987                                  ; Fused expression:    "( 80u , * *(@-16) 80 + *(@-8) ax , reubicacion push-ax - *(@-16) 2 * ax 88 + **sp ax + ax 0 , memcpy )12 "
  1988 000005A7 666A50                  	push	dword 80
  1989 000005AA 668B46F0                	mov	eax, [bp-16]
  1990 000005AE 666BC050                	imul	eax, eax, 80
  1991 000005B2 6689C1                  	mov	ecx, eax
  1992 000005B5 668B46F8                	mov	eax, [bp-8]
  1993 000005B9 6601C8                  	add	eax, ecx
  1994 000005BC 6650                    	push	eax
  1995                                  section .relod
  1996 00000088 [C0050000]              	dd	L138
  1997                                  section .text
  1998 000005BE 66B8                    	db	0x66, 0xB8
  1999                                  L138:
  2000 000005C0 [00000000]              	dd	_reubicacion
  2001 000005C4 6650                    	push	eax
  2002 000005C6 668B46F0                	mov	eax, [bp-16]
  2003 000005CA 6683E802                	sub	eax, 2
  2004 000005CE 666BC058                	imul	eax, eax, 88
  2005 000005D2 6689C1                  	mov	ecx, eax
  2006 000005D5 665B                    	pop	ebx
  2007 000005D7 6689DE                  	mov	esi, ebx
  2008 000005DA 66C1CE04                	ror	esi, 4
  2009 000005DE 8EDE                    	mov	ds, si
  2010 000005E0 66C1EE1C                	shr	esi, 28
  2011 000005E4 668B04                  	mov	eax, [si]
  2012 000005E7 6601C8                  	add	eax, ecx
  2013 000005EA 6650                    	push	eax
  2014 000005EC 9A                      	db	0x9A
  2015                                  section .relot
  2016 000000CC [ED050000]              	dd	L139
  2017                                  section .text
  2018                                  L139:
  2019 000005ED [00000000]              	dd	_memcpy
  2020 000005F1 83ECF4                  	sub	sp, -12
  2021                                  ; RPN'ized expression: "reubicacion i 2 - + *u &u origen -> *u dirCargaFichero ptrDirf i + *u &u pos -> *u + = "
  2022                                  ; Expanded expression: "reubicacion *(4) (@-16) *(4) 2 - 88 * + 80 + dirCargaFichero *(4) (@-8) *(4) (@-16) *(4) 80 * + 56 + *(4) + =(4) "
  2023                                  ; Fused expression:    "reubicacion push-ax - *(@-16) 2 * ax 88 + **sp ax + ax 80 push-ax dirCargaFichero push-ax * *(@-16) 80 + *(@-8) ax + ax 56 + **sp *ax =(204) **sp ax "
  2024                                  section .relod
  2025 0000008C [F6050000]              	dd	L140
  2026                                  section .text
  2027 000005F4 66B8                    	db	0x66, 0xB8
  2028                                  L140:
  2029 000005F6 [00000000]              	dd	_reubicacion
  2030 000005FA 6650                    	push	eax
  2031 000005FC 668B46F0                	mov	eax, [bp-16]
  2032 00000600 6683E802                	sub	eax, 2
  2033 00000604 666BC058                	imul	eax, eax, 88
  2034 00000608 6689C1                  	mov	ecx, eax
  2035 0000060B 665B                    	pop	ebx
  2036 0000060D 6689DE                  	mov	esi, ebx
  2037 00000610 66C1CE04                	ror	esi, 4
  2038 00000614 8EDE                    	mov	ds, si
  2039 00000616 66C1EE1C                	shr	esi, 28
  2040 0000061A 668B04                  	mov	eax, [si]
  2041 0000061D 6601C8                  	add	eax, ecx
  2042 00000620 6683C050                	add	eax, 80
  2043 00000624 6650                    	push	eax
  2044                                  section .relod
  2045 00000090 [28060000]              	dd	L141
  2046                                  section .text
  2047 00000626 66B8                    	db	0x66, 0xB8
  2048                                  L141:
  2049 00000628 [04000000]              	dd	_dirCargaFichero
  2050 0000062C 6650                    	push	eax
  2051 0000062E 668B46F0                	mov	eax, [bp-16]
  2052 00000632 666BC050                	imul	eax, eax, 80
  2053 00000636 6689C1                  	mov	ecx, eax
  2054 00000639 668B46F8                	mov	eax, [bp-8]
  2055 0000063D 6601C8                  	add	eax, ecx
  2056 00000640 6683C038                	add	eax, 56
  2057 00000644 6689C3                  	mov	ebx, eax
  2058 00000647 6689DE                  	mov	esi, ebx
  2059 0000064A 66C1CE04                	ror	esi, 4
  2060 0000064E 8EDE                    	mov	ds, si
  2061 00000650 66C1EE1C                	shr	esi, 28
  2062 00000654 668B0C                  	mov	ecx, [si]
  2063 00000657 665B                    	pop	ebx
  2064 00000659 6689DE                  	mov	esi, ebx
  2065 0000065C 66C1CE04                	ror	esi, 4
  2066 00000660 8EDE                    	mov	ds, si
  2067 00000662 66C1EE1C                	shr	esi, 28
  2068 00000666 668B04                  	mov	eax, [si]
  2069 00000669 6601C8                  	add	eax, ecx
  2070 0000066C 665B                    	pop	ebx
  2071 0000066E 6689DE                  	mov	esi, ebx
  2072 00000671 66C1CE04                	ror	esi, 4
  2073 00000675 8EDE                    	mov	ds, si
  2074 00000677 66C1EE1C                	shr	esi, 28
  2075 0000067B 668904                  	mov	[si], eax
  2076                                  ; RPN'ized expression: "reubicacion i 2 - + *u &u destino -> *u dirReub = "
  2077                                  ; Expanded expression: "reubicacion *(4) (@-16) *(4) 2 - 88 * + 84 + (@-12) *(4) =(4) "
  2078                                  ; Fused expression:    "reubicacion push-ax - *(@-16) 2 * ax 88 + **sp ax + ax 84 =(204) *ax *(@-12) "
  2079                                  section .relod
  2080 00000094 [80060000]              	dd	L142
  2081                                  section .text
  2082 0000067E 66B8                    	db	0x66, 0xB8
  2083                                  L142:
  2084 00000680 [00000000]              	dd	_reubicacion
  2085 00000684 6650                    	push	eax
  2086 00000686 668B46F0                	mov	eax, [bp-16]
  2087 0000068A 6683E802                	sub	eax, 2
  2088 0000068E 666BC058                	imul	eax, eax, 88
  2089 00000692 6689C1                  	mov	ecx, eax
  2090 00000695 665B                    	pop	ebx
  2091 00000697 6689DE                  	mov	esi, ebx
  2092 0000069A 66C1CE04                	ror	esi, 4
  2093 0000069E 8EDE                    	mov	ds, si
  2094 000006A0 66C1EE1C                	shr	esi, 28
  2095 000006A4 668B04                  	mov	eax, [si]
  2096 000006A7 6601C8                  	add	eax, ecx
  2097 000006AA 6683C054                	add	eax, 84
  2098 000006AE 6689C3                  	mov	ebx, eax
  2099 000006B1 668B46F4                	mov	eax, [bp-12]
  2100 000006B5 6689DE                  	mov	esi, ebx
  2101 000006B8 66C1CE04                	ror	esi, 4
  2102 000006BC 8EDE                    	mov	ds, si
  2103 000006BE 66C1EE1C                	shr	esi, 28
  2104 000006C2 668904                  	mov	[si], eax
  2105                                  ; if
  2106                                  ; RPN'ized expression: "ptrDirf i + *u &u tipo -> *u proceso_DF == ptrDirf i + *u &u tipo -> *u so1h_k_DF == || "
  2107                                  ; Expanded expression: "(@-8) *(4) (@-16) *(4) 80 * + 76 + *(4) 3 == [sh||->145] (@-8) *(4) (@-16) *(4) 80 * + 76 + *(4) 2 == ||[145] "
  2108                                  ; Fused expression:    "* *(@-16) 80 + *(@-8) ax + ax 76 == *ax 3 [sh||->145] * *(@-16) 80 + *(@-8) ax + ax 76 == *ax 2 ||[145]  "
  2109 000006C5 668B46F0                	mov	eax, [bp-16]
  2110 000006C9 666BC050                	imul	eax, eax, 80
  2111 000006CD 6689C1                  	mov	ecx, eax
  2112 000006D0 668B46F8                	mov	eax, [bp-8]
  2113 000006D4 6601C8                  	add	eax, ecx
  2114 000006D7 6683C04C                	add	eax, 76
  2115 000006DB 6689C3                  	mov	ebx, eax
  2116 000006DE 6689DE                  	mov	esi, ebx
  2117 000006E1 66C1CE04                	ror	esi, 4
  2118 000006E5 8EDE                    	mov	ds, si
  2119 000006E7 66C1EE1C                	shr	esi, 28
  2120 000006EB 668B04                  	mov	eax, [si]
  2121 000006EE 6683F803                	cmp	eax, 3
  2122 000006F2 0F94C0                  	sete	al
  2123 000006F5 660FB6C0                	movzx	eax, al
  2124                                  ; JumpIfNotZero
  2125 000006F9 6685C0                  	test	eax, eax
  2126 000006FC 7534                    	jne	L145
  2127 000006FE 668B46F0                	mov	eax, [bp-16]
  2128 00000702 666BC050                	imul	eax, eax, 80
  2129 00000706 6689C1                  	mov	ecx, eax
  2130 00000709 668B46F8                	mov	eax, [bp-8]
  2131 0000070D 6601C8                  	add	eax, ecx
  2132 00000710 6683C04C                	add	eax, 76
  2133 00000714 6689C3                  	mov	ebx, eax
  2134 00000717 6689DE                  	mov	esi, ebx
  2135 0000071A 66C1CE04                	ror	esi, 4
  2136 0000071E 8EDE                    	mov	ds, si
  2137 00000720 66C1EE1C                	shr	esi, 28
  2138 00000724 668B04                  	mov	eax, [si]
  2139 00000727 6683F802                	cmp	eax, 2
  2140 0000072B 0F94C0                  	sete	al
  2141 0000072E 660FB6C0                	movzx	eax, al
  2142                                  L145:
  2143                                  ; JumpIfZero
  2144 00000732 6685C0                  	test	eax, eax
  2145 00000735 747E                    	je	L143
  2146                                  ; loc         <something> : unsigned
  2147                                  ; loc         <something> : unsigned
  2148                                  ; RPN'ized expression: "dirReub dirReub ptrDirf i + *u &u SS -> *u (something146) 4 << + ptrDirf i + *u &u SP0 -> *u 15 + 4294967280u (something147) & + = "
  2149                                  ; Expanded expression: "(@-12) (@-12) *(4) (@-8) *(4) (@-16) *(4) 80 * + 72 + *(2) 4 << + (@-8) *(4) (@-16) *(4) 80 * + 74 + *(2) 15 + 4294967280u & + =(4) "
  2150                                  ; Fused expression:    "* *(@-16) 80 + *(@-8) ax + ax 72 << *ax 4 + *(@-12) ax push-ax * *(@-16) 80 + *(@-8) ax + ax 74 + *ax 15 & ax 4294967280u + *sp ax =(204) *(@-12) ax "
  2151 00000737 668B46F0                	mov	eax, [bp-16]
  2152 0000073B 666BC050                	imul	eax, eax, 80
  2153 0000073F 6689C1                  	mov	ecx, eax
  2154 00000742 668B46F8                	mov	eax, [bp-8]
  2155 00000746 6601C8                  	add	eax, ecx
  2156 00000749 6683C048                	add	eax, 72
  2157 0000074D 6689C3                  	mov	ebx, eax
  2158 00000750 6689DE                  	mov	esi, ebx
  2159 00000753 66C1CE04                	ror	esi, 4
  2160 00000757 8EDE                    	mov	ds, si
  2161 00000759 66C1EE1C                	shr	esi, 28
  2162 0000075D 8B04                    	mov	ax, [si]
  2163 0000075F 660FB7C0                	movzx	eax, ax
  2164 00000763 66C1E004                	shl	eax, 4
  2165 00000767 6689C1                  	mov	ecx, eax
  2166 0000076A 668B46F4                	mov	eax, [bp-12]
  2167 0000076E 6601C8                  	add	eax, ecx
  2168 00000771 6650                    	push	eax
  2169 00000773 668B46F0                	mov	eax, [bp-16]
  2170 00000777 666BC050                	imul	eax, eax, 80
  2171 0000077B 6689C1                  	mov	ecx, eax
  2172 0000077E 668B46F8                	mov	eax, [bp-8]
  2173 00000782 6601C8                  	add	eax, ecx
  2174 00000785 6683C04A                	add	eax, 74
  2175 00000789 6689C3                  	mov	ebx, eax
  2176 0000078C 6689DE                  	mov	esi, ebx
  2177 0000078F 66C1CE04                	ror	esi, 4
  2178 00000793 8EDE                    	mov	ds, si
  2179 00000795 66C1EE1C                	shr	esi, 28
  2180 00000799 8B04                    	mov	ax, [si]
  2181 0000079B 660FB7C0                	movzx	eax, ax
  2182 0000079F 6683C00F                	add	eax, 15
  2183 000007A3 6683E0F0                	and	eax, -16
  2184 000007A7 6689C1                  	mov	ecx, eax
  2185 000007AA 6658                    	pop	eax
  2186 000007AC 6601C8                  	add	eax, ecx
  2187 000007AF 668946F4                	mov	[bp-12], eax
  2188 000007B3 EB3F                    	jmp	L144
  2189                                  L143:
  2190                                  ; else
  2191                                  ; loc         <something> : unsigned
  2192                                  ; RPN'ized expression: "dirReub dirReub ptrDirf i + *u &u tam -> *u 15 + 4294967280u (something148) & + = "
  2193                                  ; Expanded expression: "(@-12) (@-12) *(4) (@-8) *(4) (@-16) *(4) 80 * + 60 + *(4) 15 + 4294967280u & + =(4) "
  2194                                  ; Fused expression:    "* *(@-16) 80 + *(@-8) ax + ax 60 + *ax 15 & ax 4294967280u + *(@-12) ax =(204) *(@-12) ax "
  2195 000007B5 668B46F0                	mov	eax, [bp-16]
  2196 000007B9 666BC050                	imul	eax, eax, 80
  2197 000007BD 6689C1                  	mov	ecx, eax
  2198 000007C0 668B46F8                	mov	eax, [bp-8]
  2199 000007C4 6601C8                  	add	eax, ecx
  2200 000007C7 6683C03C                	add	eax, 60
  2201 000007CB 6689C3                  	mov	ebx, eax
  2202 000007CE 6689DE                  	mov	esi, ebx
  2203 000007D1 66C1CE04                	ror	esi, 4
  2204 000007D5 8EDE                    	mov	ds, si
  2205 000007D7 66C1EE1C                	shr	esi, 28
  2206 000007DB 668B04                  	mov	eax, [si]
  2207 000007DE 6683C00F                	add	eax, 15
  2208 000007E2 6683E0F0                	and	eax, -16
  2209 000007E6 6689C1                  	mov	ecx, eax
  2210 000007E9 668B46F4                	mov	eax, [bp-12]
  2211 000007ED 6601C8                  	add	eax, ecx
  2212 000007F0 668946F4                	mov	[bp-12], eax
  2213                                  L144:
  2214                                  ; }
  2215                                  L125:
  2216                                  ; Fused expression:    "++p(4) *(@-16) "
  2217 000007F4 668B46F0                	mov	eax, [bp-16]
  2218 000007F8 66FF46F0                	inc	dword [bp-16]
  2219 000007FC E93DFD                  	jmp	L124
  2220                                  L127:
  2221                                  ; RPN'ized expression: "dirFinal dirReub = "
  2222                                  ; Expanded expression: "dirFinal (@-12) *(4) =(4) "
  2223                                  ; Fused expression:    "dirFinal =(204) *ax *(@-12) "
  2224                                  section .relod
  2225 00000098 [01080000]              	dd	L149
  2226                                  section .text
  2227 000007FF 66B8                    	db	0x66, 0xB8
  2228                                  L149:
  2229 00000801 [08000000]              	dd	_dirFinal
  2230 00000805 6689C3                  	mov	ebx, eax
  2231 00000808 668B46F4                	mov	eax, [bp-12]
  2232 0000080C 6689DE                  	mov	esi, ebx
  2233 0000080F 66C1CE04                	ror	esi, 4
  2234 00000813 8EDE                    	mov	ds, si
  2235 00000815 66C1EE1C                	shr	esi, 28
  2236 00000819 668904                  	mov	[si], eax
  2237                                  ; RPN'ized expression: "numER numEDF 2 - = "
  2238                                  ; Expanded expression: "numER numEDF *(4) 2 - =(4) "
  2239                                  ; Fused expression:    "numER push-ax numEDF - *ax 2 =(204) **sp ax "
  2240                                  section .relod
  2241 0000009C [1E080000]              	dd	L150
  2242                                  section .text
  2243 0000081C 66B8                    	db	0x66, 0xB8
  2244                                  L150:
  2245 0000081E [10000000]              	dd	_numER
  2246 00000822 6650                    	push	eax
  2247                                  section .relod
  2248 000000A0 [26080000]              	dd	L151
  2249                                  section .text
  2250 00000824 66B8                    	db	0x66, 0xB8
  2251                                  L151:
  2252 00000826 [0C000000]              	dd	_numEDF
  2253 0000082A 6689C3                  	mov	ebx, eax
  2254 0000082D 6689DE                  	mov	esi, ebx
  2255 00000830 66C1CE04                	ror	esi, 4
  2256 00000834 8EDE                    	mov	ds, si
  2257 00000836 66C1EE1C                	shr	esi, 28
  2258 0000083A 668B04                  	mov	eax, [si]
  2259 0000083D 6683E802                	sub	eax, 2
  2260 00000841 665B                    	pop	ebx
  2261 00000843 6689DE                  	mov	esi, ebx
  2262 00000846 66C1CE04                	ror	esi, 4
  2263 0000084A 8EDE                    	mov	ds, si
  2264 0000084C 66C1EE1C                	shr	esi, 28
  2265 00000850 668904                  	mov	[si], eax
  2266                                  
  2267                                  section .rodata
  2268                                  L152:
  2269 0000015B 0A0A20646972496E69-     	db	10,10," dirInicial = "
  2269 00000164 6369616C203D20     
  2270 0000016B 00                      	times	1 db 0
  2271                                  
  2272                                  section .text
  2273                                  ; RPN'ized expression: "( L152 printStrVideo ) "
  2274                                  ; Expanded expression: " L152  printStrVideo ()4 "
  2275                                  ; Fused expression:    "( L152 , printStrVideo )4 "
  2276                                  section .relod
  2277 000000A4 [55080000]              	dd	L153
  2278                                  section .text
  2279 00000853 6668                    	db	0x66, 0x68
  2280                                  L153:
  2281 00000855 [5B010000]              	dd	L152
  2282 00000859 9A                      	db	0x9A
  2283                                  section .relot
  2284 000000D0 [5A080000]              	dd	L154
  2285                                  section .text
  2286                                  L154:
  2287 0000085A [00000000]              	dd	_printStrVideo
  2288 0000085E 83ECFC                  	sub	sp, -4
  2289                                  ; RPN'ized expression: "( 8 , dirInicial printLHexVideo ) "
  2290                                  ; Expanded expression: " 8  dirInicial *(4)  printLHexVideo ()8 "
  2291                                  ; Fused expression:    "( 8 , dirInicial *(4) ax , printLHexVideo )8 "
  2292 00000861 666A08                  	push	dword 8
  2293                                  section .relod
  2294 000000A8 [66080000]              	dd	L155
  2295                                  section .text
  2296 00000864 66B8                    	db	0x66, 0xB8
  2297                                  L155:
  2298 00000866 [00000000]              	dd	_dirInicial
  2299 0000086A 6689C3                  	mov	ebx, eax
  2300 0000086D 6689DE                  	mov	esi, ebx
  2301 00000870 66C1CE04                	ror	esi, 4
  2302 00000874 8EDE                    	mov	ds, si
  2303 00000876 66C1EE1C                	shr	esi, 28
  2304 0000087A 66FF34                  	push	dword [si]
  2305 0000087D 9A                      	db	0x9A
  2306                                  section .relot
  2307 000000D4 [7E080000]              	dd	L156
  2308                                  section .text
  2309                                  L156:
  2310 0000087E [00000000]              	dd	_printLHexVideo
  2311 00000882 83ECF8                  	sub	sp, -8
  2312                                  
  2313                                  section .rodata
  2314                                  L157:
  2315 0000016C 2064697246696E616C-     	db	" dirFinal = "
  2315 00000175 203D20             
  2316 00000178 00                      	times	1 db 0
  2317                                  
  2318                                  section .text
  2319                                  ; RPN'ized expression: "( L157 printStrVideo ) "
  2320                                  ; Expanded expression: " L157  printStrVideo ()4 "
  2321                                  ; Fused expression:    "( L157 , printStrVideo )4 "
  2322                                  section .relod
  2323 000000AC [87080000]              	dd	L158
  2324                                  section .text
  2325 00000885 6668                    	db	0x66, 0x68
  2326                                  L158:
  2327 00000887 [6C010000]              	dd	L157
  2328 0000088B 9A                      	db	0x9A
  2329                                  section .relot
  2330 000000D8 [8C080000]              	dd	L159
  2331                                  section .text
  2332                                  L159:
  2333 0000088C [00000000]              	dd	_printStrVideo
  2334 00000890 83ECFC                  	sub	sp, -4
  2335                                  ; RPN'ized expression: "( 8 , dirFinal printLHexVideo ) "
  2336                                  ; Expanded expression: " 8  dirFinal *(4)  printLHexVideo ()8 "
  2337                                  ; Fused expression:    "( 8 , dirFinal *(4) ax , printLHexVideo )8 "
  2338 00000893 666A08                  	push	dword 8
  2339                                  section .relod
  2340 000000B0 [98080000]              	dd	L160
  2341                                  section .text
  2342 00000896 66B8                    	db	0x66, 0xB8
  2343                                  L160:
  2344 00000898 [08000000]              	dd	_dirFinal
  2345 0000089C 6689C3                  	mov	ebx, eax
  2346 0000089F 6689DE                  	mov	esi, ebx
  2347 000008A2 66C1CE04                	ror	esi, 4
  2348 000008A6 8EDE                    	mov	ds, si
  2349 000008A8 66C1EE1C                	shr	esi, 28
  2350 000008AC 66FF34                  	push	dword [si]
  2351 000008AF 9A                      	db	0x9A
  2352                                  section .relot
  2353 000000DC [B0080000]              	dd	L161
  2354                                  section .text
  2355                                  L161:
  2356 000008B0 [00000000]              	dd	_printLHexVideo
  2357 000008B4 83ECF8                  	sub	sp, -8
  2358                                  
  2359                                  section .rodata
  2360                                  L162:
  2361 00000179 0A                      	db	10
  2362 0000017A 00                      	times	1 db 0
  2363                                  
  2364                                  section .text
  2365                                  ; RPN'ized expression: "( L162 printStrVideo ) "
  2366                                  ; Expanded expression: " L162  printStrVideo ()4 "
  2367                                  ; Fused expression:    "( L162 , printStrVideo )4 "
  2368                                  section .relod
  2369 000000B4 [B9080000]              	dd	L163
  2370                                  section .text
  2371 000008B7 6668                    	db	0x66, 0x68
  2372                                  L163:
  2373 000008B9 [79010000]              	dd	L162
  2374 000008BD 9A                      	db	0x9A
  2375                                  section .relot
  2376 000000E0 [BE080000]              	dd	L164
  2377                                  section .text
  2378                                  L164:
  2379 000008BE [00000000]              	dd	_printStrVideo
  2380 000008C2 83ECFC                  	sub	sp, -4
  2381                                  ; for
  2382                                  ; loc     j : (@-16): int
  2383                                  ; RPN'ized expression: "j 0 = "
  2384                                  ; Expanded expression: "(@-16) 0 =(4) "
  2385                                  ; Fused expression:    "=(204) *(@-16) 0 "
  2386 000008C5 66B800000000            	mov	eax, 0
  2387 000008CB 668946F0                	mov	[bp-16], eax
  2388                                  L165:
  2389                                  ; RPN'ized expression: "j numER < "
  2390                                  ; Expanded expression: "(@-16) *(4) numER *(4) <u "
  2391                                  ; Fused expression:    "numER <u *(@-16) *ax IF! "
  2392                                  section .relod
  2393 000000B8 [D1080000]              	dd	L169
  2394                                  section .text
  2395 000008CF 66B8                    	db	0x66, 0xB8
  2396                                  L169:
  2397 000008D1 [10000000]              	dd	_numER
  2398 000008D5 6689C3                  	mov	ebx, eax
  2399 000008D8 6689DE                  	mov	esi, ebx
  2400 000008DB 66C1CE04                	ror	esi, 4
  2401 000008DF 8EDE                    	mov	ds, si
  2402 000008E1 66C1EE1C                	shr	esi, 28
  2403 000008E5 668B0C                  	mov	ecx, [si]
  2404 000008E8 668B46F0                	mov	eax, [bp-16]
  2405 000008EC 6639C8                  	cmp	eax, ecx
  2406 000008EF 0F831E02                	jae	L168
  2407                                  ; RPN'ized expression: "j ++p "
  2408                                  ; Expanded expression: "(@-16) ++p(4) "
  2409                                  ; {
  2410                                  ; RPN'ized expression: "( reubicacion j + *u &u entradaDF -> *u &u tam -> *u , reubicacion j + *u &u origen -> *u , reubicacion j + *u &u destino -> *u memmove ) "
  2411                                  ; Expanded expression: " reubicacion *(4) (@-16) *(4) 88 * + 0 + 60 + *(4)  reubicacion *(4) (@-16) *(4) 88 * + 80 + *(4)  reubicacion *(4) (@-16) *(4) 88 * + 84 + *(4)  memmove ()12 "
  2412                                  ; Fused expression:    "( reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 60 *(4) ax , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 80 *(4) ax , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 84 *(4) ax ,
  2413                                  section .relod
  2414 000000BC [F5080000]              	dd	L170
  2415                                  section .text
  2416 000008F3 66B8                    	db	0x66, 0xB8
  2417                                  L170:
  2418 000008F5 [00000000]              	dd	_reubicacion
  2419 000008F9 6650                    	push	eax
  2420 000008FB 668B46F0                	mov	eax, [bp-16]
  2421 000008FF 666BC058                	imul	eax, eax, 88
  2422 00000903 6689C1                  	mov	ecx, eax
  2423 00000906 665B                    	pop	ebx
  2424 00000908 6689DE                  	mov	esi, ebx
  2425 0000090B 66C1CE04                	ror	esi, 4
  2426 0000090F 8EDE                    	mov	ds, si
  2427 00000911 66C1EE1C                	shr	esi, 28
  2428 00000915 668B04                  	mov	eax, [si]
  2429 00000918 6601C8                  	add	eax, ecx
  2430 0000091B 6683C03C                	add	eax, 60
  2431 0000091F 6689C3                  	mov	ebx, eax
  2432 00000922 6689DE                  	mov	esi, ebx
  2433 00000925 66C1CE04                	ror	esi, 4
  2434 00000929 8EDE                    	mov	ds, si
  2435 0000092B 66C1EE1C                	shr	esi, 28
  2436 0000092F 66FF34                  	push	dword [si]
  2437                                  section .relod
  2438 000000C0 [34090000]              	dd	L171
  2439                                  section .text
  2440 00000932 66B8                    	db	0x66, 0xB8
  2441                                  L171:
  2442 00000934 [00000000]              	dd	_reubicacion
  2443 00000938 6650                    	push	eax
  2444 0000093A 668B46F0                	mov	eax, [bp-16]
  2445 0000093E 666BC058                	imul	eax, eax, 88
  2446 00000942 6689C1                  	mov	ecx, eax
  2447 00000945 665B                    	pop	ebx
  2448 00000947 6689DE                  	mov	esi, ebx
  2449 0000094A 66C1CE04                	ror	esi, 4
  2450 0000094E 8EDE                    	mov	ds, si
  2451 00000950 66C1EE1C                	shr	esi, 28
  2452 00000954 668B04                  	mov	eax, [si]
  2453 00000957 6601C8                  	add	eax, ecx
  2454 0000095A 6683C050                	add	eax, 80
  2455 0000095E 6689C3                  	mov	ebx, eax
  2456 00000961 6689DE                  	mov	esi, ebx
  2457 00000964 66C1CE04                	ror	esi, 4
  2458 00000968 8EDE                    	mov	ds, si
  2459 0000096A 66C1EE1C                	shr	esi, 28
  2460 0000096E 66FF34                  	push	dword [si]
  2461                                  section .relod
  2462 000000C4 [73090000]              	dd	L172
  2463                                  section .text
  2464 00000971 66B8                    	db	0x66, 0xB8
  2465                                  L172:
  2466 00000973 [00000000]              	dd	_reubicacion
  2467 00000977 6650                    	push	eax
  2468 00000979 668B46F0                	mov	eax, [bp-16]
  2469 0000097D 666BC058                	imul	eax, eax, 88
  2470 00000981 6689C1                  	mov	ecx, eax
  2471 00000984 665B                    	pop	ebx
  2472 00000986 6689DE                  	mov	esi, ebx
  2473 00000989 66C1CE04                	ror	esi, 4
  2474 0000098D 8EDE                    	mov	ds, si
  2475 0000098F 66C1EE1C                	shr	esi, 28
  2476 00000993 668B04                  	mov	eax, [si]
  2477 00000996 6601C8                  	add	eax, ecx
  2478 00000999 6683C054                	add	eax, 84
  2479 0000099D 6689C3                  	mov	ebx, eax
  2480 000009A0 6689DE                  	mov	esi, ebx
  2481 000009A3 66C1CE04                	ror	esi, 4
  2482 000009A7 8EDE                    	mov	ds, si
  2483 000009A9 66C1EE1C                	shr	esi, 28
  2484 000009AD 66FF34                  	push	dword [si]
  2485 000009B0 9A                      	db	0x9A
  2486                                  section .relot
  2487 000000E4 [B1090000]              	dd	L173
  2488                                  section .text
  2489                                  L173:
  2490 000009B1 [00000000]              	dd	_memmove
  2491 000009B5 83ECF4                  	sub	sp, -12
  2492                                  
  2493                                  section .rodata
  2494                                  L174:
  2495 0000017B 0A206E6F6D62726520-     	db	10," nombre = "
  2495 00000184 3D20               
  2496 00000186 00                      	times	1 db 0
  2497                                  
  2498                                  section .text
  2499                                  ; RPN'ized expression: "( L174 printStrVideo ) "
  2500                                  ; Expanded expression: " L174  printStrVideo ()4 "
  2501                                  ; Fused expression:    "( L174 , printStrVideo )4 "
  2502                                  section .relod
  2503 000000C8 [BA090000]              	dd	L175
  2504                                  section .text
  2505 000009B8 6668                    	db	0x66, 0x68
  2506                                  L175:
  2507 000009BA [7B010000]              	dd	L174
  2508 000009BE 9A                      	db	0x9A
  2509                                  section .relot
  2510 000000E8 [BF090000]              	dd	L176
  2511                                  section .text
  2512                                  L176:
  2513 000009BF [00000000]              	dd	_printStrVideo
  2514 000009C3 83ECFC                  	sub	sp, -4
  2515                                  ; RPN'ized expression: "( TRUE , 20 , reubicacion j + *u &u entradaDF -> *u &u nombre -> *u printStrHastaVideo ) "
  2516                                  ; Expanded expression: " 1  20  reubicacion *(4) (@-16) *(4) 88 * + 0 + 0 +  printStrHastaVideo ()12 "
  2517                                  ; Fused expression:    "( 1 , 20 , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 0 , printStrHastaVideo )12 "
  2518 000009C6 666A01                  	push	dword 1
  2519 000009C9 666A14                  	push	dword 20
  2520                                  section .relod
  2521 000000CC [CE090000]              	dd	L177
  2522                                  section .text
  2523 000009CC 66B8                    	db	0x66, 0xB8
  2524                                  L177:
  2525 000009CE [00000000]              	dd	_reubicacion
  2526 000009D2 6650                    	push	eax
  2527 000009D4 668B46F0                	mov	eax, [bp-16]
  2528 000009D8 666BC058                	imul	eax, eax, 88
  2529 000009DC 6689C1                  	mov	ecx, eax
  2530 000009DF 665B                    	pop	ebx
  2531 000009E1 6689DE                  	mov	esi, ebx
  2532 000009E4 66C1CE04                	ror	esi, 4
  2533 000009E8 8EDE                    	mov	ds, si
  2534 000009EA 66C1EE1C                	shr	esi, 28
  2535 000009EE 668B04                  	mov	eax, [si]
  2536 000009F1 6601C8                  	add	eax, ecx
  2537 000009F4 6650                    	push	eax
  2538 000009F6 9A                      	db	0x9A
  2539                                  section .relot
  2540 000000EC [F7090000]              	dd	L178
  2541                                  section .text
  2542                                  L178:
  2543 000009F7 [00000000]              	dd	_printStrHastaVideo
  2544 000009FB 83ECF4                  	sub	sp, -12
  2545                                  
  2546                                  section .rodata
  2547                                  L179:
  2548 00000187 206F726967656E203D-     	db	" origen = "
  2548 00000190 20                 
  2549 00000191 00                      	times	1 db 0
  2550                                  
  2551                                  section .text
  2552                                  ; RPN'ized expression: "( L179 printStrVideo ) "
  2553                                  ; Expanded expression: " L179  printStrVideo ()4 "
  2554                                  ; Fused expression:    "( L179 , printStrVideo )4 "
  2555                                  section .relod
  2556 000000D0 [000A0000]              	dd	L180
  2557                                  section .text
  2558 000009FE 6668                    	db	0x66, 0x68
  2559                                  L180:
  2560 00000A00 [87010000]              	dd	L179
  2561 00000A04 9A                      	db	0x9A
  2562                                  section .relot
  2563 000000F0 [050A0000]              	dd	L181
  2564                                  section .text
  2565                                  L181:
  2566 00000A05 [00000000]              	dd	_printStrVideo
  2567 00000A09 83ECFC                  	sub	sp, -4
  2568                                  ; RPN'ized expression: "( 8 , reubicacion j + *u &u origen -> *u printLHexVideo ) "
  2569                                  ; Expanded expression: " 8  reubicacion *(4) (@-16) *(4) 88 * + 80 + *(4)  printLHexVideo ()8 "
  2570                                  ; Fused expression:    "( 8 , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 80 *(4) ax , printLHexVideo )8 "
  2571 00000A0C 666A08                  	push	dword 8
  2572                                  section .relod
  2573 000000D4 [110A0000]              	dd	L182
  2574                                  section .text
  2575 00000A0F 66B8                    	db	0x66, 0xB8
  2576                                  L182:
  2577 00000A11 [00000000]              	dd	_reubicacion
  2578 00000A15 6650                    	push	eax
  2579 00000A17 668B46F0                	mov	eax, [bp-16]
  2580 00000A1B 666BC058                	imul	eax, eax, 88
  2581 00000A1F 6689C1                  	mov	ecx, eax
  2582 00000A22 665B                    	pop	ebx
  2583 00000A24 6689DE                  	mov	esi, ebx
  2584 00000A27 66C1CE04                	ror	esi, 4
  2585 00000A2B 8EDE                    	mov	ds, si
  2586 00000A2D 66C1EE1C                	shr	esi, 28
  2587 00000A31 668B04                  	mov	eax, [si]
  2588 00000A34 6601C8                  	add	eax, ecx
  2589 00000A37 6683C050                	add	eax, 80
  2590 00000A3B 6689C3                  	mov	ebx, eax
  2591 00000A3E 6689DE                  	mov	esi, ebx
  2592 00000A41 66C1CE04                	ror	esi, 4
  2593 00000A45 8EDE                    	mov	ds, si
  2594 00000A47 66C1EE1C                	shr	esi, 28
  2595 00000A4B 66FF34                  	push	dword [si]
  2596 00000A4E 9A                      	db	0x9A
  2597                                  section .relot
  2598 000000F4 [4F0A0000]              	dd	L183
  2599                                  section .text
  2600                                  L183:
  2601 00000A4F [00000000]              	dd	_printLHexVideo
  2602 00000A53 83ECF8                  	sub	sp, -8
  2603                                  
  2604                                  section .rodata
  2605                                  L184:
  2606 00000192 2064657374696E6F20-     	db	" destino = "
  2606 0000019B 3D20               
  2607 0000019D 00                      	times	1 db 0
  2608                                  
  2609                                  section .text
  2610                                  ; RPN'ized expression: "( L184 printStrVideo ) "
  2611                                  ; Expanded expression: " L184  printStrVideo ()4 "
  2612                                  ; Fused expression:    "( L184 , printStrVideo )4 "
  2613                                  section .relod
  2614 000000D8 [580A0000]              	dd	L185
  2615                                  section .text
  2616 00000A56 6668                    	db	0x66, 0x68
  2617                                  L185:
  2618 00000A58 [92010000]              	dd	L184
  2619 00000A5C 9A                      	db	0x9A
  2620                                  section .relot
  2621 000000F8 [5D0A0000]              	dd	L186
  2622                                  section .text
  2623                                  L186:
  2624 00000A5D [00000000]              	dd	_printStrVideo
  2625 00000A61 83ECFC                  	sub	sp, -4
  2626                                  ; RPN'ized expression: "( 8 , reubicacion j + *u &u destino -> *u printLHexVideo ) "
  2627                                  ; Expanded expression: " 8  reubicacion *(4) (@-16) *(4) 88 * + 84 + *(4)  printLHexVideo ()8 "
  2628                                  ; Fused expression:    "( 8 , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 84 *(4) ax , printLHexVideo )8 "
  2629 00000A64 666A08                  	push	dword 8
  2630                                  section .relod
  2631 000000DC [690A0000]              	dd	L187
  2632                                  section .text
  2633 00000A67 66B8                    	db	0x66, 0xB8
  2634                                  L187:
  2635 00000A69 [00000000]              	dd	_reubicacion
  2636 00000A6D 6650                    	push	eax
  2637 00000A6F 668B46F0                	mov	eax, [bp-16]
  2638 00000A73 666BC058                	imul	eax, eax, 88
  2639 00000A77 6689C1                  	mov	ecx, eax
  2640 00000A7A 665B                    	pop	ebx
  2641 00000A7C 6689DE                  	mov	esi, ebx
  2642 00000A7F 66C1CE04                	ror	esi, 4
  2643 00000A83 8EDE                    	mov	ds, si
  2644 00000A85 66C1EE1C                	shr	esi, 28
  2645 00000A89 668B04                  	mov	eax, [si]
  2646 00000A8C 6601C8                  	add	eax, ecx
  2647 00000A8F 6683C054                	add	eax, 84
  2648 00000A93 6689C3                  	mov	ebx, eax
  2649 00000A96 6689DE                  	mov	esi, ebx
  2650 00000A99 66C1CE04                	ror	esi, 4
  2651 00000A9D 8EDE                    	mov	ds, si
  2652 00000A9F 66C1EE1C                	shr	esi, 28
  2653 00000AA3 66FF34                  	push	dword [si]
  2654 00000AA6 9A                      	db	0x9A
  2655                                  section .relot
  2656 000000FC [A70A0000]              	dd	L188
  2657                                  section .text
  2658                                  L188:
  2659 00000AA7 [00000000]              	dd	_printLHexVideo
  2660 00000AAB 83ECF8                  	sub	sp, -8
  2661                                  
  2662                                  section .rodata
  2663                                  L189:
  2664 0000019E 2074616D203D20          	db	" tam = "
  2665 000001A5 00                      	times	1 db 0
  2666                                  
  2667                                  section .text
  2668                                  ; RPN'ized expression: "( L189 printStrVideo ) "
  2669                                  ; Expanded expression: " L189  printStrVideo ()4 "
  2670                                  ; Fused expression:    "( L189 , printStrVideo )4 "
  2671                                  section .relod
  2672 000000E0 [B00A0000]              	dd	L190
  2673                                  section .text
  2674 00000AAE 6668                    	db	0x66, 0x68
  2675                                  L190:
  2676 00000AB0 [9E010000]              	dd	L189
  2677 00000AB4 9A                      	db	0x9A
  2678                                  section .relot
  2679 00000100 [B50A0000]              	dd	L191
  2680                                  section .text
  2681                                  L191:
  2682 00000AB5 [00000000]              	dd	_printStrVideo
  2683 00000AB9 83ECFC                  	sub	sp, -4
  2684                                  ; RPN'ized expression: "( 1 , reubicacion j + *u &u entradaDF -> *u &u tam -> *u printLDecVideo ) "
  2685                                  ; Expanded expression: " 1  reubicacion *(4) (@-16) *(4) 88 * + 0 + 60 + *(4)  printLDecVideo ()8 "
  2686                                  ; Fused expression:    "( 1 , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 60 *(4) ax , printLDecVideo )8 "
  2687 00000ABC 666A01                  	push	dword 1
  2688                                  section .relod
  2689 000000E4 [C10A0000]              	dd	L192
  2690                                  section .text
  2691 00000ABF 66B8                    	db	0x66, 0xB8
  2692                                  L192:
  2693 00000AC1 [00000000]              	dd	_reubicacion
  2694 00000AC5 6650                    	push	eax
  2695 00000AC7 668B46F0                	mov	eax, [bp-16]
  2696 00000ACB 666BC058                	imul	eax, eax, 88
  2697 00000ACF 6689C1                  	mov	ecx, eax
  2698 00000AD2 665B                    	pop	ebx
  2699 00000AD4 6689DE                  	mov	esi, ebx
  2700 00000AD7 66C1CE04                	ror	esi, 4
  2701 00000ADB 8EDE                    	mov	ds, si
  2702 00000ADD 66C1EE1C                	shr	esi, 28
  2703 00000AE1 668B04                  	mov	eax, [si]
  2704 00000AE4 6601C8                  	add	eax, ecx
  2705 00000AE7 6683C03C                	add	eax, 60
  2706 00000AEB 6689C3                  	mov	ebx, eax
  2707 00000AEE 6689DE                  	mov	esi, ebx
  2708 00000AF1 66C1CE04                	ror	esi, 4
  2709 00000AF5 8EDE                    	mov	ds, si
  2710 00000AF7 66C1EE1C                	shr	esi, 28
  2711 00000AFB 66FF34                  	push	dword [si]
  2712 00000AFE 9A                      	db	0x9A
  2713                                  section .relot
  2714 00000104 [FF0A0000]              	dd	L193
  2715                                  section .text
  2716                                  L193:
  2717 00000AFF [00000000]              	dd	_printLDecVideo
  2718 00000B03 83ECF8                  	sub	sp, -8
  2719                                  ; }
  2720                                  L166:
  2721                                  ; Fused expression:    "++p(4) *(@-16) "
  2722 00000B06 668B46F0                	mov	eax, [bp-16]
  2723 00000B0A 66FF46F0                	inc	dword [bp-16]
  2724 00000B0E E9BEFD                  	jmp	L165
  2725                                  L168:
  2726                                  ; for
  2727                                  ; loc     j : (@-16): int
  2728                                  ; RPN'ized expression: "j 0 = "
  2729                                  ; Expanded expression: "(@-16) 0 =(4) "
  2730                                  ; Fused expression:    "=(204) *(@-16) 0 "
  2731 00000B11 66B800000000            	mov	eax, 0
  2732 00000B17 668946F0                	mov	[bp-16], eax
  2733                                  L194:
  2734                                  ; RPN'ized expression: "j numER < "
  2735                                  ; Expanded expression: "(@-16) *(4) numER *(4) <u "
  2736                                  ; Fused expression:    "numER <u *(@-16) *ax IF! "
  2737                                  section .relod
  2738 000000E8 [1D0B0000]              	dd	L198
  2739                                  section .text
  2740 00000B1B 66B8                    	db	0x66, 0xB8
  2741                                  L198:
  2742 00000B1D [10000000]              	dd	_numER
  2743 00000B21 6689C3                  	mov	ebx, eax
  2744 00000B24 6689DE                  	mov	esi, ebx
  2745 00000B27 66C1CE04                	ror	esi, 4
  2746 00000B2B 8EDE                    	mov	ds, si
  2747 00000B2D 66C1EE1C                	shr	esi, 28
  2748 00000B31 668B0C                  	mov	ecx, [si]
  2749 00000B34 668B46F0                	mov	eax, [bp-16]
  2750 00000B38 6639C8                  	cmp	eax, ecx
  2751 00000B3B 0F83AD02                	jae	L197
  2752                                  ; RPN'ized expression: "j ++p "
  2753                                  ; Expanded expression: "(@-16) ++p(4) "
  2754                                  ; {
  2755                                  ; if
  2756                                  ; RPN'ized expression: "reubicacion j + *u &u entradaDF -> *u &u tipo -> *u proceso_DF == reubicacion j + *u &u entradaDF -> *u &u tipo -> *u so1h_k_DF == || "
  2757                                  ; Expanded expression: "reubicacion *(4) (@-16) *(4) 88 * + 0 + 76 + *(4) 3 == [sh||->201] reubicacion *(4) (@-16) *(4) 88 * + 0 + 76 + *(4) 2 == ||[201] "
  2758                                  ; Fused expression:    "reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 76 == *ax 3 [sh||->201] reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 76 == *ax 2 ||[201]  "
  2759                                  section .relod
  2760 000000EC [410B0000]              	dd	L202
  2761                                  section .text
  2762 00000B3F 66B8                    	db	0x66, 0xB8
  2763                                  L202:
  2764 00000B41 [00000000]              	dd	_reubicacion
  2765 00000B45 6650                    	push	eax
  2766 00000B47 668B46F0                	mov	eax, [bp-16]
  2767 00000B4B 666BC058                	imul	eax, eax, 88
  2768 00000B4F 6689C1                  	mov	ecx, eax
  2769 00000B52 665B                    	pop	ebx
  2770 00000B54 6689DE                  	mov	esi, ebx
  2771 00000B57 66C1CE04                	ror	esi, 4
  2772 00000B5B 8EDE                    	mov	ds, si
  2773 00000B5D 66C1EE1C                	shr	esi, 28
  2774 00000B61 668B04                  	mov	eax, [si]
  2775 00000B64 6601C8                  	add	eax, ecx
  2776 00000B67 6683C04C                	add	eax, 76
  2777 00000B6B 6689C3                  	mov	ebx, eax
  2778 00000B6E 6689DE                  	mov	esi, ebx
  2779 00000B71 66C1CE04                	ror	esi, 4
  2780 00000B75 8EDE                    	mov	ds, si
  2781 00000B77 66C1EE1C                	shr	esi, 28
  2782 00000B7B 668B04                  	mov	eax, [si]
  2783 00000B7E 6683F803                	cmp	eax, 3
  2784 00000B82 0F94C0                  	sete	al
  2785 00000B85 660FB6C0                	movzx	eax, al
  2786                                  ; JumpIfNotZero
  2787 00000B89 6685C0                  	test	eax, eax
  2788 00000B8C 754A                    	jne	L201
  2789                                  section .relod
  2790 000000F0 [900B0000]              	dd	L203
  2791                                  section .text
  2792 00000B8E 66B8                    	db	0x66, 0xB8
  2793                                  L203:
  2794 00000B90 [00000000]              	dd	_reubicacion
  2795 00000B94 6650                    	push	eax
  2796 00000B96 668B46F0                	mov	eax, [bp-16]
  2797 00000B9A 666BC058                	imul	eax, eax, 88
  2798 00000B9E 6689C1                  	mov	ecx, eax
  2799 00000BA1 665B                    	pop	ebx
  2800 00000BA3 6689DE                  	mov	esi, ebx
  2801 00000BA6 66C1CE04                	ror	esi, 4
  2802 00000BAA 8EDE                    	mov	ds, si
  2803 00000BAC 66C1EE1C                	shr	esi, 28
  2804 00000BB0 668B04                  	mov	eax, [si]
  2805 00000BB3 6601C8                  	add	eax, ecx
  2806 00000BB6 6683C04C                	add	eax, 76
  2807 00000BBA 6689C3                  	mov	ebx, eax
  2808 00000BBD 6689DE                  	mov	esi, ebx
  2809 00000BC0 66C1CE04                	ror	esi, 4
  2810 00000BC4 8EDE                    	mov	ds, si
  2811 00000BC6 66C1EE1C                	shr	esi, 28
  2812 00000BCA 668B04                  	mov	eax, [si]
  2813 00000BCD 6683F802                	cmp	eax, 2
  2814 00000BD1 0F94C0                  	sete	al
  2815 00000BD4 660FB6C0                	movzx	eax, al
  2816                                  L201:
  2817                                  ; JumpIfZero
  2818 00000BD8 6685C0                  	test	eax, eax
  2819 00000BDB 0F840202                	je	L199
  2820                                  ; {
  2821                                  ; loc             <something> : unsigned
  2822                                  ; RPN'ized expression: "( reubicacion j + *u &u entradaDF -> *u &u SS -> *u (something204) 4 << reubicacion j + *u &u entradaDF -> *u &u tam -> *u - , 0 , reubicacion j + *u &u destino -> *u reubicacion j + *u &u en
  2823                                  ; Expanded expression: " reubicacion *(4) (@-16) *(4) 88 * + 0 + 72 + *(2) 4 << reubicacion *(4) (@-16) *(4) 88 * + 0 + 60 + *(4) -  0  reubicacion *(4) (@-16) *(4) 88 * + 84 + *(4) reubicacion *(4) (@-16) *(4) 88 *
  2824                                  ; Fused expression:    "( reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 72 << *ax 4 push-ax reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 60 - *sp *ax , 0 , reubicacion push-ax * *(@-16) 88 + **sp 
  2825                                  section .relod
  2826 000000F4 [E10B0000]              	dd	L205
  2827                                  section .text
  2828 00000BDF 66B8                    	db	0x66, 0xB8
  2829                                  L205:
  2830 00000BE1 [00000000]              	dd	_reubicacion
  2831 00000BE5 6650                    	push	eax
  2832 00000BE7 668B46F0                	mov	eax, [bp-16]
  2833 00000BEB 666BC058                	imul	eax, eax, 88
  2834 00000BEF 6689C1                  	mov	ecx, eax
  2835 00000BF2 665B                    	pop	ebx
  2836 00000BF4 6689DE                  	mov	esi, ebx
  2837 00000BF7 66C1CE04                	ror	esi, 4
  2838 00000BFB 8EDE                    	mov	ds, si
  2839 00000BFD 66C1EE1C                	shr	esi, 28
  2840 00000C01 668B04                  	mov	eax, [si]
  2841 00000C04 6601C8                  	add	eax, ecx
  2842 00000C07 6683C048                	add	eax, 72
  2843 00000C0B 6689C3                  	mov	ebx, eax
  2844 00000C0E 6689DE                  	mov	esi, ebx
  2845 00000C11 66C1CE04                	ror	esi, 4
  2846 00000C15 8EDE                    	mov	ds, si
  2847 00000C17 66C1EE1C                	shr	esi, 28
  2848 00000C1B 8B04                    	mov	ax, [si]
  2849 00000C1D 660FB7C0                	movzx	eax, ax
  2850 00000C21 66C1E004                	shl	eax, 4
  2851 00000C25 6650                    	push	eax
  2852                                  section .relod
  2853 000000F8 [290C0000]              	dd	L206
  2854                                  section .text
  2855 00000C27 66B8                    	db	0x66, 0xB8
  2856                                  L206:
  2857 00000C29 [00000000]              	dd	_reubicacion
  2858 00000C2D 6650                    	push	eax
  2859 00000C2F 668B46F0                	mov	eax, [bp-16]
  2860 00000C33 666BC058                	imul	eax, eax, 88
  2861 00000C37 6689C1                  	mov	ecx, eax
  2862 00000C3A 665B                    	pop	ebx
  2863 00000C3C 6689DE                  	mov	esi, ebx
  2864 00000C3F 66C1CE04                	ror	esi, 4
  2865 00000C43 8EDE                    	mov	ds, si
  2866 00000C45 66C1EE1C                	shr	esi, 28
  2867 00000C49 668B04                  	mov	eax, [si]
  2868 00000C4C 6601C8                  	add	eax, ecx
  2869 00000C4F 6683C03C                	add	eax, 60
  2870 00000C53 6689C3                  	mov	ebx, eax
  2871 00000C56 6689DE                  	mov	esi, ebx
  2872 00000C59 66C1CE04                	ror	esi, 4
  2873 00000C5D 8EDE                    	mov	ds, si
  2874 00000C5F 66C1EE1C                	shr	esi, 28
  2875 00000C63 668B0C                  	mov	ecx, [si]
  2876 00000C66 6658                    	pop	eax
  2877 00000C68 6629C8                  	sub	eax, ecx
  2878 00000C6B 6650                    	push	eax
  2879 00000C6D 666A00                  	push	dword 0
  2880                                  section .relod
  2881 000000FC [720C0000]              	dd	L207
  2882                                  section .text
  2883 00000C70 66B8                    	db	0x66, 0xB8
  2884                                  L207:
  2885 00000C72 [00000000]              	dd	_reubicacion
  2886 00000C76 6650                    	push	eax
  2887 00000C78 668B46F0                	mov	eax, [bp-16]
  2888 00000C7C 666BC058                	imul	eax, eax, 88
  2889 00000C80 6689C1                  	mov	ecx, eax
  2890 00000C83 665B                    	pop	ebx
  2891 00000C85 6689DE                  	mov	esi, ebx
  2892 00000C88 66C1CE04                	ror	esi, 4
  2893 00000C8C 8EDE                    	mov	ds, si
  2894 00000C8E 66C1EE1C                	shr	esi, 28
  2895 00000C92 668B04                  	mov	eax, [si]
  2896 00000C95 6601C8                  	add	eax, ecx
  2897 00000C98 6683C054                	add	eax, 84
  2898 00000C9C 6650                    	push	eax
  2899                                  section .relod
  2900 00000100 [A00C0000]              	dd	L208
  2901                                  section .text
  2902 00000C9E 66B8                    	db	0x66, 0xB8
  2903                                  L208:
  2904 00000CA0 [00000000]              	dd	_reubicacion
  2905 00000CA4 6650                    	push	eax
  2906 00000CA6 668B46F0                	mov	eax, [bp-16]
  2907 00000CAA 666BC058                	imul	eax, eax, 88
  2908 00000CAE 6689C1                  	mov	ecx, eax
  2909 00000CB1 665B                    	pop	ebx
  2910 00000CB3 6689DE                  	mov	esi, ebx
  2911 00000CB6 66C1CE04                	ror	esi, 4
  2912 00000CBA 8EDE                    	mov	ds, si
  2913 00000CBC 66C1EE1C                	shr	esi, 28
  2914 00000CC0 668B04                  	mov	eax, [si]
  2915 00000CC3 6601C8                  	add	eax, ecx
  2916 00000CC6 6683C03C                	add	eax, 60
  2917 00000CCA 6689C3                  	mov	ebx, eax
  2918 00000CCD 6689DE                  	mov	esi, ebx
  2919 00000CD0 66C1CE04                	ror	esi, 4
  2920 00000CD4 8EDE                    	mov	ds, si
  2921 00000CD6 66C1EE1C                	shr	esi, 28
  2922 00000CDA 668B0C                  	mov	ecx, [si]
  2923 00000CDD 665B                    	pop	ebx
  2924 00000CDF 6689DE                  	mov	esi, ebx
  2925 00000CE2 66C1CE04                	ror	esi, 4
  2926 00000CE6 8EDE                    	mov	ds, si
  2927 00000CE8 66C1EE1C                	shr	esi, 28
  2928 00000CEC 668B04                  	mov	eax, [si]
  2929 00000CEF 6601C8                  	add	eax, ecx
  2930 00000CF2 6650                    	push	eax
  2931 00000CF4 9A                      	db	0x9A
  2932                                  section .relot
  2933 00000108 [F50C0000]              	dd	L209
  2934                                  section .text
  2935                                  L209:
  2936 00000CF5 [00000000]              	dd	_memset
  2937 00000CF9 83ECF4                  	sub	sp, -12
  2938                                  ; loc             <something> : unsigned
  2939                                  ; loc             <something> : unsigned
  2940                                  ; loc             <something> : unsigned
  2941                                  ; RPN'ized expression: "( reubicacion j + *u &u entradaDF -> *u &u SP0 -> *u (something211) 15 + 4294967280u (something212) & , 0 , reubicacion j + *u &u destino -> *u reubicacion j + *u &u entradaDF -> *u &u SS -> 
  2942                                  ; Expanded expression: " reubicacion *(4) (@-16) *(4) 88 * + 0 + 74 + *(2) 15 + 4294967280u &  0  reubicacion *(4) (@-16) *(4) 88 * + 84 + *(4) reubicacion *(4) (@-16) *(4) 88 * + 0 + 72 + *(2) 4 << +  memset ()12 "
  2943                                  ; Fused expression:    "( reubicacion push-ax * *(@-16) 88 + **sp ax + ax 0 + ax 74 + *ax 15 & ax 4294967280u , 0 , reubicacion push-ax * *(@-16) 88 + **sp ax + ax 84 push-ax reubicacion push-ax * *(@-16) 88 + **sp 
  2944                                  section .relod
  2945 00000104 [FE0C0000]              	dd	L213
  2946                                  section .text
  2947 00000CFC 66B8                    	db	0x66, 0xB8
  2948                                  L213:
  2949 00000CFE [00000000]              	dd	_reubicacion
  2950 00000D02 6650                    	push	eax
  2951 00000D04 668B46F0                	mov	eax, [bp-16]
  2952 00000D08 666BC058                	imul	eax, eax, 88
  2953 00000D0C 6689C1                  	mov	ecx, eax
  2954 00000D0F 665B                    	pop	ebx
  2955 00000D11 6689DE                  	mov	esi, ebx
  2956 00000D14 66C1CE04                	ror	esi, 4
  2957 00000D18 8EDE                    	mov	ds, si
  2958 00000D1A 66C1EE1C                	shr	esi, 28
  2959 00000D1E 668B04                  	mov	eax, [si]
  2960 00000D21 6601C8                  	add	eax, ecx
  2961 00000D24 6683C04A                	add	eax, 74
  2962 00000D28 6689C3                  	mov	ebx, eax
  2963 00000D2B 6689DE                  	mov	esi, ebx
  2964 00000D2E 66C1CE04                	ror	esi, 4
  2965 00000D32 8EDE                    	mov	ds, si
  2966 00000D34 66C1EE1C                	shr	esi, 28
  2967 00000D38 8B04                    	mov	ax, [si]
  2968 00000D3A 660FB7C0                	movzx	eax, ax
  2969 00000D3E 6683C00F                	add	eax, 15
  2970 00000D42 6683E0F0                	and	eax, -16
  2971 00000D46 6650                    	push	eax
  2972 00000D48 666A00                  	push	dword 0
  2973                                  section .relod
  2974 00000108 [4D0D0000]              	dd	L214
  2975                                  section .text
  2976 00000D4B 66B8                    	db	0x66, 0xB8
  2977                                  L214:
  2978 00000D4D [00000000]              	dd	_reubicacion
  2979 00000D51 6650                    	push	eax
  2980 00000D53 668B46F0                	mov	eax, [bp-16]
  2981 00000D57 666BC058                	imul	eax, eax, 88
  2982 00000D5B 6689C1                  	mov	ecx, eax
  2983 00000D5E 665B                    	pop	ebx
  2984 00000D60 6689DE                  	mov	esi, ebx
  2985 00000D63 66C1CE04                	ror	esi, 4
  2986 00000D67 8EDE                    	mov	ds, si
  2987 00000D69 66C1EE1C                	shr	esi, 28
  2988 00000D6D 668B04                  	mov	eax, [si]
  2989 00000D70 6601C8                  	add	eax, ecx
  2990 00000D73 6683C054                	add	eax, 84
  2991 00000D77 6650                    	push	eax
  2992                                  section .relod
  2993 0000010C [7B0D0000]              	dd	L215
  2994                                  section .text
  2995 00000D79 66B8                    	db	0x66, 0xB8
  2996                                  L215:
  2997 00000D7B [00000000]              	dd	_reubicacion
  2998 00000D7F 6650                    	push	eax
  2999 00000D81 668B46F0                	mov	eax, [bp-16]
  3000 00000D85 666BC058                	imul	eax, eax, 88
  3001 00000D89 6689C1                  	mov	ecx, eax
  3002 00000D8C 665B                    	pop	ebx
  3003 00000D8E 6689DE                  	mov	esi, ebx
  3004 00000D91 66C1CE04                	ror	esi, 4
  3005 00000D95 8EDE                    	mov	ds, si
  3006 00000D97 66C1EE1C                	shr	esi, 28
  3007 00000D9B 668B04                  	mov	eax, [si]
  3008 00000D9E 6601C8                  	add	eax, ecx
  3009 00000DA1 6683C048                	add	eax, 72
  3010 00000DA5 6689C3                  	mov	ebx, eax
  3011 00000DA8 6689DE                  	mov	esi, ebx
  3012 00000DAB 66C1CE04                	ror	esi, 4
  3013 00000DAF 8EDE                    	mov	ds, si
  3014 00000DB1 66C1EE1C                	shr	esi, 28
  3015 00000DB5 8B04                    	mov	ax, [si]
  3016 00000DB7 660FB7C0                	movzx	eax, ax
  3017 00000DBB 66C1E004                	shl	eax, 4
  3018 00000DBF 6689C1                  	mov	ecx, eax
  3019 00000DC2 665B                    	pop	ebx
  3020 00000DC4 6689DE                  	mov	esi, ebx
  3021 00000DC7 66C1CE04                	ror	esi, 4
  3022 00000DCB 8EDE                    	mov	ds, si
  3023 00000DCD 66C1EE1C                	shr	esi, 28
  3024 00000DD1 668B04                  	mov	eax, [si]
  3025 00000DD4 6601C8                  	add	eax, ecx
  3026 00000DD7 6650                    	push	eax
  3027 00000DD9 9A                      	db	0x9A
  3028                                  section .relot
  3029 0000010C [DA0D0000]              	dd	L216
  3030                                  section .text
  3031                                  L216:
  3032 00000DDA [00000000]              	dd	_memset
  3033 00000DDE 83ECF4                  	sub	sp, -12
  3034                                  ; }
  3035                                  L199:
  3036                                  ; }
  3037                                  L195:
  3038                                  ; Fused expression:    "++p(4) *(@-16) "
  3039 00000DE1 668B46F0                	mov	eax, [bp-16]
  3040 00000DE5 66FF46F0                	inc	dword [bp-16]
  3041 00000DE9 E92FFD                  	jmp	L194
  3042                                  L197:
  3043                                  ; RPN'ized expression: "( inicKernel ) "
  3044                                  ; Expanded expression: " inicKernel ()0 "
  3045                                  ; Fused expression:    "( inicKernel )0 "
  3046 00000DEC 9A                      	db	0x9A
  3047                                  section .relot
  3048 00000110 [ED0D0000]              	dd	L217
  3049                                  section .text
  3050                                  L217:
  3051 00000DED [00000000]              	dd	_inicKernel
  3052                                  ; return
  3053                                  ; RPN'ized expression: "0 "
  3054                                  ; Expanded expression: "0 "
  3055                                  ; Expression value: 0
  3056                                  ; Fused expression:    "0  "
  3057 00000DF1 66B800000000            	mov	eax, 0
  3058 00000DF7 EB06                    	jmp	L2
  3059                                  ; Fused expression:    "0  "
  3060 00000DF9 66B800000000            	mov	eax, 0
  3061                                  L2:
  3062 00000DFF 66                      	db	0x66
  3063 00000E00 C9                      	leave
  3064 00000E01 CB                      	retf
  3065                                  L218:
  3066                                  
  3067                                  section .fxnsz noalloc
  3068 00000000 020E0000                	dd	L218 - _main
  3069                                  
  3070                                  
  3071                                  	extern	_modoSO1
  3072                                  	extern	_salvarPantallaInicial
  3073                                  	extern	_scrollBIOS
  3074                                  	extern	_inicMemVideo
  3075                                  	extern	_ocultaCursorBIOS
  3076                                  	extern	_mirarLoQueHay
  3077                                  	extern	_mostrarLoQueHay
  3078                                  	extern	_mostrarFlags
  3079                                  	extern	_printStrVideo
  3080                                  	extern	_printLnVideo
  3081                                  	extern	_valorFlags
  3082                                  	extern	_assert
  3083                                  	extern	_leerScancode
  3084                                  	extern	_CSInicial
  3085                                  	extern	__start__bss
  3086                                  	extern	__start__text
  3087                                  	extern	_printHexVideo
  3088                                  	extern	_printLHexVideo
  3089                                  	extern	_printLDecVideo
  3090                                  	extern	_printDecVideo
  3091                                  	extern	_printStrHastaVideo
  3092                                  	extern	_printLIntVideo
  3093                                  	extern	_memcpy
  3094                                  	extern	_memmove
  3095                                  	extern	_memset
  3096                                  	extern	_inicKernel
  3097                                  
  3098                                  ; Syntax/declaration table/stack:
  3099                                  ; Bytes used: 14300/40960
  3100                                  
  3101                                  
  3102                                  ; Macro table:
  3103                                  ; Macro __SMALLER_C__ = `0x0100`
  3104                                  ; Macro __SMALLER_C_32__ = ``
  3105                                  ; Macro __HUGE__ = ``
  3106                                  ; Macro __SMALLER_C_SCHAR__ = ``
  3107                                  ; Bytes used: 74/5120
  3108                                  
  3109                                  
  3110                                  ; Identifier table:
  3111                                  ; Ident __floatsisf
  3112                                  ; Ident __floatunsisf
  3113                                  ; Ident __fixsfsi
  3114                                  ; Ident __fixunssfsi
  3115                                  ; Ident __addsf3
  3116                                  ; Ident __subsf3
  3117                                  ; Ident __negsf2
  3118                                  ; Ident __mulsf3
  3119                                  ; Ident __divsf3
  3120                                  ; Ident __lesf2
  3121                                  ; Ident __gesf2
  3122                                  ; Ident intptr_t
  3123                                  ; Ident uintptr_t
  3124                                  ; Ident intmax_t
  3125                                  ; Ident uintmax_t
  3126                                  ; Ident int8_t
  3127                                  ; Ident int_least8_t
  3128                                  ; Ident int_fast8_t
  3129                                  ; Ident uint8_t
  3130                                  ; Ident uint_least8_t
  3131                                  ; Ident uint_fast8_t
  3132                                  ; Ident int16_t
  3133                                  ; Ident int_least16_t
  3134                                  ; Ident int_fast16_t
  3135                                  ; Ident uint16_t
  3136                                  ; Ident uint_least16_t
  3137                                  ; Ident uint_fast16_t
  3138                                  ; Ident int32_t
  3139                                  ; Ident int_least32_t
  3140                                  ; Ident int_fast32_t
  3141                                  ; Ident uint32_t
  3142                                  ; Ident uint_least32_t
  3143                                  ; Ident uint_fast32_t
  3144                                  ; Ident <something>
  3145                                  ; Ident quot
  3146                                  ; Ident rem
  3147                                  ; Ident imaxdiv_t
  3148                                  ; Ident FALSE
  3149                                  ; Ident TRUE
  3150                                  ; Ident bool_t
  3151                                  ; Ident pointer_t
  3152                                  ; Ident funcion_t
  3153                                  ; Ident manejador_t
  3154                                  ; Ident rti_t
  3155                                  ; Ident isr_t
  3156                                  ; Ident handler_t
  3157                                  ; Ident retardarThread_t
  3158                                  ; Ident ptrTVI_t
  3159                                  ; Ident modoSO1_Bin
  3160                                  ; Ident modoSO1_Exe
  3161                                  ; Ident modoSO1_Bs
  3162                                  ; Ident modoSO1_t
  3163                                  ; Ident lo
  3164                                  ; Ident hi
  3165                                  ; Ident lh_t
  3166                                  ; Ident offset
  3167                                  ; Ident segment
  3168                                  ; Ident address_t
  3169                                  ; Ident ptr
  3170                                  ; Ident adr
  3171                                  ; Ident uPtrAdr_t
  3172                                  ; Ident pid_t
  3173                                  ; Ident tid_t
  3174                                  ; Ident uid_t
  3175                                  ; Ident gid_t
  3176                                  ; Ident pindx_t
  3177                                  ; Ident tindx_t
  3178                                  ; Ident df_t
  3179                                  ; Ident dfs_t
  3180                                  ; Ident rindx_t
  3181                                  ; Ident modoAp_t
  3182                                  ; Ident DS
  3183                                  ; Ident ES
  3184                                  ; Ident EDI
  3185                                  ; Ident ESI
  3186                                  ; Ident EBP
  3187                                  ; Ident ESP
  3188                                  ; Ident EBX
  3189                                  ; Ident EDX
  3190                                  ; Ident ECX
  3191                                  ; Ident EAX
  3192                                  ; Ident IP
  3193                                  ; Ident CS
  3194                                  ; Ident Flags
  3195                                  ; Ident tramaDWords_t
  3196                                  ; Ident DI
  3197                                  ; Ident rDI
  3198                                  ; Ident SI
  3199                                  ; Ident rSI
  3200                                  ; Ident BP
  3201                                  ; Ident rBP
  3202                                  ; Ident SP
  3203                                  ; Ident rSP
  3204                                  ; Ident BX
  3205                                  ; Ident rBX
  3206                                  ; Ident DX
  3207                                  ; Ident rDX
  3208                                  ; Ident CX
  3209                                  ; Ident rCX
  3210                                  ; Ident AX
  3211                                  ; Ident rAX
  3212                                  ; Ident tramaWords_t
  3213                                  ; Ident BL
  3214                                  ; Ident BH
  3215                                  ; Ident rB
  3216                                  ; Ident DL
  3217                                  ; Ident DH
  3218                                  ; Ident rD
  3219                                  ; Ident CL
  3220                                  ; Ident CH
  3221                                  ; Ident rC
  3222                                  ; Ident AL
  3223                                  ; Ident AH
  3224                                  ; Ident rA
  3225                                  ; Ident tramaBytes_t
  3226                                  ; Ident td
  3227                                  ; Ident tw
  3228                                  ; Ident tb
  3229                                  ; Ident trama_t
  3230                                  ; Ident tam
  3231                                  ; Ident sig
  3232                                  ; Ident ant
  3233                                  ; Ident aux
  3234                                  ; Ident relleno
  3235                                  ; Ident bloque_t
  3236                                  ; Ident ptrBloque_t
  3237                                  ; Ident cab
  3238                                  ; Ident dobleEnlace_t
  3239                                  ; Ident numElem
  3240                                  ; Ident primero
  3241                                  ; Ident cabecera
  3242                                  ; Ident e
  3243                                  ; Ident c2c_t
  3244                                  ; Ident posicionC2c
  3245                                  ; Ident i
  3246                                  ; Ident c2c
  3247                                  ; Ident eliminarC2c
  3248                                  ; Ident apilarC2c
  3249                                  ; Ident encolarC2c
  3250                                  ; Ident desencolarC2c
  3251                                  ; Ident inicializarC2c
  3252                                  ; Ident compartida
  3253                                  ; Ident ptrC2c_t
  3254                                  ; Ident posicionPC2c
  3255                                  ; Ident eliminarPC2c
  3256                                  ; Ident ptrC2c
  3257                                  ; Ident apilarPC2c
  3258                                  ; Ident encolarPC2c
  3259                                  ; Ident desencolarPC2c
  3260                                  ; Ident inicializarPC2c
  3261                                  ; Ident callBack_t
  3262                                  ; Ident arg
  3263                                  ; Ident num
  3264                                  ; Ident in
  3265                                  ; Ident out
  3266                                  ; Ident max
  3267                                  ; Ident callBack
  3268                                  ; Ident descCcb_t
  3269                                  ; Ident ccb_t
  3270                                  ; Ident inicCcb
  3271                                  ; Ident ccb
  3272                                  ; Ident encolarCcb
  3273                                  ; Ident cb
  3274                                  ; Ident desencolarCcb
  3275                                  ; Ident eliminarCcb
  3276                                  ; Ident eliminarSegCcb
  3277                                  ; Ident segmento
  3278                                  ; Ident vaciarCcb
  3279                                  ; Ident atenderCcb
  3280                                  ; Ident libre
  3281                                  ; Ident preparado
  3282                                  ; Ident ejecutandose
  3283                                  ; Ident bloqueado
  3284                                  ; Ident estado_t
  3285                                  ; Ident modoAp
  3286                                  ; Ident dfs
  3287                                  ; Ident pos
  3288                                  ; Ident dfa_t
  3289                                  ; Ident pid
  3290                                  ; Ident noStatus
  3291                                  ; Ident status
  3292                                  ; Ident ppindx
  3293                                  ; Ident hpindx
  3294                                  ; Ident c2cHijos
  3295                                  ; Ident c2cThreads
  3296                                  ; Ident CSProc
  3297                                  ; Ident tamCodigo
  3298                                  ; Ident desplBSS
  3299                                  ; Ident desplPila
  3300                                  ; Ident tamFichero
  3301                                  ; Ident programa
  3302                                  ; Ident comando
  3303                                  ; Ident nfa
  3304                                  ; Ident tfa
  3305                                  ; Ident uid
  3306                                  ; Ident gid
  3307                                  ; Ident descProceso_t
  3308                                  ; Ident tid
  3309                                  ; Ident estado
  3310                                  ; Ident esperandoPor
  3311                                  ; Ident trama
  3312                                  ; Ident ptindx
  3313                                  ; Ident htindx
  3314                                  ; Ident pindx
  3315                                  ; Ident SSThread
  3316                                  ; Ident SP0
  3317                                  ; Ident descThread_t
  3318                                  ; Ident flibre
  3319                                  ; Ident fRegular
  3320                                  ; Ident fedBloques
  3321                                  ; Ident fedCaracteres
  3322                                  ; Ident tuberia
  3323                                  ; Ident tipoFichero_t
  3324                                  ; Ident tipo
  3325                                  ; Ident nombre
  3326                                  ; Ident rindx
  3327                                  ; Ident menor
  3328                                  ; Ident shareMode
  3329                                  ; Ident contAp_L
  3330                                  ; Ident contAp_E
  3331                                  ; Ident descFichero_t
  3332                                  ; Ident rLibre
  3333                                  ; Ident rDCaracteres
  3334                                  ; Ident rDBloques
  3335                                  ; Ident rTuberia
  3336                                  ; Ident rGP
  3337                                  ; Ident rGM
  3338                                  ; Ident rSF
  3339                                  ; Ident rOtro
  3340                                  ; Ident tipoRecurso_t
  3341                                  ; Ident open_t
  3342                                  ; Ident modo
  3343                                  ; Ident release_t
  3344                                  ; Ident read_t
  3345                                  ; Ident dir
  3346                                  ; Ident nbytes
  3347                                  ; Ident aio_read_t
  3348                                  ; Ident write_t
  3349                                  ; Ident aio_write_t
  3350                                  ; Ident lseek_t
  3351                                  ; Ident whence
  3352                                  ; Ident fcntl_t
  3353                                  ; Ident cmd
  3354                                  ; Ident ioctl_t
  3355                                  ; Ident request
  3356                                  ; Ident eliminar_t
  3357                                  ; Ident tindx
  3358                                  ; Ident c2cFichRec
  3359                                  ; Ident numVI
  3360                                  ; Ident nVInt
  3361                                  ; Ident irq
  3362                                  ; Ident isr
  3363                                  ; Ident open
  3364                                  ; Ident release
  3365                                  ; Ident read
  3366                                  ; Ident aio_read
  3367                                  ; Ident write
  3368                                  ; Ident aio_write
  3369                                  ; Ident lseek
  3370                                  ; Ident fcntl
  3371                                  ; Ident ioctl
  3372                                  ; Ident eliminar
  3373                                  ; Ident descRecurso_t
  3374                                  ; Ident SP0_So1
  3375                                  ; Ident IMR
  3376                                  ; Ident modoSO1
  3377                                  ; Ident ptrDebugWord
  3378                                  ; Ident info_t
  3379                                  ; Ident signatura
  3380                                  ; Ident bytesUltSector
  3381                                  ; Ident sectores
  3382                                  ; Ident numDirReub
  3383                                  ; Ident numParCabecera
  3384                                  ; Ident minAlloc
  3385                                  ; Ident maxAlloc
  3386                                  ; Ident SS0
  3387                                  ; Ident checkSum
  3388                                  ; Ident IP0
  3389                                  ; Ident CS0
  3390                                  ; Ident offTablaReub
  3391                                  ; Ident numOverlay
  3392                                  ; Ident cabecera_t
  3393                                  ; Ident Libres
  3394                                  ; Ident Ocupados
  3395                                  ; Ident e2DescProceso
  3396                                  ; Ident e2DescThread
  3397                                  ; Ident e2DescFichero
  3398                                  ; Ident e2DescRecurso
  3399                                  ; Ident e2Hijos
  3400                                  ; Ident e2Threads
  3401                                  ; Ident e2Preparados
  3402                                  ; Ident e2Urgentes
  3403                                  ; Ident e2POrdenados
  3404                                  ; Ident e2TDormidos
  3405                                  ; Ident e2FichRec
  3406                                  ; Ident e2PFR_t
  3407                                  ; Ident DPLibres
  3408                                  ; Ident DPOcupados
  3409                                  ; Ident DTLibres
  3410                                  ; Ident DTOcupados
  3411                                  ; Ident TPreparados
  3412                                  ; Ident TUrgentes
  3413                                  ; Ident POrdenados
  3414                                  ; Ident TDormidos
  3415                                  ; Ident DFLibres
  3416                                  ; Ident DFOcupados
  3417                                  ; Ident DRLibres
  3418                                  ; Ident DROcupados
  3419                                  ; Ident numColasPFR
  3420                                  ; Ident cPFR_t
  3421                                  ; Ident sigThread_t
  3422                                  ; Ident activarThread_t
  3423                                  ; Ident buscarNuevoThreadActual_t
  3424                                  ; Ident bloquearThreadActual_t
  3425                                  ; Ident ptrIndProcesoActual
  3426                                  ; Ident ptrIndThreadActual
  3427                                  ; Ident ptrTramaThread
  3428                                  ; Ident ptrActivarAlEpilogo
  3429                                  ; Ident ptrDescProceso
  3430                                  ; Ident tamDescProceso
  3431                                  ; Ident ptrDescThread
  3432                                  ; Ident tamDescThread
  3433                                  ; Ident ptrDescFichero
  3434                                  ; Ident ptrDescRecurso
  3435                                  ; Ident ptrC2cPFR
  3436                                  ; Ident ptrE2PFR
  3437                                  ; Ident ptrNivelActivacionSO1H
  3438                                  ; Ident ptrEnHalt
  3439                                  ; Ident ptrHayTic
  3440                                  ; Ident ptrCcbAlEpilogo
  3441                                  ; Ident ptrSS_Thread
  3442                                  ; Ident ptrSP_Thread
  3443                                  ; Ident ptrSS_Kernel
  3444                                  ; Ident ptrSP0_Kernel
  3445                                  ; Ident SP0_SO1H
  3446                                  ; Ident ptrContRodajas
  3447                                  ; Ident ptrContTicsRodaja
  3448                                  ; Ident ptrVIOrg
  3449                                  ; Ident sigThread
  3450                                  ; Ident activarThread
  3451                                  ; Ident buscarNuevoThreadActual
  3452                                  ; Ident bloquearThreadActual
  3453                                  ; Ident ptrListaLibres
  3454                                  ; Ident ptrTamBloqueMax
  3455                                  ; Ident descSO1H_t
  3456                                  ; Ident tipoOrdenador
  3457                                  ; Ident rebootLegacy
  3458                                  ; Ident tipoTeclado
  3459                                  ; Ident leerTeclaBIOS
  3460                                  ; Ident leerTeclaExtBIOS
  3461                                  ; Ident teclaListaBIOS
  3462                                  ; Ident leerTeclaListaBDA
  3463                                  ; Ident teclaListaBDA
  3464                                  ; Ident printCarBIOS
  3465                                  ; Ident car
  3466                                  ; Ident printCarPagBIOS
  3467                                  ; Ident pag
  3468                                  ; Ident printCarAtrPagBIOS
  3469                                  ; Ident atr
  3470                                  ; Ident printLnBIOS
  3471                                  ; Ident printStrBIOS
  3472                                  ; Ident str
  3473                                  ; Ident printStrHastaBIOS
  3474                                  ; Ident n
  3475                                  ; Ident lleno
  3476                                  ; Ident printDecBIOS
  3477                                  ; Ident l
  3478                                  ; Ident printLDecBIOS
  3479                                  ; Ident printIntBIOS
  3480                                  ; Ident printLIntBIOS
  3481                                  ; Ident printHexBIOS
  3482                                  ; Ident printLHexBIOS
  3483                                  ; Ident printBinBIOS
  3484                                  ; Ident printLBinBIOS
  3485                                  ; Ident printPtrBIOS
  3486                                  ; Ident printByteBIOS
  3487                                  ; Ident b
  3488                                  ; Ident printWordBIOS
  3489                                  ; Ident w
  3490                                  ; Ident printCadBIOS
  3491                                  ; Ident cad
  3492                                  ; Ident esperarTicsBIOS
  3493                                  ; Ident tics
  3494                                  ; Ident modoDeVideo
  3495                                  ; Ident establecerModoDeVideo
  3496                                  ; Ident paginaActiva
  3497                                  ; Ident establecerPaginaActiva
  3498                                  ; Ident numPagsVideo
  3499                                  ; Ident scrollPagBDA
  3500                                  ; Ident numLineas
  3501                                  ; Ident scrollPagBIOS
  3502                                  ; Ident scrollBIOS
  3503                                  ; Ident goToXYPag
  3504                                  ; Ident fila
  3505                                  ; Ident columna
  3506                                  ; Ident goToXYBIOS
  3507                                  ; Ident setCursorBIOS
  3508                                  ; Ident linea1
  3509                                  ; Ident linea2
  3510                                  ; Ident ocultaCursorBIOS
  3511                                  ; Ident readXYPagBIOS
  3512                                  ; Ident readXYBIOS
  3513                                  ; Ident memBIOS
  3514                                  ; Ident enviarBIOS
  3515                                  ; Ident recibirBIOS
  3516                                  ; Ident hayApmBIOS
  3517                                  ; Ident version
  3518                                  ; Ident connectApmBIOS
  3519                                  ; Ident disconnectApmBIOS
  3520                                  ; Ident cpuIdleBIOS
  3521                                  ; Ident cpuBusyBIOS
  3522                                  ; Ident salvarPantallaInicial
  3523                                  ; Ident restaurarPantallaInicial
  3524                                  ; Ident puntoDeParada
  3525                                  ; Ident assert
  3526                                  ; Ident condicion
  3527                                  ; Ident valorFlags
  3528                                  ; Ident mostrarFlags
  3529                                  ; Ident debug_parar
  3530                                  ; Ident pos_t
  3531                                  ; Ident t
  3532                                  ; Ident pantalla_t
  3533                                  ; Ident tamPantalla
  3534                                  ; Ident numFilas
  3535                                  ; Ident pantallazo
  3536                                  ; Ident pantalla
  3537                                  ; Ident esqSupDeF
  3538                                  ; Ident esqSupDeC
  3539                                  ; Ident esqInfIzF
  3540                                  ; Ident esqInfIzC
  3541                                  ; Ident borrarPantalla
  3542                                  ; Ident borrarCPantalla
  3543                                  ; Ident copiarPantalla
  3544                                  ; Ident p1
  3545                                  ; Ident p2
  3546                                  ; Ident copiarCPantalla
  3547                                  ; Ident scrollPantalla
  3548                                  ; Ident scrollCPantalla
  3549                                  ; Ident cursorF
  3550                                  ; Ident cursorC
  3551                                  ; Ident lineaOriginal1
  3552                                  ; Ident lineaOriginal2
  3553                                  ; Ident inicMemVideo
  3554                                  ; Ident finMemVideo
  3555                                  ; Ident goToXYVideo
  3556                                  ; Ident F
  3557                                  ; Ident C
  3558                                  ; Ident printCarVideo
  3559                                  ; Ident _NONE
  3560                                  ; Ident _MDA
  3561                                  ; Ident _CGA
  3562                                  ; Ident _EGACOLOR
  3563                                  ; Ident _EGAMONO
  3564                                  ; Ident _VGACOLOR
  3565                                  ; Ident _VGAMONO
  3566                                  ; Ident _MCGACOLOR
  3567                                  ; Ident _MCGAMONO
  3568                                  ; Ident _MDS_GENIUS
  3569                                  ; Ident tipoAdaptador_t
  3570                                  ; Ident _FONT08
  3571                                  ; Ident _FONT14
  3572                                  ; Ident _FONT15
  3573                                  ; Ident _FONT16
  3574                                  ; Ident fontSize_t
  3575                                  ; Ident numColumnas
  3576                                  ; Ident ptrPant
  3577                                  ; Ident tipoAdaptador
  3578                                  ; Ident redimensionable
  3579                                  ; Ident fontSize
  3580                                  ; Ident visibilidad
  3581                                  ; Ident inicBiosCrt
  3582                                  ; Ident finBiosCrt
  3583                                  ; Ident getFontSize
  3584                                  ; Ident getFilas
  3585                                  ; Ident comprobarAdaptador
  3586                                  ; Ident tipoDeAdaptador
  3587                                  ; Ident setCursorVisibilidad
  3588                                  ; Ident valorDeVisibilidad
  3589                                  ; Ident setFontSize
  3590                                  ; Ident size
  3591                                  ; Ident set25x80
  3592                                  ; Ident redimensionar
  3593                                  ; Ident nFilas
  3594                                  ; Ident nCols
  3595                                  ; Ident printLnVideo
  3596                                  ; Ident printStrVideo
  3597                                  ; Ident printStrHastaVideo
  3598                                  ; Ident printDecVideo
  3599                                  ; Ident printLDecVideo
  3600                                  ; Ident printIntVideo
  3601                                  ; Ident printLIntVideo
  3602                                  ; Ident printHexVideo
  3603                                  ; Ident printLHexVideo
  3604                                  ; Ident printBinVideo
  3605                                  ; Ident printLBinVideo
  3606                                  ; Ident printPtrVideo
  3607                                  ; Ident printByteVideo
  3608                                  ; Ident printWordVideo
  3609                                  ; Ident printCadVideo
  3610                                  ; Ident _start__text
  3611                                  ; Ident _stop__text
  3612                                  ; Ident _start__rodata
  3613                                  ; Ident _stop__rodata
  3614                                  ; Ident _start__data
  3615                                  ; Ident _stop__data
  3616                                  ; Ident _start__bss
  3617                                  ; Ident _stop__bss
  3618                                  ; Ident _start_allcode__
  3619                                  ; Ident _stop_allcode__
  3620                                  ; Ident _start_alldata__
  3621                                  ; Ident _stop_alldata__
  3622                                  ; Ident mostrarSeccion
  3623                                  ; Ident start
  3624                                  ; Ident stop
  3625                                  ; Ident descripcion
  3626                                  ; Ident mostrarSecciones
  3627                                  ; Ident puntoDeParadaSO1
  3628                                  ; Ident leerScancodeListo
  3629                                  ; Ident leerScancode
  3630                                  ; Ident mirarLoQueHay
  3631                                  ; Ident loQueHay
  3632                                  ; Ident mostrarLoQueHay
  3633                                  ; Ident tirarS0
  3634                                  ; Ident nombreDF_t
  3635                                  ; Ident comandoDF_t
  3636                                  ; Ident so1h_0_DF
  3637                                  ; Ident datos_DF
  3638                                  ; Ident so1h_k_DF
  3639                                  ; Ident proceso_DF
  3640                                  ; Ident dram_DF
  3641                                  ; Ident tipoDF_t
  3642                                  ; Ident otro
  3643                                  ; Ident SS
  3644                                  ; Ident entradaDF_t
  3645                                  ; Ident dirInicial
  3646                                  ; Ident dirCargaFichero
  3647                                  ; Ident dirFinal
  3648                                  ; Ident entradaDF
  3649                                  ; Ident origen
  3650                                  ; Ident destino
  3651                                  ; Ident reubicacion_t
  3652                                  ; Ident reubicacion
  3653                                  ; Ident numER
  3654                                  ; Ident inicKernel
  3655                                  ; Ident size_t
  3656                                  ; Ident memset
  3657                                  ; Ident memcpy
  3658                                  ; Ident memmove
  3659                                  ; Ident memchr
  3660                                  ; Ident memcmp
  3661                                  ; Ident strcpy
  3662                                  ; Ident strncpy
  3663                                  ; Ident strxfrm
  3664                                  ; Ident strcat
  3665                                  ; Ident strncat
  3666                                  ; Ident strlen
  3667                                  ; Ident strchr
  3668                                  ; Ident strrchr
  3669                                  ; Ident strstr
  3670                                  ; Ident strspn
  3671                                  ; Ident strcspn
  3672                                  ; Ident strpbrk
  3673                                  ; Ident strtok
  3674                                  ; Ident strcmp
  3675                                  ; Ident strncmp
  3676                                  ; Ident strcoll
  3677                                  ; Ident strerror
  3678                                  ; Ident numEDF
  3679                                  ; Ident TR
  3680                                  ; Ident main
  3681                                  ; Bytes used: 6103/16384
  3682                                  
  3683                                  ; Next label number: 219
  3684                                  ; Compilation succeeded.
