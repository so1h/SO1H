#----------------------------------------------------------------------------#
#                                                                            #
#      ejecute el comando make help para ver los objetivos disponibles       #
#                                                                            #
#----------------------------------------------------------------------------#

PROGRAMA = SO1H_0

!include "..\MKFILE0"

# valor de SS:SP iniciales del programa SO1H_0
SS_SO1H_0  = 9000
SP0_SO1H_0 = FFFE

!if $(MODEL) == huge
C0DH     = ..\SO1H\obj\c0dh.o
LCDH     = $(UTMP):\SmallerC\v0100\lib\lcdh.a
!elif $(MODEL) == dosh
!elif $(MODEL) == dosu
!endif

#.path.o   = .\obj;..\so1pub\obj
.path.o   = .\obj;..\so1h\obj;..\so1pub\obj
.path.asm = .\asm
.path.c   = .

all: crearDirs ..\DISQUETE\so1himg.exe ..\DISQUETE\so1himg.sys

..\DISQUETE\so1himg.exe \
..\DISQUETE\so1himg.sys: $(PROGRAMA).exe $(PROGRAMA).sys
#
  copy $(PROGRAMA).sys ..\DISQUETE > nul
  copy $(PROGRAMA).exe ..\DISQUETE > nul
  @echo.
#
  cd ..\DISQUETE
#
  @copy &&|
#
# fichero de configuracion disco.cfg
#  
so1h_0.sys          # preparativos
so1h_k.bin          # nucleo
prog_0.bin          # programa
| disco.cfg > nul
  @if exist MAKE????.@@@ erase MAKE????.@@@
#
  mkrd disco.cfg disco.rd -q
  @echo.
  @copy &&|
#
# fichero de configuracion so1himg.cfg (sys)
#  
so1h_0.sys          # preparativos
so1h_k.bin 00012345 # nucleo
prog_0.bin          # programa
disco.rd            # disco ram
| so1himg.cfg > nul
  @if exist MAKE????.@@@ erase MAKE????.@@@
#
# componer so1himg.cfg so1himg.sys 
  componer so1himg.cfg so1himg.sys -q
  @echo.
  @copy &&|
#
# fichero de configuracion so1himg.cfg (exe)
#  
so1h_0.exe          # preparativos
so1h_k.bin 00012345 # nucleo
prog_0.bin          # programa
disco.rd            # disco ram
| so1himg.cfg > nul
  @if exist MAKE????.@@@ erase MAKE????.@@@
#
# componer so1himg.cfg so1himg.exe 
  componer so1himg.cfg so1himg.exe -q
#  
  @copy &&|
mode con cols=80 lines=25
$(UTMP):\BC5\BIN\msdos SO1HIMG.exe
pause
| SO1HIMG.cmd > nul
  @if exist MAKE????.@@@ erase MAKE????.@@@
  @echo.
  @echo ------- creado el fichero SO1HIMG.cmd
  @copy &&|
mode con cols=80 lines=25
cls
start cmd /K "$(UTMP):\BC5\BIN\msdos_debug SO1HIMG.exe & pause"
$(UUSB):\Utilidades\teraterm.exe telnet://localhost:23 /T=1
| SO1HIMG.debug.cmd > nul
  @if exist MAKE????.@@@ erase MAKE????.@@@
  @echo.
  @echo ------- creado el fichero SO1HIMG.debug.cmd
  cd ..\SO1H_0

LISTAPUBS =\
#si pongo main.o (finThread) al final funciona mal (procesos.c) al retornar
..\so1hpub\obj\main.o\
..\so1hpub\obj\tipos.o ..\so1hpub\obj\biosdata.o ..\so1hpub\obj\caracter.o\
..\so1hpub\obj\printgen.o ..\so1hpub\obj\bios_0.o ..\so1hpub\obj\telon.o\
..\so1hpub\obj\pantalla.o ..\so1hpub\obj\colores.o ..\so1hpub\obj\msdos.o\
..\so1hpub\obj\debug.o ..\so1hpub\obj\pic.o ..\so1hpub\obj\puertos.o \
..\so1hpub\obj\memvideo.o ..\so1hpub\obj\memvideo.o ..\so1hpub\obj\bios_crt.o \
..\so1hpub\obj\printvid.o ..\so1hpub\obj\c2c.o ..\so1hpub\obj\ptrc2c.o \
..\so1hpub\obj\ccb.o ..\so1hpub\obj\seccion.o ..\so1hpub\obj\ll_s_thr.o \

$(PROGRAMA).sys: $(PROGRAMA).exe
  @echo.
  EXTRAER $(PROGRAMA).exe 32 0 $(PROGRAMA).sys
  @echo.

$(PROGRAMA).exe: ajust_0.o $(PROGRAMA).o inick.o procs_x.o gm_x.o c0dh.o s0.o 
  $(CC) $(CFLAGS) -map $(PROGRAMA).map -o $(PROGRAMA).exe\
obj\ajust_0.o\
obj\$(PROGRAMA).o\
#obj\dirf.o\
obj\inick.o\
obj\procs_x.o\
obj\gm_x.o\
$(C0DH)\
..\so1h\obj\s0.o\
..\so1h\obj\so1dbg.o\
$(LISTAPUBS)\
$(LCDH)
# para hacer maxAlloc = 0xFFFF (de manera que el programa al cargarse intente
# reservar la mayor cantidad de memoria posible, ver la palabra en dirPSP + 2)
  @echo.
  EXE2BIN -c $(PROGRAMA).exe
  @echo.
  PARCHEAR $(PROGRAMA).exe 12 FFFF
# para hacer SP0 = SP0_SO1H en los desplazamientos 0x0010 y 0x003C
  @echo.
  PARCHEAR $(PROGRAMA).exe 16 $(SP0_SO1H_0)
  PARCHEAR $(PROGRAMA).exe 60 $(SP0_SO1H_0)
# para hacer CS:IP = startExe
  PARCHEAR $(PROGRAMA).exe 20 0036 
  PARCHEAR $(PROGRAMA).exe 22 FFFE 
  @echo.
  EXE2BIN -c $(PROGRAMA).exe
# tdump $(PROGRAMA).exe
  
c0dh.o: $(UTMP):\SmallerC\v0100\srclib\c0dh.asm
  $(CC) $(CFLAGS) -c $(UTMP):\SmallerC\v0100\srclib\c0dh.asm -o obj\c0dh.o

!if ($(VIA_ASM) == TRUE)

.c.asm:
  $(CC) $(CFLAGS) -SI $(UUSB):\SO1H\PRACT0 -S $&.c -o asm\$&.asm

.asm.o:
# $(CC) $(CFLAGS) -c asm\$&.asm -o obj\$&.o
  $(AS) -f elf -o obj\$&.o -l lst\$&.lst asm\$&.asm

!else

.c.o:
  $(CC) $(CFLAGS) -SI $(UUSB):\SO1H\PRACT0 -c $&.c -o obj\$&.o

!endif

LISTADIRS = obj.dir asm.dir lst.dir ..\DISQUETE.dir

crearDirs: $(LISTADIRS)

$(LISTADIRS):
  @if not exist $* mkdir $*

build: clean all

LISTACLEAN = sys exe cmd bat $(LISTAPULE)

LISTAPULE  = map asm lst des hex o TR TP TD

clean: $(LISTACLEAN) pule
  @if exist stderr.txt erase stderr.txt > nul
  @if exist stdout.txt erase stdout.txt > nul
  @if exist ..\DISQUETE\SO1H_0.* erase ..\DISQUETE\SO1H_0.*
  @if exist ..\DISQUETE\SO1HIMG.* erase ..\DISQUETE\SO1HIMG.*
  @if exist ..\DISQUETE\disco.* erase ..\DISQUETE\disco.*

pule: $(LISTAPULE)
  @if exist obj\*.o erase obj\*.o
  @if exist asm\*.asm erase asm\*.asm
  @if exist lst\*.lst erase lst\*.lst
  @if exist stderr.txt erase stderr.txt > nul
  @if exist stdout.txt erase stdout.txt > nul

$(LISTACLEAN) $(LISTAPULE):
  @if exist *.$& erase *.$& > nul

help:
# echo off & color 07 & title help & msg * "Hola"
  @"echo."
  @"echo    relacion de objetivos disponibles:"
  @"echo."
  @"echo    make             genera los ficheros $(PROGRAMA).exe y $(PROGRAMA).sys"
  @"echo    make pule        borra todo salvo fuentes, $(PROGRAMA).exe y $(PROGRAMA).sys"
  @"echo    make clean       borra todo salvo fuentes (y MAKEFILE)"
  @"echo    make build       genera nuevamente desde el principio $(PROGRAMA).exe y $(PROGRAMA).sys"
  @"echo    make run         ejecuta $(PROGRAMA).exe en el interprete de comandos (cmd)"
  @"echo    make runmsdos    ejecuta $(PROGRAMA).exe con msdos (Takeda)"
  @"echo    make rundosbox   ejecuta $(PROGRAMA).exe con DOSBox"
  @"echo    make imagen      genera una imagen de disquete fd$(PROGRAMA).img"
  @"echo    make start       arranca la imagen de disquete fd$(PROGRAMA).img con qemu"
  @"echo    make hexdump     produce $(PROGRAMA).hex, volcado hexadecimal de $(PROGRAMA).sys"
  @"echo    make desensambla produce $(PROGRAMA).des, desensamblado de $(PROGRAMA).sys"
  @"echo    make help        muestra esta ayuda sobre los objetivos disponibles"

hexdump: so1himg.sys $(PROGRAMA).sys
  @echo.
# $(UTMP):\prgtools\bin\XXD\xxd -c 16 -g 1 -i so1himg.sys so1himg.hex
  $(UTMP):\prgtools\bin\XXD\xxd -c 16 -g 1 -u so1himg.sys so1himg.hex
  type so1himg.hex | more

desensambla: $(PROGRAMA).sys
  @echo.
  ndisasm -b16 $(PROGRAMA).sys > $(PROGRAMA).des
  type $(PROGRAMA).des | more

imagen $(UTMP):\fd$(PROGRAMA).img: ..\..\PRACT2\BOOT\BOOT.bs so1himg.sys
  @echo.
  EXTENDER ..\..\PRACT2\BOOT\BOOT.bs 1474560 $(UTMP):\fd$(PROGRAMA).img
  @echo.
  PARCHEAR $(UTMP):\fd$(PROGRAMA).img 16896 -f so1himg.sys

floppy: $(UTMP):\fd$(PROGRAMA).img
  @echo.
  copy $(UTMP):\fd$(PROGRAMA).img $(UTMP):\FLOPPY_0

helpqemu:
  $(UUSB):\Interno\qemu-2.8.0\qemu-system-i386w -h | less
# $(UUSB):\Interno\qemu-2.8.0\qemu-system-i386w -M ? | less
# $(UUSB):\Interno\qemu-2.8.0\qemu-system-i386w -M pc-i440fx-2.8 -cpu ? | less

start: $(UTMP):\fd$(PROGRAMA).img
# @start $(UUSB):\Interno\qemu-2.7.0\qemu-system-i386w.exe \
#   -L $(UUSB):\Interno\qemu-2.7.0\Bios \
  @start $(UUSB):\Interno\qemu-2.8.0\qemu-system-i386w.exe \
    -L $(UUSB):\Interno\qemu-2.8.0\Bios \
    -vga std \
    -soundhw es1370,sb16,adlib,pcspk \
    -rtc base=localtime,clock=host \
    -name "qemu" \
    -fda $(UTMP):\fd$(PROGRAMA).img \
    -net nic,model=ne2k_pci -net user \
    -no-acpi -no-hpet -no-reboot \
    -m 128 -boot a \
#   -monitor tcp:localhost:9924
#   -qmp tcp:localhost:9924

run:
  @echo.
# cmd /C "mode con cols=80 lines=25 & $(PROGRAMA).exe "
  @cd ..\DISQUETE
  ..\DISQUETE\so1himg.exe

runmsdos:
  @echo.
  @cd ..\DISQUETE
  start cmd /K "mode con cols=80 lines=25 & cls & msdos so1himg.exe "

rundebug:
  @echo.
  @cd ..\DISQUETE
  start cmd /K "mode con cols=80 lines=25 & cls & msdos_debug so1himg.exe "
  $(UUSB):\Utilidades\teraterm.exe telnet://localhost:23 /T=1

rundosbox:
  @echo.
  @cd ..\DISQUETE
  start $(UUSB):\Interno\dosbox-0.74\dosbox.exe so1himg.exe -noconsole
