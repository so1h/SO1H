     1                                  bits 16
     2                                  
     3                                  ; glb intptr_t : int
     4                                  ; glb uintptr_t : unsigned
     5                                  ; glb intmax_t : int
     6                                  ; glb uintmax_t : unsigned
     7                                  ; glb int8_t : signed char
     8                                  ; glb int_least8_t : signed char
     9                                  ; glb int_fast8_t : signed char
    10                                  ; glb uint8_t : unsigned char
    11                                  ; glb uint_least8_t : unsigned char
    12                                  ; glb uint_fast8_t : unsigned char
    13                                  ; glb int16_t : short
    14                                  ; glb int_least16_t : short
    15                                  ; glb int_fast16_t : short
    16                                  ; glb uint16_t : unsigned short
    17                                  ; glb uint_least16_t : unsigned short
    18                                  ; glb uint_fast16_t : unsigned short
    19                                  ; glb int32_t : int
    20                                  ; glb int_least32_t : int
    21                                  ; glb int_fast32_t : int
    22                                  ; glb uint32_t : unsigned
    23                                  ; glb uint_least32_t : unsigned
    24                                  ; glb uint_fast32_t : unsigned
    25                                  ; glb imaxdiv_t : struct <something>
    26                                  ; glb bool_t : int
    27                                  ; glb pointer_t : * unsigned char
    28                                  ; glb funcion_t : * (
    29                                  ; prm     <something> : * void
    30                                  ;     ) * void
    31                                  ; glb manejador_t : * (void) void
    32                                  ; glb rti_t : * (void) void
    33                                  ; glb isr_t : * (void) void
    34                                  ; glb handler_t : * (void) void
    35                                  ; glb retardarThread_t : * (void) int
    36                                  ; glb ptrTVI_t : * * (void) void
    37                                  ; glb modoSO1_t : int
    38                                  ; glb lh_t : struct <something>
    39                                  ; glb address_t : struct <something>
    40                                  ; glb uPtrAdr_t : union <something>
    41                                  ; glb pid_t : int
    42                                  ; glb tid_t : int
    43                                  ; glb uid_t : int
    44                                  ; glb gid_t : int
    45                                  ; glb pindx_t : int
    46                                  ; glb tindx_t : int
    47                                  ; glb df_t : int
    48                                  ; glb dfs_t : int
    49                                  ; glb rindx_t : int
    50                                  ; glb printCar_t : * (
    51                                  ; prm     car : char
    52                                  ;     ) int
    53                                  ; glb size_t : unsigned
    54                                  ; glb printCarN_t : * (
    55                                  ; prm     ptr : * void
    56                                  ; prm     n : unsigned
    57                                  ;     ) unsigned
    58                                  ; glb printGenLn : (
    59                                  ; prm     p : * (
    60                                  ; prm         car : char
    61                                  ;         ) int
    62                                  ;     ) int
    63                                  ; glb printGenStr : (
    64                                  ; prm     str : * char
    65                                  ; prm     p : * (
    66                                  ; prm         car : char
    67                                  ;         ) int
    68                                  ;     ) int
    69                                  ; glb printGenStrHasta : (
    70                                  ; prm     str : * char
    71                                  ; prm     n : unsigned short
    72                                  ; prm     lleno : int
    73                                  ; prm     p : * (
    74                                  ; prm         car : char
    75                                  ;         ) int
    76                                  ;     ) int
    77                                  ; glb printGenDec : (
    78                                  ; prm     num : unsigned short
    79                                  ; prm     l : unsigned short
    80                                  ; prm     p : * (
    81                                  ; prm         car : char
    82                                  ;         ) int
    83                                  ;     ) int
    84                                  ; glb printGenLDec : (
    85                                  ; prm     num : unsigned
    86                                  ; prm     l : unsigned short
    87                                  ; prm     p : * (
    88                                  ; prm         car : char
    89                                  ;         ) int
    90                                  ;     ) int
    91                                  ; glb printGenInt : (
    92                                  ; prm     num : short
    93                                  ; prm     l : unsigned short
    94                                  ; prm     p : * (
    95                                  ; prm         car : char
    96                                  ;         ) int
    97                                  ;     ) int
    98                                  ; glb printGenLInt : (
    99                                  ; prm     num : int
   100                                  ; prm     l : unsigned short
   101                                  ; prm     p : * (
   102                                  ; prm         car : char
   103                                  ;         ) int
   104                                  ;     ) int
   105                                  ; glb printGenHex : (
   106                                  ; prm     num : unsigned short
   107                                  ; prm     l : unsigned short
   108                                  ; prm     p : * (
   109                                  ; prm         car : char
   110                                  ;         ) int
   111                                  ;     ) int
   112                                  ; glb printGenLHex : (
   113                                  ; prm     num : unsigned
   114                                  ; prm     l : unsigned short
   115                                  ; prm     p : * (
   116                                  ; prm         car : char
   117                                  ;         ) int
   118                                  ;     ) int
   119                                  ; glb printGenBin : (
   120                                  ; prm     num : unsigned short
   121                                  ; prm     l : unsigned short
   122                                  ; prm     p : * (
   123                                  ; prm         car : char
   124                                  ;         ) int
   125                                  ;     ) int
   126                                  ; glb printGenLBin : (
   127                                  ; prm     num : unsigned
   128                                  ; prm     l : unsigned short
   129                                  ; prm     p : * (
   130                                  ; prm         car : char
   131                                  ;         ) int
   132                                  ;     ) int
   133                                  ; glb printGenPtr : (
   134                                  ; prm     ptr : * unsigned char
   135                                  ; prm     p : * (
   136                                  ; prm         car : char
   137                                  ;         ) int
   138                                  ;     ) int
   139                                  ; glb printfGen : (
   140                                  ; prm     formato : * char
   141                                  ; prm     p : * (
   142                                  ; prm         car : char
   143                                  ;         ) int
   144                                  ; prm     ...
   145                                  ;     ) int
   146                                  ; RPN'ized expression: "17 "
   147                                  ; Expanded expression: "17 "
   148                                  ; Expression value: 17
   149                                  ; glb dig : [17u] char
   150                                  ; glb printGenLn : (
   151                                  ; prm     p : * (
   152                                  ; prm         car : char
   153                                  ;         ) int
   154                                  ;     ) int
   155                                  section .text
   156                                  	global	_printGenLn
   157                                  _printGenLn:
   158 00000000 6655                    	push	ebp
   159 00000002 660FB7EC                	movzx	ebp, sp
   160                                  	;sub	sp,          0
   161                                  ; loc     p : (@8): * (
   162                                  ; prm         car : char
   163                                  ;         ) int
   164                                  ; RPN'ized expression: "( 13 p ) "
   165                                  ; Expanded expression: " 13  (@8) *(4) ()4 "
   166                                  ; Fused expression:    "( 13 , *(4) (@8) )4 "
   167 00000006 666A0D                  	push	dword 13
   168 00000009 668B4608                	mov	eax, [bp+8]
   169 0000000D 9A                      	db	0x9A
   170                                  section .relot
   171 00000000 [0E000000]              	dd	L3
   172                                  section .text
   173                                  L3:
   174 0000000E [12000000]              	dd	L4
   175                                  L4:
   176 00000012 89E6                    	mov	si, sp
   177 00000014 36830410                	add	word [ss:si], L5 - L4
   178 00000018 66C1E00C                	shl	eax, 12
   179 0000001C C1C004                  	rol	ax, 4
   180 0000001F 6650                    	push	eax
   181 00000021 CB                      	retf
   182                                  L5:
   183 00000022 83ECFC                  	sub	sp, -4
   184                                  ; RPN'ized expression: "( 10 p ) "
   185                                  ; Expanded expression: " 10  (@8) *(4) ()4 "
   186                                  ; Fused expression:    "( 10 , *(4) (@8) )4 "
   187 00000025 666A0A                  	push	dword 10
   188 00000028 668B4608                	mov	eax, [bp+8]
   189 0000002C 9A                      	db	0x9A
   190                                  section .relot
   191 00000004 [2D000000]              	dd	L6
   192                                  section .text
   193                                  L6:
   194 0000002D [31000000]              	dd	L7
   195                                  L7:
   196 00000031 89E6                    	mov	si, sp
   197 00000033 36830410                	add	word [ss:si], L8 - L7
   198 00000037 66C1E00C                	shl	eax, 12
   199 0000003B C1C004                  	rol	ax, 4
   200 0000003E 6650                    	push	eax
   201 00000040 CB                      	retf
   202                                  L8:
   203 00000041 83ECFC                  	sub	sp, -4
   204                                  ; return
   205                                  ; RPN'ized expression: "2 "
   206                                  ; Expanded expression: "2 "
   207                                  ; Expression value: 2
   208                                  ; Fused expression:    "2  "
   209 00000044 66B802000000            	mov	eax, 2
   210                                  L1:
   211 0000004A 66                      	db	0x66
   212 0000004B C9                      	leave
   213 0000004C CB                      	retf
   214                                  L9:
   215                                  
   216                                  section .fxnsz noalloc
   217 00000000 4D000000                	dd	L9 - _printGenLn
   218                                  
   219                                  ; glb printGenStr : (
   220                                  ; prm     str : * char
   221                                  ; prm     p : * (
   222                                  ; prm         car : char
   223                                  ;         ) int
   224                                  ;     ) int
   225                                  section .text
   226                                  	global	_printGenStr
   227                                  _printGenStr:
   228 0000004D 6655                    	push	ebp
   229 0000004F 660FB7EC                	movzx	ebp, sp
   230 00000053 83EC08                  	 sub	sp,          8
   231                                  ; loc     str : (@8): * char
   232                                  ; loc     p : (@12): * (
   233                                  ; prm         car : char
   234                                  ;         ) int
   235                                  ; loc     car : (@-4): char
   236                                  ; loc     cont : (@-8): int
   237                                  ; RPN'ized expression: "cont 0 = "
   238                                  ; Expanded expression: "(@-8) 0 =(4) "
   239                                  ; Fused expression:    "=(204) *(@-8) 0 "
   240 00000056 66B800000000            	mov	eax, 0
   241 0000005C 668946F8                	mov	[bp-8], eax
   242                                  ; while
   243                                  ; loc     <something> : char
   244                                  ; RPN'ized expression: "car str ++p *u = 0 (something14) != "
   245                                  ; Expanded expression: "(@-4) (@8) ++p(4) *(-1) =(-1) 0 != "
   246                                  L12:
   247                                  ; Fused expression:    "++p(4) *(@8) =(119) *(@-4) *ax != ax 0 IF! "
   248 00000060 668B4608                	mov	eax, [bp+8]
   249 00000064 66FF4608                	inc	dword [bp+8]
   250 00000068 6689C3                  	mov	ebx, eax
   251 0000006B 6689DE                  	mov	esi, ebx
   252 0000006E 66C1CE04                	ror	esi, 4
   253 00000072 8EDE                    	mov	ds, si
   254 00000074 66C1EE1C                	shr	esi, 28
   255 00000078 8A04                    	mov	al, [si]
   256 0000007A 660FBEC0                	movsx	eax, al
   257 0000007E 8846FC                  	mov	[bp-4], al
   258 00000081 660FBEC0                	movsx	eax, al
   259 00000085 6683F800                	cmp	eax, 0
   260 00000089 7464                    	je	L13
   261                                  ; {
   262                                  ; if
   263                                  ; RPN'ized expression: "car 10 == "
   264                                  ; Expanded expression: "(@-4) *(-1) 10 == "
   265                                  ; Fused expression:    "== *(@-4) 10 IF! "
   266 0000008B 8A46FC                  	mov	al, [bp-4]
   267 0000008E 660FBEC0                	movsx	eax, al
   268 00000092 6683F80A                	cmp	eax, 10
   269 00000096 7527                    	jne	L15
   270                                  ; {
   271                                  ; RPN'ized expression: "( 13 p ) "
   272                                  ; Expanded expression: " 13  (@12) *(4) ()4 "
   273                                  ; Fused expression:    "( 13 , *(4) (@12) )4 "
   274 00000098 666A0D                  	push	dword 13
   275 0000009B 668B460C                	mov	eax, [bp+12]
   276 0000009F 9A                      	db	0x9A
   277                                  section .relot
   278 00000008 [A0000000]              	dd	L17
   279                                  section .text
   280                                  L17:
   281 000000A0 [A4000000]              	dd	L18
   282                                  L18:
   283 000000A4 89E6                    	mov	si, sp
   284 000000A6 36830410                	add	word [ss:si], L19 - L18
   285 000000AA 66C1E00C                	shl	eax, 12
   286 000000AE C1C004                  	rol	ax, 4
   287 000000B1 6650                    	push	eax
   288 000000B3 CB                      	retf
   289                                  L19:
   290 000000B4 83ECFC                  	sub	sp, -4
   291                                  ; RPN'ized expression: "cont ++p "
   292                                  ; Expanded expression: "(@-8) ++p(4) "
   293                                  ; Fused expression:    "++p(4) *(@-8) "
   294 000000B7 668B46F8                	mov	eax, [bp-8]
   295 000000BB 66FF46F8                	inc	dword [bp-8]
   296                                  ; }
   297                                  L15:
   298                                  ; RPN'ized expression: "( car p ) "
   299                                  ; Expanded expression: " (@-4) *(-1)  (@12) *(4) ()4 "
   300                                  ; Fused expression:    "( *(-1) (@-4) , *(4) (@12) )4 "
   301 000000BF 8A46FC                  	mov	al, [bp-4]
   302 000000C2 660FBEC0                	movsx	eax, al
   303 000000C6 6650                    	push	eax
   304 000000C8 668B460C                	mov	eax, [bp+12]
   305 000000CC 9A                      	db	0x9A
   306                                  section .relot
   307 0000000C [CD000000]              	dd	L20
   308                                  section .text
   309                                  L20:
   310 000000CD [D1000000]              	dd	L21
   311                                  L21:
   312 000000D1 89E6                    	mov	si, sp
   313 000000D3 36830410                	add	word [ss:si], L22 - L21
   314 000000D7 66C1E00C                	shl	eax, 12
   315 000000DB C1C004                  	rol	ax, 4
   316 000000DE 6650                    	push	eax
   317 000000E0 CB                      	retf
   318                                  L22:
   319 000000E1 83ECFC                  	sub	sp, -4
   320                                  ; RPN'ized expression: "cont ++p "
   321                                  ; Expanded expression: "(@-8) ++p(4) "
   322                                  ; Fused expression:    "++p(4) *(@-8) "
   323 000000E4 668B46F8                	mov	eax, [bp-8]
   324 000000E8 66FF46F8                	inc	dword [bp-8]
   325                                  ; }
   326 000000EC E971FF                  	jmp	L12
   327                                  L13:
   328                                  ; return
   329                                  ; RPN'ized expression: "cont "
   330                                  ; Expanded expression: "(@-8) *(4) "
   331                                  ; Fused expression:    "*(4) (@-8)  "
   332 000000EF 668B46F8                	mov	eax, [bp-8]
   333                                  L10:
   334 000000F3 66                      	db	0x66
   335 000000F4 C9                      	leave
   336 000000F5 CB                      	retf
   337                                  L23:
   338                                  
   339                                  section .fxnsz
   340 00000004 A9000000                	dd	L23 - _printGenStr
   341                                  
   342                                  ; glb printGenStrHasta : (
   343                                  ; prm     str : * char
   344                                  ; prm     n : unsigned short
   345                                  ; prm     lleno : int
   346                                  ; prm     p : * (
   347                                  ; prm         car : char
   348                                  ;         ) int
   349                                  ;     ) int
   350                                  section .text
   351                                  	global	_printGenStrHasta
   352                                  _printGenStrHasta:
   353 000000F6 6655                    	push	ebp
   354 000000F8 660FB7EC                	movzx	ebp, sp
   355 000000FC 83EC08                  	 sub	sp,          8
   356                                  ; loc     str : (@8): * char
   357                                  ; loc     n : (@12): unsigned short
   358                                  ; loc     lleno : (@16): int
   359                                  ; loc     p : (@20): * (
   360                                  ; prm         car : char
   361                                  ;         ) int
   362                                  ; loc     car : (@-4): char
   363                                  ; loc     i : (@-8): unsigned short
   364                                  ; RPN'ized expression: "i 0 = "
   365                                  ; Expanded expression: "(@-8) 0 =(2) "
   366                                  ; Fused expression:    "=(204) *(@-8) 0 "
   367 000000FF 66B800000000            	mov	eax, 0
   368 00000105 668946F8                	mov	[bp-8], eax
   369                                  ; while
   370                                  ; loc     <something> : char
   371                                  ; RPN'ized expression: "i n < car str ++p *u = 0 (something28) != && "
   372                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < [sh&&->29] (@-4) (@8) ++p(4) *(-1) =(-1) 0 != &&[29] "
   373                                  L26:
   374                                  ; Fused expression:    "< *(@-8) *(@12) [sh&&->29] ++p(4) *(@8) =(119) *(@-4) *ax != ax 0 &&[29]  "
   375 00000109 8B46F8                  	mov	ax, [bp-8]
   376 0000010C 660FB7C0                	movzx	eax, ax
   377 00000110 660FB74E0C              	movzx	ecx, word [bp+12]
   378 00000115 6639C8                  	cmp	eax, ecx
   379 00000118 0F9CC0                  	setl	al
   380 0000011B 660FB6C0                	movzx	eax, al
   381                                  ; JumpIfZero
   382 0000011F 6685C0                  	test	eax, eax
   383 00000122 7430                    	je	L29
   384 00000124 668B4608                	mov	eax, [bp+8]
   385 00000128 66FF4608                	inc	dword [bp+8]
   386 0000012C 6689C3                  	mov	ebx, eax
   387 0000012F 6689DE                  	mov	esi, ebx
   388 00000132 66C1CE04                	ror	esi, 4
   389 00000136 8EDE                    	mov	ds, si
   390 00000138 66C1EE1C                	shr	esi, 28
   391 0000013C 8A04                    	mov	al, [si]
   392 0000013E 660FBEC0                	movsx	eax, al
   393 00000142 8846FC                  	mov	[bp-4], al
   394 00000145 660FBEC0                	movsx	eax, al
   395 00000149 6683F800                	cmp	eax, 0
   396 0000014D 0F95C0                  	setne	al
   397 00000150 660FB6C0                	movzx	eax, al
   398                                  L29:
   399                                  ; JumpIfZero
   400 00000154 6685C0                  	test	eax, eax
   401 00000157 745E                    	je	L27
   402                                  ; {
   403                                  ; if
   404                                  ; RPN'ized expression: "car 10 == "
   405                                  ; Expanded expression: "(@-4) *(-1) 10 == "
   406                                  ; Fused expression:    "== *(@-4) 10 IF! "
   407 00000159 8A46FC                  	mov	al, [bp-4]
   408 0000015C 660FBEC0                	movsx	eax, al
   409 00000160 6683F80A                	cmp	eax, 10
   410 00000164 751F                    	jne	L30
   411                                  ; RPN'ized expression: "( 13 p ) "
   412                                  ; Expanded expression: " 13  (@20) *(4) ()4 "
   413                                  ; Fused expression:    "( 13 , *(4) (@20) )4 "
   414 00000166 666A0D                  	push	dword 13
   415 00000169 668B4614                	mov	eax, [bp+20]
   416 0000016D 9A                      	db	0x9A
   417                                  section .relot
   418 00000010 [6E010000]              	dd	L32
   419                                  section .text
   420                                  L32:
   421 0000016E [72010000]              	dd	L33
   422                                  L33:
   423 00000172 89E6                    	mov	si, sp
   424 00000174 36830410                	add	word [ss:si], L34 - L33
   425 00000178 66C1E00C                	shl	eax, 12
   426 0000017C C1C004                  	rol	ax, 4
   427 0000017F 6650                    	push	eax
   428 00000181 CB                      	retf
   429                                  L34:
   430 00000182 83ECFC                  	sub	sp, -4
   431                                  L30:
   432                                  ; RPN'ized expression: "( car p ) "
   433                                  ; Expanded expression: " (@-4) *(-1)  (@20) *(4) ()4 "
   434                                  ; Fused expression:    "( *(-1) (@-4) , *(4) (@20) )4 "
   435 00000185 8A46FC                  	mov	al, [bp-4]
   436 00000188 660FBEC0                	movsx	eax, al
   437 0000018C 6650                    	push	eax
   438 0000018E 668B4614                	mov	eax, [bp+20]
   439 00000192 9A                      	db	0x9A
   440                                  section .relot
   441 00000014 [93010000]              	dd	L35
   442                                  section .text
   443                                  L35:
   444 00000193 [97010000]              	dd	L36
   445                                  L36:
   446 00000197 89E6                    	mov	si, sp
   447 00000199 36830410                	add	word [ss:si], L37 - L36
   448 0000019D 66C1E00C                	shl	eax, 12
   449 000001A1 C1C004                  	rol	ax, 4
   450 000001A4 6650                    	push	eax
   451 000001A6 CB                      	retf
   452                                  L37:
   453 000001A7 83ECFC                  	sub	sp, -4
   454                                  ; RPN'ized expression: "i ++p "
   455                                  ; Expanded expression: "(@-8) ++p(2) "
   456                                  ; Fused expression:    "++p(2) *(@-8) "
   457 000001AA 8B46F8                  	mov	ax, [bp-8]
   458 000001AD 660FB7C0                	movzx	eax, ax
   459 000001B1 FF46F8                  	inc	word [bp-8]
   460                                  ; }
   461 000001B4 E952FF                  	jmp	L26
   462                                  L27:
   463                                  ; if
   464                                  ; RPN'ized expression: "lleno "
   465                                  ; Expanded expression: "(@16) *(4) "
   466                                  ; Fused expression:    "*(4) (@16)  "
   467 000001B7 668B4610                	mov	eax, [bp+16]
   468                                  ; JumpIfZero
   469 000001BB 6685C0                  	test	eax, eax
   470 000001BE 743C                    	je	L38
   471                                  ; while
   472                                  ; RPN'ized expression: "i n < "
   473                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
   474                                  L40:
   475                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
   476 000001C0 8B46F8                  	mov	ax, [bp-8]
   477 000001C3 660FB7C0                	movzx	eax, ax
   478 000001C7 660FB74E0C              	movzx	ecx, word [bp+12]
   479 000001CC 6639C8                  	cmp	eax, ecx
   480 000001CF 7D2B                    	jge	L41
   481                                  ; {
   482                                  ; RPN'ized expression: "( 32 p ) "
   483                                  ; Expanded expression: " 32  (@20) *(4) ()4 "
   484                                  ; Fused expression:    "( 32 , *(4) (@20) )4 "
   485 000001D1 666A20                  	push	dword 32
   486 000001D4 668B4614                	mov	eax, [bp+20]
   487 000001D8 9A                      	db	0x9A
   488                                  section .relot
   489 00000018 [D9010000]              	dd	L42
   490                                  section .text
   491                                  L42:
   492 000001D9 [DD010000]              	dd	L43
   493                                  L43:
   494 000001DD 89E6                    	mov	si, sp
   495 000001DF 36830410                	add	word [ss:si], L44 - L43
   496 000001E3 66C1E00C                	shl	eax, 12
   497 000001E7 C1C004                  	rol	ax, 4
   498 000001EA 6650                    	push	eax
   499 000001EC CB                      	retf
   500                                  L44:
   501 000001ED 83ECFC                  	sub	sp, -4
   502                                  ; RPN'ized expression: "i ++p "
   503                                  ; Expanded expression: "(@-8) ++p(2) "
   504                                  ; Fused expression:    "++p(2) *(@-8) "
   505 000001F0 8B46F8                  	mov	ax, [bp-8]
   506 000001F3 660FB7C0                	movzx	eax, ax
   507 000001F7 FF46F8                  	inc	word [bp-8]
   508                                  ; }
   509 000001FA EBC4                    	jmp	L40
   510                                  L41:
   511                                  L38:
   512                                  ; return
   513                                  ; RPN'ized expression: "i "
   514                                  ; Expanded expression: "(@-8) *(2) "
   515                                  ; Fused expression:    "*(2) (@-8)  "
   516 000001FC 8B46F8                  	mov	ax, [bp-8]
   517 000001FF 660FB7C0                	movzx	eax, ax
   518                                  L24:
   519 00000203 66                      	db	0x66
   520 00000204 C9                      	leave
   521 00000205 CB                      	retf
   522                                  L45:
   523                                  
   524                                  section .fxnsz
   525 00000008 10010000                	dd	L45 - _printGenStrHasta
   526                                  
   527                                  ; RPN'ized expression: "11 "
   528                                  ; Expanded expression: "11 "
   529                                  ; Expression value: 11
   530                                  ; glb str : [11u] char
   531                                  section .bss
   532                                  _str:
   533 00000000 <res 0000000B>          	resb	11
   534                                  
   535                                  ; glb printGenDec : (
   536                                  ; prm     num : unsigned short
   537                                  ; prm     l : unsigned short
   538                                  ; prm     p : * (
   539                                  ; prm         car : char
   540                                  ;         ) int
   541                                  ;     ) int
   542                                  section .text
   543                                  	global	_printGenDec
   544                                  _printGenDec:
   545 00000206 6655                    	push	ebp
   546 00000208 660FB7EC                	movzx	ebp, sp
   547 0000020C 83EC10                  	 sub	sp,         16
   548                                  ; loc     num : (@8): unsigned short
   549                                  ; loc     l : (@12): unsigned short
   550                                  ; loc     p : (@16): * (
   551                                  ; prm         car : char
   552                                  ;         ) int
   553                                  ; {
   554                                  ; loc         i : (@-4): unsigned short
   555                                  ; loc         j : (@-8): unsigned short
   556                                  ; loc         cont : (@-12): int
   557                                  ; RPN'ized expression: "cont 0 = "
   558                                  ; Expanded expression: "(@-12) 0 =(4) "
   559                                  ; Fused expression:    "=(204) *(@-12) 0 "
   560 0000020F 66B800000000            	mov	eax, 0
   561 00000215 668946F4                	mov	[bp-12], eax
   562                                  ; loc         ptr : (@-16): * char
   563                                  ; if
   564                                  ; RPN'ized expression: "l 0 == "
   565                                  ; Expanded expression: "(@12) *(2) 0 == "
   566                                  ; Fused expression:    "== *(@12) 0 IF! "
   567 00000219 8B460C                  	mov	ax, [bp+12]
   568 0000021C 660FB7C0                	movzx	eax, ax
   569 00000220 6683F800                	cmp	eax, 0
   570 00000224 750D                    	jne	L48
   571                                  ; RPN'ized expression: "l 1 = "
   572                                  ; Expanded expression: "(@12) 1 =(2) "
   573                                  ; Fused expression:    "=(172) *(@12) 1 "
   574 00000226 66B801000000            	mov	eax, 1
   575 0000022C 89460C                  	mov	[bp+12], ax
   576 0000022F 660FB7C0                	movzx	eax, ax
   577                                  L48:
   578                                  ; if
   579                                  ; RPN'ized expression: "num 0 == "
   580                                  ; Expanded expression: "(@8) *(2) 0 == "
   581                                  ; Fused expression:    "== *(@8) 0 IF! "
   582 00000233 8B4608                  	mov	ax, [bp+8]
   583 00000236 660FB7C0                	movzx	eax, ax
   584 0000023A 6683F800                	cmp	eax, 0
   585 0000023E 7579                    	jne	L50
   586                                  ; {
   587                                  ; for
   588                                  ; RPN'ized expression: "i 0 = "
   589                                  ; Expanded expression: "(@-4) 0 =(2) "
   590                                  ; Fused expression:    "=(172) *(@-4) 0 "
   591 00000240 66B800000000            	mov	eax, 0
   592 00000246 8946FC                  	mov	[bp-4], ax
   593 00000249 660FB7C0                	movzx	eax, ax
   594                                  L52:
   595                                  ; RPN'ized expression: "i l 1 - < "
   596                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
   597                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
   598 0000024D 8B460C                  	mov	ax, [bp+12]
   599 00000250 660FB7C0                	movzx	eax, ax
   600 00000254 6648                    	dec	eax
   601 00000256 6689C1                  	mov	ecx, eax
   602 00000259 8B46FC                  	mov	ax, [bp-4]
   603 0000025C 660FB7C0                	movzx	eax, ax
   604 00000260 6639C8                  	cmp	eax, ecx
   605 00000263 7D2B                    	jge	L55
   606                                  ; RPN'ized expression: "i ++p "
   607                                  ; Expanded expression: "(@-4) ++p(2) "
   608                                  ; RPN'ized expression: "( 32 p ) "
   609                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
   610                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
   611 00000265 666A20                  	push	dword 32
   612 00000268 668B4610                	mov	eax, [bp+16]
   613 0000026C 9A                      	db	0x9A
   614                                  section .relot
   615 0000001C [6D020000]              	dd	L56
   616                                  section .text
   617                                  L56:
   618 0000026D [71020000]              	dd	L57
   619                                  L57:
   620 00000271 89E6                    	mov	si, sp
   621 00000273 36830410                	add	word [ss:si], L58 - L57
   622 00000277 66C1E00C                	shl	eax, 12
   623 0000027B C1C004                  	rol	ax, 4
   624 0000027E 6650                    	push	eax
   625 00000280 CB                      	retf
   626                                  L58:
   627 00000281 83ECFC                  	sub	sp, -4
   628                                  L53:
   629                                  ; Fused expression:    "++p(2) *(@-4) "
   630 00000284 8B46FC                  	mov	ax, [bp-4]
   631 00000287 660FB7C0                	movzx	eax, ax
   632 0000028B FF46FC                  	inc	word [bp-4]
   633 0000028E EBBD                    	jmp	L52
   634                                  L55:
   635                                  ; RPN'ized expression: "( 48 p ) "
   636                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
   637                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
   638 00000290 666A30                  	push	dword 48
   639 00000293 668B4610                	mov	eax, [bp+16]
   640 00000297 9A                      	db	0x9A
   641                                  section .relot
   642 00000020 [98020000]              	dd	L59
   643                                  section .text
   644                                  L59:
   645 00000298 [9C020000]              	dd	L60
   646                                  L60:
   647 0000029C 89E6                    	mov	si, sp
   648 0000029E 36830410                	add	word [ss:si], L61 - L60
   649 000002A2 66C1E00C                	shl	eax, 12
   650 000002A6 C1C004                  	rol	ax, 4
   651 000002A9 6650                    	push	eax
   652 000002AB CB                      	retf
   653                                  L61:
   654 000002AC 83ECFC                  	sub	sp, -4
   655                                  ; return
   656                                  ; RPN'ized expression: "l "
   657                                  ; Expanded expression: "(@12) *(2) "
   658                                  ; Fused expression:    "*(2) (@12)  "
   659 000002AF 8B460C                  	mov	ax, [bp+12]
   660 000002B2 660FB7C0                	movzx	eax, ax
   661 000002B6 E9C901                  	jmp	L46
   662                                  ; }
   663                                  L50:
   664                                  ; loc         <something> : * char
   665                                  ; RPN'ized expression: "ptr str 5 + *u &u (something62) = "
   666                                  ; Expanded expression: "(@-16) str 5 + =(4) "
   667                                  ; Fused expression:    "str + ax 5 =(204) *(@-16) ax "
   668                                  section .relod
   669 00000000 [BB020000]              	dd	L63
   670                                  section .text
   671 000002B9 66B8                    	db	0x66, 0xB8
   672                                  L63:
   673 000002BB [00000000]              	dd	_str
   674 000002BF 6683C005                	add	eax, 5
   675 000002C3 668946F0                	mov	[bp-16], eax
   676                                  ; loc         <something> : char
   677                                  ; RPN'ized expression: "ptr *u 0 (something64) = "
   678                                  ; Expanded expression: "(@-16) *(4) 0 =(-1) "
   679                                  ; Fused expression:    "*(4) (@-16) =(124) *ax 0 "
   680 000002C7 668B46F0                	mov	eax, [bp-16]
   681 000002CB 6689C3                  	mov	ebx, eax
   682 000002CE 66B800000000            	mov	eax, 0
   683 000002D4 6689DE                  	mov	esi, ebx
   684 000002D7 66C1CE04                	ror	esi, 4
   685 000002DB 8EDE                    	mov	ds, si
   686 000002DD 66C1EE1C                	shr	esi, 28
   687 000002E1 8804                    	mov	[si], al
   688 000002E3 660FBEC0                	movsx	eax, al
   689                                  ; RPN'ized expression: "i 0 = "
   690                                  ; Expanded expression: "(@-4) 0 =(2) "
   691                                  ; Fused expression:    "=(172) *(@-4) 0 "
   692 000002E7 66B800000000            	mov	eax, 0
   693 000002ED 8946FC                  	mov	[bp-4], ax
   694 000002F0 660FB7C0                	movzx	eax, ax
   695                                  ; while
   696                                  ; RPN'ized expression: "num 0 > "
   697                                  ; Expanded expression: "(@8) *(2) 0 > "
   698                                  L65:
   699                                  ; Fused expression:    "> *(@8) 0 IF! "
   700 000002F4 8B4608                  	mov	ax, [bp+8]
   701 000002F7 660FB7C0                	movzx	eax, ax
   702 000002FB 6683F800                	cmp	eax, 0
   703 000002FF 0F8E9A00                	jle	L66
   704                                  ; {
   705                                  ; loc             <something> : unsigned short
   706                                  ; RPN'ized expression: "str 4 i - + *u dig num 10 % (something67) + *u = "
   707                                  ; Expanded expression: "str 4 (@-4) *(2) - + dig (@8) *(2) 10 % unsigned short + *(-1) =(-1) "
   708                                  ; Fused expression:    "str push-ax - 4 *(@-4) + *sp ax push-ax dig push-ax % *(@8) 10 unsigned short + *sp ax =(119) **sp *ax "
   709                                  section .relod
   710 00000004 [05030000]              	dd	L68
   711                                  section .text
   712 00000303 66B8                    	db	0x66, 0xB8
   713                                  L68:
   714 00000305 [00000000]              	dd	_str
   715 00000309 6650                    	push	eax
   716 0000030B 66B804000000            	mov	eax, 4
   717 00000311 660FB74EFC              	movzx	ecx, word [bp-4]
   718 00000316 6629C8                  	sub	eax, ecx
   719 00000319 6689C1                  	mov	ecx, eax
   720 0000031C 6658                    	pop	eax
   721 0000031E 6601C8                  	add	eax, ecx
   722 00000321 6650                    	push	eax
   723                                  section .relod
   724 00000008 [25030000]              	dd	L69
   725                                  section .text
   726 00000323 66B8                    	db	0x66, 0xB8
   727                                  L69:
   728 00000325 [00000000]              	dd	_dig
   729 00000329 6650                    	push	eax
   730 0000032B 8B4608                  	mov	ax, [bp+8]
   731 0000032E 660FB7C0                	movzx	eax, ax
   732 00000332 6699                    	cdq
   733 00000334 66B90A000000            	mov	ecx, 10
   734 0000033A 66F7F9                  	idiv	ecx
   735 0000033D 6689D0                  	mov	eax, edx
   736 00000340 660FB7C0                	movzx	eax, ax
   737 00000344 6689C1                  	mov	ecx, eax
   738 00000347 6658                    	pop	eax
   739 00000349 6601C8                  	add	eax, ecx
   740 0000034C 6689C3                  	mov	ebx, eax
   741 0000034F 6689DE                  	mov	esi, ebx
   742 00000352 66C1CE04                	ror	esi, 4
   743 00000356 8EDE                    	mov	ds, si
   744 00000358 66C1EE1C                	shr	esi, 28
   745 0000035C 8A04                    	mov	al, [si]
   746 0000035E 660FBEC0                	movsx	eax, al
   747 00000362 665B                    	pop	ebx
   748 00000364 6689DE                  	mov	esi, ebx
   749 00000367 66C1CE04                	ror	esi, 4
   750 0000036B 8EDE                    	mov	ds, si
   751 0000036D 66C1EE1C                	shr	esi, 28
   752 00000371 8804                    	mov	[si], al
   753 00000373 660FBEC0                	movsx	eax, al
   754                                  ; RPN'ized expression: "num num 10 / = "
   755                                  ; Expanded expression: "(@8) (@8) *(2) 10 / =(2) "
   756                                  ; Fused expression:    "/ *(@8) 10 =(172) *(@8) ax "
   757 00000377 8B4608                  	mov	ax, [bp+8]
   758 0000037A 660FB7C0                	movzx	eax, ax
   759 0000037E 6699                    	cdq
   760 00000380 66B90A000000            	mov	ecx, 10
   761 00000386 66F7F9                  	idiv	ecx
   762 00000389 894608                  	mov	[bp+8], ax
   763 0000038C 660FB7C0                	movzx	eax, ax
   764                                  ; RPN'ized expression: "i ++p "
   765                                  ; Expanded expression: "(@-4) ++p(2) "
   766                                  ; Fused expression:    "++p(2) *(@-4) "
   767 00000390 8B46FC                  	mov	ax, [bp-4]
   768 00000393 660FB7C0                	movzx	eax, ax
   769 00000397 FF46FC                  	inc	word [bp-4]
   770                                  ; }
   771 0000039A E957FF                  	jmp	L65
   772                                  L66:
   773                                  ; for
   774                                  ; RPN'ized expression: "j i = "
   775                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
   776                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
   777 0000039D 8B46FC                  	mov	ax, [bp-4]
   778 000003A0 660FB7C0                	movzx	eax, ax
   779 000003A4 8946F8                  	mov	[bp-8], ax
   780 000003A7 660FB7C0                	movzx	eax, ax
   781                                  L70:
   782                                  ; RPN'ized expression: "j l < "
   783                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
   784                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
   785 000003AB 8B46F8                  	mov	ax, [bp-8]
   786 000003AE 660FB7C0                	movzx	eax, ax
   787 000003B2 660FB74E0C              	movzx	ecx, word [bp+12]
   788 000003B7 6639C8                  	cmp	eax, ecx
   789 000003BA 7D2B                    	jge	L73
   790                                  ; RPN'ized expression: "j ++p "
   791                                  ; Expanded expression: "(@-8) ++p(2) "
   792                                  ; RPN'ized expression: "( 32 p ) "
   793                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
   794                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
   795 000003BC 666A20                  	push	dword 32
   796 000003BF 668B4610                	mov	eax, [bp+16]
   797 000003C3 9A                      	db	0x9A
   798                                  section .relot
   799 00000024 [C4030000]              	dd	L74
   800                                  section .text
   801                                  L74:
   802 000003C4 [C8030000]              	dd	L75
   803                                  L75:
   804 000003C8 89E6                    	mov	si, sp
   805 000003CA 36830410                	add	word [ss:si], L76 - L75
   806 000003CE 66C1E00C                	shl	eax, 12
   807 000003D2 C1C004                  	rol	ax, 4
   808 000003D5 6650                    	push	eax
   809 000003D7 CB                      	retf
   810                                  L76:
   811 000003D8 83ECFC                  	sub	sp, -4
   812                                  L71:
   813                                  ; Fused expression:    "++p(2) *(@-8) "
   814 000003DB 8B46F8                  	mov	ax, [bp-8]
   815 000003DE 660FB7C0                	movzx	eax, ax
   816 000003E2 FF46F8                  	inc	word [bp-8]
   817 000003E5 EBC4                    	jmp	L70
   818                                  L73:
   819                                  ; loc         <something> : * char
   820                                  ; RPN'ized expression: "ptr str 4 i - 1 + + *u &u (something77) = "
   821                                  ; Expanded expression: "(@-16) str 4 (@-4) *(2) - 1 + + =(4) "
   822                                  ; Fused expression:    "str push-ax - 4 *(@-4) + ax 1 + *sp ax =(204) *(@-16) ax "
   823                                  section .relod
   824 0000000C [E9030000]              	dd	L78
   825                                  section .text
   826 000003E7 66B8                    	db	0x66, 0xB8
   827                                  L78:
   828 000003E9 [00000000]              	dd	_str
   829 000003ED 6650                    	push	eax
   830 000003EF 66B804000000            	mov	eax, 4
   831 000003F5 660FB74EFC              	movzx	ecx, word [bp-4]
   832 000003FA 6629C8                  	sub	eax, ecx
   833 000003FD 6640                    	inc	eax
   834 000003FF 6689C1                  	mov	ecx, eax
   835 00000402 6658                    	pop	eax
   836 00000404 6601C8                  	add	eax, ecx
   837 00000407 668946F0                	mov	[bp-16], eax
   838                                  ; while
   839                                  ; loc         <something> : char
   840                                  ; RPN'ized expression: "ptr *u 0 (something81) != "
   841                                  ; Expanded expression: "(@-16) *(4) *(-1) 0 != "
   842                                  L79:
   843                                  ; Fused expression:    "*(4) (@-16) != *ax 0 IF! "
   844 0000040B 668B46F0                	mov	eax, [bp-16]
   845 0000040F 6689C3                  	mov	ebx, eax
   846 00000412 6689DE                  	mov	esi, ebx
   847 00000415 66C1CE04                	ror	esi, 4
   848 00000419 8EDE                    	mov	ds, si
   849 0000041B 66C1EE1C                	shr	esi, 28
   850 0000041F 8A04                    	mov	al, [si]
   851 00000421 660FBEC0                	movsx	eax, al
   852 00000425 6683F800                	cmp	eax, 0
   853 00000429 744A                    	je	L80
   854                                  ; {
   855                                  ; RPN'ized expression: "( ptr *u p ) "
   856                                  ; Expanded expression: " (@-16) *(4) *(-1)  (@16) *(4) ()4 "
   857                                  ; Fused expression:    "( *(4) (@-16) *(-1) ax , *(4) (@16) )4 "
   858 0000042B 668B46F0                	mov	eax, [bp-16]
   859 0000042F 6689C3                  	mov	ebx, eax
   860 00000432 6689DE                  	mov	esi, ebx
   861 00000435 66C1CE04                	ror	esi, 4
   862 00000439 8EDE                    	mov	ds, si
   863 0000043B 66C1EE1C                	shr	esi, 28
   864 0000043F 8A04                    	mov	al, [si]
   865 00000441 660FBEC0                	movsx	eax, al
   866 00000445 6650                    	push	eax
   867 00000447 668B4610                	mov	eax, [bp+16]
   868 0000044B 9A                      	db	0x9A
   869                                  section .relot
   870 00000028 [4C040000]              	dd	L82
   871                                  section .text
   872                                  L82:
   873 0000044C [50040000]              	dd	L83
   874                                  L83:
   875 00000450 89E6                    	mov	si, sp
   876 00000452 36830410                	add	word [ss:si], L84 - L83
   877 00000456 66C1E00C                	shl	eax, 12
   878 0000045A C1C004                  	rol	ax, 4
   879 0000045D 6650                    	push	eax
   880 0000045F CB                      	retf
   881                                  L84:
   882 00000460 83ECFC                  	sub	sp, -4
   883                                  ; RPN'ized expression: "ptr ++p "
   884                                  ; Expanded expression: "(@-16) ++p(4) "
   885                                  ; Fused expression:    "++p(4) *(@-16) "
   886 00000463 668B46F0                	mov	eax, [bp-16]
   887 00000467 66FF46F0                	inc	dword [bp-16]
   888                                  ; RPN'ized expression: "cont ++p "
   889                                  ; Expanded expression: "(@-12) ++p(4) "
   890                                  ; Fused expression:    "++p(4) *(@-12) "
   891 0000046B 668B46F4                	mov	eax, [bp-12]
   892 0000046F 66FF46F4                	inc	dword [bp-12]
   893                                  ; }
   894 00000473 EB96                    	jmp	L79
   895                                  L80:
   896                                  ; return
   897                                  ; RPN'ized expression: "l cont + "
   898                                  ; Expanded expression: "(@12) *(2) (@-12) *(4) + "
   899                                  ; Fused expression:    "+ *(@12) *(@-12)  "
   900 00000475 8B460C                  	mov	ax, [bp+12]
   901 00000478 660FB7C0                	movzx	eax, ax
   902 0000047C 660346F4                	add	eax, [bp-12]
   903 00000480 EB00                    	jmp	L46
   904                                  ; }
   905                                  L46:
   906 00000482 66                      	db	0x66
   907 00000483 C9                      	leave
   908 00000484 CB                      	retf
   909                                  L85:
   910                                  
   911                                  section .fxnsz
   912 0000000C 7F020000                	dd	L85 - _printGenDec
   913                                  
   914                                  ; glb printGenLDec : (
   915                                  ; prm     num : unsigned
   916                                  ; prm     l : unsigned short
   917                                  ; prm     p : * (
   918                                  ; prm         car : char
   919                                  ;         ) int
   920                                  ;     ) int
   921                                  section .text
   922                                  	global	_printGenLDec
   923                                  _printGenLDec:
   924 00000485 6655                    	push	ebp
   925 00000487 660FB7EC                	movzx	ebp, sp
   926 0000048B 83EC10                  	 sub	sp,         16
   927                                  ; loc     num : (@8): unsigned
   928                                  ; loc     l : (@12): unsigned short
   929                                  ; loc     p : (@16): * (
   930                                  ; prm         car : char
   931                                  ;         ) int
   932                                  ; {
   933                                  ; loc         i : (@-4): unsigned short
   934                                  ; loc         j : (@-8): unsigned short
   935                                  ; loc         cont : (@-12): int
   936                                  ; RPN'ized expression: "cont 0 = "
   937                                  ; Expanded expression: "(@-12) 0 =(4) "
   938                                  ; Fused expression:    "=(204) *(@-12) 0 "
   939 0000048E 66B800000000            	mov	eax, 0
   940 00000494 668946F4                	mov	[bp-12], eax
   941                                  ; loc         ptr : (@-16): * char
   942                                  ; if
   943                                  ; RPN'ized expression: "l 0 == "
   944                                  ; Expanded expression: "(@12) *(2) 0 == "
   945                                  ; Fused expression:    "== *(@12) 0 IF! "
   946 00000498 8B460C                  	mov	ax, [bp+12]
   947 0000049B 660FB7C0                	movzx	eax, ax
   948 0000049F 6683F800                	cmp	eax, 0
   949 000004A3 750D                    	jne	L88
   950                                  ; RPN'ized expression: "l 1 = "
   951                                  ; Expanded expression: "(@12) 1 =(2) "
   952                                  ; Fused expression:    "=(172) *(@12) 1 "
   953 000004A5 66B801000000            	mov	eax, 1
   954 000004AB 89460C                  	mov	[bp+12], ax
   955 000004AE 660FB7C0                	movzx	eax, ax
   956                                  L88:
   957                                  ; if
   958                                  ; RPN'ized expression: "num 0 == "
   959                                  ; Expanded expression: "(@8) *(4) 0 == "
   960                                  ; Fused expression:    "== *(@8) 0 IF! "
   961 000004B2 668B4608                	mov	eax, [bp+8]
   962 000004B6 6683F800                	cmp	eax, 0
   963 000004BA 7579                    	jne	L90
   964                                  ; {
   965                                  ; for
   966                                  ; RPN'ized expression: "i 0 = "
   967                                  ; Expanded expression: "(@-4) 0 =(2) "
   968                                  ; Fused expression:    "=(172) *(@-4) 0 "
   969 000004BC 66B800000000            	mov	eax, 0
   970 000004C2 8946FC                  	mov	[bp-4], ax
   971 000004C5 660FB7C0                	movzx	eax, ax
   972                                  L92:
   973                                  ; RPN'ized expression: "i l 1 - < "
   974                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
   975                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
   976 000004C9 8B460C                  	mov	ax, [bp+12]
   977 000004CC 660FB7C0                	movzx	eax, ax
   978 000004D0 6648                    	dec	eax
   979 000004D2 6689C1                  	mov	ecx, eax
   980 000004D5 8B46FC                  	mov	ax, [bp-4]
   981 000004D8 660FB7C0                	movzx	eax, ax
   982 000004DC 6639C8                  	cmp	eax, ecx
   983 000004DF 7D2B                    	jge	L95
   984                                  ; RPN'ized expression: "i ++p "
   985                                  ; Expanded expression: "(@-4) ++p(2) "
   986                                  ; RPN'ized expression: "( 32 p ) "
   987                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
   988                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
   989 000004E1 666A20                  	push	dword 32
   990 000004E4 668B4610                	mov	eax, [bp+16]
   991 000004E8 9A                      	db	0x9A
   992                                  section .relot
   993 0000002C [E9040000]              	dd	L96
   994                                  section .text
   995                                  L96:
   996 000004E9 [ED040000]              	dd	L97
   997                                  L97:
   998 000004ED 89E6                    	mov	si, sp
   999 000004EF 36830410                	add	word [ss:si], L98 - L97
  1000 000004F3 66C1E00C                	shl	eax, 12
  1001 000004F7 C1C004                  	rol	ax, 4
  1002 000004FA 6650                    	push	eax
  1003 000004FC CB                      	retf
  1004                                  L98:
  1005 000004FD 83ECFC                  	sub	sp, -4
  1006                                  L93:
  1007                                  ; Fused expression:    "++p(2) *(@-4) "
  1008 00000500 8B46FC                  	mov	ax, [bp-4]
  1009 00000503 660FB7C0                	movzx	eax, ax
  1010 00000507 FF46FC                  	inc	word [bp-4]
  1011 0000050A EBBD                    	jmp	L92
  1012                                  L95:
  1013                                  ; RPN'ized expression: "( 48 p ) "
  1014                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  1015                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  1016 0000050C 666A30                  	push	dword 48
  1017 0000050F 668B4610                	mov	eax, [bp+16]
  1018 00000513 9A                      	db	0x9A
  1019                                  section .relot
  1020 00000030 [14050000]              	dd	L99
  1021                                  section .text
  1022                                  L99:
  1023 00000514 [18050000]              	dd	L100
  1024                                  L100:
  1025 00000518 89E6                    	mov	si, sp
  1026 0000051A 36830410                	add	word [ss:si], L101 - L100
  1027 0000051E 66C1E00C                	shl	eax, 12
  1028 00000522 C1C004                  	rol	ax, 4
  1029 00000525 6650                    	push	eax
  1030 00000527 CB                      	retf
  1031                                  L101:
  1032 00000528 83ECFC                  	sub	sp, -4
  1033                                  ; return
  1034                                  ; RPN'ized expression: "l "
  1035                                  ; Expanded expression: "(@12) *(2) "
  1036                                  ; Fused expression:    "*(2) (@12)  "
  1037 0000052B 8B460C                  	mov	ax, [bp+12]
  1038 0000052E 660FB7C0                	movzx	eax, ax
  1039 00000532 E9C501                  	jmp	L86
  1040                                  ; }
  1041                                  L90:
  1042                                  ; loc         <something> : * char
  1043                                  ; RPN'ized expression: "ptr str 10 + *u &u (something102) = "
  1044                                  ; Expanded expression: "(@-16) str 10 + =(4) "
  1045                                  ; Fused expression:    "str + ax 10 =(204) *(@-16) ax "
  1046                                  section .relod
  1047 00000010 [37050000]              	dd	L103
  1048                                  section .text
  1049 00000535 66B8                    	db	0x66, 0xB8
  1050                                  L103:
  1051 00000537 [00000000]              	dd	_str
  1052 0000053B 6683C00A                	add	eax, 10
  1053 0000053F 668946F0                	mov	[bp-16], eax
  1054                                  ; loc         <something> : char
  1055                                  ; RPN'ized expression: "ptr *u 0 (something104) = "
  1056                                  ; Expanded expression: "(@-16) *(4) 0 =(-1) "
  1057                                  ; Fused expression:    "*(4) (@-16) =(124) *ax 0 "
  1058 00000543 668B46F0                	mov	eax, [bp-16]
  1059 00000547 6689C3                  	mov	ebx, eax
  1060 0000054A 66B800000000            	mov	eax, 0
  1061 00000550 6689DE                  	mov	esi, ebx
  1062 00000553 66C1CE04                	ror	esi, 4
  1063 00000557 8EDE                    	mov	ds, si
  1064 00000559 66C1EE1C                	shr	esi, 28
  1065 0000055D 8804                    	mov	[si], al
  1066 0000055F 660FBEC0                	movsx	eax, al
  1067                                  ; RPN'ized expression: "i 0 = "
  1068                                  ; Expanded expression: "(@-4) 0 =(2) "
  1069                                  ; Fused expression:    "=(172) *(@-4) 0 "
  1070 00000563 66B800000000            	mov	eax, 0
  1071 00000569 8946FC                  	mov	[bp-4], ax
  1072 0000056C 660FB7C0                	movzx	eax, ax
  1073                                  ; while
  1074                                  ; RPN'ized expression: "num 0 > "
  1075                                  ; Expanded expression: "(@8) *(4) 0 >u "
  1076                                  L105:
  1077                                  ; Fused expression:    ">u *(@8) 0 IF! "
  1078 00000570 668B4608                	mov	eax, [bp+8]
  1079 00000574 6683F800                	cmp	eax, 0
  1080 00000578 0F869900                	jbe	L106
  1081                                  ; {
  1082                                  ; loc             <something> : unsigned short
  1083                                  ; RPN'ized expression: "str 9 i - + *u dig num 10 % (something107) + *u = "
  1084                                  ; Expanded expression: "str 9 (@-4) *(2) - + dig (@8) *(4) 10 %u unsigned short + *(-1) =(-1) "
  1085                                  ; Fused expression:    "str push-ax - 9 *(@-4) + *sp ax push-ax dig push-ax %u *(@8) 10 unsigned short + *sp ax =(119) **sp *ax "
  1086                                  section .relod
  1087 00000014 [7E050000]              	dd	L108
  1088                                  section .text
  1089 0000057C 66B8                    	db	0x66, 0xB8
  1090                                  L108:
  1091 0000057E [00000000]              	dd	_str
  1092 00000582 6650                    	push	eax
  1093 00000584 66B809000000            	mov	eax, 9
  1094 0000058A 660FB74EFC              	movzx	ecx, word [bp-4]
  1095 0000058F 6629C8                  	sub	eax, ecx
  1096 00000592 6689C1                  	mov	ecx, eax
  1097 00000595 6658                    	pop	eax
  1098 00000597 6601C8                  	add	eax, ecx
  1099 0000059A 6650                    	push	eax
  1100                                  section .relod
  1101 00000018 [9E050000]              	dd	L109
  1102                                  section .text
  1103 0000059C 66B8                    	db	0x66, 0xB8
  1104                                  L109:
  1105 0000059E [00000000]              	dd	_dig
  1106 000005A2 6650                    	push	eax
  1107 000005A4 668B4608                	mov	eax, [bp+8]
  1108 000005A8 66BA00000000            	mov	edx, 0
  1109 000005AE 66B90A000000            	mov	ecx, 10
  1110 000005B4 66F7F1                  	div	ecx
  1111 000005B7 6689D0                  	mov	eax, edx
  1112 000005BA 660FB7C0                	movzx	eax, ax
  1113 000005BE 6689C1                  	mov	ecx, eax
  1114 000005C1 6658                    	pop	eax
  1115 000005C3 6601C8                  	add	eax, ecx
  1116 000005C6 6689C3                  	mov	ebx, eax
  1117 000005C9 6689DE                  	mov	esi, ebx
  1118 000005CC 66C1CE04                	ror	esi, 4
  1119 000005D0 8EDE                    	mov	ds, si
  1120 000005D2 66C1EE1C                	shr	esi, 28
  1121 000005D6 8A04                    	mov	al, [si]
  1122 000005D8 660FBEC0                	movsx	eax, al
  1123 000005DC 665B                    	pop	ebx
  1124 000005DE 6689DE                  	mov	esi, ebx
  1125 000005E1 66C1CE04                	ror	esi, 4
  1126 000005E5 8EDE                    	mov	ds, si
  1127 000005E7 66C1EE1C                	shr	esi, 28
  1128 000005EB 8804                    	mov	[si], al
  1129 000005ED 660FBEC0                	movsx	eax, al
  1130                                  ; RPN'ized expression: "num num 10 / = "
  1131                                  ; Expanded expression: "(@8) (@8) *(4) 10 /u =(4) "
  1132                                  ; Fused expression:    "/u *(@8) 10 =(204) *(@8) ax "
  1133 000005F1 668B4608                	mov	eax, [bp+8]
  1134 000005F5 66BA00000000            	mov	edx, 0
  1135 000005FB 66B90A000000            	mov	ecx, 10
  1136 00000601 66F7F1                  	div	ecx
  1137 00000604 66894608                	mov	[bp+8], eax
  1138                                  ; RPN'ized expression: "i ++p "
  1139                                  ; Expanded expression: "(@-4) ++p(2) "
  1140                                  ; Fused expression:    "++p(2) *(@-4) "
  1141 00000608 8B46FC                  	mov	ax, [bp-4]
  1142 0000060B 660FB7C0                	movzx	eax, ax
  1143 0000060F FF46FC                  	inc	word [bp-4]
  1144                                  ; }
  1145 00000612 E95BFF                  	jmp	L105
  1146                                  L106:
  1147                                  ; for
  1148                                  ; RPN'ized expression: "j i = "
  1149                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
  1150                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
  1151 00000615 8B46FC                  	mov	ax, [bp-4]
  1152 00000618 660FB7C0                	movzx	eax, ax
  1153 0000061C 8946F8                  	mov	[bp-8], ax
  1154 0000061F 660FB7C0                	movzx	eax, ax
  1155                                  L110:
  1156                                  ; RPN'ized expression: "j l < "
  1157                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
  1158                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
  1159 00000623 8B46F8                  	mov	ax, [bp-8]
  1160 00000626 660FB7C0                	movzx	eax, ax
  1161 0000062A 660FB74E0C              	movzx	ecx, word [bp+12]
  1162 0000062F 6639C8                  	cmp	eax, ecx
  1163 00000632 7D2B                    	jge	L113
  1164                                  ; RPN'ized expression: "j ++p "
  1165                                  ; Expanded expression: "(@-8) ++p(2) "
  1166                                  ; RPN'ized expression: "( 32 p ) "
  1167                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  1168                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  1169 00000634 666A20                  	push	dword 32
  1170 00000637 668B4610                	mov	eax, [bp+16]
  1171 0000063B 9A                      	db	0x9A
  1172                                  section .relot
  1173 00000034 [3C060000]              	dd	L114
  1174                                  section .text
  1175                                  L114:
  1176 0000063C [40060000]              	dd	L115
  1177                                  L115:
  1178 00000640 89E6                    	mov	si, sp
  1179 00000642 36830410                	add	word [ss:si], L116 - L115
  1180 00000646 66C1E00C                	shl	eax, 12
  1181 0000064A C1C004                  	rol	ax, 4
  1182 0000064D 6650                    	push	eax
  1183 0000064F CB                      	retf
  1184                                  L116:
  1185 00000650 83ECFC                  	sub	sp, -4
  1186                                  L111:
  1187                                  ; Fused expression:    "++p(2) *(@-8) "
  1188 00000653 8B46F8                  	mov	ax, [bp-8]
  1189 00000656 660FB7C0                	movzx	eax, ax
  1190 0000065A FF46F8                  	inc	word [bp-8]
  1191 0000065D EBC4                    	jmp	L110
  1192                                  L113:
  1193                                  ; loc         <something> : * char
  1194                                  ; RPN'ized expression: "ptr str 9 i - 1 + + *u &u (something117) = "
  1195                                  ; Expanded expression: "(@-16) str 9 (@-4) *(2) - 1 + + =(4) "
  1196                                  ; Fused expression:    "str push-ax - 9 *(@-4) + ax 1 + *sp ax =(204) *(@-16) ax "
  1197                                  section .relod
  1198 0000001C [61060000]              	dd	L118
  1199                                  section .text
  1200 0000065F 66B8                    	db	0x66, 0xB8
  1201                                  L118:
  1202 00000661 [00000000]              	dd	_str
  1203 00000665 6650                    	push	eax
  1204 00000667 66B809000000            	mov	eax, 9
  1205 0000066D 660FB74EFC              	movzx	ecx, word [bp-4]
  1206 00000672 6629C8                  	sub	eax, ecx
  1207 00000675 6640                    	inc	eax
  1208 00000677 6689C1                  	mov	ecx, eax
  1209 0000067A 6658                    	pop	eax
  1210 0000067C 6601C8                  	add	eax, ecx
  1211 0000067F 668946F0                	mov	[bp-16], eax
  1212                                  ; while
  1213                                  ; loc         <something> : char
  1214                                  ; RPN'ized expression: "ptr *u 0 (something121) != "
  1215                                  ; Expanded expression: "(@-16) *(4) *(-1) 0 != "
  1216                                  L119:
  1217                                  ; Fused expression:    "*(4) (@-16) != *ax 0 IF! "
  1218 00000683 668B46F0                	mov	eax, [bp-16]
  1219 00000687 6689C3                  	mov	ebx, eax
  1220 0000068A 6689DE                  	mov	esi, ebx
  1221 0000068D 66C1CE04                	ror	esi, 4
  1222 00000691 8EDE                    	mov	ds, si
  1223 00000693 66C1EE1C                	shr	esi, 28
  1224 00000697 8A04                    	mov	al, [si]
  1225 00000699 660FBEC0                	movsx	eax, al
  1226 0000069D 6683F800                	cmp	eax, 0
  1227 000006A1 744A                    	je	L120
  1228                                  ; {
  1229                                  ; RPN'ized expression: "( ptr *u p ) "
  1230                                  ; Expanded expression: " (@-16) *(4) *(-1)  (@16) *(4) ()4 "
  1231                                  ; Fused expression:    "( *(4) (@-16) *(-1) ax , *(4) (@16) )4 "
  1232 000006A3 668B46F0                	mov	eax, [bp-16]
  1233 000006A7 6689C3                  	mov	ebx, eax
  1234 000006AA 6689DE                  	mov	esi, ebx
  1235 000006AD 66C1CE04                	ror	esi, 4
  1236 000006B1 8EDE                    	mov	ds, si
  1237 000006B3 66C1EE1C                	shr	esi, 28
  1238 000006B7 8A04                    	mov	al, [si]
  1239 000006B9 660FBEC0                	movsx	eax, al
  1240 000006BD 6650                    	push	eax
  1241 000006BF 668B4610                	mov	eax, [bp+16]
  1242 000006C3 9A                      	db	0x9A
  1243                                  section .relot
  1244 00000038 [C4060000]              	dd	L122
  1245                                  section .text
  1246                                  L122:
  1247 000006C4 [C8060000]              	dd	L123
  1248                                  L123:
  1249 000006C8 89E6                    	mov	si, sp
  1250 000006CA 36830410                	add	word [ss:si], L124 - L123
  1251 000006CE 66C1E00C                	shl	eax, 12
  1252 000006D2 C1C004                  	rol	ax, 4
  1253 000006D5 6650                    	push	eax
  1254 000006D7 CB                      	retf
  1255                                  L124:
  1256 000006D8 83ECFC                  	sub	sp, -4
  1257                                  ; RPN'ized expression: "ptr ++p "
  1258                                  ; Expanded expression: "(@-16) ++p(4) "
  1259                                  ; Fused expression:    "++p(4) *(@-16) "
  1260 000006DB 668B46F0                	mov	eax, [bp-16]
  1261 000006DF 66FF46F0                	inc	dword [bp-16]
  1262                                  ; RPN'ized expression: "cont ++p "
  1263                                  ; Expanded expression: "(@-12) ++p(4) "
  1264                                  ; Fused expression:    "++p(4) *(@-12) "
  1265 000006E3 668B46F4                	mov	eax, [bp-12]
  1266 000006E7 66FF46F4                	inc	dword [bp-12]
  1267                                  ; }
  1268 000006EB EB96                    	jmp	L119
  1269                                  L120:
  1270                                  ; return
  1271                                  ; RPN'ized expression: "l cont + "
  1272                                  ; Expanded expression: "(@12) *(2) (@-12) *(4) + "
  1273                                  ; Fused expression:    "+ *(@12) *(@-12)  "
  1274 000006ED 8B460C                  	mov	ax, [bp+12]
  1275 000006F0 660FB7C0                	movzx	eax, ax
  1276 000006F4 660346F4                	add	eax, [bp-12]
  1277 000006F8 EB00                    	jmp	L86
  1278                                  ; }
  1279                                  L86:
  1280 000006FA 66                      	db	0x66
  1281 000006FB C9                      	leave
  1282 000006FC CB                      	retf
  1283                                  L125:
  1284                                  
  1285                                  section .fxnsz
  1286 00000010 78020000                	dd	L125 - _printGenLDec
  1287                                  
  1288                                  ; glb printGenInt : (
  1289                                  ; prm     num : short
  1290                                  ; prm     l : unsigned short
  1291                                  ; prm     p : * (
  1292                                  ; prm         car : char
  1293                                  ;         ) int
  1294                                  ;     ) int
  1295                                  section .text
  1296                                  	global	_printGenInt
  1297                                  _printGenInt:
  1298 000006FD 6655                    	push	ebp
  1299 000006FF 660FB7EC                	movzx	ebp, sp
  1300 00000703 83EC10                  	 sub	sp,         16
  1301                                  ; loc     num : (@8): short
  1302                                  ; loc     l : (@12): unsigned short
  1303                                  ; loc     p : (@16): * (
  1304                                  ; prm         car : char
  1305                                  ;         ) int
  1306                                  ; {
  1307                                  ; loc         i : (@-4): unsigned short
  1308                                  ; loc         j : (@-8): unsigned short
  1309                                  ; loc         ptr : (@-12): * char
  1310                                  ; loc         negativo : (@-16): int
  1311                                  ; loc         <something> : int
  1312                                  ; RPN'ized expression: "negativo num 0 < (something128) = "
  1313                                  ; Expanded expression: "(@-16) (@8) *(-2) 0 < =(4) "
  1314                                  ; Fused expression:    "< *(@8) 0 =(204) *(@-16) ax "
  1315 00000706 8B4608                  	mov	ax, [bp+8]
  1316 00000709 660FBFC0                	movsx	eax, ax
  1317 0000070D 6683F800                	cmp	eax, 0
  1318 00000711 0F9CC0                  	setl	al
  1319 00000714 660FB6C0                	movzx	eax, al
  1320 00000718 668946F0                	mov	[bp-16], eax
  1321                                  ; if
  1322                                  ; RPN'ized expression: "l 0 == "
  1323                                  ; Expanded expression: "(@12) *(2) 0 == "
  1324                                  ; Fused expression:    "== *(@12) 0 IF! "
  1325 0000071C 8B460C                  	mov	ax, [bp+12]
  1326 0000071F 660FB7C0                	movzx	eax, ax
  1327 00000723 6683F800                	cmp	eax, 0
  1328 00000727 750D                    	jne	L129
  1329                                  ; RPN'ized expression: "l 1 = "
  1330                                  ; Expanded expression: "(@12) 1 =(2) "
  1331                                  ; Fused expression:    "=(172) *(@12) 1 "
  1332 00000729 66B801000000            	mov	eax, 1
  1333 0000072F 89460C                  	mov	[bp+12], ax
  1334 00000732 660FB7C0                	movzx	eax, ax
  1335                                  L129:
  1336                                  ; if
  1337                                  ; RPN'ized expression: "num 0 == "
  1338                                  ; Expanded expression: "(@8) *(-2) 0 == "
  1339                                  ; Fused expression:    "== *(@8) 0 IF! "
  1340 00000736 8B4608                  	mov	ax, [bp+8]
  1341 00000739 660FBFC0                	movsx	eax, ax
  1342 0000073D 6683F800                	cmp	eax, 0
  1343 00000741 7578                    	jne	L131
  1344                                  ; {
  1345                                  ; for
  1346                                  ; RPN'ized expression: "i 0 = "
  1347                                  ; Expanded expression: "(@-4) 0 =(2) "
  1348                                  ; Fused expression:    "=(172) *(@-4) 0 "
  1349 00000743 66B800000000            	mov	eax, 0
  1350 00000749 8946FC                  	mov	[bp-4], ax
  1351 0000074C 660FB7C0                	movzx	eax, ax
  1352                                  L133:
  1353                                  ; RPN'ized expression: "i l 1 - < "
  1354                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
  1355                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
  1356 00000750 8B460C                  	mov	ax, [bp+12]
  1357 00000753 660FB7C0                	movzx	eax, ax
  1358 00000757 6648                    	dec	eax
  1359 00000759 6689C1                  	mov	ecx, eax
  1360 0000075C 8B46FC                  	mov	ax, [bp-4]
  1361 0000075F 660FB7C0                	movzx	eax, ax
  1362 00000763 6639C8                  	cmp	eax, ecx
  1363 00000766 7D2B                    	jge	L136
  1364                                  ; RPN'ized expression: "i ++p "
  1365                                  ; Expanded expression: "(@-4) ++p(2) "
  1366                                  ; RPN'ized expression: "( 32 p ) "
  1367                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  1368                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  1369 00000768 666A20                  	push	dword 32
  1370 0000076B 668B4610                	mov	eax, [bp+16]
  1371 0000076F 9A                      	db	0x9A
  1372                                  section .relot
  1373 0000003C [70070000]              	dd	L137
  1374                                  section .text
  1375                                  L137:
  1376 00000770 [74070000]              	dd	L138
  1377                                  L138:
  1378 00000774 89E6                    	mov	si, sp
  1379 00000776 36830410                	add	word [ss:si], L139 - L138
  1380 0000077A 66C1E00C                	shl	eax, 12
  1381 0000077E C1C004                  	rol	ax, 4
  1382 00000781 6650                    	push	eax
  1383 00000783 CB                      	retf
  1384                                  L139:
  1385 00000784 83ECFC                  	sub	sp, -4
  1386                                  L134:
  1387                                  ; Fused expression:    "++p(2) *(@-4) "
  1388 00000787 8B46FC                  	mov	ax, [bp-4]
  1389 0000078A 660FB7C0                	movzx	eax, ax
  1390 0000078E FF46FC                  	inc	word [bp-4]
  1391 00000791 EBBD                    	jmp	L133
  1392                                  L136:
  1393                                  ; RPN'ized expression: "( 48 p ) "
  1394                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  1395                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  1396 00000793 666A30                  	push	dword 48
  1397 00000796 668B4610                	mov	eax, [bp+16]
  1398 0000079A 9A                      	db	0x9A
  1399                                  section .relot
  1400 00000040 [9B070000]              	dd	L140
  1401                                  section .text
  1402                                  L140:
  1403 0000079B [9F070000]              	dd	L141
  1404                                  L141:
  1405 0000079F 89E6                    	mov	si, sp
  1406 000007A1 36830410                	add	word [ss:si], L142 - L141
  1407 000007A5 66C1E00C                	shl	eax, 12
  1408 000007A9 C1C004                  	rol	ax, 4
  1409 000007AC 6650                    	push	eax
  1410 000007AE CB                      	retf
  1411                                  L142:
  1412 000007AF 83ECFC                  	sub	sp, -4
  1413                                  ; return
  1414                                  ; RPN'ized expression: "0 "
  1415                                  ; Expanded expression: "0 "
  1416                                  ; Expression value: 0
  1417                                  ; Fused expression:    "0  "
  1418 000007B2 66B800000000            	mov	eax, 0
  1419 000007B8 E95502                  	jmp	L126
  1420                                  ; }
  1421                                  L131:
  1422                                  ; if
  1423                                  ; RPN'ized expression: "num 0 < "
  1424                                  ; Expanded expression: "(@8) *(-2) 0 < "
  1425                                  ; Fused expression:    "< *(@8) 0 IF! "
  1426 000007BB 8B4608                  	mov	ax, [bp+8]
  1427 000007BE 660FBFC0                	movsx	eax, ax
  1428 000007C2 6683F800                	cmp	eax, 0
  1429 000007C6 7D11                    	jge	L143
  1430                                  ; RPN'ized expression: "num num -u = "
  1431                                  ; Expanded expression: "(@8) (@8) *(-2) -u =(-2) "
  1432                                  ; Fused expression:    "*(-2) (@8) -u =(108) *(@8) ax "
  1433 000007C8 8B4608                  	mov	ax, [bp+8]
  1434 000007CB 660FBFC0                	movsx	eax, ax
  1435 000007CF 66F7D8                  	neg	eax
  1436 000007D2 894608                  	mov	[bp+8], ax
  1437 000007D5 660FBFC0                	movsx	eax, ax
  1438                                  L143:
  1439                                  ; loc         <something> : * char
  1440                                  ; RPN'ized expression: "ptr str 5 + *u &u (something145) = "
  1441                                  ; Expanded expression: "(@-12) str 5 + =(4) "
  1442                                  ; Fused expression:    "str + ax 5 =(204) *(@-12) ax "
  1443                                  section .relod
  1444 00000020 [DB070000]              	dd	L146
  1445                                  section .text
  1446 000007D9 66B8                    	db	0x66, 0xB8
  1447                                  L146:
  1448 000007DB [00000000]              	dd	_str
  1449 000007DF 6683C005                	add	eax, 5
  1450 000007E3 668946F4                	mov	[bp-12], eax
  1451                                  ; loc         <something> : char
  1452                                  ; RPN'ized expression: "ptr *u 0 (something147) = "
  1453                                  ; Expanded expression: "(@-12) *(4) 0 =(-1) "
  1454                                  ; Fused expression:    "*(4) (@-12) =(124) *ax 0 "
  1455 000007E7 668B46F4                	mov	eax, [bp-12]
  1456 000007EB 6689C3                  	mov	ebx, eax
  1457 000007EE 66B800000000            	mov	eax, 0
  1458 000007F4 6689DE                  	mov	esi, ebx
  1459 000007F7 66C1CE04                	ror	esi, 4
  1460 000007FB 8EDE                    	mov	ds, si
  1461 000007FD 66C1EE1C                	shr	esi, 28
  1462 00000801 8804                    	mov	[si], al
  1463 00000803 660FBEC0                	movsx	eax, al
  1464                                  ; RPN'ized expression: "i 0 = "
  1465                                  ; Expanded expression: "(@-4) 0 =(2) "
  1466                                  ; Fused expression:    "=(172) *(@-4) 0 "
  1467 00000807 66B800000000            	mov	eax, 0
  1468 0000080D 8946FC                  	mov	[bp-4], ax
  1469 00000810 660FB7C0                	movzx	eax, ax
  1470                                  ; while
  1471                                  ; RPN'ized expression: "num 0 > "
  1472                                  ; Expanded expression: "(@8) *(-2) 0 > "
  1473                                  L148:
  1474                                  ; Fused expression:    "> *(@8) 0 IF! "
  1475 00000814 8B4608                  	mov	ax, [bp+8]
  1476 00000817 660FBFC0                	movsx	eax, ax
  1477 0000081B 6683F800                	cmp	eax, 0
  1478 0000081F 0F8E9A00                	jle	L149
  1479                                  ; {
  1480                                  ; loc             <something> : unsigned short
  1481                                  ; RPN'ized expression: "str 4 i - + *u dig num 10 % (something150) + *u = "
  1482                                  ; Expanded expression: "str 4 (@-4) *(2) - + dig (@8) *(-2) 10 % unsigned short + *(-1) =(-1) "
  1483                                  ; Fused expression:    "str push-ax - 4 *(@-4) + *sp ax push-ax dig push-ax % *(@8) 10 unsigned short + *sp ax =(119) **sp *ax "
  1484                                  section .relod
  1485 00000024 [25080000]              	dd	L151
  1486                                  section .text
  1487 00000823 66B8                    	db	0x66, 0xB8
  1488                                  L151:
  1489 00000825 [00000000]              	dd	_str
  1490 00000829 6650                    	push	eax
  1491 0000082B 66B804000000            	mov	eax, 4
  1492 00000831 660FB74EFC              	movzx	ecx, word [bp-4]
  1493 00000836 6629C8                  	sub	eax, ecx
  1494 00000839 6689C1                  	mov	ecx, eax
  1495 0000083C 6658                    	pop	eax
  1496 0000083E 6601C8                  	add	eax, ecx
  1497 00000841 6650                    	push	eax
  1498                                  section .relod
  1499 00000028 [45080000]              	dd	L152
  1500                                  section .text
  1501 00000843 66B8                    	db	0x66, 0xB8
  1502                                  L152:
  1503 00000845 [00000000]              	dd	_dig
  1504 00000849 6650                    	push	eax
  1505 0000084B 8B4608                  	mov	ax, [bp+8]
  1506 0000084E 660FBFC0                	movsx	eax, ax
  1507 00000852 6699                    	cdq
  1508 00000854 66B90A000000            	mov	ecx, 10
  1509 0000085A 66F7F9                  	idiv	ecx
  1510 0000085D 6689D0                  	mov	eax, edx
  1511 00000860 660FB7C0                	movzx	eax, ax
  1512 00000864 6689C1                  	mov	ecx, eax
  1513 00000867 6658                    	pop	eax
  1514 00000869 6601C8                  	add	eax, ecx
  1515 0000086C 6689C3                  	mov	ebx, eax
  1516 0000086F 6689DE                  	mov	esi, ebx
  1517 00000872 66C1CE04                	ror	esi, 4
  1518 00000876 8EDE                    	mov	ds, si
  1519 00000878 66C1EE1C                	shr	esi, 28
  1520 0000087C 8A04                    	mov	al, [si]
  1521 0000087E 660FBEC0                	movsx	eax, al
  1522 00000882 665B                    	pop	ebx
  1523 00000884 6689DE                  	mov	esi, ebx
  1524 00000887 66C1CE04                	ror	esi, 4
  1525 0000088B 8EDE                    	mov	ds, si
  1526 0000088D 66C1EE1C                	shr	esi, 28
  1527 00000891 8804                    	mov	[si], al
  1528 00000893 660FBEC0                	movsx	eax, al
  1529                                  ; RPN'ized expression: "num num 10 / = "
  1530                                  ; Expanded expression: "(@8) (@8) *(-2) 10 / =(-2) "
  1531                                  ; Fused expression:    "/ *(@8) 10 =(108) *(@8) ax "
  1532 00000897 8B4608                  	mov	ax, [bp+8]
  1533 0000089A 660FBFC0                	movsx	eax, ax
  1534 0000089E 6699                    	cdq
  1535 000008A0 66B90A000000            	mov	ecx, 10
  1536 000008A6 66F7F9                  	idiv	ecx
  1537 000008A9 894608                  	mov	[bp+8], ax
  1538 000008AC 660FBFC0                	movsx	eax, ax
  1539                                  ; RPN'ized expression: "i ++p "
  1540                                  ; Expanded expression: "(@-4) ++p(2) "
  1541                                  ; Fused expression:    "++p(2) *(@-4) "
  1542 000008B0 8B46FC                  	mov	ax, [bp-4]
  1543 000008B3 660FB7C0                	movzx	eax, ax
  1544 000008B7 FF46FC                  	inc	word [bp-4]
  1545                                  ; }
  1546 000008BA E957FF                  	jmp	L148
  1547                                  L149:
  1548                                  ; if
  1549                                  ; RPN'ized expression: "negativo "
  1550                                  ; Expanded expression: "(@-16) *(4) "
  1551                                  ; Fused expression:    "*(4) (@-16)  "
  1552 000008BD 668B46F0                	mov	eax, [bp-16]
  1553                                  ; JumpIfZero
  1554 000008C1 6685C0                  	test	eax, eax
  1555 000008C4 7472                    	je	L153
  1556                                  ; {
  1557                                  ; for
  1558                                  ; RPN'ized expression: "j i = "
  1559                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
  1560                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
  1561 000008C6 8B46FC                  	mov	ax, [bp-4]
  1562 000008C9 660FB7C0                	movzx	eax, ax
  1563 000008CD 8946F8                  	mov	[bp-8], ax
  1564 000008D0 660FB7C0                	movzx	eax, ax
  1565                                  L155:
  1566                                  ; RPN'ized expression: "j l 1 - < "
  1567                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) 1 - < "
  1568                                  ; Fused expression:    "- *(@12) 1 < *(@-8) ax IF! "
  1569 000008D4 8B460C                  	mov	ax, [bp+12]
  1570 000008D7 660FB7C0                	movzx	eax, ax
  1571 000008DB 6648                    	dec	eax
  1572 000008DD 6689C1                  	mov	ecx, eax
  1573 000008E0 8B46F8                  	mov	ax, [bp-8]
  1574 000008E3 660FB7C0                	movzx	eax, ax
  1575 000008E7 6639C8                  	cmp	eax, ecx
  1576 000008EA 7D2B                    	jge	L158
  1577                                  ; RPN'ized expression: "j ++p "
  1578                                  ; Expanded expression: "(@-8) ++p(2) "
  1579                                  ; RPN'ized expression: "( 32 p ) "
  1580                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  1581                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  1582 000008EC 666A20                  	push	dword 32
  1583 000008EF 668B4610                	mov	eax, [bp+16]
  1584 000008F3 9A                      	db	0x9A
  1585                                  section .relot
  1586 00000044 [F4080000]              	dd	L159
  1587                                  section .text
  1588                                  L159:
  1589 000008F4 [F8080000]              	dd	L160
  1590                                  L160:
  1591 000008F8 89E6                    	mov	si, sp
  1592 000008FA 36830410                	add	word [ss:si], L161 - L160
  1593 000008FE 66C1E00C                	shl	eax, 12
  1594 00000902 C1C004                  	rol	ax, 4
  1595 00000905 6650                    	push	eax
  1596 00000907 CB                      	retf
  1597                                  L161:
  1598 00000908 83ECFC                  	sub	sp, -4
  1599                                  L156:
  1600                                  ; Fused expression:    "++p(2) *(@-8) "
  1601 0000090B 8B46F8                  	mov	ax, [bp-8]
  1602 0000090E 660FB7C0                	movzx	eax, ax
  1603 00000912 FF46F8                  	inc	word [bp-8]
  1604 00000915 EBBD                    	jmp	L155
  1605                                  L158:
  1606                                  ; RPN'ized expression: "( 45 p ) "
  1607                                  ; Expanded expression: " 45  (@16) *(4) ()4 "
  1608                                  ; Fused expression:    "( 45 , *(4) (@16) )4 "
  1609 00000917 666A2D                  	push	dword 45
  1610 0000091A 668B4610                	mov	eax, [bp+16]
  1611 0000091E 9A                      	db	0x9A
  1612                                  section .relot
  1613 00000048 [1F090000]              	dd	L162
  1614                                  section .text
  1615                                  L162:
  1616 0000091F [23090000]              	dd	L163
  1617                                  L163:
  1618 00000923 89E6                    	mov	si, sp
  1619 00000925 36830410                	add	word [ss:si], L164 - L163
  1620 00000929 66C1E00C                	shl	eax, 12
  1621 0000092D C1C004                  	rol	ax, 4
  1622 00000930 6650                    	push	eax
  1623 00000932 CB                      	retf
  1624                                  L164:
  1625 00000933 83ECFC                  	sub	sp, -4
  1626                                  ; }
  1627 00000936 EB4A                    	jmp	L154
  1628                                  L153:
  1629                                  ; else
  1630                                  ; for
  1631                                  ; RPN'ized expression: "j i = "
  1632                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
  1633                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
  1634 00000938 8B46FC                  	mov	ax, [bp-4]
  1635 0000093B 660FB7C0                	movzx	eax, ax
  1636 0000093F 8946F8                  	mov	[bp-8], ax
  1637 00000942 660FB7C0                	movzx	eax, ax
  1638                                  L165:
  1639                                  ; RPN'ized expression: "j l < "
  1640                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
  1641                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
  1642 00000946 8B46F8                  	mov	ax, [bp-8]
  1643 00000949 660FB7C0                	movzx	eax, ax
  1644 0000094D 660FB74E0C              	movzx	ecx, word [bp+12]
  1645 00000952 6639C8                  	cmp	eax, ecx
  1646 00000955 7D2B                    	jge	L168
  1647                                  ; RPN'ized expression: "j ++p "
  1648                                  ; Expanded expression: "(@-8) ++p(2) "
  1649                                  ; RPN'ized expression: "( 32 p ) "
  1650                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  1651                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  1652 00000957 666A20                  	push	dword 32
  1653 0000095A 668B4610                	mov	eax, [bp+16]
  1654 0000095E 9A                      	db	0x9A
  1655                                  section .relot
  1656 0000004C [5F090000]              	dd	L169
  1657                                  section .text
  1658                                  L169:
  1659 0000095F [63090000]              	dd	L170
  1660                                  L170:
  1661 00000963 89E6                    	mov	si, sp
  1662 00000965 36830410                	add	word [ss:si], L171 - L170
  1663 00000969 66C1E00C                	shl	eax, 12
  1664 0000096D C1C004                  	rol	ax, 4
  1665 00000970 6650                    	push	eax
  1666 00000972 CB                      	retf
  1667                                  L171:
  1668 00000973 83ECFC                  	sub	sp, -4
  1669                                  L166:
  1670                                  ; Fused expression:    "++p(2) *(@-8) "
  1671 00000976 8B46F8                  	mov	ax, [bp-8]
  1672 00000979 660FB7C0                	movzx	eax, ax
  1673 0000097D FF46F8                  	inc	word [bp-8]
  1674 00000980 EBC4                    	jmp	L165
  1675                                  L168:
  1676                                  L154:
  1677                                  ; loc         <something> : * char
  1678                                  ; RPN'ized expression: "ptr str 4 i - 1 + + *u &u (something172) = "
  1679                                  ; Expanded expression: "(@-12) str 4 (@-4) *(2) - 1 + + =(4) "
  1680                                  ; Fused expression:    "str push-ax - 4 *(@-4) + ax 1 + *sp ax =(204) *(@-12) ax "
  1681                                  section .relod
  1682 0000002C [84090000]              	dd	L173
  1683                                  section .text
  1684 00000982 66B8                    	db	0x66, 0xB8
  1685                                  L173:
  1686 00000984 [00000000]              	dd	_str
  1687 00000988 6650                    	push	eax
  1688 0000098A 66B804000000            	mov	eax, 4
  1689 00000990 660FB74EFC              	movzx	ecx, word [bp-4]
  1690 00000995 6629C8                  	sub	eax, ecx
  1691 00000998 6640                    	inc	eax
  1692 0000099A 6689C1                  	mov	ecx, eax
  1693 0000099D 6658                    	pop	eax
  1694 0000099F 6601C8                  	add	eax, ecx
  1695 000009A2 668946F4                	mov	[bp-12], eax
  1696                                  ; while
  1697                                  ; loc         <something> : char
  1698                                  ; RPN'ized expression: "ptr *u 0 (something176) != "
  1699                                  ; Expanded expression: "(@-12) *(4) *(-1) 0 != "
  1700                                  L174:
  1701                                  ; Fused expression:    "*(4) (@-12) != *ax 0 IF! "
  1702 000009A6 668B46F4                	mov	eax, [bp-12]
  1703 000009AA 6689C3                  	mov	ebx, eax
  1704 000009AD 6689DE                  	mov	esi, ebx
  1705 000009B0 66C1CE04                	ror	esi, 4
  1706 000009B4 8EDE                    	mov	ds, si
  1707 000009B6 66C1EE1C                	shr	esi, 28
  1708 000009BA 8A04                    	mov	al, [si]
  1709 000009BC 660FBEC0                	movsx	eax, al
  1710 000009C0 6683F800                	cmp	eax, 0
  1711 000009C4 7442                    	je	L175
  1712                                  ; {
  1713                                  ; RPN'ized expression: "( ptr *u p ) "
  1714                                  ; Expanded expression: " (@-12) *(4) *(-1)  (@16) *(4) ()4 "
  1715                                  ; Fused expression:    "( *(4) (@-12) *(-1) ax , *(4) (@16) )4 "
  1716 000009C6 668B46F4                	mov	eax, [bp-12]
  1717 000009CA 6689C3                  	mov	ebx, eax
  1718 000009CD 6689DE                  	mov	esi, ebx
  1719 000009D0 66C1CE04                	ror	esi, 4
  1720 000009D4 8EDE                    	mov	ds, si
  1721 000009D6 66C1EE1C                	shr	esi, 28
  1722 000009DA 8A04                    	mov	al, [si]
  1723 000009DC 660FBEC0                	movsx	eax, al
  1724 000009E0 6650                    	push	eax
  1725 000009E2 668B4610                	mov	eax, [bp+16]
  1726 000009E6 9A                      	db	0x9A
  1727                                  section .relot
  1728 00000050 [E7090000]              	dd	L177
  1729                                  section .text
  1730                                  L177:
  1731 000009E7 [EB090000]              	dd	L178
  1732                                  L178:
  1733 000009EB 89E6                    	mov	si, sp
  1734 000009ED 36830410                	add	word [ss:si], L179 - L178
  1735 000009F1 66C1E00C                	shl	eax, 12
  1736 000009F5 C1C004                  	rol	ax, 4
  1737 000009F8 6650                    	push	eax
  1738 000009FA CB                      	retf
  1739                                  L179:
  1740 000009FB 83ECFC                  	sub	sp, -4
  1741                                  ; RPN'ized expression: "ptr ++p "
  1742                                  ; Expanded expression: "(@-12) ++p(4) "
  1743                                  ; Fused expression:    "++p(4) *(@-12) "
  1744 000009FE 668B46F4                	mov	eax, [bp-12]
  1745 00000A02 66FF46F4                	inc	dword [bp-12]
  1746                                  ; }
  1747 00000A06 EB9E                    	jmp	L174
  1748                                  L175:
  1749                                  ; return
  1750                                  ; RPN'ized expression: "0 "
  1751                                  ; Expanded expression: "0 "
  1752                                  ; Expression value: 0
  1753                                  ; Fused expression:    "0  "
  1754 00000A08 66B800000000            	mov	eax, 0
  1755 00000A0E EB00                    	jmp	L126
  1756                                  ; }
  1757                                  L126:
  1758 00000A10 66                      	db	0x66
  1759 00000A11 C9                      	leave
  1760 00000A12 CB                      	retf
  1761                                  L180:
  1762                                  
  1763                                  section .fxnsz
  1764 00000014 16030000                	dd	L180 - _printGenInt
  1765                                  
  1766                                  ; glb printGenLInt : (
  1767                                  ; prm     num : int
  1768                                  ; prm     l : unsigned short
  1769                                  ; prm     p : * (
  1770                                  ; prm         car : char
  1771                                  ;         ) int
  1772                                  ;     ) int
  1773                                  section .text
  1774                                  	global	_printGenLInt
  1775                                  _printGenLInt:
  1776 00000A13 6655                    	push	ebp
  1777 00000A15 660FB7EC                	movzx	ebp, sp
  1778 00000A19 83EC10                  	 sub	sp,         16
  1779                                  ; loc     num : (@8): int
  1780                                  ; loc     l : (@12): unsigned short
  1781                                  ; loc     p : (@16): * (
  1782                                  ; prm         car : char
  1783                                  ;         ) int
  1784                                  ; {
  1785                                  ; loc         i : (@-4): unsigned short
  1786                                  ; loc         j : (@-8): unsigned short
  1787                                  ; loc         ptr : (@-12): * char
  1788                                  ; loc         negativo : (@-16): int
  1789                                  ; loc         <something> : int
  1790                                  ; RPN'ized expression: "negativo num 0 < (something183) = "
  1791                                  ; Expanded expression: "(@-16) (@8) *(4) 0 < =(4) "
  1792                                  ; Fused expression:    "< *(@8) 0 =(204) *(@-16) ax "
  1793 00000A1C 668B4608                	mov	eax, [bp+8]
  1794 00000A20 6683F800                	cmp	eax, 0
  1795 00000A24 0F9CC0                  	setl	al
  1796 00000A27 660FB6C0                	movzx	eax, al
  1797 00000A2B 668946F0                	mov	[bp-16], eax
  1798                                  ; if
  1799                                  ; RPN'ized expression: "l 0 == "
  1800                                  ; Expanded expression: "(@12) *(2) 0 == "
  1801                                  ; Fused expression:    "== *(@12) 0 IF! "
  1802 00000A2F 8B460C                  	mov	ax, [bp+12]
  1803 00000A32 660FB7C0                	movzx	eax, ax
  1804 00000A36 6683F800                	cmp	eax, 0
  1805 00000A3A 750D                    	jne	L184
  1806                                  ; RPN'ized expression: "l 1 = "
  1807                                  ; Expanded expression: "(@12) 1 =(2) "
  1808                                  ; Fused expression:    "=(172) *(@12) 1 "
  1809 00000A3C 66B801000000            	mov	eax, 1
  1810 00000A42 89460C                  	mov	[bp+12], ax
  1811 00000A45 660FB7C0                	movzx	eax, ax
  1812                                  L184:
  1813                                  ; if
  1814                                  ; RPN'ized expression: "num 0 == "
  1815                                  ; Expanded expression: "(@8) *(4) 0 == "
  1816                                  ; Fused expression:    "== *(@8) 0 IF! "
  1817 00000A49 668B4608                	mov	eax, [bp+8]
  1818 00000A4D 6683F800                	cmp	eax, 0
  1819 00000A51 7578                    	jne	L186
  1820                                  ; {
  1821                                  ; for
  1822                                  ; RPN'ized expression: "i 0 = "
  1823                                  ; Expanded expression: "(@-4) 0 =(2) "
  1824                                  ; Fused expression:    "=(172) *(@-4) 0 "
  1825 00000A53 66B800000000            	mov	eax, 0
  1826 00000A59 8946FC                  	mov	[bp-4], ax
  1827 00000A5C 660FB7C0                	movzx	eax, ax
  1828                                  L188:
  1829                                  ; RPN'ized expression: "i l 1 - < "
  1830                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
  1831                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
  1832 00000A60 8B460C                  	mov	ax, [bp+12]
  1833 00000A63 660FB7C0                	movzx	eax, ax
  1834 00000A67 6648                    	dec	eax
  1835 00000A69 6689C1                  	mov	ecx, eax
  1836 00000A6C 8B46FC                  	mov	ax, [bp-4]
  1837 00000A6F 660FB7C0                	movzx	eax, ax
  1838 00000A73 6639C8                  	cmp	eax, ecx
  1839 00000A76 7D2B                    	jge	L191
  1840                                  ; RPN'ized expression: "i ++p "
  1841                                  ; Expanded expression: "(@-4) ++p(2) "
  1842                                  ; RPN'ized expression: "( 32 p ) "
  1843                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  1844                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  1845 00000A78 666A20                  	push	dword 32
  1846 00000A7B 668B4610                	mov	eax, [bp+16]
  1847 00000A7F 9A                      	db	0x9A
  1848                                  section .relot
  1849 00000054 [800A0000]              	dd	L192
  1850                                  section .text
  1851                                  L192:
  1852 00000A80 [840A0000]              	dd	L193
  1853                                  L193:
  1854 00000A84 89E6                    	mov	si, sp
  1855 00000A86 36830410                	add	word [ss:si], L194 - L193
  1856 00000A8A 66C1E00C                	shl	eax, 12
  1857 00000A8E C1C004                  	rol	ax, 4
  1858 00000A91 6650                    	push	eax
  1859 00000A93 CB                      	retf
  1860                                  L194:
  1861 00000A94 83ECFC                  	sub	sp, -4
  1862                                  L189:
  1863                                  ; Fused expression:    "++p(2) *(@-4) "
  1864 00000A97 8B46FC                  	mov	ax, [bp-4]
  1865 00000A9A 660FB7C0                	movzx	eax, ax
  1866 00000A9E FF46FC                  	inc	word [bp-4]
  1867 00000AA1 EBBD                    	jmp	L188
  1868                                  L191:
  1869                                  ; RPN'ized expression: "( 48 p ) "
  1870                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  1871                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  1872 00000AA3 666A30                  	push	dword 48
  1873 00000AA6 668B4610                	mov	eax, [bp+16]
  1874 00000AAA 9A                      	db	0x9A
  1875                                  section .relot
  1876 00000058 [AB0A0000]              	dd	L195
  1877                                  section .text
  1878                                  L195:
  1879 00000AAB [AF0A0000]              	dd	L196
  1880                                  L196:
  1881 00000AAF 89E6                    	mov	si, sp
  1882 00000AB1 36830410                	add	word [ss:si], L197 - L196
  1883 00000AB5 66C1E00C                	shl	eax, 12
  1884 00000AB9 C1C004                  	rol	ax, 4
  1885 00000ABC 6650                    	push	eax
  1886 00000ABE CB                      	retf
  1887                                  L197:
  1888 00000ABF 83ECFC                  	sub	sp, -4
  1889                                  ; return
  1890                                  ; RPN'ized expression: "0 "
  1891                                  ; Expanded expression: "0 "
  1892                                  ; Expression value: 0
  1893                                  ; Fused expression:    "0  "
  1894 00000AC2 66B800000000            	mov	eax, 0
  1895 00000AC8 E94002                  	jmp	L181
  1896                                  ; }
  1897                                  L186:
  1898                                  ; if
  1899                                  ; RPN'ized expression: "num 0 < "
  1900                                  ; Expanded expression: "(@8) *(4) 0 < "
  1901                                  ; Fused expression:    "< *(@8) 0 IF! "
  1902 00000ACB 668B4608                	mov	eax, [bp+8]
  1903 00000ACF 6683F800                	cmp	eax, 0
  1904 00000AD3 7D0B                    	jge	L198
  1905                                  ; RPN'ized expression: "num num -u = "
  1906                                  ; Expanded expression: "(@8) (@8) *(4) -u =(4) "
  1907                                  ; Fused expression:    "*(4) (@8) -u =(204) *(@8) ax "
  1908 00000AD5 668B4608                	mov	eax, [bp+8]
  1909 00000AD9 66F7D8                  	neg	eax
  1910 00000ADC 66894608                	mov	[bp+8], eax
  1911                                  L198:
  1912                                  ; loc         <something> : * char
  1913                                  ; RPN'ized expression: "ptr str 10 + *u &u (something200) = "
  1914                                  ; Expanded expression: "(@-12) str 10 + =(4) "
  1915                                  ; Fused expression:    "str + ax 10 =(204) *(@-12) ax "
  1916                                  section .relod
  1917 00000030 [E20A0000]              	dd	L201
  1918                                  section .text
  1919 00000AE0 66B8                    	db	0x66, 0xB8
  1920                                  L201:
  1921 00000AE2 [00000000]              	dd	_str
  1922 00000AE6 6683C00A                	add	eax, 10
  1923 00000AEA 668946F4                	mov	[bp-12], eax
  1924                                  ; loc         <something> : char
  1925                                  ; RPN'ized expression: "ptr *u 0 (something202) = "
  1926                                  ; Expanded expression: "(@-12) *(4) 0 =(-1) "
  1927                                  ; Fused expression:    "*(4) (@-12) =(124) *ax 0 "
  1928 00000AEE 668B46F4                	mov	eax, [bp-12]
  1929 00000AF2 6689C3                  	mov	ebx, eax
  1930 00000AF5 66B800000000            	mov	eax, 0
  1931 00000AFB 6689DE                  	mov	esi, ebx
  1932 00000AFE 66C1CE04                	ror	esi, 4
  1933 00000B02 8EDE                    	mov	ds, si
  1934 00000B04 66C1EE1C                	shr	esi, 28
  1935 00000B08 8804                    	mov	[si], al
  1936 00000B0A 660FBEC0                	movsx	eax, al
  1937                                  ; RPN'ized expression: "i 0 = "
  1938                                  ; Expanded expression: "(@-4) 0 =(2) "
  1939                                  ; Fused expression:    "=(172) *(@-4) 0 "
  1940 00000B0E 66B800000000            	mov	eax, 0
  1941 00000B14 8946FC                  	mov	[bp-4], ax
  1942 00000B17 660FB7C0                	movzx	eax, ax
  1943                                  ; while
  1944                                  ; RPN'ized expression: "num 0 > "
  1945                                  ; Expanded expression: "(@8) *(4) 0 > "
  1946                                  L203:
  1947                                  ; Fused expression:    "> *(@8) 0 IF! "
  1948 00000B1B 668B4608                	mov	eax, [bp+8]
  1949 00000B1F 6683F800                	cmp	eax, 0
  1950 00000B23 0F8E9100                	jle	L204
  1951                                  ; {
  1952                                  ; loc             <something> : unsigned short
  1953                                  ; RPN'ized expression: "str 9 i - + *u dig num 10 % (something205) + *u = "
  1954                                  ; Expanded expression: "str 9 (@-4) *(2) - + dig (@8) *(4) 10 % unsigned short + *(-1) =(-1) "
  1955                                  ; Fused expression:    "str push-ax - 9 *(@-4) + *sp ax push-ax dig push-ax % *(@8) 10 unsigned short + *sp ax =(119) **sp *ax "
  1956                                  section .relod
  1957 00000034 [290B0000]              	dd	L206
  1958                                  section .text
  1959 00000B27 66B8                    	db	0x66, 0xB8
  1960                                  L206:
  1961 00000B29 [00000000]              	dd	_str
  1962 00000B2D 6650                    	push	eax
  1963 00000B2F 66B809000000            	mov	eax, 9
  1964 00000B35 660FB74EFC              	movzx	ecx, word [bp-4]
  1965 00000B3A 6629C8                  	sub	eax, ecx
  1966 00000B3D 6689C1                  	mov	ecx, eax
  1967 00000B40 6658                    	pop	eax
  1968 00000B42 6601C8                  	add	eax, ecx
  1969 00000B45 6650                    	push	eax
  1970                                  section .relod
  1971 00000038 [490B0000]              	dd	L207
  1972                                  section .text
  1973 00000B47 66B8                    	db	0x66, 0xB8
  1974                                  L207:
  1975 00000B49 [00000000]              	dd	_dig
  1976 00000B4D 6650                    	push	eax
  1977 00000B4F 668B4608                	mov	eax, [bp+8]
  1978 00000B53 6699                    	cdq
  1979 00000B55 66B90A000000            	mov	ecx, 10
  1980 00000B5B 66F7F9                  	idiv	ecx
  1981 00000B5E 6689D0                  	mov	eax, edx
  1982 00000B61 660FB7C0                	movzx	eax, ax
  1983 00000B65 6689C1                  	mov	ecx, eax
  1984 00000B68 6658                    	pop	eax
  1985 00000B6A 6601C8                  	add	eax, ecx
  1986 00000B6D 6689C3                  	mov	ebx, eax
  1987 00000B70 6689DE                  	mov	esi, ebx
  1988 00000B73 66C1CE04                	ror	esi, 4
  1989 00000B77 8EDE                    	mov	ds, si
  1990 00000B79 66C1EE1C                	shr	esi, 28
  1991 00000B7D 8A04                    	mov	al, [si]
  1992 00000B7F 660FBEC0                	movsx	eax, al
  1993 00000B83 665B                    	pop	ebx
  1994 00000B85 6689DE                  	mov	esi, ebx
  1995 00000B88 66C1CE04                	ror	esi, 4
  1996 00000B8C 8EDE                    	mov	ds, si
  1997 00000B8E 66C1EE1C                	shr	esi, 28
  1998 00000B92 8804                    	mov	[si], al
  1999 00000B94 660FBEC0                	movsx	eax, al
  2000                                  ; RPN'ized expression: "num num 10 / = "
  2001                                  ; Expanded expression: "(@8) (@8) *(4) 10 / =(4) "
  2002                                  ; Fused expression:    "/ *(@8) 10 =(204) *(@8) ax "
  2003 00000B98 668B4608                	mov	eax, [bp+8]
  2004 00000B9C 6699                    	cdq
  2005 00000B9E 66B90A000000            	mov	ecx, 10
  2006 00000BA4 66F7F9                  	idiv	ecx
  2007 00000BA7 66894608                	mov	[bp+8], eax
  2008                                  ; RPN'ized expression: "i ++p "
  2009                                  ; Expanded expression: "(@-4) ++p(2) "
  2010                                  ; Fused expression:    "++p(2) *(@-4) "
  2011 00000BAB 8B46FC                  	mov	ax, [bp-4]
  2012 00000BAE 660FB7C0                	movzx	eax, ax
  2013 00000BB2 FF46FC                  	inc	word [bp-4]
  2014                                  ; }
  2015 00000BB5 E963FF                  	jmp	L203
  2016                                  L204:
  2017                                  ; if
  2018                                  ; RPN'ized expression: "negativo "
  2019                                  ; Expanded expression: "(@-16) *(4) "
  2020                                  ; Fused expression:    "*(4) (@-16)  "
  2021 00000BB8 668B46F0                	mov	eax, [bp-16]
  2022                                  ; JumpIfZero
  2023 00000BBC 6685C0                  	test	eax, eax
  2024 00000BBF 7472                    	je	L208
  2025                                  ; {
  2026                                  ; for
  2027                                  ; RPN'ized expression: "j i = "
  2028                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
  2029                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
  2030 00000BC1 8B46FC                  	mov	ax, [bp-4]
  2031 00000BC4 660FB7C0                	movzx	eax, ax
  2032 00000BC8 8946F8                  	mov	[bp-8], ax
  2033 00000BCB 660FB7C0                	movzx	eax, ax
  2034                                  L210:
  2035                                  ; RPN'ized expression: "j l 1 - < "
  2036                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) 1 - < "
  2037                                  ; Fused expression:    "- *(@12) 1 < *(@-8) ax IF! "
  2038 00000BCF 8B460C                  	mov	ax, [bp+12]
  2039 00000BD2 660FB7C0                	movzx	eax, ax
  2040 00000BD6 6648                    	dec	eax
  2041 00000BD8 6689C1                  	mov	ecx, eax
  2042 00000BDB 8B46F8                  	mov	ax, [bp-8]
  2043 00000BDE 660FB7C0                	movzx	eax, ax
  2044 00000BE2 6639C8                  	cmp	eax, ecx
  2045 00000BE5 7D2B                    	jge	L213
  2046                                  ; RPN'ized expression: "j ++p "
  2047                                  ; Expanded expression: "(@-8) ++p(2) "
  2048                                  ; RPN'ized expression: "( 32 p ) "
  2049                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  2050                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  2051 00000BE7 666A20                  	push	dword 32
  2052 00000BEA 668B4610                	mov	eax, [bp+16]
  2053 00000BEE 9A                      	db	0x9A
  2054                                  section .relot
  2055 0000005C [EF0B0000]              	dd	L214
  2056                                  section .text
  2057                                  L214:
  2058 00000BEF [F30B0000]              	dd	L215
  2059                                  L215:
  2060 00000BF3 89E6                    	mov	si, sp
  2061 00000BF5 36830410                	add	word [ss:si], L216 - L215
  2062 00000BF9 66C1E00C                	shl	eax, 12
  2063 00000BFD C1C004                  	rol	ax, 4
  2064 00000C00 6650                    	push	eax
  2065 00000C02 CB                      	retf
  2066                                  L216:
  2067 00000C03 83ECFC                  	sub	sp, -4
  2068                                  L211:
  2069                                  ; Fused expression:    "++p(2) *(@-8) "
  2070 00000C06 8B46F8                  	mov	ax, [bp-8]
  2071 00000C09 660FB7C0                	movzx	eax, ax
  2072 00000C0D FF46F8                  	inc	word [bp-8]
  2073 00000C10 EBBD                    	jmp	L210
  2074                                  L213:
  2075                                  ; RPN'ized expression: "( 45 p ) "
  2076                                  ; Expanded expression: " 45  (@16) *(4) ()4 "
  2077                                  ; Fused expression:    "( 45 , *(4) (@16) )4 "
  2078 00000C12 666A2D                  	push	dword 45
  2079 00000C15 668B4610                	mov	eax, [bp+16]
  2080 00000C19 9A                      	db	0x9A
  2081                                  section .relot
  2082 00000060 [1A0C0000]              	dd	L217
  2083                                  section .text
  2084                                  L217:
  2085 00000C1A [1E0C0000]              	dd	L218
  2086                                  L218:
  2087 00000C1E 89E6                    	mov	si, sp
  2088 00000C20 36830410                	add	word [ss:si], L219 - L218
  2089 00000C24 66C1E00C                	shl	eax, 12
  2090 00000C28 C1C004                  	rol	ax, 4
  2091 00000C2B 6650                    	push	eax
  2092 00000C2D CB                      	retf
  2093                                  L219:
  2094 00000C2E 83ECFC                  	sub	sp, -4
  2095                                  ; }
  2096 00000C31 EB4A                    	jmp	L209
  2097                                  L208:
  2098                                  ; else
  2099                                  ; for
  2100                                  ; RPN'ized expression: "j i = "
  2101                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
  2102                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
  2103 00000C33 8B46FC                  	mov	ax, [bp-4]
  2104 00000C36 660FB7C0                	movzx	eax, ax
  2105 00000C3A 8946F8                  	mov	[bp-8], ax
  2106 00000C3D 660FB7C0                	movzx	eax, ax
  2107                                  L220:
  2108                                  ; RPN'ized expression: "j l < "
  2109                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
  2110                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
  2111 00000C41 8B46F8                  	mov	ax, [bp-8]
  2112 00000C44 660FB7C0                	movzx	eax, ax
  2113 00000C48 660FB74E0C              	movzx	ecx, word [bp+12]
  2114 00000C4D 6639C8                  	cmp	eax, ecx
  2115 00000C50 7D2B                    	jge	L223
  2116                                  ; RPN'ized expression: "j ++p "
  2117                                  ; Expanded expression: "(@-8) ++p(2) "
  2118                                  ; RPN'ized expression: "( 32 p ) "
  2119                                  ; Expanded expression: " 32  (@16) *(4) ()4 "
  2120                                  ; Fused expression:    "( 32 , *(4) (@16) )4 "
  2121 00000C52 666A20                  	push	dword 32
  2122 00000C55 668B4610                	mov	eax, [bp+16]
  2123 00000C59 9A                      	db	0x9A
  2124                                  section .relot
  2125 00000064 [5A0C0000]              	dd	L224
  2126                                  section .text
  2127                                  L224:
  2128 00000C5A [5E0C0000]              	dd	L225
  2129                                  L225:
  2130 00000C5E 89E6                    	mov	si, sp
  2131 00000C60 36830410                	add	word [ss:si], L226 - L225
  2132 00000C64 66C1E00C                	shl	eax, 12
  2133 00000C68 C1C004                  	rol	ax, 4
  2134 00000C6B 6650                    	push	eax
  2135 00000C6D CB                      	retf
  2136                                  L226:
  2137 00000C6E 83ECFC                  	sub	sp, -4
  2138                                  L221:
  2139                                  ; Fused expression:    "++p(2) *(@-8) "
  2140 00000C71 8B46F8                  	mov	ax, [bp-8]
  2141 00000C74 660FB7C0                	movzx	eax, ax
  2142 00000C78 FF46F8                  	inc	word [bp-8]
  2143 00000C7B EBC4                    	jmp	L220
  2144                                  L223:
  2145                                  L209:
  2146                                  ; loc         <something> : * char
  2147                                  ; RPN'ized expression: "ptr str 9 i - 1 + + *u &u (something227) = "
  2148                                  ; Expanded expression: "(@-12) str 9 (@-4) *(2) - 1 + + =(4) "
  2149                                  ; Fused expression:    "str push-ax - 9 *(@-4) + ax 1 + *sp ax =(204) *(@-12) ax "
  2150                                  section .relod
  2151 0000003C [7F0C0000]              	dd	L228
  2152                                  section .text
  2153 00000C7D 66B8                    	db	0x66, 0xB8
  2154                                  L228:
  2155 00000C7F [00000000]              	dd	_str
  2156 00000C83 6650                    	push	eax
  2157 00000C85 66B809000000            	mov	eax, 9
  2158 00000C8B 660FB74EFC              	movzx	ecx, word [bp-4]
  2159 00000C90 6629C8                  	sub	eax, ecx
  2160 00000C93 6640                    	inc	eax
  2161 00000C95 6689C1                  	mov	ecx, eax
  2162 00000C98 6658                    	pop	eax
  2163 00000C9A 6601C8                  	add	eax, ecx
  2164 00000C9D 668946F4                	mov	[bp-12], eax
  2165                                  ; while
  2166                                  ; loc         <something> : char
  2167                                  ; RPN'ized expression: "ptr *u 0 (something231) != "
  2168                                  ; Expanded expression: "(@-12) *(4) *(-1) 0 != "
  2169                                  L229:
  2170                                  ; Fused expression:    "*(4) (@-12) != *ax 0 IF! "
  2171 00000CA1 668B46F4                	mov	eax, [bp-12]
  2172 00000CA5 6689C3                  	mov	ebx, eax
  2173 00000CA8 6689DE                  	mov	esi, ebx
  2174 00000CAB 66C1CE04                	ror	esi, 4
  2175 00000CAF 8EDE                    	mov	ds, si
  2176 00000CB1 66C1EE1C                	shr	esi, 28
  2177 00000CB5 8A04                    	mov	al, [si]
  2178 00000CB7 660FBEC0                	movsx	eax, al
  2179 00000CBB 6683F800                	cmp	eax, 0
  2180 00000CBF 7442                    	je	L230
  2181                                  ; {
  2182                                  ; RPN'ized expression: "( ptr *u p ) "
  2183                                  ; Expanded expression: " (@-12) *(4) *(-1)  (@16) *(4) ()4 "
  2184                                  ; Fused expression:    "( *(4) (@-12) *(-1) ax , *(4) (@16) )4 "
  2185 00000CC1 668B46F4                	mov	eax, [bp-12]
  2186 00000CC5 6689C3                  	mov	ebx, eax
  2187 00000CC8 6689DE                  	mov	esi, ebx
  2188 00000CCB 66C1CE04                	ror	esi, 4
  2189 00000CCF 8EDE                    	mov	ds, si
  2190 00000CD1 66C1EE1C                	shr	esi, 28
  2191 00000CD5 8A04                    	mov	al, [si]
  2192 00000CD7 660FBEC0                	movsx	eax, al
  2193 00000CDB 6650                    	push	eax
  2194 00000CDD 668B4610                	mov	eax, [bp+16]
  2195 00000CE1 9A                      	db	0x9A
  2196                                  section .relot
  2197 00000068 [E20C0000]              	dd	L232
  2198                                  section .text
  2199                                  L232:
  2200 00000CE2 [E60C0000]              	dd	L233
  2201                                  L233:
  2202 00000CE6 89E6                    	mov	si, sp
  2203 00000CE8 36830410                	add	word [ss:si], L234 - L233
  2204 00000CEC 66C1E00C                	shl	eax, 12
  2205 00000CF0 C1C004                  	rol	ax, 4
  2206 00000CF3 6650                    	push	eax
  2207 00000CF5 CB                      	retf
  2208                                  L234:
  2209 00000CF6 83ECFC                  	sub	sp, -4
  2210                                  ; RPN'ized expression: "ptr ++p "
  2211                                  ; Expanded expression: "(@-12) ++p(4) "
  2212                                  ; Fused expression:    "++p(4) *(@-12) "
  2213 00000CF9 668B46F4                	mov	eax, [bp-12]
  2214 00000CFD 66FF46F4                	inc	dword [bp-12]
  2215                                  ; }
  2216 00000D01 EB9E                    	jmp	L229
  2217                                  L230:
  2218                                  ; return
  2219                                  ; RPN'ized expression: "0 "
  2220                                  ; Expanded expression: "0 "
  2221                                  ; Expression value: 0
  2222                                  ; Fused expression:    "0  "
  2223 00000D03 66B800000000            	mov	eax, 0
  2224 00000D09 EB00                    	jmp	L181
  2225                                  ; }
  2226                                  L181:
  2227 00000D0B 66                      	db	0x66
  2228 00000D0C C9                      	leave
  2229 00000D0D CB                      	retf
  2230                                  L235:
  2231                                  
  2232                                  section .fxnsz
  2233 00000018 FB020000                	dd	L235 - _printGenLInt
  2234                                  
  2235                                  ; glb printGenHex : (
  2236                                  ; prm     num : unsigned short
  2237                                  ; prm     l : unsigned short
  2238                                  ; prm     p : * (
  2239                                  ; prm         car : char
  2240                                  ;         ) int
  2241                                  ;     ) int
  2242                                  section .text
  2243                                  	global	_printGenHex
  2244                                  _printGenHex:
  2245 00000D0E 6655                    	push	ebp
  2246 00000D10 660FB7EC                	movzx	ebp, sp
  2247 00000D14 83EC10                  	 sub	sp,         16
  2248                                  ; loc     num : (@8): unsigned short
  2249                                  ; loc     l : (@12): unsigned short
  2250                                  ; loc     p : (@16): * (
  2251                                  ; prm         car : char
  2252                                  ;         ) int
  2253                                  ; loc     i : (@-4): unsigned short
  2254                                  ; loc     j : (@-8): unsigned short
  2255                                  ; loc     cont : (@-12): int
  2256                                  ; RPN'ized expression: "cont 0 = "
  2257                                  ; Expanded expression: "(@-12) 0 =(4) "
  2258                                  ; Fused expression:    "=(204) *(@-12) 0 "
  2259 00000D17 66B800000000            	mov	eax, 0
  2260 00000D1D 668946F4                	mov	[bp-12], eax
  2261                                  ; loc     ptr : (@-16): * char
  2262                                  ; if
  2263                                  ; RPN'ized expression: "l 0 == "
  2264                                  ; Expanded expression: "(@12) *(2) 0 == "
  2265                                  ; Fused expression:    "== *(@12) 0 IF! "
  2266 00000D21 8B460C                  	mov	ax, [bp+12]
  2267 00000D24 660FB7C0                	movzx	eax, ax
  2268 00000D28 6683F800                	cmp	eax, 0
  2269 00000D2C 750D                    	jne	L238
  2270                                  ; RPN'ized expression: "l 1 = "
  2271                                  ; Expanded expression: "(@12) 1 =(2) "
  2272                                  ; Fused expression:    "=(172) *(@12) 1 "
  2273 00000D2E 66B801000000            	mov	eax, 1
  2274 00000D34 89460C                  	mov	[bp+12], ax
  2275 00000D37 660FB7C0                	movzx	eax, ax
  2276                                  L238:
  2277                                  ; if
  2278                                  ; RPN'ized expression: "num 0 == "
  2279                                  ; Expanded expression: "(@8) *(2) 0 == "
  2280                                  ; Fused expression:    "== *(@8) 0 IF! "
  2281 00000D3B 8B4608                  	mov	ax, [bp+8]
  2282 00000D3E 660FB7C0                	movzx	eax, ax
  2283 00000D42 6683F800                	cmp	eax, 0
  2284 00000D46 7579                    	jne	L240
  2285                                  ; {
  2286                                  ; for
  2287                                  ; RPN'ized expression: "i 0 = "
  2288                                  ; Expanded expression: "(@-4) 0 =(2) "
  2289                                  ; Fused expression:    "=(172) *(@-4) 0 "
  2290 00000D48 66B800000000            	mov	eax, 0
  2291 00000D4E 8946FC                  	mov	[bp-4], ax
  2292 00000D51 660FB7C0                	movzx	eax, ax
  2293                                  L242:
  2294                                  ; RPN'ized expression: "i l 1 - < "
  2295                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
  2296                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
  2297 00000D55 8B460C                  	mov	ax, [bp+12]
  2298 00000D58 660FB7C0                	movzx	eax, ax
  2299 00000D5C 6648                    	dec	eax
  2300 00000D5E 6689C1                  	mov	ecx, eax
  2301 00000D61 8B46FC                  	mov	ax, [bp-4]
  2302 00000D64 660FB7C0                	movzx	eax, ax
  2303 00000D68 6639C8                  	cmp	eax, ecx
  2304 00000D6B 7D2B                    	jge	L245
  2305                                  ; RPN'ized expression: "i ++p "
  2306                                  ; Expanded expression: "(@-4) ++p(2) "
  2307                                  ; RPN'ized expression: "( 48 p ) "
  2308                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  2309                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  2310 00000D6D 666A30                  	push	dword 48
  2311 00000D70 668B4610                	mov	eax, [bp+16]
  2312 00000D74 9A                      	db	0x9A
  2313                                  section .relot
  2314 0000006C [750D0000]              	dd	L246
  2315                                  section .text
  2316                                  L246:
  2317 00000D75 [790D0000]              	dd	L247
  2318                                  L247:
  2319 00000D79 89E6                    	mov	si, sp
  2320 00000D7B 36830410                	add	word [ss:si], L248 - L247
  2321 00000D7F 66C1E00C                	shl	eax, 12
  2322 00000D83 C1C004                  	rol	ax, 4
  2323 00000D86 6650                    	push	eax
  2324 00000D88 CB                      	retf
  2325                                  L248:
  2326 00000D89 83ECFC                  	sub	sp, -4
  2327                                  L243:
  2328                                  ; Fused expression:    "++p(2) *(@-4) "
  2329 00000D8C 8B46FC                  	mov	ax, [bp-4]
  2330 00000D8F 660FB7C0                	movzx	eax, ax
  2331 00000D93 FF46FC                  	inc	word [bp-4]
  2332 00000D96 EBBD                    	jmp	L242
  2333                                  L245:
  2334                                  ; RPN'ized expression: "( 48 p ) "
  2335                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  2336                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  2337 00000D98 666A30                  	push	dword 48
  2338 00000D9B 668B4610                	mov	eax, [bp+16]
  2339 00000D9F 9A                      	db	0x9A
  2340                                  section .relot
  2341 00000070 [A00D0000]              	dd	L249
  2342                                  section .text
  2343                                  L249:
  2344 00000DA0 [A40D0000]              	dd	L250
  2345                                  L250:
  2346 00000DA4 89E6                    	mov	si, sp
  2347 00000DA6 36830410                	add	word [ss:si], L251 - L250
  2348 00000DAA 66C1E00C                	shl	eax, 12
  2349 00000DAE C1C004                  	rol	ax, 4
  2350 00000DB1 6650                    	push	eax
  2351 00000DB3 CB                      	retf
  2352                                  L251:
  2353 00000DB4 83ECFC                  	sub	sp, -4
  2354                                  ; return
  2355                                  ; RPN'ized expression: "l "
  2356                                  ; Expanded expression: "(@12) *(2) "
  2357                                  ; Fused expression:    "*(2) (@12)  "
  2358 00000DB7 8B460C                  	mov	ax, [bp+12]
  2359 00000DBA 660FB7C0                	movzx	eax, ax
  2360 00000DBE E9C301                  	jmp	L236
  2361                                  ; }
  2362                                  L240:
  2363                                  ; RPN'ized expression: "ptr str 4 + *u &u = "
  2364                                  ; Expanded expression: "(@-16) str 4 + =(4) "
  2365                                  ; Fused expression:    "str + ax 4 =(204) *(@-16) ax "
  2366                                  section .relod
  2367 00000040 [C30D0000]              	dd	L252
  2368                                  section .text
  2369 00000DC1 66B8                    	db	0x66, 0xB8
  2370                                  L252:
  2371 00000DC3 [00000000]              	dd	_str
  2372 00000DC7 6683C004                	add	eax, 4
  2373 00000DCB 668946F0                	mov	[bp-16], eax
  2374                                  ; loc     <something> : char
  2375                                  ; RPN'ized expression: "ptr *u 0 (something253) = "
  2376                                  ; Expanded expression: "(@-16) *(4) 0 =(-1) "
  2377                                  ; Fused expression:    "*(4) (@-16) =(124) *ax 0 "
  2378 00000DCF 668B46F0                	mov	eax, [bp-16]
  2379 00000DD3 6689C3                  	mov	ebx, eax
  2380 00000DD6 66B800000000            	mov	eax, 0
  2381 00000DDC 6689DE                  	mov	esi, ebx
  2382 00000DDF 66C1CE04                	ror	esi, 4
  2383 00000DE3 8EDE                    	mov	ds, si
  2384 00000DE5 66C1EE1C                	shr	esi, 28
  2385 00000DE9 8804                    	mov	[si], al
  2386 00000DEB 660FBEC0                	movsx	eax, al
  2387                                  ; RPN'ized expression: "i 0 = "
  2388                                  ; Expanded expression: "(@-4) 0 =(2) "
  2389                                  ; Fused expression:    "=(172) *(@-4) 0 "
  2390 00000DEF 66B800000000            	mov	eax, 0
  2391 00000DF5 8946FC                  	mov	[bp-4], ax
  2392 00000DF8 660FB7C0                	movzx	eax, ax
  2393                                  ; while
  2394                                  ; RPN'ized expression: "num 0 > "
  2395                                  ; Expanded expression: "(@8) *(2) 0 > "
  2396                                  L254:
  2397                                  ; Fused expression:    "> *(@8) 0 IF! "
  2398 00000DFC 8B4608                  	mov	ax, [bp+8]
  2399 00000DFF 660FB7C0                	movzx	eax, ax
  2400 00000E03 6683F800                	cmp	eax, 0
  2401 00000E07 0F8E9600                	jle	L255
  2402                                  ; {
  2403                                  ; RPN'ized expression: "str 3 i - + *u dig num 16 % + *u = "
  2404                                  ; Expanded expression: "str 3 (@-4) *(2) - + dig (@8) *(2) 16 % + *(-1) =(-1) "
  2405                                  ; Fused expression:    "str push-ax - 3 *(@-4) + *sp ax push-ax dig push-ax % *(@8) 16 + *sp ax =(119) **sp *ax "
  2406                                  section .relod
  2407 00000044 [0D0E0000]              	dd	L256
  2408                                  section .text
  2409 00000E0B 66B8                    	db	0x66, 0xB8
  2410                                  L256:
  2411 00000E0D [00000000]              	dd	_str
  2412 00000E11 6650                    	push	eax
  2413 00000E13 66B803000000            	mov	eax, 3
  2414 00000E19 660FB74EFC              	movzx	ecx, word [bp-4]
  2415 00000E1E 6629C8                  	sub	eax, ecx
  2416 00000E21 6689C1                  	mov	ecx, eax
  2417 00000E24 6658                    	pop	eax
  2418 00000E26 6601C8                  	add	eax, ecx
  2419 00000E29 6650                    	push	eax
  2420                                  section .relod
  2421 00000048 [2D0E0000]              	dd	L257
  2422                                  section .text
  2423 00000E2B 66B8                    	db	0x66, 0xB8
  2424                                  L257:
  2425 00000E2D [00000000]              	dd	_dig
  2426 00000E31 6650                    	push	eax
  2427 00000E33 8B4608                  	mov	ax, [bp+8]
  2428 00000E36 660FB7C0                	movzx	eax, ax
  2429 00000E3A 6699                    	cdq
  2430 00000E3C 66B910000000            	mov	ecx, 16
  2431 00000E42 66F7F9                  	idiv	ecx
  2432 00000E45 6689D0                  	mov	eax, edx
  2433 00000E48 6689C1                  	mov	ecx, eax
  2434 00000E4B 6658                    	pop	eax
  2435 00000E4D 6601C8                  	add	eax, ecx
  2436 00000E50 6689C3                  	mov	ebx, eax
  2437 00000E53 6689DE                  	mov	esi, ebx
  2438 00000E56 66C1CE04                	ror	esi, 4
  2439 00000E5A 8EDE                    	mov	ds, si
  2440 00000E5C 66C1EE1C                	shr	esi, 28
  2441 00000E60 8A04                    	mov	al, [si]
  2442 00000E62 660FBEC0                	movsx	eax, al
  2443 00000E66 665B                    	pop	ebx
  2444 00000E68 6689DE                  	mov	esi, ebx
  2445 00000E6B 66C1CE04                	ror	esi, 4
  2446 00000E6F 8EDE                    	mov	ds, si
  2447 00000E71 66C1EE1C                	shr	esi, 28
  2448 00000E75 8804                    	mov	[si], al
  2449 00000E77 660FBEC0                	movsx	eax, al
  2450                                  ; RPN'ized expression: "num num 16 / = "
  2451                                  ; Expanded expression: "(@8) (@8) *(2) 16 / =(2) "
  2452                                  ; Fused expression:    "/ *(@8) 16 =(172) *(@8) ax "
  2453 00000E7B 8B4608                  	mov	ax, [bp+8]
  2454 00000E7E 660FB7C0                	movzx	eax, ax
  2455 00000E82 6699                    	cdq
  2456 00000E84 66B910000000            	mov	ecx, 16
  2457 00000E8A 66F7F9                  	idiv	ecx
  2458 00000E8D 894608                  	mov	[bp+8], ax
  2459 00000E90 660FB7C0                	movzx	eax, ax
  2460                                  ; RPN'ized expression: "i ++p "
  2461                                  ; Expanded expression: "(@-4) ++p(2) "
  2462                                  ; Fused expression:    "++p(2) *(@-4) "
  2463 00000E94 8B46FC                  	mov	ax, [bp-4]
  2464 00000E97 660FB7C0                	movzx	eax, ax
  2465 00000E9B FF46FC                  	inc	word [bp-4]
  2466                                  ; }
  2467 00000E9E E95BFF                  	jmp	L254
  2468                                  L255:
  2469                                  ; for
  2470                                  ; RPN'ized expression: "j i = "
  2471                                  ; Expanded expression: "(@-8) (@-4) *(2) =(2) "
  2472                                  ; Fused expression:    "=(170) *(@-8) *(@-4) "
  2473 00000EA1 8B46FC                  	mov	ax, [bp-4]
  2474 00000EA4 660FB7C0                	movzx	eax, ax
  2475 00000EA8 8946F8                  	mov	[bp-8], ax
  2476 00000EAB 660FB7C0                	movzx	eax, ax
  2477                                  L258:
  2478                                  ; RPN'ized expression: "j l < "
  2479                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
  2480                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
  2481 00000EAF 8B46F8                  	mov	ax, [bp-8]
  2482 00000EB2 660FB7C0                	movzx	eax, ax
  2483 00000EB6 660FB74E0C              	movzx	ecx, word [bp+12]
  2484 00000EBB 6639C8                  	cmp	eax, ecx
  2485 00000EBE 7D2B                    	jge	L261
  2486                                  ; RPN'ized expression: "j ++p "
  2487                                  ; Expanded expression: "(@-8) ++p(2) "
  2488                                  ; RPN'ized expression: "( 48 p ) "
  2489                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  2490                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  2491 00000EC0 666A30                  	push	dword 48
  2492 00000EC3 668B4610                	mov	eax, [bp+16]
  2493 00000EC7 9A                      	db	0x9A
  2494                                  section .relot
  2495 00000074 [C80E0000]              	dd	L262
  2496                                  section .text
  2497                                  L262:
  2498 00000EC8 [CC0E0000]              	dd	L263
  2499                                  L263:
  2500 00000ECC 89E6                    	mov	si, sp
  2501 00000ECE 36830410                	add	word [ss:si], L264 - L263
  2502 00000ED2 66C1E00C                	shl	eax, 12
  2503 00000ED6 C1C004                  	rol	ax, 4
  2504 00000ED9 6650                    	push	eax
  2505 00000EDB CB                      	retf
  2506                                  L264:
  2507 00000EDC 83ECFC                  	sub	sp, -4
  2508                                  L259:
  2509                                  ; Fused expression:    "++p(2) *(@-8) "
  2510 00000EDF 8B46F8                  	mov	ax, [bp-8]
  2511 00000EE2 660FB7C0                	movzx	eax, ax
  2512 00000EE6 FF46F8                  	inc	word [bp-8]
  2513 00000EE9 EBC4                    	jmp	L258
  2514                                  L261:
  2515                                  ; RPN'ized expression: "ptr str 3 i - 1 + + *u &u = "
  2516                                  ; Expanded expression: "(@-16) str 3 (@-4) *(2) - 1 + + =(4) "
  2517                                  ; Fused expression:    "str push-ax - 3 *(@-4) + ax 1 + *sp ax =(204) *(@-16) ax "
  2518                                  section .relod
  2519 0000004C [ED0E0000]              	dd	L265
  2520                                  section .text
  2521 00000EEB 66B8                    	db	0x66, 0xB8
  2522                                  L265:
  2523 00000EED [00000000]              	dd	_str
  2524 00000EF1 6650                    	push	eax
  2525 00000EF3 66B803000000            	mov	eax, 3
  2526 00000EF9 660FB74EFC              	movzx	ecx, word [bp-4]
  2527 00000EFE 6629C8                  	sub	eax, ecx
  2528 00000F01 6640                    	inc	eax
  2529 00000F03 6689C1                  	mov	ecx, eax
  2530 00000F06 6658                    	pop	eax
  2531 00000F08 6601C8                  	add	eax, ecx
  2532 00000F0B 668946F0                	mov	[bp-16], eax
  2533                                  ; while
  2534                                  ; loc     <something> : char
  2535                                  ; RPN'ized expression: "ptr *u 0 (something268) != "
  2536                                  ; Expanded expression: "(@-16) *(4) *(-1) 0 != "
  2537                                  L266:
  2538                                  ; Fused expression:    "*(4) (@-16) != *ax 0 IF! "
  2539 00000F0F 668B46F0                	mov	eax, [bp-16]
  2540 00000F13 6689C3                  	mov	ebx, eax
  2541 00000F16 6689DE                  	mov	esi, ebx
  2542 00000F19 66C1CE04                	ror	esi, 4
  2543 00000F1D 8EDE                    	mov	ds, si
  2544 00000F1F 66C1EE1C                	shr	esi, 28
  2545 00000F23 8A04                    	mov	al, [si]
  2546 00000F25 660FBEC0                	movsx	eax, al
  2547 00000F29 6683F800                	cmp	eax, 0
  2548 00000F2D 744A                    	je	L267
  2549                                  ; {
  2550                                  ; RPN'ized expression: "( ptr *u p ) "
  2551                                  ; Expanded expression: " (@-16) *(4) *(-1)  (@16) *(4) ()4 "
  2552                                  ; Fused expression:    "( *(4) (@-16) *(-1) ax , *(4) (@16) )4 "
  2553 00000F2F 668B46F0                	mov	eax, [bp-16]
  2554 00000F33 6689C3                  	mov	ebx, eax
  2555 00000F36 6689DE                  	mov	esi, ebx
  2556 00000F39 66C1CE04                	ror	esi, 4
  2557 00000F3D 8EDE                    	mov	ds, si
  2558 00000F3F 66C1EE1C                	shr	esi, 28
  2559 00000F43 8A04                    	mov	al, [si]
  2560 00000F45 660FBEC0                	movsx	eax, al
  2561 00000F49 6650                    	push	eax
  2562 00000F4B 668B4610                	mov	eax, [bp+16]
  2563 00000F4F 9A                      	db	0x9A
  2564                                  section .relot
  2565 00000078 [500F0000]              	dd	L269
  2566                                  section .text
  2567                                  L269:
  2568 00000F50 [540F0000]              	dd	L270
  2569                                  L270:
  2570 00000F54 89E6                    	mov	si, sp
  2571 00000F56 36830410                	add	word [ss:si], L271 - L270
  2572 00000F5A 66C1E00C                	shl	eax, 12
  2573 00000F5E C1C004                  	rol	ax, 4
  2574 00000F61 6650                    	push	eax
  2575 00000F63 CB                      	retf
  2576                                  L271:
  2577 00000F64 83ECFC                  	sub	sp, -4
  2578                                  ; RPN'ized expression: "ptr ++p "
  2579                                  ; Expanded expression: "(@-16) ++p(4) "
  2580                                  ; Fused expression:    "++p(4) *(@-16) "
  2581 00000F67 668B46F0                	mov	eax, [bp-16]
  2582 00000F6B 66FF46F0                	inc	dword [bp-16]
  2583                                  ; RPN'ized expression: "cont ++p "
  2584                                  ; Expanded expression: "(@-12) ++p(4) "
  2585                                  ; Fused expression:    "++p(4) *(@-12) "
  2586 00000F6F 668B46F4                	mov	eax, [bp-12]
  2587 00000F73 66FF46F4                	inc	dword [bp-12]
  2588                                  ; }
  2589 00000F77 EB96                    	jmp	L266
  2590                                  L267:
  2591                                  ; return
  2592                                  ; RPN'ized expression: "l cont + "
  2593                                  ; Expanded expression: "(@12) *(2) (@-12) *(4) + "
  2594                                  ; Fused expression:    "+ *(@12) *(@-12)  "
  2595 00000F79 8B460C                  	mov	ax, [bp+12]
  2596 00000F7C 660FB7C0                	movzx	eax, ax
  2597 00000F80 660346F4                	add	eax, [bp-12]
  2598                                  L236:
  2599 00000F84 66                      	db	0x66
  2600 00000F85 C9                      	leave
  2601 00000F86 CB                      	retf
  2602                                  L272:
  2603                                  
  2604                                  section .fxnsz
  2605 0000001C 79020000                	dd	L272 - _printGenHex
  2606                                  
  2607                                  ; glb printGenLHex : (
  2608                                  ; prm     num : unsigned
  2609                                  ; prm     l : unsigned short
  2610                                  ; prm     p : * (
  2611                                  ; prm         car : char
  2612                                  ;         ) int
  2613                                  ;     ) int
  2614                                  section .text
  2615                                  	global	_printGenLHex
  2616                                  _printGenLHex:
  2617 00000F87 6655                    	push	ebp
  2618 00000F89 660FB7EC                	movzx	ebp, sp
  2619 00000F8D 83EC10                  	 sub	sp,         16
  2620                                  ; loc     num : (@8): unsigned
  2621                                  ; loc     l : (@12): unsigned short
  2622                                  ; loc     p : (@16): * (
  2623                                  ; prm         car : char
  2624                                  ;         ) int
  2625                                  ; loc     ptr : (@-4): * char
  2626                                  ; loc     ptrWord : (@-8): * unsigned short
  2627                                  ; loc     i : (@-12): unsigned short
  2628                                  ; loc     j : (@-16): unsigned short
  2629                                  ; if
  2630                                  ; RPN'ized expression: "l 0 == "
  2631                                  ; Expanded expression: "(@12) *(2) 0 == "
  2632                                  ; Fused expression:    "== *(@12) 0 IF! "
  2633 00000F90 8B460C                  	mov	ax, [bp+12]
  2634 00000F93 660FB7C0                	movzx	eax, ax
  2635 00000F97 6683F800                	cmp	eax, 0
  2636 00000F9B 750D                    	jne	L275
  2637                                  ; RPN'ized expression: "l 1 = "
  2638                                  ; Expanded expression: "(@12) 1 =(2) "
  2639                                  ; Fused expression:    "=(172) *(@12) 1 "
  2640 00000F9D 66B801000000            	mov	eax, 1
  2641 00000FA3 89460C                  	mov	[bp+12], ax
  2642 00000FA6 660FB7C0                	movzx	eax, ax
  2643                                  L275:
  2644                                  ; if
  2645                                  ; RPN'ized expression: "num 0 == "
  2646                                  ; Expanded expression: "(@8) *(4) 0 == "
  2647                                  ; Fused expression:    "== *(@8) 0 IF! "
  2648 00000FAA 668B4608                	mov	eax, [bp+8]
  2649 00000FAE 6683F800                	cmp	eax, 0
  2650 00000FB2 7579                    	jne	L277
  2651                                  ; {
  2652                                  ; for
  2653                                  ; RPN'ized expression: "i 0 = "
  2654                                  ; Expanded expression: "(@-12) 0 =(2) "
  2655                                  ; Fused expression:    "=(172) *(@-12) 0 "
  2656 00000FB4 66B800000000            	mov	eax, 0
  2657 00000FBA 8946F4                  	mov	[bp-12], ax
  2658 00000FBD 660FB7C0                	movzx	eax, ax
  2659                                  L279:
  2660                                  ; RPN'ized expression: "i l 1 - < "
  2661                                  ; Expanded expression: "(@-12) *(2) (@12) *(2) 1 - < "
  2662                                  ; Fused expression:    "- *(@12) 1 < *(@-12) ax IF! "
  2663 00000FC1 8B460C                  	mov	ax, [bp+12]
  2664 00000FC4 660FB7C0                	movzx	eax, ax
  2665 00000FC8 6648                    	dec	eax
  2666 00000FCA 6689C1                  	mov	ecx, eax
  2667 00000FCD 8B46F4                  	mov	ax, [bp-12]
  2668 00000FD0 660FB7C0                	movzx	eax, ax
  2669 00000FD4 6639C8                  	cmp	eax, ecx
  2670 00000FD7 7D2B                    	jge	L282
  2671                                  ; RPN'ized expression: "i ++p "
  2672                                  ; Expanded expression: "(@-12) ++p(2) "
  2673                                  ; RPN'ized expression: "( 48 p ) "
  2674                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  2675                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  2676 00000FD9 666A30                  	push	dword 48
  2677 00000FDC 668B4610                	mov	eax, [bp+16]
  2678 00000FE0 9A                      	db	0x9A
  2679                                  section .relot
  2680 0000007C [E10F0000]              	dd	L283
  2681                                  section .text
  2682                                  L283:
  2683 00000FE1 [E50F0000]              	dd	L284
  2684                                  L284:
  2685 00000FE5 89E6                    	mov	si, sp
  2686 00000FE7 36830410                	add	word [ss:si], L285 - L284
  2687 00000FEB 66C1E00C                	shl	eax, 12
  2688 00000FEF C1C004                  	rol	ax, 4
  2689 00000FF2 6650                    	push	eax
  2690 00000FF4 CB                      	retf
  2691                                  L285:
  2692 00000FF5 83ECFC                  	sub	sp, -4
  2693                                  L280:
  2694                                  ; Fused expression:    "++p(2) *(@-12) "
  2695 00000FF8 8B46F4                  	mov	ax, [bp-12]
  2696 00000FFB 660FB7C0                	movzx	eax, ax
  2697 00000FFF FF46F4                  	inc	word [bp-12]
  2698 00001002 EBBD                    	jmp	L279
  2699                                  L282:
  2700                                  ; RPN'ized expression: "( 48 p ) "
  2701                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  2702                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  2703 00001004 666A30                  	push	dword 48
  2704 00001007 668B4610                	mov	eax, [bp+16]
  2705 0000100B 9A                      	db	0x9A
  2706                                  section .relot
  2707 00000080 [0C100000]              	dd	L286
  2708                                  section .text
  2709                                  L286:
  2710 0000100C [10100000]              	dd	L287
  2711                                  L287:
  2712 00001010 89E6                    	mov	si, sp
  2713 00001012 36830410                	add	word [ss:si], L288 - L287
  2714 00001016 66C1E00C                	shl	eax, 12
  2715 0000101A C1C004                  	rol	ax, 4
  2716 0000101D 6650                    	push	eax
  2717 0000101F CB                      	retf
  2718                                  L288:
  2719 00001020 83ECFC                  	sub	sp, -4
  2720                                  ; return
  2721                                  ; RPN'ized expression: "l "
  2722                                  ; Expanded expression: "(@12) *(2) "
  2723                                  ; Fused expression:    "*(2) (@12)  "
  2724 00001023 8B460C                  	mov	ax, [bp+12]
  2725 00001026 660FB7C0                	movzx	eax, ax
  2726 0000102A E97902                  	jmp	L273
  2727                                  ; }
  2728                                  L277:
  2729                                  ; loc     <something> : char
  2730                                  ; RPN'ized expression: "str 8 + *u 0 (something289) = "
  2731                                  ; Expanded expression: "str 8 + 0 =(-1) "
  2732                                  ; Fused expression:    "str + ax 8 =(124) *ax 0 "
  2733                                  section .relod
  2734 00000050 [2F100000]              	dd	L290
  2735                                  section .text
  2736 0000102D 66B8                    	db	0x66, 0xB8
  2737                                  L290:
  2738 0000102F [00000000]              	dd	_str
  2739 00001033 6683C008                	add	eax, 8
  2740 00001037 6689C3                  	mov	ebx, eax
  2741 0000103A 66B800000000            	mov	eax, 0
  2742 00001040 6689DE                  	mov	esi, ebx
  2743 00001043 66C1CE04                	ror	esi, 4
  2744 00001047 8EDE                    	mov	ds, si
  2745 00001049 66C1EE1C                	shr	esi, 28
  2746 0000104D 8804                    	mov	[si], al
  2747 0000104F 660FBEC0                	movsx	eax, al
  2748                                  ; RPN'ized expression: "i 0 = "
  2749                                  ; Expanded expression: "(@-12) 0 =(2) "
  2750                                  ; Fused expression:    "=(172) *(@-12) 0 "
  2751 00001053 66B800000000            	mov	eax, 0
  2752 00001059 8946F4                  	mov	[bp-12], ax
  2753 0000105C 660FB7C0                	movzx	eax, ax
  2754                                  ; loc     <something> : * unsigned short
  2755                                  ; RPN'ized expression: "ptrWord num &u (something291) = "
  2756                                  ; Expanded expression: "(@-8) (@8) =(4) "
  2757                                  ; Fused expression:    "=(204) *(@-8) (@8) "
  2758 00001060 6631C0                  	xor	eax, eax
  2759 00001063 8CD0                    	mov	ax, ss
  2760 00001065 66C1E004                	shl	eax, 4
  2761 00001069 66678D440508            	lea	eax, [ebp+eax+8]
  2762 0000106F 668946F8                	mov	[bp-8], eax
  2763                                  ; while
  2764                                  ; RPN'ized expression: "num 0 > "
  2765                                  ; Expanded expression: "(@8) *(4) 0 >u "
  2766                                  L292:
  2767                                  ; Fused expression:    ">u *(@8) 0 IF! "
  2768 00001073 668B4608                	mov	eax, [bp+8]
  2769 00001077 6683F800                	cmp	eax, 0
  2770 0000107B 0F865A01                	jbe	L293
  2771                                  ; {
  2772                                  ; RPN'ized expression: "str 7 i - + *u dig ptrWord 0 + *u 16 % + *u = "
  2773                                  ; Expanded expression: "str 7 (@-12) *(2) - + dig (@-8) *(4) 0 + *(2) 16 % + *(-1) =(-1) "
  2774                                  ; Fused expression:    "str push-ax - 7 *(@-12) + *sp ax push-ax dig push-ax + *(@-8) 0 % *ax 16 + *sp ax =(119) **sp *ax "
  2775                                  section .relod
  2776 00000054 [81100000]              	dd	L294
  2777                                  section .text
  2778 0000107F 66B8                    	db	0x66, 0xB8
  2779                                  L294:
  2780 00001081 [00000000]              	dd	_str
  2781 00001085 6650                    	push	eax
  2782 00001087 66B807000000            	mov	eax, 7
  2783 0000108D 660FB74EF4              	movzx	ecx, word [bp-12]
  2784 00001092 6629C8                  	sub	eax, ecx
  2785 00001095 6689C1                  	mov	ecx, eax
  2786 00001098 6658                    	pop	eax
  2787 0000109A 6601C8                  	add	eax, ecx
  2788 0000109D 6650                    	push	eax
  2789                                  section .relod
  2790 00000058 [A1100000]              	dd	L295
  2791                                  section .text
  2792 0000109F 66B8                    	db	0x66, 0xB8
  2793                                  L295:
  2794 000010A1 [00000000]              	dd	_dig
  2795 000010A5 6650                    	push	eax
  2796 000010A7 668B46F8                	mov	eax, [bp-8]
  2797 000010AB 6689C3                  	mov	ebx, eax
  2798 000010AE 6689DE                  	mov	esi, ebx
  2799 000010B1 66C1CE04                	ror	esi, 4
  2800 000010B5 8EDE                    	mov	ds, si
  2801 000010B7 66C1EE1C                	shr	esi, 28
  2802 000010BB 8B04                    	mov	ax, [si]
  2803 000010BD 660FB7C0                	movzx	eax, ax
  2804 000010C1 6699                    	cdq
  2805 000010C3 66B910000000            	mov	ecx, 16
  2806 000010C9 66F7F9                  	idiv	ecx
  2807 000010CC 6689D0                  	mov	eax, edx
  2808 000010CF 6689C1                  	mov	ecx, eax
  2809 000010D2 6658                    	pop	eax
  2810 000010D4 6601C8                  	add	eax, ecx
  2811 000010D7 6689C3                  	mov	ebx, eax
  2812 000010DA 6689DE                  	mov	esi, ebx
  2813 000010DD 66C1CE04                	ror	esi, 4
  2814 000010E1 8EDE                    	mov	ds, si
  2815 000010E3 66C1EE1C                	shr	esi, 28
  2816 000010E7 8A04                    	mov	al, [si]
  2817 000010E9 660FBEC0                	movsx	eax, al
  2818 000010ED 665B                    	pop	ebx
  2819 000010EF 6689DE                  	mov	esi, ebx
  2820 000010F2 66C1CE04                	ror	esi, 4
  2821 000010F6 8EDE                    	mov	ds, si
  2822 000010F8 66C1EE1C                	shr	esi, 28
  2823 000010FC 8804                    	mov	[si], al
  2824 000010FE 660FBEC0                	movsx	eax, al
  2825                                  ; RPN'ized expression: "ptrWord 0 + *u ptrWord 0 + *u 16 / 4096 ptrWord 1 + *u 16 % * + = "
  2826                                  ; Expanded expression: "(@-8) *(4) 0 + (@-8) *(4) 0 + *(2) 16 / 4096 (@-8) *(4) 2 + *(2) 16 % * + =(2) "
  2827                                  ; Fused expression:    "+ *(@-8) 0 push-ax + *(@-8) 0 / *ax 16 push-ax + *(@-8) 2 % *ax 16 * 4096 ax + *sp ax =(172) **sp ax "
  2828 00001102 668B46F8                	mov	eax, [bp-8]
  2829 00001106 6650                    	push	eax
  2830 00001108 668B46F8                	mov	eax, [bp-8]
  2831 0000110C 6689C3                  	mov	ebx, eax
  2832 0000110F 6689DE                  	mov	esi, ebx
  2833 00001112 66C1CE04                	ror	esi, 4
  2834 00001116 8EDE                    	mov	ds, si
  2835 00001118 66C1EE1C                	shr	esi, 28
  2836 0000111C 8B04                    	mov	ax, [si]
  2837 0000111E 660FB7C0                	movzx	eax, ax
  2838 00001122 6699                    	cdq
  2839 00001124 66B910000000            	mov	ecx, 16
  2840 0000112A 66F7F9                  	idiv	ecx
  2841 0000112D 6650                    	push	eax
  2842 0000112F 668B46F8                	mov	eax, [bp-8]
  2843 00001133 6683C002                	add	eax, 2
  2844 00001137 6689C3                  	mov	ebx, eax
  2845 0000113A 6689DE                  	mov	esi, ebx
  2846 0000113D 66C1CE04                	ror	esi, 4
  2847 00001141 8EDE                    	mov	ds, si
  2848 00001143 66C1EE1C                	shr	esi, 28
  2849 00001147 8B04                    	mov	ax, [si]
  2850 00001149 660FB7C0                	movzx	eax, ax
  2851 0000114D 6699                    	cdq
  2852 0000114F 66B910000000            	mov	ecx, 16
  2853 00001155 66F7F9                  	idiv	ecx
  2854 00001158 6689D0                  	mov	eax, edx
  2855 0000115B 6689C1                  	mov	ecx, eax
  2856 0000115E 66B800100000            	mov	eax, 4096
  2857 00001164 66F7E1                  	mul	ecx
  2858 00001167 6689C1                  	mov	ecx, eax
  2859 0000116A 6658                    	pop	eax
  2860 0000116C 6601C8                  	add	eax, ecx
  2861 0000116F 665B                    	pop	ebx
  2862 00001171 6689DE                  	mov	esi, ebx
  2863 00001174 66C1CE04                	ror	esi, 4
  2864 00001178 8EDE                    	mov	ds, si
  2865 0000117A 66C1EE1C                	shr	esi, 28
  2866 0000117E 8904                    	mov	[si], ax
  2867 00001180 660FB7C0                	movzx	eax, ax
  2868                                  ; RPN'ized expression: "ptrWord 1 + *u ptrWord 1 + *u 16 / = "
  2869                                  ; Expanded expression: "(@-8) *(4) 2 + (@-8) *(4) 2 + *(2) 16 / =(2) "
  2870                                  ; Fused expression:    "+ *(@-8) 2 push-ax + *(@-8) 2 / *ax 16 =(172) **sp ax "
  2871 00001184 668B46F8                	mov	eax, [bp-8]
  2872 00001188 6683C002                	add	eax, 2
  2873 0000118C 6650                    	push	eax
  2874 0000118E 668B46F8                	mov	eax, [bp-8]
  2875 00001192 6683C002                	add	eax, 2
  2876 00001196 6689C3                  	mov	ebx, eax
  2877 00001199 6689DE                  	mov	esi, ebx
  2878 0000119C 66C1CE04                	ror	esi, 4
  2879 000011A0 8EDE                    	mov	ds, si
  2880 000011A2 66C1EE1C                	shr	esi, 28
  2881 000011A6 8B04                    	mov	ax, [si]
  2882 000011A8 660FB7C0                	movzx	eax, ax
  2883 000011AC 6699                    	cdq
  2884 000011AE 66B910000000            	mov	ecx, 16
  2885 000011B4 66F7F9                  	idiv	ecx
  2886 000011B7 665B                    	pop	ebx
  2887 000011B9 6689DE                  	mov	esi, ebx
  2888 000011BC 66C1CE04                	ror	esi, 4
  2889 000011C0 8EDE                    	mov	ds, si
  2890 000011C2 66C1EE1C                	shr	esi, 28
  2891 000011C6 8904                    	mov	[si], ax
  2892 000011C8 660FB7C0                	movzx	eax, ax
  2893                                  ; RPN'ized expression: "i ++p "
  2894                                  ; Expanded expression: "(@-12) ++p(2) "
  2895                                  ; Fused expression:    "++p(2) *(@-12) "
  2896 000011CC 8B46F4                  	mov	ax, [bp-12]
  2897 000011CF 660FB7C0                	movzx	eax, ax
  2898 000011D3 FF46F4                  	inc	word [bp-12]
  2899                                  ; }
  2900 000011D6 E99AFE                  	jmp	L292
  2901                                  L293:
  2902                                  ; for
  2903                                  ; RPN'ized expression: "j i = "
  2904                                  ; Expanded expression: "(@-16) (@-12) *(2) =(2) "
  2905                                  ; Fused expression:    "=(170) *(@-16) *(@-12) "
  2906 000011D9 8B46F4                  	mov	ax, [bp-12]
  2907 000011DC 660FB7C0                	movzx	eax, ax
  2908 000011E0 8946F0                  	mov	[bp-16], ax
  2909 000011E3 660FB7C0                	movzx	eax, ax
  2910                                  L296:
  2911                                  ; RPN'ized expression: "j l < "
  2912                                  ; Expanded expression: "(@-16) *(2) (@12) *(2) < "
  2913                                  ; Fused expression:    "< *(@-16) *(@12) IF! "
  2914 000011E7 8B46F0                  	mov	ax, [bp-16]
  2915 000011EA 660FB7C0                	movzx	eax, ax
  2916 000011EE 660FB74E0C              	movzx	ecx, word [bp+12]
  2917 000011F3 6639C8                  	cmp	eax, ecx
  2918 000011F6 7D2B                    	jge	L299
  2919                                  ; RPN'ized expression: "j ++p "
  2920                                  ; Expanded expression: "(@-16) ++p(2) "
  2921                                  ; RPN'ized expression: "( 48 p ) "
  2922                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  2923                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  2924 000011F8 666A30                  	push	dword 48
  2925 000011FB 668B4610                	mov	eax, [bp+16]
  2926 000011FF 9A                      	db	0x9A
  2927                                  section .relot
  2928 00000084 [00120000]              	dd	L300
  2929                                  section .text
  2930                                  L300:
  2931 00001200 [04120000]              	dd	L301
  2932                                  L301:
  2933 00001204 89E6                    	mov	si, sp
  2934 00001206 36830410                	add	word [ss:si], L302 - L301
  2935 0000120A 66C1E00C                	shl	eax, 12
  2936 0000120E C1C004                  	rol	ax, 4
  2937 00001211 6650                    	push	eax
  2938 00001213 CB                      	retf
  2939                                  L302:
  2940 00001214 83ECFC                  	sub	sp, -4
  2941                                  L297:
  2942                                  ; Fused expression:    "++p(2) *(@-16) "
  2943 00001217 8B46F0                  	mov	ax, [bp-16]
  2944 0000121A 660FB7C0                	movzx	eax, ax
  2945 0000121E FF46F0                  	inc	word [bp-16]
  2946 00001221 EBC4                    	jmp	L296
  2947                                  L299:
  2948                                  ; RPN'ized expression: "ptr str 7 i - 1 + + *u &u = "
  2949                                  ; Expanded expression: "(@-4) str 7 (@-12) *(2) - 1 + + =(4) "
  2950                                  ; Fused expression:    "str push-ax - 7 *(@-12) + ax 1 + *sp ax =(204) *(@-4) ax "
  2951                                  section .relod
  2952 0000005C [25120000]              	dd	L303
  2953                                  section .text
  2954 00001223 66B8                    	db	0x66, 0xB8
  2955                                  L303:
  2956 00001225 [00000000]              	dd	_str
  2957 00001229 6650                    	push	eax
  2958 0000122B 66B807000000            	mov	eax, 7
  2959 00001231 660FB74EF4              	movzx	ecx, word [bp-12]
  2960 00001236 6629C8                  	sub	eax, ecx
  2961 00001239 6640                    	inc	eax
  2962 0000123B 6689C1                  	mov	ecx, eax
  2963 0000123E 6658                    	pop	eax
  2964 00001240 6601C8                  	add	eax, ecx
  2965 00001243 668946FC                	mov	[bp-4], eax
  2966                                  ; while
  2967                                  ; RPN'ized expression: "i 0 > "
  2968                                  ; Expanded expression: "(@-12) *(2) 0 > "
  2969                                  L304:
  2970                                  ; Fused expression:    "> *(@-12) 0 IF! "
  2971 00001247 8B46F4                  	mov	ax, [bp-12]
  2972 0000124A 660FB7C0                	movzx	eax, ax
  2973 0000124E 6683F800                	cmp	eax, 0
  2974 00001252 7E4C                    	jle	L305
  2975                                  ; {
  2976                                  ; RPN'ized expression: "( ptr *u p ) "
  2977                                  ; Expanded expression: " (@-4) *(4) *(-1)  (@16) *(4) ()4 "
  2978                                  ; Fused expression:    "( *(4) (@-4) *(-1) ax , *(4) (@16) )4 "
  2979 00001254 668B46FC                	mov	eax, [bp-4]
  2980 00001258 6689C3                  	mov	ebx, eax
  2981 0000125B 6689DE                  	mov	esi, ebx
  2982 0000125E 66C1CE04                	ror	esi, 4
  2983 00001262 8EDE                    	mov	ds, si
  2984 00001264 66C1EE1C                	shr	esi, 28
  2985 00001268 8A04                    	mov	al, [si]
  2986 0000126A 660FBEC0                	movsx	eax, al
  2987 0000126E 6650                    	push	eax
  2988 00001270 668B4610                	mov	eax, [bp+16]
  2989 00001274 9A                      	db	0x9A
  2990                                  section .relot
  2991 00000088 [75120000]              	dd	L306
  2992                                  section .text
  2993                                  L306:
  2994 00001275 [79120000]              	dd	L307
  2995                                  L307:
  2996 00001279 89E6                    	mov	si, sp
  2997 0000127B 36830410                	add	word [ss:si], L308 - L307
  2998 0000127F 66C1E00C                	shl	eax, 12
  2999 00001283 C1C004                  	rol	ax, 4
  3000 00001286 6650                    	push	eax
  3001 00001288 CB                      	retf
  3002                                  L308:
  3003 00001289 83ECFC                  	sub	sp, -4
  3004                                  ; RPN'ized expression: "ptr ++p "
  3005                                  ; Expanded expression: "(@-4) ++p(4) "
  3006                                  ; Fused expression:    "++p(4) *(@-4) "
  3007 0000128C 668B46FC                	mov	eax, [bp-4]
  3008 00001290 66FF46FC                	inc	dword [bp-4]
  3009                                  ; RPN'ized expression: "i --p "
  3010                                  ; Expanded expression: "(@-12) --p(2) "
  3011                                  ; Fused expression:    "--p(2) *(@-12) "
  3012 00001294 8B46F4                  	mov	ax, [bp-12]
  3013 00001297 660FB7C0                	movzx	eax, ax
  3014 0000129B FF4EF4                  	dec	word [bp-12]
  3015                                  ; }
  3016 0000129E EBA7                    	jmp	L304
  3017                                  L305:
  3018                                  ; return
  3019                                  ; RPN'ized expression: "0 "
  3020                                  ; Expanded expression: "0 "
  3021                                  ; Expression value: 0
  3022                                  ; Fused expression:    "0  "
  3023 000012A0 66B800000000            	mov	eax, 0
  3024                                  L273:
  3025 000012A6 66                      	db	0x66
  3026 000012A7 C9                      	leave
  3027 000012A8 CB                      	retf
  3028                                  L309:
  3029                                  
  3030                                  section .fxnsz
  3031 00000020 22030000                	dd	L309 - _printGenLHex
  3032                                  
  3033                                  ; glb printGenBin : (
  3034                                  ; prm     num : unsigned short
  3035                                  ; prm     l : unsigned short
  3036                                  ; prm     p : * (
  3037                                  ; prm         car : char
  3038                                  ;         ) int
  3039                                  ;     ) int
  3040                                  section .text
  3041                                  	global	_printGenBin
  3042                                  _printGenBin:
  3043 000012A9 6655                    	push	ebp
  3044 000012AB 660FB7EC                	movzx	ebp, sp
  3045 000012AF 83EC0C                  	 sub	sp,         12
  3046                                  ; loc     num : (@8): unsigned short
  3047                                  ; loc     l : (@12): unsigned short
  3048                                  ; loc     p : (@16): * (
  3049                                  ; prm         car : char
  3050                                  ;         ) int
  3051                                  ; {
  3052                                  ; loc         i : (@-4): unsigned short
  3053                                  ; loc         j : (@-8): unsigned short
  3054                                  ; loc         pot : (@-12): unsigned short
  3055                                  ; if
  3056                                  ; RPN'ized expression: "l 0 == "
  3057                                  ; Expanded expression: "(@12) *(2) 0 == "
  3058                                  ; Fused expression:    "== *(@12) 0 IF! "
  3059 000012B2 8B460C                  	mov	ax, [bp+12]
  3060 000012B5 660FB7C0                	movzx	eax, ax
  3061 000012B9 6683F800                	cmp	eax, 0
  3062 000012BD 750D                    	jne	L312
  3063                                  ; RPN'ized expression: "l 1 = "
  3064                                  ; Expanded expression: "(@12) 1 =(2) "
  3065                                  ; Fused expression:    "=(172) *(@12) 1 "
  3066 000012BF 66B801000000            	mov	eax, 1
  3067 000012C5 89460C                  	mov	[bp+12], ax
  3068 000012C8 660FB7C0                	movzx	eax, ax
  3069                                  L312:
  3070                                  ; if
  3071                                  ; RPN'ized expression: "num 0 == "
  3072                                  ; Expanded expression: "(@8) *(2) 0 == "
  3073                                  ; Fused expression:    "== *(@8) 0 IF! "
  3074 000012CC 8B4608                  	mov	ax, [bp+8]
  3075 000012CF 660FB7C0                	movzx	eax, ax
  3076 000012D3 6683F800                	cmp	eax, 0
  3077 000012D7 7578                    	jne	L314
  3078                                  ; {
  3079                                  ; for
  3080                                  ; RPN'ized expression: "i 0 = "
  3081                                  ; Expanded expression: "(@-4) 0 =(2) "
  3082                                  ; Fused expression:    "=(172) *(@-4) 0 "
  3083 000012D9 66B800000000            	mov	eax, 0
  3084 000012DF 8946FC                  	mov	[bp-4], ax
  3085 000012E2 660FB7C0                	movzx	eax, ax
  3086                                  L316:
  3087                                  ; RPN'ized expression: "i l 1 - < "
  3088                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
  3089                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
  3090 000012E6 8B460C                  	mov	ax, [bp+12]
  3091 000012E9 660FB7C0                	movzx	eax, ax
  3092 000012ED 6648                    	dec	eax
  3093 000012EF 6689C1                  	mov	ecx, eax
  3094 000012F2 8B46FC                  	mov	ax, [bp-4]
  3095 000012F5 660FB7C0                	movzx	eax, ax
  3096 000012F9 6639C8                  	cmp	eax, ecx
  3097 000012FC 7D2B                    	jge	L319
  3098                                  ; RPN'ized expression: "i ++p "
  3099                                  ; Expanded expression: "(@-4) ++p(2) "
  3100                                  ; RPN'ized expression: "( 48 p ) "
  3101                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  3102                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  3103 000012FE 666A30                  	push	dword 48
  3104 00001301 668B4610                	mov	eax, [bp+16]
  3105 00001305 9A                      	db	0x9A
  3106                                  section .relot
  3107 0000008C [06130000]              	dd	L320
  3108                                  section .text
  3109                                  L320:
  3110 00001306 [0A130000]              	dd	L321
  3111                                  L321:
  3112 0000130A 89E6                    	mov	si, sp
  3113 0000130C 36830410                	add	word [ss:si], L322 - L321
  3114 00001310 66C1E00C                	shl	eax, 12
  3115 00001314 C1C004                  	rol	ax, 4
  3116 00001317 6650                    	push	eax
  3117 00001319 CB                      	retf
  3118                                  L322:
  3119 0000131A 83ECFC                  	sub	sp, -4
  3120                                  L317:
  3121                                  ; Fused expression:    "++p(2) *(@-4) "
  3122 0000131D 8B46FC                  	mov	ax, [bp-4]
  3123 00001320 660FB7C0                	movzx	eax, ax
  3124 00001324 FF46FC                  	inc	word [bp-4]
  3125 00001327 EBBD                    	jmp	L316
  3126                                  L319:
  3127                                  ; RPN'ized expression: "( 48 p ) "
  3128                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  3129                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  3130 00001329 666A30                  	push	dword 48
  3131 0000132C 668B4610                	mov	eax, [bp+16]
  3132 00001330 9A                      	db	0x9A
  3133                                  section .relot
  3134 00000090 [31130000]              	dd	L323
  3135                                  section .text
  3136                                  L323:
  3137 00001331 [35130000]              	dd	L324
  3138                                  L324:
  3139 00001335 89E6                    	mov	si, sp
  3140 00001337 36830410                	add	word [ss:si], L325 - L324
  3141 0000133B 66C1E00C                	shl	eax, 12
  3142 0000133F C1C004                  	rol	ax, 4
  3143 00001342 6650                    	push	eax
  3144 00001344 CB                      	retf
  3145                                  L325:
  3146 00001345 83ECFC                  	sub	sp, -4
  3147                                  ; return
  3148                                  ; RPN'ized expression: "0 "
  3149                                  ; Expanded expression: "0 "
  3150                                  ; Expression value: 0
  3151                                  ; Fused expression:    "0  "
  3152 00001348 66B800000000            	mov	eax, 0
  3153 0000134E E93001                  	jmp	L310
  3154                                  ; }
  3155                                  L314:
  3156                                  ; RPN'ized expression: "i 16 = "
  3157                                  ; Expanded expression: "(@-4) 16 =(2) "
  3158                                  ; Fused expression:    "=(172) *(@-4) 16 "
  3159 00001351 66B810000000            	mov	eax, 16
  3160 00001357 8946FC                  	mov	[bp-4], ax
  3161 0000135A 660FB7C0                	movzx	eax, ax
  3162                                  ; RPN'ized expression: "pot 1 i 1 - << = "
  3163                                  ; Expanded expression: "(@-12) 1 (@-4) *(2) 1 - << =(2) "
  3164                                  ; Fused expression:    "- *(@-4) 1 << 1 ax =(172) *(@-12) ax "
  3165 0000135E 8B46FC                  	mov	ax, [bp-4]
  3166 00001361 660FB7C0                	movzx	eax, ax
  3167 00001365 6648                    	dec	eax
  3168 00001367 6689C1                  	mov	ecx, eax
  3169 0000136A 66B801000000            	mov	eax, 1
  3170 00001370 66D3E0                  	shl	eax, cl
  3171 00001373 8946F4                  	mov	[bp-12], ax
  3172 00001376 660FB7C0                	movzx	eax, ax
  3173                                  ; while
  3174                                  ; RPN'ized expression: "pot num & 0 == "
  3175                                  ; Expanded expression: "(@-12) *(2) (@8) *(2) & 0 == "
  3176                                  L326:
  3177                                  ; Fused expression:    "& *(@-12) *(@8) == ax 0 IF! "
  3178 0000137A 8B46F4                  	mov	ax, [bp-12]
  3179 0000137D 660FB7C0                	movzx	eax, ax
  3180 00001381 660FB74E08              	movzx	ecx, word [bp+8]
  3181 00001386 6621C8                  	and	eax, ecx
  3182 00001389 6683F800                	cmp	eax, 0
  3183 0000138D 751D                    	jne	L327
  3184                                  ; {
  3185                                  ; RPN'ized expression: "pot pot 1 >> = "
  3186                                  ; Expanded expression: "(@-12) (@-12) *(2) 1 >> =(2) "
  3187                                  ; Fused expression:    ">> *(@-12) 1 =(172) *(@-12) ax "
  3188 0000138F 8B46F4                  	mov	ax, [bp-12]
  3189 00001392 660FB7C0                	movzx	eax, ax
  3190 00001396 66D1F8                  	sar	eax, 1
  3191 00001399 8946F4                  	mov	[bp-12], ax
  3192 0000139C 660FB7C0                	movzx	eax, ax
  3193                                  ; RPN'ized expression: "i --p "
  3194                                  ; Expanded expression: "(@-4) --p(2) "
  3195                                  ; Fused expression:    "--p(2) *(@-4) "
  3196 000013A0 8B46FC                  	mov	ax, [bp-4]
  3197 000013A3 660FB7C0                	movzx	eax, ax
  3198 000013A7 FF4EFC                  	dec	word [bp-4]
  3199                                  ; }
  3200 000013AA EBCE                    	jmp	L326
  3201                                  L327:
  3202                                  ; if
  3203                                  ; RPN'ized expression: "i l > "
  3204                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) > "
  3205                                  ; Fused expression:    "> *(@-4) *(@12) IF! "
  3206 000013AC 8B46FC                  	mov	ax, [bp-4]
  3207 000013AF 660FB7C0                	movzx	eax, ax
  3208 000013B3 660FB74E0C              	movzx	ecx, word [bp+12]
  3209 000013B8 6639C8                  	cmp	eax, ecx
  3210 000013BB 7E10                    	jle	L328
  3211                                  ; RPN'ized expression: "l i = "
  3212                                  ; Expanded expression: "(@12) (@-4) *(2) =(2) "
  3213                                  ; Fused expression:    "=(170) *(@12) *(@-4) "
  3214 000013BD 8B46FC                  	mov	ax, [bp-4]
  3215 000013C0 660FB7C0                	movzx	eax, ax
  3216 000013C4 89460C                  	mov	[bp+12], ax
  3217 000013C7 660FB7C0                	movzx	eax, ax
  3218 000013CB EB1C                    	jmp	L329
  3219                                  L328:
  3220                                  ; else
  3221                                  ; RPN'ized expression: "pot 1 l 1 - << = "
  3222                                  ; Expanded expression: "(@-12) 1 (@12) *(2) 1 - << =(2) "
  3223                                  ; Fused expression:    "- *(@12) 1 << 1 ax =(172) *(@-12) ax "
  3224 000013CD 8B460C                  	mov	ax, [bp+12]
  3225 000013D0 660FB7C0                	movzx	eax, ax
  3226 000013D4 6648                    	dec	eax
  3227 000013D6 6689C1                  	mov	ecx, eax
  3228 000013D9 66B801000000            	mov	eax, 1
  3229 000013DF 66D3E0                  	shl	eax, cl
  3230 000013E2 8946F4                  	mov	[bp-12], ax
  3231 000013E5 660FB7C0                	movzx	eax, ax
  3232                                  L329:
  3233                                  ; for
  3234                                  ; RPN'ized expression: "j 0 = "
  3235                                  ; Expanded expression: "(@-8) 0 =(2) "
  3236                                  ; Fused expression:    "=(172) *(@-8) 0 "
  3237 000013E9 66B800000000            	mov	eax, 0
  3238 000013EF 8946F8                  	mov	[bp-8], ax
  3239 000013F2 660FB7C0                	movzx	eax, ax
  3240                                  L330:
  3241                                  ; RPN'ized expression: "j l < "
  3242                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
  3243                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
  3244 000013F6 8B46F8                  	mov	ax, [bp-8]
  3245 000013F9 660FB7C0                	movzx	eax, ax
  3246 000013FD 660FB74E0C              	movzx	ecx, word [bp+12]
  3247 00001402 6639C8                  	cmp	eax, ecx
  3248 00001405 7D72                    	jge	L333
  3249                                  ; RPN'ized expression: "j ++p "
  3250                                  ; Expanded expression: "(@-8) ++p(2) "
  3251                                  ; {
  3252                                  ; if
  3253                                  ; RPN'ized expression: "pot num & "
  3254                                  ; Expanded expression: "(@-12) *(2) (@8) *(2) & "
  3255                                  ; Fused expression:    "& *(@-12) *(@8)  "
  3256 00001407 8B46F4                  	mov	ax, [bp-12]
  3257 0000140A 660FB7C0                	movzx	eax, ax
  3258 0000140E 660FB74E08              	movzx	ecx, word [bp+8]
  3259 00001413 6621C8                  	and	eax, ecx
  3260                                  ; JumpIfZero
  3261 00001416 6685C0                  	test	eax, eax
  3262 00001419 7421                    	je	L334
  3263                                  ; RPN'ized expression: "( 49 p ) "
  3264                                  ; Expanded expression: " 49  (@16) *(4) ()4 "
  3265                                  ; Fused expression:    "( 49 , *(4) (@16) )4 "
  3266 0000141B 666A31                  	push	dword 49
  3267 0000141E 668B4610                	mov	eax, [bp+16]
  3268 00001422 9A                      	db	0x9A
  3269                                  section .relot
  3270 00000094 [23140000]              	dd	L336
  3271                                  section .text
  3272                                  L336:
  3273 00001423 [27140000]              	dd	L337
  3274                                  L337:
  3275 00001427 89E6                    	mov	si, sp
  3276 00001429 36830410                	add	word [ss:si], L338 - L337
  3277 0000142D 66C1E00C                	shl	eax, 12
  3278 00001431 C1C004                  	rol	ax, 4
  3279 00001434 6650                    	push	eax
  3280 00001436 CB                      	retf
  3281                                  L338:
  3282 00001437 83ECFC                  	sub	sp, -4
  3283 0000143A EB1F                    	jmp	L335
  3284                                  L334:
  3285                                  ; else
  3286                                  ; RPN'ized expression: "( 48 p ) "
  3287                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  3288                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  3289 0000143C 666A30                  	push	dword 48
  3290 0000143F 668B4610                	mov	eax, [bp+16]
  3291 00001443 9A                      	db	0x9A
  3292                                  section .relot
  3293 00000098 [44140000]              	dd	L339
  3294                                  section .text
  3295                                  L339:
  3296 00001444 [48140000]              	dd	L340
  3297                                  L340:
  3298 00001448 89E6                    	mov	si, sp
  3299 0000144A 36830410                	add	word [ss:si], L341 - L340
  3300 0000144E 66C1E00C                	shl	eax, 12
  3301 00001452 C1C004                  	rol	ax, 4
  3302 00001455 6650                    	push	eax
  3303 00001457 CB                      	retf
  3304                                  L341:
  3305 00001458 83ECFC                  	sub	sp, -4
  3306                                  L335:
  3307                                  ; RPN'ized expression: "pot pot 1 >> = "
  3308                                  ; Expanded expression: "(@-12) (@-12) *(2) 1 >> =(2) "
  3309                                  ; Fused expression:    ">> *(@-12) 1 =(172) *(@-12) ax "
  3310 0000145B 8B46F4                  	mov	ax, [bp-12]
  3311 0000145E 660FB7C0                	movzx	eax, ax
  3312 00001462 66D1F8                  	sar	eax, 1
  3313 00001465 8946F4                  	mov	[bp-12], ax
  3314 00001468 660FB7C0                	movzx	eax, ax
  3315                                  ; }
  3316                                  L331:
  3317                                  ; Fused expression:    "++p(2) *(@-8) "
  3318 0000146C 8B46F8                  	mov	ax, [bp-8]
  3319 0000146F 660FB7C0                	movzx	eax, ax
  3320 00001473 FF46F8                  	inc	word [bp-8]
  3321 00001476 E97DFF                  	jmp	L330
  3322                                  L333:
  3323                                  ; return
  3324                                  ; RPN'ized expression: "0 "
  3325                                  ; Expanded expression: "0 "
  3326                                  ; Expression value: 0
  3327                                  ; Fused expression:    "0  "
  3328 00001479 66B800000000            	mov	eax, 0
  3329 0000147F EB00                    	jmp	L310
  3330                                  ; }
  3331                                  L310:
  3332 00001481 66                      	db	0x66
  3333 00001482 C9                      	leave
  3334 00001483 CB                      	retf
  3335                                  L342:
  3336                                  
  3337                                  section .fxnsz
  3338 00000024 DB010000                	dd	L342 - _printGenBin
  3339                                  
  3340                                  ; glb printGenLBin : (
  3341                                  ; prm     num : unsigned
  3342                                  ; prm     l : unsigned short
  3343                                  ; prm     p : * (
  3344                                  ; prm         car : char
  3345                                  ;         ) int
  3346                                  ;     ) int
  3347                                  section .text
  3348                                  	global	_printGenLBin
  3349                                  _printGenLBin:
  3350 00001484 6655                    	push	ebp
  3351 00001486 660FB7EC                	movzx	ebp, sp
  3352 0000148A 83EC0C                  	 sub	sp,         12
  3353                                  ; loc     num : (@8): unsigned
  3354                                  ; loc     l : (@12): unsigned short
  3355                                  ; loc     p : (@16): * (
  3356                                  ; prm         car : char
  3357                                  ;         ) int
  3358                                  ; {
  3359                                  ; loc         i : (@-4): unsigned short
  3360                                  ; loc         j : (@-8): unsigned short
  3361                                  ; loc         pot : (@-12): unsigned short
  3362                                  ; if
  3363                                  ; RPN'ized expression: "l 0 == "
  3364                                  ; Expanded expression: "(@12) *(2) 0 == "
  3365                                  ; Fused expression:    "== *(@12) 0 IF! "
  3366 0000148D 8B460C                  	mov	ax, [bp+12]
  3367 00001490 660FB7C0                	movzx	eax, ax
  3368 00001494 6683F800                	cmp	eax, 0
  3369 00001498 750D                    	jne	L345
  3370                                  ; RPN'ized expression: "l 1 = "
  3371                                  ; Expanded expression: "(@12) 1 =(2) "
  3372                                  ; Fused expression:    "=(172) *(@12) 1 "
  3373 0000149A 66B801000000            	mov	eax, 1
  3374 000014A0 89460C                  	mov	[bp+12], ax
  3375 000014A3 660FB7C0                	movzx	eax, ax
  3376                                  L345:
  3377                                  ; if
  3378                                  ; RPN'ized expression: "num 0 == "
  3379                                  ; Expanded expression: "(@8) *(4) 0 == "
  3380                                  ; Fused expression:    "== *(@8) 0 IF! "
  3381 000014A7 668B4608                	mov	eax, [bp+8]
  3382 000014AB 6683F800                	cmp	eax, 0
  3383 000014AF 7578                    	jne	L347
  3384                                  ; {
  3385                                  ; for
  3386                                  ; RPN'ized expression: "i 0 = "
  3387                                  ; Expanded expression: "(@-4) 0 =(2) "
  3388                                  ; Fused expression:    "=(172) *(@-4) 0 "
  3389 000014B1 66B800000000            	mov	eax, 0
  3390 000014B7 8946FC                  	mov	[bp-4], ax
  3391 000014BA 660FB7C0                	movzx	eax, ax
  3392                                  L349:
  3393                                  ; RPN'ized expression: "i l 1 - < "
  3394                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) 1 - < "
  3395                                  ; Fused expression:    "- *(@12) 1 < *(@-4) ax IF! "
  3396 000014BE 8B460C                  	mov	ax, [bp+12]
  3397 000014C1 660FB7C0                	movzx	eax, ax
  3398 000014C5 6648                    	dec	eax
  3399 000014C7 6689C1                  	mov	ecx, eax
  3400 000014CA 8B46FC                  	mov	ax, [bp-4]
  3401 000014CD 660FB7C0                	movzx	eax, ax
  3402 000014D1 6639C8                  	cmp	eax, ecx
  3403 000014D4 7D2B                    	jge	L352
  3404                                  ; RPN'ized expression: "i ++p "
  3405                                  ; Expanded expression: "(@-4) ++p(2) "
  3406                                  ; RPN'ized expression: "( 48 p ) "
  3407                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  3408                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  3409 000014D6 666A30                  	push	dword 48
  3410 000014D9 668B4610                	mov	eax, [bp+16]
  3411 000014DD 9A                      	db	0x9A
  3412                                  section .relot
  3413 0000009C [DE140000]              	dd	L353
  3414                                  section .text
  3415                                  L353:
  3416 000014DE [E2140000]              	dd	L354
  3417                                  L354:
  3418 000014E2 89E6                    	mov	si, sp
  3419 000014E4 36830410                	add	word [ss:si], L355 - L354
  3420 000014E8 66C1E00C                	shl	eax, 12
  3421 000014EC C1C004                  	rol	ax, 4
  3422 000014EF 6650                    	push	eax
  3423 000014F1 CB                      	retf
  3424                                  L355:
  3425 000014F2 83ECFC                  	sub	sp, -4
  3426                                  L350:
  3427                                  ; Fused expression:    "++p(2) *(@-4) "
  3428 000014F5 8B46FC                  	mov	ax, [bp-4]
  3429 000014F8 660FB7C0                	movzx	eax, ax
  3430 000014FC FF46FC                  	inc	word [bp-4]
  3431 000014FF EBBD                    	jmp	L349
  3432                                  L352:
  3433                                  ; RPN'ized expression: "( 48 p ) "
  3434                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  3435                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  3436 00001501 666A30                  	push	dword 48
  3437 00001504 668B4610                	mov	eax, [bp+16]
  3438 00001508 9A                      	db	0x9A
  3439                                  section .relot
  3440 000000A0 [09150000]              	dd	L356
  3441                                  section .text
  3442                                  L356:
  3443 00001509 [0D150000]              	dd	L357
  3444                                  L357:
  3445 0000150D 89E6                    	mov	si, sp
  3446 0000150F 36830410                	add	word [ss:si], L358 - L357
  3447 00001513 66C1E00C                	shl	eax, 12
  3448 00001517 C1C004                  	rol	ax, 4
  3449 0000151A 6650                    	push	eax
  3450 0000151C CB                      	retf
  3451                                  L358:
  3452 0000151D 83ECFC                  	sub	sp, -4
  3453                                  ; return
  3454                                  ; RPN'ized expression: "0 "
  3455                                  ; Expanded expression: "0 "
  3456                                  ; Expression value: 0
  3457                                  ; Fused expression:    "0  "
  3458 00001520 66B800000000            	mov	eax, 0
  3459 00001526 E92701                  	jmp	L343
  3460                                  ; }
  3461                                  L347:
  3462                                  ; RPN'ized expression: "i 32 = "
  3463                                  ; Expanded expression: "(@-4) 32 =(2) "
  3464                                  ; Fused expression:    "=(172) *(@-4) 32 "
  3465 00001529 66B820000000            	mov	eax, 32
  3466 0000152F 8946FC                  	mov	[bp-4], ax
  3467 00001532 660FB7C0                	movzx	eax, ax
  3468                                  ; RPN'ized expression: "pot 1 i 1 - << = "
  3469                                  ; Expanded expression: "(@-12) 1 (@-4) *(2) 1 - << =(2) "
  3470                                  ; Fused expression:    "- *(@-4) 1 << 1 ax =(172) *(@-12) ax "
  3471 00001536 8B46FC                  	mov	ax, [bp-4]
  3472 00001539 660FB7C0                	movzx	eax, ax
  3473 0000153D 6648                    	dec	eax
  3474 0000153F 6689C1                  	mov	ecx, eax
  3475 00001542 66B801000000            	mov	eax, 1
  3476 00001548 66D3E0                  	shl	eax, cl
  3477 0000154B 8946F4                  	mov	[bp-12], ax
  3478 0000154E 660FB7C0                	movzx	eax, ax
  3479                                  ; while
  3480                                  ; RPN'ized expression: "pot num & 0 == "
  3481                                  ; Expanded expression: "(@-12) *(2) (@8) *(4) & 0 == "
  3482                                  L359:
  3483                                  ; Fused expression:    "& *(@-12) *(@8) == ax 0 IF! "
  3484 00001552 8B46F4                  	mov	ax, [bp-12]
  3485 00001555 660FB7C0                	movzx	eax, ax
  3486 00001559 66234608                	and	eax, [bp+8]
  3487 0000155D 6683F800                	cmp	eax, 0
  3488 00001561 751D                    	jne	L360
  3489                                  ; {
  3490                                  ; RPN'ized expression: "pot pot 1 >> = "
  3491                                  ; Expanded expression: "(@-12) (@-12) *(2) 1 >> =(2) "
  3492                                  ; Fused expression:    ">> *(@-12) 1 =(172) *(@-12) ax "
  3493 00001563 8B46F4                  	mov	ax, [bp-12]
  3494 00001566 660FB7C0                	movzx	eax, ax
  3495 0000156A 66D1F8                  	sar	eax, 1
  3496 0000156D 8946F4                  	mov	[bp-12], ax
  3497 00001570 660FB7C0                	movzx	eax, ax
  3498                                  ; RPN'ized expression: "i --p "
  3499                                  ; Expanded expression: "(@-4) --p(2) "
  3500                                  ; Fused expression:    "--p(2) *(@-4) "
  3501 00001574 8B46FC                  	mov	ax, [bp-4]
  3502 00001577 660FB7C0                	movzx	eax, ax
  3503 0000157B FF4EFC                  	dec	word [bp-4]
  3504                                  ; }
  3505 0000157E EBD2                    	jmp	L359
  3506                                  L360:
  3507                                  ; if
  3508                                  ; RPN'ized expression: "i l > "
  3509                                  ; Expanded expression: "(@-4) *(2) (@12) *(2) > "
  3510                                  ; Fused expression:    "> *(@-4) *(@12) IF! "
  3511 00001580 8B46FC                  	mov	ax, [bp-4]
  3512 00001583 660FB7C0                	movzx	eax, ax
  3513 00001587 660FB74E0C              	movzx	ecx, word [bp+12]
  3514 0000158C 6639C8                  	cmp	eax, ecx
  3515 0000158F 7E10                    	jle	L361
  3516                                  ; RPN'ized expression: "l i = "
  3517                                  ; Expanded expression: "(@12) (@-4) *(2) =(2) "
  3518                                  ; Fused expression:    "=(170) *(@12) *(@-4) "
  3519 00001591 8B46FC                  	mov	ax, [bp-4]
  3520 00001594 660FB7C0                	movzx	eax, ax
  3521 00001598 89460C                  	mov	[bp+12], ax
  3522 0000159B 660FB7C0                	movzx	eax, ax
  3523 0000159F EB1C                    	jmp	L362
  3524                                  L361:
  3525                                  ; else
  3526                                  ; RPN'ized expression: "pot 1 l 1 - << = "
  3527                                  ; Expanded expression: "(@-12) 1 (@12) *(2) 1 - << =(2) "
  3528                                  ; Fused expression:    "- *(@12) 1 << 1 ax =(172) *(@-12) ax "
  3529 000015A1 8B460C                  	mov	ax, [bp+12]
  3530 000015A4 660FB7C0                	movzx	eax, ax
  3531 000015A8 6648                    	dec	eax
  3532 000015AA 6689C1                  	mov	ecx, eax
  3533 000015AD 66B801000000            	mov	eax, 1
  3534 000015B3 66D3E0                  	shl	eax, cl
  3535 000015B6 8946F4                  	mov	[bp-12], ax
  3536 000015B9 660FB7C0                	movzx	eax, ax
  3537                                  L362:
  3538                                  ; for
  3539                                  ; RPN'ized expression: "j 0 = "
  3540                                  ; Expanded expression: "(@-8) 0 =(2) "
  3541                                  ; Fused expression:    "=(172) *(@-8) 0 "
  3542 000015BD 66B800000000            	mov	eax, 0
  3543 000015C3 8946F8                  	mov	[bp-8], ax
  3544 000015C6 660FB7C0                	movzx	eax, ax
  3545                                  L363:
  3546                                  ; RPN'ized expression: "j l < "
  3547                                  ; Expanded expression: "(@-8) *(2) (@12) *(2) < "
  3548                                  ; Fused expression:    "< *(@-8) *(@12) IF! "
  3549 000015CA 8B46F8                  	mov	ax, [bp-8]
  3550 000015CD 660FB7C0                	movzx	eax, ax
  3551 000015D1 660FB74E0C              	movzx	ecx, word [bp+12]
  3552 000015D6 6639C8                  	cmp	eax, ecx
  3553 000015D9 7D6D                    	jge	L366
  3554                                  ; RPN'ized expression: "j ++p "
  3555                                  ; Expanded expression: "(@-8) ++p(2) "
  3556                                  ; {
  3557                                  ; if
  3558                                  ; RPN'ized expression: "pot num & "
  3559                                  ; Expanded expression: "(@-12) *(2) (@8) *(4) & "
  3560                                  ; Fused expression:    "& *(@-12) *(@8)  "
  3561 000015DB 8B46F4                  	mov	ax, [bp-12]
  3562 000015DE 660FB7C0                	movzx	eax, ax
  3563 000015E2 66234608                	and	eax, [bp+8]
  3564                                  ; JumpIfZero
  3565 000015E6 6685C0                  	test	eax, eax
  3566 000015E9 7421                    	je	L367
  3567                                  ; RPN'ized expression: "( 49 p ) "
  3568                                  ; Expanded expression: " 49  (@16) *(4) ()4 "
  3569                                  ; Fused expression:    "( 49 , *(4) (@16) )4 "
  3570 000015EB 666A31                  	push	dword 49
  3571 000015EE 668B4610                	mov	eax, [bp+16]
  3572 000015F2 9A                      	db	0x9A
  3573                                  section .relot
  3574 000000A4 [F3150000]              	dd	L369
  3575                                  section .text
  3576                                  L369:
  3577 000015F3 [F7150000]              	dd	L370
  3578                                  L370:
  3579 000015F7 89E6                    	mov	si, sp
  3580 000015F9 36830410                	add	word [ss:si], L371 - L370
  3581 000015FD 66C1E00C                	shl	eax, 12
  3582 00001601 C1C004                  	rol	ax, 4
  3583 00001604 6650                    	push	eax
  3584 00001606 CB                      	retf
  3585                                  L371:
  3586 00001607 83ECFC                  	sub	sp, -4
  3587 0000160A EB1F                    	jmp	L368
  3588                                  L367:
  3589                                  ; else
  3590                                  ; RPN'ized expression: "( 48 p ) "
  3591                                  ; Expanded expression: " 48  (@16) *(4) ()4 "
  3592                                  ; Fused expression:    "( 48 , *(4) (@16) )4 "
  3593 0000160C 666A30                  	push	dword 48
  3594 0000160F 668B4610                	mov	eax, [bp+16]
  3595 00001613 9A                      	db	0x9A
  3596                                  section .relot
  3597 000000A8 [14160000]              	dd	L372
  3598                                  section .text
  3599                                  L372:
  3600 00001614 [18160000]              	dd	L373
  3601                                  L373:
  3602 00001618 89E6                    	mov	si, sp
  3603 0000161A 36830410                	add	word [ss:si], L374 - L373
  3604 0000161E 66C1E00C                	shl	eax, 12
  3605 00001622 C1C004                  	rol	ax, 4
  3606 00001625 6650                    	push	eax
  3607 00001627 CB                      	retf
  3608                                  L374:
  3609 00001628 83ECFC                  	sub	sp, -4
  3610                                  L368:
  3611                                  ; RPN'ized expression: "pot pot 1 >> = "
  3612                                  ; Expanded expression: "(@-12) (@-12) *(2) 1 >> =(2) "
  3613                                  ; Fused expression:    ">> *(@-12) 1 =(172) *(@-12) ax "
  3614 0000162B 8B46F4                  	mov	ax, [bp-12]
  3615 0000162E 660FB7C0                	movzx	eax, ax
  3616 00001632 66D1F8                  	sar	eax, 1
  3617 00001635 8946F4                  	mov	[bp-12], ax
  3618 00001638 660FB7C0                	movzx	eax, ax
  3619                                  ; }
  3620                                  L364:
  3621                                  ; Fused expression:    "++p(2) *(@-8) "
  3622 0000163C 8B46F8                  	mov	ax, [bp-8]
  3623 0000163F 660FB7C0                	movzx	eax, ax
  3624 00001643 FF46F8                  	inc	word [bp-8]
  3625 00001646 EB82                    	jmp	L363
  3626                                  L366:
  3627                                  ; return
  3628                                  ; RPN'ized expression: "0 "
  3629                                  ; Expanded expression: "0 "
  3630                                  ; Expression value: 0
  3631                                  ; Fused expression:    "0  "
  3632 00001648 66B800000000            	mov	eax, 0
  3633 0000164E EB00                    	jmp	L343
  3634                                  ; }
  3635                                  L343:
  3636 00001650 66                      	db	0x66
  3637 00001651 C9                      	leave
  3638 00001652 CB                      	retf
  3639                                  L375:
  3640                                  
  3641                                  section .fxnsz
  3642 00000028 CF010000                	dd	L375 - _printGenLBin
  3643                                  
  3644                                  ; glb printGenPtr : (
  3645                                  ; prm     ptr : * unsigned char
  3646                                  ; prm     p : * (
  3647                                  ; prm         car : char
  3648                                  ;         ) int
  3649                                  ;     ) int
  3650                                  section .text
  3651                                  	global	_printGenPtr
  3652                                  _printGenPtr:
  3653 00001653 6655                    	push	ebp
  3654 00001655 660FB7EC                	movzx	ebp, sp
  3655                                  	;sub	sp,          0
  3656                                  ; loc     ptr : (@8): * unsigned char
  3657                                  ; loc     p : (@12): * (
  3658                                  ; prm         car : char
  3659                                  ;         ) int
  3660                                  ; RPN'ized expression: "( p , 4 , ( ptr seg ) printGenHex ) "
  3661                                  ; Expanded expression: " (@12) *(4)  4   (@8) *(4)  seg ()4  printGenHex ()12 "
  3662                                  ; Fused expression:    "( *(4) (@12) , 4 , ( *(4) (@8) , seg )4 , printGenHex )12 "
  3663 00001659 66FF760C                	push	dword [bp+12]
  3664 0000165D 666A04                  	push	dword 4
  3665 00001660 66FF7608                	push	dword [bp+8]
  3666 00001664 9A                      	db	0x9A
  3667                                  section .relot
  3668 000000AC [65160000]              	dd	L378
  3669                                  section .text
  3670                                  L378:
  3671 00001665 [00000000]              	dd	_seg
  3672 00001669 83ECFC                  	sub	sp, -4
  3673 0000166C 6650                    	push	eax
  3674 0000166E 9A                      	db	0x9A
  3675                                  section .relot
  3676 000000B0 [6F160000]              	dd	L379
  3677                                  section .text
  3678                                  L379:
  3679 0000166F [0E0D0000]              	dd	_printGenHex
  3680 00001673 83ECF4                  	sub	sp, -12
  3681                                  ; RPN'ized expression: "( 58 p ) "
  3682                                  ; Expanded expression: " 58  (@12) *(4) ()4 "
  3683                                  ; Fused expression:    "( 58 , *(4) (@12) )4 "
  3684 00001676 666A3A                  	push	dword 58
  3685 00001679 668B460C                	mov	eax, [bp+12]
  3686 0000167D 9A                      	db	0x9A
  3687                                  section .relot
  3688 000000B4 [7E160000]              	dd	L380
  3689                                  section .text
  3690                                  L380:
  3691 0000167E [82160000]              	dd	L381
  3692                                  L381:
  3693 00001682 89E6                    	mov	si, sp
  3694 00001684 36830410                	add	word [ss:si], L382 - L381
  3695 00001688 66C1E00C                	shl	eax, 12
  3696 0000168C C1C004                  	rol	ax, 4
  3697 0000168F 6650                    	push	eax
  3698 00001691 CB                      	retf
  3699                                  L382:
  3700 00001692 83ECFC                  	sub	sp, -4
  3701                                  ; RPN'ized expression: "( p , 4 , ( ptr off ) printGenHex ) "
  3702                                  ; Expanded expression: " (@12) *(4)  4   (@8) *(4)  off ()4  printGenHex ()12 "
  3703                                  ; Fused expression:    "( *(4) (@12) , 4 , ( *(4) (@8) , off )4 , printGenHex )12 "
  3704 00001695 66FF760C                	push	dword [bp+12]
  3705 00001699 666A04                  	push	dword 4
  3706 0000169C 66FF7608                	push	dword [bp+8]
  3707 000016A0 9A                      	db	0x9A
  3708                                  section .relot
  3709 000000B8 [A1160000]              	dd	L383
  3710                                  section .text
  3711                                  L383:
  3712 000016A1 [00000000]              	dd	_off
  3713 000016A5 83ECFC                  	sub	sp, -4
  3714 000016A8 6650                    	push	eax
  3715 000016AA 9A                      	db	0x9A
  3716                                  section .relot
  3717 000000BC [AB160000]              	dd	L384
  3718                                  section .text
  3719                                  L384:
  3720 000016AB [0E0D0000]              	dd	_printGenHex
  3721 000016AF 83ECF4                  	sub	sp, -12
  3722                                  ; return
  3723                                  ; RPN'ized expression: "9 "
  3724                                  ; Expanded expression: "9 "
  3725                                  ; Expression value: 9
  3726                                  ; Fused expression:    "9  "
  3727 000016B2 66B809000000            	mov	eax, 9
  3728                                  L376:
  3729 000016B8 66                      	db	0x66
  3730 000016B9 C9                      	leave
  3731 000016BA CB                      	retf
  3732                                  L385:
  3733                                  
  3734                                  section .fxnsz
  3735 0000002C 68000000                	dd	L385 - _printGenPtr
  3736                                  
  3737                                  ; glb printfGen : (
  3738                                  ; prm     formato : * char
  3739                                  ; prm     p : * (
  3740                                  ; prm         car : char
  3741                                  ;         ) int
  3742                                  ; prm     ...
  3743                                  ;     ) int
  3744                                  section .text
  3745                                  	global	_printfGen
  3746                                  _printfGen:
  3747 000016BB 6655                    	push	ebp
  3748 000016BD 660FB7EC                	movzx	ebp, sp
  3749                                  	;sub	sp,          0
  3750                                  ; loc     formato : (@8): * char
  3751                                  ; loc     p : (@12): * (
  3752                                  ; prm         car : char
  3753                                  ;         ) int
  3754                                  ; return
  3755                                  ; RPN'ized expression: "0 "
  3756                                  ; Expanded expression: "0 "
  3757                                  ; Expression value: 0
  3758                                  ; Fused expression:    "0  "
  3759 000016C1 66B800000000            	mov	eax, 0
  3760                                  L386:
  3761 000016C7 66                      	db	0x66
  3762 000016C8 C9                      	leave
  3763 000016C9 CB                      	retf
  3764                                  L388:
  3765                                  
  3766                                  section .fxnsz
  3767 00000030 0F000000                	dd	L388 - _printfGen
  3768                                  
  3769                                  
  3770                                  	extern	_dig
  3771                                  	extern	_seg
  3772                                  	extern	_off
  3773                                  
  3774                                  ; Syntax/declaration table/stack:
  3775                                  ; Bytes used: 3085/40960
  3776                                  
  3777                                  
  3778                                  ; Macro table:
  3779                                  ; Macro __SMALLER_C__ = `0x0100`
  3780                                  ; Macro __SMALLER_C_32__ = ``
  3781                                  ; Macro __HUGE__ = ``
  3782                                  ; Macro __SMALLER_C_SCHAR__ = ``
  3783                                  ; Bytes used: 74/5120
  3784                                  
  3785                                  
  3786                                  ; Identifier table:
  3787                                  ; Ident __floatsisf
  3788                                  ; Ident __floatunsisf
  3789                                  ; Ident __fixsfsi
  3790                                  ; Ident __fixunssfsi
  3791                                  ; Ident __addsf3
  3792                                  ; Ident __subsf3
  3793                                  ; Ident __negsf2
  3794                                  ; Ident __mulsf3
  3795                                  ; Ident __divsf3
  3796                                  ; Ident __lesf2
  3797                                  ; Ident __gesf2
  3798                                  ; Ident intptr_t
  3799                                  ; Ident uintptr_t
  3800                                  ; Ident intmax_t
  3801                                  ; Ident uintmax_t
  3802                                  ; Ident int8_t
  3803                                  ; Ident int_least8_t
  3804                                  ; Ident int_fast8_t
  3805                                  ; Ident uint8_t
  3806                                  ; Ident uint_least8_t
  3807                                  ; Ident uint_fast8_t
  3808                                  ; Ident int16_t
  3809                                  ; Ident int_least16_t
  3810                                  ; Ident int_fast16_t
  3811                                  ; Ident uint16_t
  3812                                  ; Ident uint_least16_t
  3813                                  ; Ident uint_fast16_t
  3814                                  ; Ident int32_t
  3815                                  ; Ident int_least32_t
  3816                                  ; Ident int_fast32_t
  3817                                  ; Ident uint32_t
  3818                                  ; Ident uint_least32_t
  3819                                  ; Ident uint_fast32_t
  3820                                  ; Ident <something>
  3821                                  ; Ident quot
  3822                                  ; Ident rem
  3823                                  ; Ident imaxdiv_t
  3824                                  ; Ident FALSE
  3825                                  ; Ident TRUE
  3826                                  ; Ident bool_t
  3827                                  ; Ident pointer_t
  3828                                  ; Ident funcion_t
  3829                                  ; Ident manejador_t
  3830                                  ; Ident rti_t
  3831                                  ; Ident isr_t
  3832                                  ; Ident handler_t
  3833                                  ; Ident retardarThread_t
  3834                                  ; Ident ptrTVI_t
  3835                                  ; Ident modoSO1_Bin
  3836                                  ; Ident modoSO1_Exe
  3837                                  ; Ident modoSO1_Bs
  3838                                  ; Ident modoSO1_t
  3839                                  ; Ident lo
  3840                                  ; Ident hi
  3841                                  ; Ident lh_t
  3842                                  ; Ident offset
  3843                                  ; Ident segment
  3844                                  ; Ident address_t
  3845                                  ; Ident ptr
  3846                                  ; Ident adr
  3847                                  ; Ident uPtrAdr_t
  3848                                  ; Ident pid_t
  3849                                  ; Ident tid_t
  3850                                  ; Ident uid_t
  3851                                  ; Ident gid_t
  3852                                  ; Ident pindx_t
  3853                                  ; Ident tindx_t
  3854                                  ; Ident df_t
  3855                                  ; Ident dfs_t
  3856                                  ; Ident rindx_t
  3857                                  ; Ident printCar_t
  3858                                  ; Ident car
  3859                                  ; Ident size_t
  3860                                  ; Ident printCarN_t
  3861                                  ; Ident n
  3862                                  ; Ident printGenLn
  3863                                  ; Ident p
  3864                                  ; Ident printGenStr
  3865                                  ; Ident str
  3866                                  ; Ident printGenStrHasta
  3867                                  ; Ident lleno
  3868                                  ; Ident printGenDec
  3869                                  ; Ident num
  3870                                  ; Ident l
  3871                                  ; Ident printGenLDec
  3872                                  ; Ident printGenInt
  3873                                  ; Ident printGenLInt
  3874                                  ; Ident printGenHex
  3875                                  ; Ident printGenLHex
  3876                                  ; Ident printGenBin
  3877                                  ; Ident printGenLBin
  3878                                  ; Ident printGenPtr
  3879                                  ; Ident printfGen
  3880                                  ; Ident formato
  3881                                  ; Ident dig
  3882                                  ; Bytes used: 971/16384
  3883                                  
  3884                                  ; Next label number: 389
  3885                                  ; Compilation succeeded.
